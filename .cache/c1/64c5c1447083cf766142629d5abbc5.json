{"id":"node_modules/cannon/build/cannon.js","dependencies":[{"name":"C:\\Users\\david\\OneDrive\\Lsports\\Frontend\\cornea\\package.json","includedInParent":true,"mtime":1585335869653},{"name":"C:\\Users\\david\\OneDrive\\Lsports\\Frontend\\cornea\\node_modules\\cannon\\package.json","includedInParent":true,"mtime":1585335868363}],"generated":{"js":"var define;\nvar global = arguments[3];\n/*\r\n * Copyright (c) 2015 cannon.js Authors\r\n *\r\n * Permission is hereby granted, free of charge, to any person\r\n * obtaining a copy of this software and associated documentation\r\n * files (the \"Software\"), to deal in the Software without\r\n * restriction, including without limitation the rights to use, copy,\r\n * modify, merge, publish, distribute, sublicense, and/or sell copies\r\n * of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&false)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CANNON=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\r\nmodule.exports={\r\n  \"name\": \"cannon\",\r\n  \"version\": \"0.6.2\",\r\n  \"description\": \"A lightweight 3D physics engine written in JavaScript.\",\r\n  \"homepage\": \"https://github.com/schteppe/cannon.js\",\r\n  \"author\": \"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)\",\r\n  \"keywords\": [\r\n    \"cannon.js\",\r\n    \"cannon\",\r\n    \"physics\",\r\n    \"engine\",\r\n    \"3d\"\r\n  ],\r\n  \"main\": \"./build/cannon.js\",\r\n  \"engines\": {\r\n    \"node\": \"*\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/schteppe/cannon.js.git\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/schteppe/cannon.js/issues\"\r\n  },\r\n  \"licenses\": [\r\n    {\r\n      \"type\": \"MIT\"\r\n    }\r\n  ],\r\n  \"devDependencies\": {\r\n    \"jshint\": \"latest\",\r\n    \"uglify-js\": \"latest\",\r\n    \"nodeunit\": \"^0.9.0\",\r\n    \"grunt\": \"~0.4.0\",\r\n    \"grunt-contrib-jshint\": \"~0.1.1\",\r\n    \"grunt-contrib-nodeunit\": \"^0.4.1\",\r\n    \"grunt-contrib-concat\": \"~0.1.3\",\r\n    \"grunt-contrib-uglify\": \"^0.5.1\",\r\n    \"grunt-browserify\": \"^2.1.4\",\r\n    \"grunt-contrib-yuidoc\": \"^0.5.2\",\r\n    \"browserify\": \"*\"\r\n  },\r\n  \"dependencies\": {}\r\n}\r\n\r\n},{}],2:[function(_dereq_,module,exports){\r\n// Export classes\r\nmodule.exports = {\r\n    version :                       _dereq_('../package.json').version,\r\n\r\n    AABB :                          _dereq_('./collision/AABB'),\r\n    ArrayCollisionMatrix :          _dereq_('./collision/ArrayCollisionMatrix'),\r\n    Body :                          _dereq_('./objects/Body'),\r\n    Box :                           _dereq_('./shapes/Box'),\r\n    Broadphase :                    _dereq_('./collision/Broadphase'),\r\n    Constraint :                    _dereq_('./constraints/Constraint'),\r\n    ContactEquation :               _dereq_('./equations/ContactEquation'),\r\n    Narrowphase :                   _dereq_('./world/Narrowphase'),\r\n    ConeTwistConstraint :           _dereq_('./constraints/ConeTwistConstraint'),\r\n    ContactMaterial :               _dereq_('./material/ContactMaterial'),\r\n    ConvexPolyhedron :              _dereq_('./shapes/ConvexPolyhedron'),\r\n    Cylinder :                      _dereq_('./shapes/Cylinder'),\r\n    DistanceConstraint :            _dereq_('./constraints/DistanceConstraint'),\r\n    Equation :                      _dereq_('./equations/Equation'),\r\n    EventTarget :                   _dereq_('./utils/EventTarget'),\r\n    FrictionEquation :              _dereq_('./equations/FrictionEquation'),\r\n    GSSolver :                      _dereq_('./solver/GSSolver'),\r\n    GridBroadphase :                _dereq_('./collision/GridBroadphase'),\r\n    Heightfield :                   _dereq_('./shapes/Heightfield'),\r\n    HingeConstraint :               _dereq_('./constraints/HingeConstraint'),\r\n    LockConstraint :                _dereq_('./constraints/LockConstraint'),\r\n    Mat3 :                          _dereq_('./math/Mat3'),\r\n    Material :                      _dereq_('./material/Material'),\r\n    NaiveBroadphase :               _dereq_('./collision/NaiveBroadphase'),\r\n    ObjectCollisionMatrix :         _dereq_('./collision/ObjectCollisionMatrix'),\r\n    Pool :                          _dereq_('./utils/Pool'),\r\n    Particle :                      _dereq_('./shapes/Particle'),\r\n    Plane :                         _dereq_('./shapes/Plane'),\r\n    PointToPointConstraint :        _dereq_('./constraints/PointToPointConstraint'),\r\n    Quaternion :                    _dereq_('./math/Quaternion'),\r\n    Ray :                           _dereq_('./collision/Ray'),\r\n    RaycastVehicle :                _dereq_('./objects/RaycastVehicle'),\r\n    RaycastResult :                 _dereq_('./collision/RaycastResult'),\r\n    RigidVehicle :                  _dereq_('./objects/RigidVehicle'),\r\n    RotationalEquation :            _dereq_('./equations/RotationalEquation'),\r\n    RotationalMotorEquation :       _dereq_('./equations/RotationalMotorEquation'),\r\n    SAPBroadphase :                 _dereq_('./collision/SAPBroadphase'),\r\n    SPHSystem :                     _dereq_('./objects/SPHSystem'),\r\n    Shape :                         _dereq_('./shapes/Shape'),\r\n    Solver :                        _dereq_('./solver/Solver'),\r\n    Sphere :                        _dereq_('./shapes/Sphere'),\r\n    SplitSolver :                   _dereq_('./solver/SplitSolver'),\r\n    Spring :                        _dereq_('./objects/Spring'),\r\n    Trimesh :                       _dereq_('./shapes/Trimesh'),\r\n    Vec3 :                          _dereq_('./math/Vec3'),\r\n    Vec3Pool :                      _dereq_('./utils/Vec3Pool'),\r\n    World :                         _dereq_('./world/World'),\r\n};\r\n\r\n},{\"../package.json\":1,\"./collision/AABB\":3,\"./collision/ArrayCollisionMatrix\":4,\"./collision/Broadphase\":5,\"./collision/GridBroadphase\":6,\"./collision/NaiveBroadphase\":7,\"./collision/ObjectCollisionMatrix\":8,\"./collision/Ray\":9,\"./collision/RaycastResult\":10,\"./collision/SAPBroadphase\":11,\"./constraints/ConeTwistConstraint\":12,\"./constraints/Constraint\":13,\"./constraints/DistanceConstraint\":14,\"./constraints/HingeConstraint\":15,\"./constraints/LockConstraint\":16,\"./constraints/PointToPointConstraint\":17,\"./equations/ContactEquation\":19,\"./equations/Equation\":20,\"./equations/FrictionEquation\":21,\"./equations/RotationalEquation\":22,\"./equations/RotationalMotorEquation\":23,\"./material/ContactMaterial\":24,\"./material/Material\":25,\"./math/Mat3\":27,\"./math/Quaternion\":28,\"./math/Vec3\":30,\"./objects/Body\":31,\"./objects/RaycastVehicle\":32,\"./objects/RigidVehicle\":33,\"./objects/SPHSystem\":34,\"./objects/Spring\":35,\"./shapes/Box\":37,\"./shapes/ConvexPolyhedron\":38,\"./shapes/Cylinder\":39,\"./shapes/Heightfield\":40,\"./shapes/Particle\":41,\"./shapes/Plane\":42,\"./shapes/Shape\":43,\"./shapes/Sphere\":44,\"./shapes/Trimesh\":45,\"./solver/GSSolver\":46,\"./solver/Solver\":47,\"./solver/SplitSolver\":48,\"./utils/EventTarget\":49,\"./utils/Pool\":51,\"./utils/Vec3Pool\":54,\"./world/Narrowphase\":55,\"./world/World\":56}],3:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = AABB;\r\n\r\n/**\r\n * Axis aligned bounding box class.\r\n * @class AABB\r\n * @constructor\r\n * @param {Object} [options]\r\n * @param {Vec3}   [options.upperBound]\r\n * @param {Vec3}   [options.lowerBound]\r\n */\r\nfunction AABB(options){\r\n    options = options || {};\r\n\r\n    /**\r\n     * The lower bound of the bounding box.\r\n     * @property lowerBound\r\n     * @type {Vec3}\r\n     */\r\n    this.lowerBound = new Vec3();\r\n    if(options.lowerBound){\r\n        this.lowerBound.copy(options.lowerBound);\r\n    }\r\n\r\n    /**\r\n     * The upper bound of the bounding box.\r\n     * @property upperBound\r\n     * @type {Vec3}\r\n     */\r\n    this.upperBound = new Vec3();\r\n    if(options.upperBound){\r\n        this.upperBound.copy(options.upperBound);\r\n    }\r\n}\r\n\r\nvar tmp = new Vec3();\r\n\r\n/**\r\n * Set the AABB bounds from a set of points.\r\n * @method setFromPoints\r\n * @param {Array} points An array of Vec3's.\r\n * @param {Vec3} position\r\n * @param {Quaternion} quaternion\r\n * @param {number} skinSize\r\n * @return {AABB} The self object\r\n */\r\nAABB.prototype.setFromPoints = function(points, position, quaternion, skinSize){\r\n    var l = this.lowerBound,\r\n        u = this.upperBound,\r\n        q = quaternion;\r\n\r\n    // Set to the first point\r\n    l.copy(points[0]);\r\n    if(q){\r\n        q.vmult(l, l);\r\n    }\r\n    u.copy(l);\r\n\r\n    for(var i = 1; i<points.length; i++){\r\n        var p = points[i];\r\n\r\n        if(q){\r\n            q.vmult(p, tmp);\r\n            p = tmp;\r\n        }\r\n\r\n        if(p.x > u.x){ u.x = p.x; }\r\n        if(p.x < l.x){ l.x = p.x; }\r\n        if(p.y > u.y){ u.y = p.y; }\r\n        if(p.y < l.y){ l.y = p.y; }\r\n        if(p.z > u.z){ u.z = p.z; }\r\n        if(p.z < l.z){ l.z = p.z; }\r\n    }\r\n\r\n    // Add offset\r\n    if (position) {\r\n        position.vadd(l, l);\r\n        position.vadd(u, u);\r\n    }\r\n\r\n    if(skinSize){\r\n        l.x -= skinSize;\r\n        l.y -= skinSize;\r\n        l.z -= skinSize;\r\n        u.x += skinSize;\r\n        u.y += skinSize;\r\n        u.z += skinSize;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Copy bounds from an AABB to this AABB\r\n * @method copy\r\n * @param  {AABB} aabb Source to copy from\r\n * @return {AABB} The this object, for chainability\r\n */\r\nAABB.prototype.copy = function(aabb){\r\n    this.lowerBound.copy(aabb.lowerBound);\r\n    this.upperBound.copy(aabb.upperBound);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Clone an AABB\r\n * @method clone\r\n */\r\nAABB.prototype.clone = function(){\r\n    return new AABB().copy(this);\r\n};\r\n\r\n/**\r\n * Extend this AABB so that it covers the given AABB too.\r\n * @method extend\r\n * @param  {AABB} aabb\r\n */\r\nAABB.prototype.extend = function(aabb){\r\n    // Extend lower bound\r\n    var l = aabb.lowerBound.x;\r\n    if(this.lowerBound.x > l){\r\n        this.lowerBound.x = l;\r\n    }\r\n\r\n    // Upper\r\n    var u = aabb.upperBound.x;\r\n    if(this.upperBound.x < u){\r\n        this.upperBound.x = u;\r\n    }\r\n\r\n    // Extend lower bound\r\n    var l = aabb.lowerBound.y;\r\n    if(this.lowerBound.y > l){\r\n        this.lowerBound.y = l;\r\n    }\r\n\r\n    // Upper\r\n    var u = aabb.upperBound.y;\r\n    if(this.upperBound.y < u){\r\n        this.upperBound.y = u;\r\n    }\r\n\r\n    // Extend lower bound\r\n    var l = aabb.lowerBound.z;\r\n    if(this.lowerBound.z > l){\r\n        this.lowerBound.z = l;\r\n    }\r\n\r\n    // Upper\r\n    var u = aabb.upperBound.z;\r\n    if(this.upperBound.z < u){\r\n        this.upperBound.z = u;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns true if the given AABB overlaps this AABB.\r\n * @method overlaps\r\n * @param  {AABB} aabb\r\n * @return {Boolean}\r\n */\r\nAABB.prototype.overlaps = function(aabb){\r\n    var l1 = this.lowerBound,\r\n        u1 = this.upperBound,\r\n        l2 = aabb.lowerBound,\r\n        u2 = aabb.upperBound;\r\n\r\n    //      l2        u2\r\n    //      |---------|\r\n    // |--------|\r\n    // l1       u1\r\n\r\n    return ((l2.x <= u1.x && u1.x <= u2.x) || (l1.x <= u2.x && u2.x <= u1.x)) &&\r\n           ((l2.y <= u1.y && u1.y <= u2.y) || (l1.y <= u2.y && u2.y <= u1.y)) &&\r\n           ((l2.z <= u1.z && u1.z <= u2.z) || (l1.z <= u2.z && u2.z <= u1.z));\r\n};\r\n\r\n/**\r\n * Returns true if the given AABB is fully contained in this AABB.\r\n * @method contains\r\n * @param {AABB} aabb\r\n * @return {Boolean}\r\n */\r\nAABB.prototype.contains = function(aabb){\r\n    var l1 = this.lowerBound,\r\n        u1 = this.upperBound,\r\n        l2 = aabb.lowerBound,\r\n        u2 = aabb.upperBound;\r\n\r\n    //      l2        u2\r\n    //      |---------|\r\n    // |---------------|\r\n    // l1              u1\r\n\r\n    return (\r\n        (l1.x <= l2.x && u1.x >= u2.x) &&\r\n        (l1.y <= l2.y && u1.y >= u2.y) &&\r\n        (l1.z <= l2.z && u1.z >= u2.z)\r\n    );\r\n};\r\n\r\n/**\r\n * @method getCorners\r\n * @param {Vec3} a\r\n * @param {Vec3} b\r\n * @param {Vec3} c\r\n * @param {Vec3} d\r\n * @param {Vec3} e\r\n * @param {Vec3} f\r\n * @param {Vec3} g\r\n * @param {Vec3} h\r\n */\r\nAABB.prototype.getCorners = function(a, b, c, d, e, f, g, h){\r\n    var l = this.lowerBound,\r\n        u = this.upperBound;\r\n\r\n    a.copy(l);\r\n    b.set( u.x, l.y, l.z );\r\n    c.set( u.x, u.y, l.z );\r\n    d.set( l.x, u.y, u.z );\r\n    e.set( u.x, l.y, l.z );\r\n    f.set( l.x, u.y, l.z );\r\n    g.set( l.x, l.y, u.z );\r\n    h.copy(u);\r\n};\r\n\r\nvar transformIntoFrame_corners = [\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3()\r\n];\r\n\r\n/**\r\n * Get the representation of an AABB in another frame.\r\n * @method toLocalFrame\r\n * @param  {Transform} frame\r\n * @param  {AABB} target\r\n * @return {AABB} The \"target\" AABB object.\r\n */\r\nAABB.prototype.toLocalFrame = function(frame, target){\r\n\r\n    var corners = transformIntoFrame_corners;\r\n    var a = corners[0];\r\n    var b = corners[1];\r\n    var c = corners[2];\r\n    var d = corners[3];\r\n    var e = corners[4];\r\n    var f = corners[5];\r\n    var g = corners[6];\r\n    var h = corners[7];\r\n\r\n    // Get corners in current frame\r\n    this.getCorners(a, b, c, d, e, f, g, h);\r\n\r\n    // Transform them to new local frame\r\n    for(var i=0; i !== 8; i++){\r\n        var corner = corners[i];\r\n        frame.pointToLocal(corner, corner);\r\n    }\r\n\r\n    return target.setFromPoints(corners);\r\n};\r\n\r\n/**\r\n * Get the representation of an AABB in the global frame.\r\n * @method toWorldFrame\r\n * @param  {Transform} frame\r\n * @param  {AABB} target\r\n * @return {AABB} The \"target\" AABB object.\r\n */\r\nAABB.prototype.toWorldFrame = function(frame, target){\r\n\r\n    var corners = transformIntoFrame_corners;\r\n    var a = corners[0];\r\n    var b = corners[1];\r\n    var c = corners[2];\r\n    var d = corners[3];\r\n    var e = corners[4];\r\n    var f = corners[5];\r\n    var g = corners[6];\r\n    var h = corners[7];\r\n\r\n    // Get corners in current frame\r\n    this.getCorners(a, b, c, d, e, f, g, h);\r\n\r\n    // Transform them to new local frame\r\n    for(var i=0; i !== 8; i++){\r\n        var corner = corners[i];\r\n        frame.pointToWorld(corner, corner);\r\n    }\r\n\r\n    return target.setFromPoints(corners);\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"../utils/Utils\":53}],4:[function(_dereq_,module,exports){\r\nmodule.exports = ArrayCollisionMatrix;\r\n\r\n/**\r\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\r\n * @class ArrayCollisionMatrix\r\n * @constructor\r\n */\r\nfunction ArrayCollisionMatrix() {\r\n\r\n    /**\r\n     * The matrix storage\r\n     * @property matrix\r\n     * @type {Array}\r\n     */\r\n\tthis.matrix = [];\r\n}\r\n\r\n/**\r\n * Get an element\r\n * @method get\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @return {Number}\r\n */\r\nArrayCollisionMatrix.prototype.get = function(i, j) {\r\n\ti = i.index;\r\n\tj = j.index;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n\treturn this.matrix[(i*(i + 1)>>1) + j-1];\r\n};\r\n\r\n/**\r\n * Set an element\r\n * @method set\r\n * @param {Number} i\r\n * @param {Number} j\r\n * @param {Number} value\r\n */\r\nArrayCollisionMatrix.prototype.set = function(i, j, value) {\r\n\ti = i.index;\r\n\tj = j.index;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n\tthis.matrix[(i*(i + 1)>>1) + j-1] = value ? 1 : 0;\r\n};\r\n\r\n/**\r\n * Sets all elements to zero\r\n * @method reset\r\n */\r\nArrayCollisionMatrix.prototype.reset = function() {\r\n\tfor (var i=0, l=this.matrix.length; i!==l; i++) {\r\n\t\tthis.matrix[i]=0;\r\n\t}\r\n};\r\n\r\n/**\r\n * Sets the max number of objects\r\n * @method setNumObjects\r\n * @param {Number} n\r\n */\r\nArrayCollisionMatrix.prototype.setNumObjects = function(n) {\r\n\tthis.matrix.length = n*(n-1)>>1;\r\n};\r\n\r\n},{}],5:[function(_dereq_,module,exports){\r\nvar Body = _dereq_('../objects/Body');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Plane = _dereq_('../shapes/Plane');\r\n\r\nmodule.exports = Broadphase;\r\n\r\n/**\r\n * Base class for broadphase implementations\r\n * @class Broadphase\r\n * @constructor\r\n * @author schteppe\r\n */\r\nfunction Broadphase(){\r\n    /**\r\n    * The world to search for collisions in.\r\n    * @property world\r\n    * @type {World}\r\n    */\r\n    this.world = null;\r\n\r\n    /**\r\n     * If set to true, the broadphase uses bounding boxes for intersection test, else it uses bounding spheres.\r\n     * @property useBoundingBoxes\r\n     * @type {Boolean}\r\n     */\r\n    this.useBoundingBoxes = false;\r\n\r\n    /**\r\n     * Set to true if the objects in the world moved.\r\n     * @property {Boolean} dirty\r\n     */\r\n    this.dirty = true;\r\n}\r\n\r\n/**\r\n * Get the collision pairs from the world\r\n * @method collisionPairs\r\n * @param {World} world The world to search in\r\n * @param {Array} p1 Empty array to be filled with body objects\r\n * @param {Array} p2 Empty array to be filled with body objects\r\n */\r\nBroadphase.prototype.collisionPairs = function(world,p1,p2){\r\n    throw new Error(\"collisionPairs not implemented for this BroadPhase class!\");\r\n};\r\n\r\n/**\r\n * Check if a body pair needs to be intersection tested at all.\r\n * @method needBroadphaseCollision\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @return {bool}\r\n */\r\nvar Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC = Body.STATIC | Body.KINEMATIC;\r\nBroadphase.prototype.needBroadphaseCollision = function(bodyA,bodyB){\r\n\r\n    // Check collision filter masks\r\n    if( (bodyA.collisionFilterGroup & bodyB.collisionFilterMask)===0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask)===0){\r\n        return false;\r\n    }\r\n\r\n    // Check types\r\n    if(((bodyA.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyA.sleepState === Body.SLEEPING) &&\r\n       ((bodyB.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyB.sleepState === Body.SLEEPING)) {\r\n        // Both bodies are static, kinematic or sleeping. Skip.\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Check if the bounding volumes of two bodies intersect.\r\n * @method intersectionTest\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {array} pairs1\r\n * @param {array} pairs2\r\n  */\r\nBroadphase.prototype.intersectionTest = function(bodyA, bodyB, pairs1, pairs2){\r\n    if(this.useBoundingBoxes){\r\n        this.doBoundingBoxBroadphase(bodyA,bodyB,pairs1,pairs2);\r\n    } else {\r\n        this.doBoundingSphereBroadphase(bodyA,bodyB,pairs1,pairs2);\r\n    }\r\n};\r\n\r\n/**\r\n * Check if the bounding spheres of two bodies are intersecting.\r\n * @method doBoundingSphereBroadphase\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Array} pairs1 bodyA is appended to this array if intersection\r\n * @param {Array} pairs2 bodyB is appended to this array if intersection\r\n */\r\nvar Broadphase_collisionPairs_r = new Vec3(), // Temp objects\r\n    Broadphase_collisionPairs_normal =  new Vec3(),\r\n    Broadphase_collisionPairs_quat =  new Quaternion(),\r\n    Broadphase_collisionPairs_relpos  =  new Vec3();\r\nBroadphase.prototype.doBoundingSphereBroadphase = function(bodyA,bodyB,pairs1,pairs2){\r\n    var r = Broadphase_collisionPairs_r;\r\n    bodyB.position.vsub(bodyA.position,r);\r\n    var boundingRadiusSum2 = Math.pow(bodyA.boundingRadius + bodyB.boundingRadius, 2);\r\n    var norm2 = r.norm2();\r\n    if(norm2 < boundingRadiusSum2){\r\n        pairs1.push(bodyA);\r\n        pairs2.push(bodyB);\r\n    }\r\n};\r\n\r\n/**\r\n * Check if the bounding boxes of two bodies are intersecting.\r\n * @method doBoundingBoxBroadphase\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nBroadphase.prototype.doBoundingBoxBroadphase = function(bodyA,bodyB,pairs1,pairs2){\r\n    if(bodyA.aabbNeedsUpdate){\r\n        bodyA.computeAABB();\r\n    }\r\n    if(bodyB.aabbNeedsUpdate){\r\n        bodyB.computeAABB();\r\n    }\r\n\r\n    // Check AABB / AABB\r\n    if(bodyA.aabb.overlaps(bodyB.aabb)){\r\n        pairs1.push(bodyA);\r\n        pairs2.push(bodyB);\r\n    }\r\n};\r\n\r\n/**\r\n * Removes duplicate pairs from the pair arrays.\r\n * @method makePairsUnique\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nvar Broadphase_makePairsUnique_temp = { keys:[] },\r\n    Broadphase_makePairsUnique_p1 = [],\r\n    Broadphase_makePairsUnique_p2 = [];\r\nBroadphase.prototype.makePairsUnique = function(pairs1,pairs2){\r\n    var t = Broadphase_makePairsUnique_temp,\r\n        p1 = Broadphase_makePairsUnique_p1,\r\n        p2 = Broadphase_makePairsUnique_p2,\r\n        N = pairs1.length;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        p1[i] = pairs1[i];\r\n        p2[i] = pairs2[i];\r\n    }\r\n\r\n    pairs1.length = 0;\r\n    pairs2.length = 0;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var id1 = p1[i].id,\r\n            id2 = p2[i].id;\r\n        var key = id1 < id2 ? id1+\",\"+id2 :  id2+\",\"+id1;\r\n        t[key] = i;\r\n        t.keys.push(key);\r\n    }\r\n\r\n    for(var i=0; i!==t.keys.length; i++){\r\n        var key = t.keys.pop(),\r\n            pairIndex = t[key];\r\n        pairs1.push(p1[pairIndex]);\r\n        pairs2.push(p2[pairIndex]);\r\n        delete t[key];\r\n    }\r\n};\r\n\r\n/**\r\n * To be implemented by subcasses\r\n * @method setWorld\r\n * @param {World} world\r\n */\r\nBroadphase.prototype.setWorld = function(world){\r\n};\r\n\r\n/**\r\n * Check if the bounding spheres of two bodies overlap.\r\n * @method boundingSphereCheck\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @return {boolean}\r\n */\r\nvar bsc_dist = new Vec3();\r\nBroadphase.boundingSphereCheck = function(bodyA,bodyB){\r\n    var dist = bsc_dist;\r\n    bodyA.position.vsub(bodyB.position,dist);\r\n    return Math.pow(bodyA.shape.boundingSphereRadius + bodyB.shape.boundingSphereRadius,2) > dist.norm2();\r\n};\r\n\r\n/**\r\n * Returns all the bodies within the AABB.\r\n * @method aabbQuery\r\n * @param  {World} world\r\n * @param  {AABB} aabb\r\n * @param  {array} result An array to store resulting bodies in.\r\n * @return {array}\r\n */\r\nBroadphase.prototype.aabbQuery = function(world, aabb, result){\r\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\r\n    return [];\r\n};\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Plane\":42,\"../shapes/Shape\":43}],6:[function(_dereq_,module,exports){\r\nmodule.exports = GridBroadphase;\r\n\r\nvar Broadphase = _dereq_('./Broadphase');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Shape = _dereq_('../shapes/Shape');\r\n\r\n/**\r\n * Axis aligned uniform grid broadphase.\r\n * @class GridBroadphase\r\n * @constructor\r\n * @extends Broadphase\r\n * @todo Needs support for more than just planes and spheres.\r\n * @param {Vec3} aabbMin\r\n * @param {Vec3} aabbMax\r\n * @param {Number} nx Number of boxes along x\r\n * @param {Number} ny Number of boxes along y\r\n * @param {Number} nz Number of boxes along z\r\n */\r\nfunction GridBroadphase(aabbMin,aabbMax,nx,ny,nz){\r\n    Broadphase.apply(this);\r\n    this.nx = nx || 10;\r\n    this.ny = ny || 10;\r\n    this.nz = nz || 10;\r\n    this.aabbMin = aabbMin || new Vec3(100,100,100);\r\n    this.aabbMax = aabbMax || new Vec3(-100,-100,-100);\r\n\tvar nbins = this.nx * this.ny * this.nz;\r\n\tif (nbins <= 0) {\r\n\t\tthrow \"GridBroadphase: Each dimension's n must be >0\";\r\n\t}\r\n    this.bins = [];\r\n\tthis.binLengths = []; //Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\r\n\tthis.bins.length = nbins;\r\n\tthis.binLengths.length = nbins;\r\n\tfor (var i=0;i<nbins;i++) {\r\n\t\tthis.bins[i]=[];\r\n\t\tthis.binLengths[i]=0;\r\n\t}\r\n}\r\nGridBroadphase.prototype = new Broadphase();\r\nGridBroadphase.prototype.constructor = GridBroadphase;\r\n\r\n/**\r\n * Get all the collision pairs in the physics world\r\n * @method collisionPairs\r\n * @param {World} world\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nvar GridBroadphase_collisionPairs_d = new Vec3();\r\nvar GridBroadphase_collisionPairs_binPos = new Vec3();\r\nGridBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\r\n    var N = world.numObjects(),\r\n        bodies = world.bodies;\r\n\r\n    var max = this.aabbMax,\r\n        min = this.aabbMin,\r\n        nx = this.nx,\r\n        ny = this.ny,\r\n        nz = this.nz;\r\n\r\n\tvar xstep = ny*nz;\r\n\tvar ystep = nz;\r\n\tvar zstep = 1;\r\n\r\n    var xmax = max.x,\r\n        ymax = max.y,\r\n        zmax = max.z,\r\n        xmin = min.x,\r\n        ymin = min.y,\r\n        zmin = min.z;\r\n\r\n    var xmult = nx / (xmax-xmin),\r\n        ymult = ny / (ymax-ymin),\r\n        zmult = nz / (zmax-zmin);\r\n\r\n    var binsizeX = (xmax - xmin) / nx,\r\n        binsizeY = (ymax - ymin) / ny,\r\n        binsizeZ = (zmax - zmin) / nz;\r\n\r\n\tvar binRadius = Math.sqrt(binsizeX*binsizeX + binsizeY*binsizeY + binsizeZ*binsizeZ) * 0.5;\r\n\r\n    var types = Shape.types;\r\n    var SPHERE =            types.SPHERE,\r\n        PLANE =             types.PLANE,\r\n        BOX =               types.BOX,\r\n        COMPOUND =          types.COMPOUND,\r\n        CONVEXPOLYHEDRON =  types.CONVEXPOLYHEDRON;\r\n\r\n    var bins=this.bins,\r\n\t\tbinLengths=this.binLengths,\r\n        Nbins=this.bins.length;\r\n\r\n    // Reset bins\r\n    for(var i=0; i!==Nbins; i++){\r\n        binLengths[i] = 0;\r\n    }\r\n\r\n    var ceil = Math.ceil;\r\n\tvar min = Math.min;\r\n\tvar max = Math.max;\r\n\r\n\tfunction addBoxToBins(x0,y0,z0,x1,y1,z1,bi) {\r\n\t\tvar xoff0 = ((x0 - xmin) * xmult)|0,\r\n\t\t\tyoff0 = ((y0 - ymin) * ymult)|0,\r\n\t\t\tzoff0 = ((z0 - zmin) * zmult)|0,\r\n\t\t\txoff1 = ceil((x1 - xmin) * xmult),\r\n\t\t\tyoff1 = ceil((y1 - ymin) * ymult),\r\n\t\t\tzoff1 = ceil((z1 - zmin) * zmult);\r\n\r\n\t\tif (xoff0 < 0) { xoff0 = 0; } else if (xoff0 >= nx) { xoff0 = nx - 1; }\r\n\t\tif (yoff0 < 0) { yoff0 = 0; } else if (yoff0 >= ny) { yoff0 = ny - 1; }\r\n\t\tif (zoff0 < 0) { zoff0 = 0; } else if (zoff0 >= nz) { zoff0 = nz - 1; }\r\n\t\tif (xoff1 < 0) { xoff1 = 0; } else if (xoff1 >= nx) { xoff1 = nx - 1; }\r\n\t\tif (yoff1 < 0) { yoff1 = 0; } else if (yoff1 >= ny) { yoff1 = ny - 1; }\r\n\t\tif (zoff1 < 0) { zoff1 = 0; } else if (zoff1 >= nz) { zoff1 = nz - 1; }\r\n\r\n\t\txoff0 *= xstep;\r\n\t\tyoff0 *= ystep;\r\n\t\tzoff0 *= zstep;\r\n\t\txoff1 *= xstep;\r\n\t\tyoff1 *= ystep;\r\n\t\tzoff1 *= zstep;\r\n\r\n\t\tfor (var xoff = xoff0; xoff <= xoff1; xoff += xstep) {\r\n\t\t\tfor (var yoff = yoff0; yoff <= yoff1; yoff += ystep) {\r\n\t\t\t\tfor (var zoff = zoff0; zoff <= zoff1; zoff += zstep) {\r\n\t\t\t\t\tvar idx = xoff+yoff+zoff;\r\n\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    // Put all bodies into the bins\r\n    for(var i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        var si = bi.shape;\r\n\r\n        switch(si.type){\r\n        case SPHERE:\r\n            // Put in bin\r\n            // check if overlap with other bins\r\n            var x = bi.position.x,\r\n                y = bi.position.y,\r\n                z = bi.position.z;\r\n            var r = si.radius;\r\n\r\n\t\t\taddBoxToBins(x-r, y-r, z-r, x+r, y+r, z+r, bi);\r\n            break;\r\n\r\n        case PLANE:\r\n            if(si.worldNormalNeedsUpdate){\r\n                si.computeWorldNormal(bi.quaternion);\r\n            }\r\n            var planeNormal = si.worldNormal;\r\n\r\n\t\t\t//Relative position from origin of plane object to the first bin\r\n\t\t\t//Incremented as we iterate through the bins\r\n\t\t\tvar xreset = xmin + binsizeX*0.5 - bi.position.x,\r\n\t\t\t\tyreset = ymin + binsizeY*0.5 - bi.position.y,\r\n\t\t\t\tzreset = zmin + binsizeZ*0.5 - bi.position.z;\r\n\r\n            var d = GridBroadphase_collisionPairs_d;\r\n\t\t\td.set(xreset, yreset, zreset);\r\n\r\n\t\t\tfor (var xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\r\n\t\t\t\tfor (var yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\r\n\t\t\t\t\tfor (var zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\r\n\t\t\t\t\t\tif (d.dot(planeNormal) < binRadius) {\r\n\t\t\t\t\t\t\tvar idx = xoff + yoff + zoff;\r\n\t\t\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n            break;\r\n\r\n        default:\r\n\t\t\tif (bi.aabbNeedsUpdate) {\r\n\t\t\t\tbi.computeAABB();\r\n\t\t\t}\r\n\r\n\t\t\taddBoxToBins(\r\n\t\t\t\tbi.aabb.lowerBound.x,\r\n\t\t\t\tbi.aabb.lowerBound.y,\r\n\t\t\t\tbi.aabb.lowerBound.z,\r\n\t\t\t\tbi.aabb.upperBound.x,\r\n\t\t\t\tbi.aabb.upperBound.y,\r\n\t\t\t\tbi.aabb.upperBound.z,\r\n\t\t\t\tbi);\r\n            break;\r\n        }\r\n    }\r\n\r\n    // Check each bin\r\n    for(var i=0; i!==Nbins; i++){\r\n\t\tvar binLength = binLengths[i];\r\n\t\t//Skip bins with no potential collisions\r\n\t\tif (binLength > 1) {\r\n\t\t\tvar bin = bins[i];\r\n\r\n\t\t\t// Do N^2 broadphase inside\r\n\t\t\tfor(var xi=0; xi!==binLength; xi++){\r\n\t\t\t\tvar bi = bin[xi];\r\n\t\t\t\tfor(var yi=0; yi!==xi; yi++){\r\n\t\t\t\t\tvar bj = bin[yi];\r\n\t\t\t\t\tif(this.needBroadphaseCollision(bi,bj)){\r\n\t\t\t\t\t\tthis.intersectionTest(bi,bj,pairs1,pairs2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n//\tfor (var zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\r\n//\t\tconsole.log(\"layer \"+zi);\r\n//\t\tfor (var yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\r\n//\t\t\tvar row = '';\r\n//\t\t\tfor (var xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\r\n//\t\t\t\tvar idx = xoff + yoff + zoff;\r\n//\t\t\t\trow += ' ' + binLengths[idx];\r\n//\t\t\t}\r\n//\t\t\tconsole.log(row);\r\n//\t\t}\r\n//\t}\r\n\r\n    this.makePairsUnique(pairs1,pairs2);\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"../shapes/Shape\":43,\"./Broadphase\":5}],7:[function(_dereq_,module,exports){\r\nmodule.exports = NaiveBroadphase;\r\n\r\nvar Broadphase = _dereq_('./Broadphase');\r\nvar AABB = _dereq_('./AABB');\r\n\r\n/**\r\n * Naive broadphase implementation, used in lack of better ones.\r\n * @class NaiveBroadphase\r\n * @constructor\r\n * @description The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 (which is bad)\r\n * @extends Broadphase\r\n */\r\nfunction NaiveBroadphase(){\r\n    Broadphase.apply(this);\r\n}\r\nNaiveBroadphase.prototype = new Broadphase();\r\nNaiveBroadphase.prototype.constructor = NaiveBroadphase;\r\n\r\n/**\r\n * Get all the collision pairs in the physics world\r\n * @method collisionPairs\r\n * @param {World} world\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nNaiveBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\r\n    var bodies = world.bodies,\r\n        n = bodies.length,\r\n        i,j,bi,bj;\r\n\r\n    // Naive N^2 ftw!\r\n    for(i=0; i!==n; i++){\r\n        for(j=0; j!==i; j++){\r\n\r\n            bi = bodies[i];\r\n            bj = bodies[j];\r\n\r\n            if(!this.needBroadphaseCollision(bi,bj)){\r\n                continue;\r\n            }\r\n\r\n            this.intersectionTest(bi,bj,pairs1,pairs2);\r\n        }\r\n    }\r\n};\r\n\r\nvar tmpAABB = new AABB();\r\n\r\n/**\r\n * Returns all the bodies within an AABB.\r\n * @method aabbQuery\r\n * @param  {World} world\r\n * @param  {AABB} aabb\r\n * @param {array} result An array to store resulting bodies in.\r\n * @return {array}\r\n */\r\nNaiveBroadphase.prototype.aabbQuery = function(world, aabb, result){\r\n    result = result || [];\r\n\r\n    for(var i = 0; i < world.bodies.length; i++){\r\n        var b = world.bodies[i];\r\n\r\n        if(b.aabbNeedsUpdate){\r\n            b.computeAABB();\r\n        }\r\n\r\n        // Ugly hack until Body gets aabb\r\n        if(b.aabb.overlaps(aabb)){\r\n            result.push(b);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n},{\"./AABB\":3,\"./Broadphase\":5}],8:[function(_dereq_,module,exports){\r\nmodule.exports = ObjectCollisionMatrix;\r\n\r\n/**\r\n * Records what objects are colliding with each other\r\n * @class ObjectCollisionMatrix\r\n * @constructor\r\n */\r\nfunction ObjectCollisionMatrix() {\r\n\r\n    /**\r\n     * The matrix storage\r\n     * @property matrix\r\n     * @type {Object}\r\n     */\r\n\tthis.matrix = {};\r\n}\r\n\r\n/**\r\n * @method get\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @return {Number}\r\n */\r\nObjectCollisionMatrix.prototype.get = function(i, j) {\r\n\ti = i.id;\r\n\tj = j.id;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n\treturn i+'-'+j in this.matrix;\r\n};\r\n\r\n/**\r\n * @method set\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @param {Number} value\r\n */\r\nObjectCollisionMatrix.prototype.set = function(i, j, value) {\r\n\ti = i.id;\r\n\tj = j.id;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n\t}\r\n\tif (value) {\r\n\t\tthis.matrix[i+'-'+j] = true;\r\n\t}\r\n\telse {\r\n\t\tdelete this.matrix[i+'-'+j];\r\n\t}\r\n};\r\n\r\n/**\r\n * Empty the matrix\r\n * @method reset\r\n */\r\nObjectCollisionMatrix.prototype.reset = function() {\r\n\tthis.matrix = {};\r\n};\r\n\r\n/**\r\n * Set max number of objects\r\n * @method setNumObjects\r\n * @param {Number} n\r\n */\r\nObjectCollisionMatrix.prototype.setNumObjects = function(n) {\r\n};\r\n\r\n},{}],9:[function(_dereq_,module,exports){\r\nmodule.exports = Ray;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\r\nvar Box = _dereq_('../shapes/Box');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar AABB = _dereq_('../collision/AABB');\r\n\r\n/**\r\n * A line in 3D space that intersects bodies and return points.\r\n * @class Ray\r\n * @constructor\r\n * @param {Vec3} from\r\n * @param {Vec3} to\r\n */\r\nfunction Ray(from, to){\r\n    /**\r\n     * @property {Vec3} from\r\n     */\r\n    this.from = from ? from.clone() : new Vec3();\r\n\r\n    /**\r\n     * @property {Vec3} to\r\n     */\r\n    this.to = to ? to.clone() : new Vec3();\r\n\r\n    /**\r\n     * @private\r\n     * @property {Vec3} _direction\r\n     */\r\n    this._direction = new Vec3();\r\n\r\n    /**\r\n     * The precision of the ray. Used when checking parallelity etc.\r\n     * @property {Number} precision\r\n     */\r\n    this.precision = 0.0001;\r\n\r\n    /**\r\n     * Set to true if you want the Ray to take .collisionResponse flags into account on bodies and shapes.\r\n     * @property {Boolean} checkCollisionResponse\r\n     */\r\n    this.checkCollisionResponse = true;\r\n\r\n    /**\r\n     * If set to true, the ray skips any hits with normal.dot(rayDirection) < 0.\r\n     * @property {Boolean} skipBackfaces\r\n     */\r\n    this.skipBackfaces = false;\r\n\r\n    /**\r\n     * @property {number} collisionFilterMask\r\n     * @default -1\r\n     */\r\n    this.collisionFilterMask = -1;\r\n\r\n    /**\r\n     * @property {number} collisionFilterGroup\r\n     * @default -1\r\n     */\r\n    this.collisionFilterGroup = -1;\r\n\r\n    /**\r\n     * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\r\n     * @property {number} mode\r\n     */\r\n    this.mode = Ray.ANY;\r\n\r\n    /**\r\n     * Current result object.\r\n     * @property {RaycastResult} result\r\n     */\r\n    this.result = new RaycastResult();\r\n\r\n    /**\r\n     * Will be set to true during intersectWorld() if the ray hit anything.\r\n     * @property {Boolean} hasHit\r\n     */\r\n    this.hasHit = false;\r\n\r\n    /**\r\n     * Current, user-provided result callback. Will be used if mode is Ray.ALL.\r\n     * @property {Function} callback\r\n     */\r\n    this.callback = function(result){};\r\n}\r\nRay.prototype.constructor = Ray;\r\n\r\nRay.CLOSEST = 1;\r\nRay.ANY = 2;\r\nRay.ALL = 4;\r\n\r\nvar tmpAABB = new AABB();\r\nvar tmpArray = [];\r\n\r\n/**\r\n * Do itersection against all bodies in the given World.\r\n * @method intersectWorld\r\n * @param  {World} world\r\n * @param  {object} options\r\n * @return {Boolean} True if the ray hit anything, otherwise false.\r\n */\r\nRay.prototype.intersectWorld = function (world, options) {\r\n    this.mode = options.mode || Ray.ANY;\r\n    this.result = options.result || new RaycastResult();\r\n    this.skipBackfaces = !!options.skipBackfaces;\r\n    this.collisionFilterMask = typeof(options.collisionFilterMask) !== 'undefined' ? options.collisionFilterMask : -1;\r\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) !== 'undefined' ? options.collisionFilterGroup : -1;\r\n    if(options.from){\r\n        this.from.copy(options.from);\r\n    }\r\n    if(options.to){\r\n        this.to.copy(options.to);\r\n    }\r\n    this.callback = options.callback || function(){};\r\n    this.hasHit = false;\r\n\r\n    this.result.reset();\r\n    this._updateDirection();\r\n\r\n    this.getAABB(tmpAABB);\r\n    tmpArray.length = 0;\r\n    world.broadphase.aabbQuery(world, tmpAABB, tmpArray);\r\n    this.intersectBodies(tmpArray);\r\n\r\n    return this.hasHit;\r\n};\r\n\r\nvar v1 = new Vec3(),\r\n    v2 = new Vec3();\r\n\r\n/*\r\n * As per \"Barycentric Technique\" as named here http://www.blackpawn.com/texts/pointinpoly/default.html But without the division\r\n */\r\nRay.pointInTriangle = pointInTriangle;\r\nfunction pointInTriangle(p, a, b, c) {\r\n    c.vsub(a,v0);\r\n    b.vsub(a,v1);\r\n    p.vsub(a,v2);\r\n\r\n    var dot00 = v0.dot( v0 );\r\n    var dot01 = v0.dot( v1 );\r\n    var dot02 = v0.dot( v2 );\r\n    var dot11 = v1.dot( v1 );\r\n    var dot12 = v1.dot( v2 );\r\n\r\n    var u,v;\r\n\r\n    return  ( (u = dot11 * dot02 - dot01 * dot12) >= 0 ) &&\r\n            ( (v = dot00 * dot12 - dot01 * dot02) >= 0 ) &&\r\n            ( u + v < ( dot00 * dot11 - dot01 * dot01 ) );\r\n}\r\n\r\n/**\r\n * Shoot a ray at a body, get back information about the hit.\r\n * @method intersectBody\r\n * @private\r\n * @param {Body} body\r\n * @param {RaycastResult} [result] Deprecated - set the result property of the Ray instead.\r\n */\r\nvar intersectBody_xi = new Vec3();\r\nvar intersectBody_qi = new Quaternion();\r\nRay.prototype.intersectBody = function (body, result) {\r\n    if(result){\r\n        this.result = result;\r\n        this._updateDirection();\r\n    }\r\n    var checkCollisionResponse = this.checkCollisionResponse;\r\n\r\n    if(checkCollisionResponse && !body.collisionResponse){\r\n        return;\r\n    }\r\n\r\n    if((this.collisionFilterGroup & body.collisionFilterMask)===0 || (body.collisionFilterGroup & this.collisionFilterMask)===0){\r\n        return;\r\n    }\r\n\r\n    var xi = intersectBody_xi;\r\n    var qi = intersectBody_qi;\r\n\r\n    for (var i = 0, N = body.shapes.length; i < N; i++) {\r\n        var shape = body.shapes[i];\r\n\r\n        if(checkCollisionResponse && !shape.collisionResponse){\r\n            continue; // Skip\r\n        }\r\n\r\n        body.quaternion.mult(body.shapeOrientations[i], qi);\r\n        body.quaternion.vmult(body.shapeOffsets[i], xi);\r\n        xi.vadd(body.position, xi);\r\n\r\n        this.intersectShape(\r\n            shape,\r\n            qi,\r\n            xi,\r\n            body\r\n        );\r\n\r\n        if(this.result._shouldStop){\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @method intersectBodies\r\n * @param {Array} bodies An array of Body objects.\r\n * @param {RaycastResult} [result] Deprecated\r\n */\r\nRay.prototype.intersectBodies = function (bodies, result) {\r\n    if(result){\r\n        this.result = result;\r\n        this._updateDirection();\r\n    }\r\n\r\n    for ( var i = 0, l = bodies.length; !this.result._shouldStop && i < l; i ++ ) {\r\n        this.intersectBody(bodies[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Updates the _direction vector.\r\n * @private\r\n * @method _updateDirection\r\n */\r\nRay.prototype._updateDirection = function(){\r\n    this.to.vsub(this.from, this._direction);\r\n    this._direction.normalize();\r\n};\r\n\r\n/**\r\n * @method intersectShape\r\n * @private\r\n * @param {Shape} shape\r\n * @param {Quaternion} quat\r\n * @param {Vec3} position\r\n * @param {Body} body\r\n */\r\nRay.prototype.intersectShape = function(shape, quat, position, body){\r\n    var from = this.from;\r\n\r\n\r\n    // Checking boundingSphere\r\n    var distance = distanceFromIntersection(from, this._direction, position);\r\n    if ( distance > shape.boundingSphereRadius ) {\r\n        return;\r\n    }\r\n\r\n    var intersectMethod = this[shape.type];\r\n    if(intersectMethod){\r\n        intersectMethod.call(this, shape, quat, position, body);\r\n    }\r\n};\r\n\r\nvar vector = new Vec3();\r\nvar normal = new Vec3();\r\nvar intersectPoint = new Vec3();\r\n\r\nvar a = new Vec3();\r\nvar b = new Vec3();\r\nvar c = new Vec3();\r\nvar d = new Vec3();\r\n\r\nvar tmpRaycastResult = new RaycastResult();\r\n\r\n/**\r\n * @method intersectBox\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectBox = function(shape, quat, position, body){\r\n    return this.intersectConvex(shape.convexPolyhedronRepresentation, quat, position, body);\r\n};\r\nRay.prototype[Shape.types.BOX] = Ray.prototype.intersectBox;\r\n\r\n/**\r\n * @method intersectPlane\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectPlane = function(shape, quat, position, body){\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var direction = this._direction;\r\n\r\n    // Get plane normal\r\n    var worldNormal = new Vec3(0, 0, 1);\r\n    quat.vmult(worldNormal, worldNormal);\r\n\r\n    var len = new Vec3();\r\n    from.vsub(position, len);\r\n    var planeToFrom = len.dot(worldNormal);\r\n    to.vsub(position, len);\r\n    var planeToTo = len.dot(worldNormal);\r\n\r\n    if(planeToFrom * planeToTo > 0){\r\n        // \"from\" and \"to\" are on the same side of the plane... bail out\r\n        return;\r\n    }\r\n\r\n    if(from.distanceTo(to) < planeToFrom){\r\n        return;\r\n    }\r\n\r\n    var n_dot_dir = worldNormal.dot(direction);\r\n\r\n    if (Math.abs(n_dot_dir) < this.precision) {\r\n        // No intersection\r\n        return;\r\n    }\r\n\r\n    var planePointToFrom = new Vec3();\r\n    var dir_scaled_with_t = new Vec3();\r\n    var hitPointWorld = new Vec3();\r\n\r\n    from.vsub(position, planePointToFrom);\r\n    var t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\r\n    direction.scale(t, dir_scaled_with_t);\r\n    from.vadd(dir_scaled_with_t, hitPointWorld);\r\n\r\n    this.reportIntersection(worldNormal, hitPointWorld, shape, body, -1);\r\n};\r\nRay.prototype[Shape.types.PLANE] = Ray.prototype.intersectPlane;\r\n\r\n/**\r\n * Get the world AABB of the ray.\r\n * @method getAABB\r\n * @param  {AABB} aabb\r\n */\r\nRay.prototype.getAABB = function(result){\r\n    var to = this.to;\r\n    var from = this.from;\r\n    result.lowerBound.x = Math.min(to.x, from.x);\r\n    result.lowerBound.y = Math.min(to.y, from.y);\r\n    result.lowerBound.z = Math.min(to.z, from.z);\r\n    result.upperBound.x = Math.max(to.x, from.x);\r\n    result.upperBound.y = Math.max(to.y, from.y);\r\n    result.upperBound.z = Math.max(to.z, from.z);\r\n};\r\n\r\nvar intersectConvexOptions = {\r\n    faceList: [0]\r\n};\r\n\r\n/**\r\n * @method intersectHeightfield\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectHeightfield = function(shape, quat, position, body){\r\n    var data = shape.data,\r\n        w = shape.elementSize,\r\n        worldPillarOffset = new Vec3();\r\n\r\n    // Convert the ray to local heightfield coordinates\r\n    var localRay = new Ray(this.from, this.to);\r\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\r\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\r\n\r\n    // Get the index of the data points to test against\r\n    var index = [];\r\n    var iMinX = null;\r\n    var iMinY = null;\r\n    var iMaxX = null;\r\n    var iMaxY = null;\r\n\r\n    var inside = shape.getIndexOfPosition(localRay.from.x, localRay.from.y, index, false);\r\n    if(inside){\r\n        iMinX = index[0];\r\n        iMinY = index[1];\r\n        iMaxX = index[0];\r\n        iMaxY = index[1];\r\n    }\r\n    inside = shape.getIndexOfPosition(localRay.to.x, localRay.to.y, index, false);\r\n    if(inside){\r\n        if (iMinX === null || index[0] < iMinX) { iMinX = index[0]; }\r\n        if (iMaxX === null || index[0] > iMaxX) { iMaxX = index[0]; }\r\n        if (iMinY === null || index[1] < iMinY) { iMinY = index[1]; }\r\n        if (iMaxY === null || index[1] > iMaxY) { iMaxY = index[1]; }\r\n    }\r\n\r\n    if(iMinX === null){\r\n        return;\r\n    }\r\n\r\n    var minMax = [];\r\n    shape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    var min = minMax[0];\r\n    var max = minMax[1];\r\n\r\n    // // Bail out if the ray can't touch the bounding box\r\n    // // TODO\r\n    // var aabb = new AABB();\r\n    // this.getAABB(aabb);\r\n    // if(aabb.intersects()){\r\n    //     return;\r\n    // }\r\n\r\n    for(var i = iMinX; i <= iMaxX; i++){\r\n        for(var j = iMinY; j <= iMaxY; j++){\r\n\r\n            if(this.result._shouldStop){\r\n                return;\r\n            }\r\n\r\n            // Lower triangle\r\n            shape.getConvexTrianglePillar(i, j, false);\r\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\r\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\r\n\r\n            if(this.result._shouldStop){\r\n                return;\r\n            }\r\n\r\n            // Upper triangle\r\n            shape.getConvexTrianglePillar(i, j, true);\r\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\r\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\r\n        }\r\n    }\r\n};\r\nRay.prototype[Shape.types.HEIGHTFIELD] = Ray.prototype.intersectHeightfield;\r\n\r\nvar Ray_intersectSphere_intersectionPoint = new Vec3();\r\nvar Ray_intersectSphere_normal = new Vec3();\r\n\r\n/**\r\n * @method intersectSphere\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectSphere = function(shape, quat, position, body){\r\n    var from = this.from,\r\n        to = this.to,\r\n        r = shape.radius;\r\n\r\n    var a = Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2) + Math.pow(to.z - from.z, 2);\r\n    var b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\r\n    var c = Math.pow(from.x - position.x, 2) + Math.pow(from.y - position.y, 2) + Math.pow(from.z - position.z, 2) - Math.pow(r, 2);\r\n\r\n    var delta = Math.pow(b, 2) - 4 * a * c;\r\n\r\n    var intersectionPoint = Ray_intersectSphere_intersectionPoint;\r\n    var normal = Ray_intersectSphere_normal;\r\n\r\n    if(delta < 0){\r\n        // No intersection\r\n        return;\r\n\r\n    } else if(delta === 0){\r\n        // single intersection point\r\n        from.lerp(to, delta, intersectionPoint);\r\n\r\n        intersectionPoint.vsub(position, normal);\r\n        normal.normalize();\r\n\r\n        this.reportIntersection(normal, intersectionPoint, shape, body, -1);\r\n\r\n    } else {\r\n        var d1 = (- b - Math.sqrt(delta)) / (2 * a);\r\n        var d2 = (- b + Math.sqrt(delta)) / (2 * a);\r\n\r\n        if(d1 >= 0 && d1 <= 1){\r\n            from.lerp(to, d1, intersectionPoint);\r\n            intersectionPoint.vsub(position, normal);\r\n            normal.normalize();\r\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\r\n        }\r\n\r\n        if(this.result._shouldStop){\r\n            return;\r\n        }\r\n\r\n        if(d2 >= 0 && d2 <= 1){\r\n            from.lerp(to, d2, intersectionPoint);\r\n            intersectionPoint.vsub(position, normal);\r\n            normal.normalize();\r\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\r\n        }\r\n    }\r\n};\r\nRay.prototype[Shape.types.SPHERE] = Ray.prototype.intersectSphere;\r\n\r\n\r\nvar intersectConvex_normal = new Vec3();\r\nvar intersectConvex_minDistNormal = new Vec3();\r\nvar intersectConvex_minDistIntersect = new Vec3();\r\nvar intersectConvex_vector = new Vec3();\r\n\r\n/**\r\n * @method intersectConvex\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n * @param {object} [options]\r\n * @param {array} [options.faceList]\r\n */\r\nRay.prototype.intersectConvex = function intersectConvex(\r\n    shape,\r\n    quat,\r\n    position,\r\n    body,\r\n    options\r\n){\r\n    var minDistNormal = intersectConvex_minDistNormal;\r\n    var normal = intersectConvex_normal;\r\n    var vector = intersectConvex_vector;\r\n    var minDistIntersect = intersectConvex_minDistIntersect;\r\n    var faceList = (options && options.faceList) || null;\r\n\r\n    // Checking faces\r\n    var faces = shape.faces,\r\n        vertices = shape.vertices,\r\n        normals = shape.faceNormals;\r\n    var direction = this._direction;\r\n\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var fromToDistance = from.distanceTo(to);\r\n\r\n    var minDist = -1;\r\n    var Nfaces = faceList ? faceList.length : faces.length;\r\n    var result = this.result;\r\n\r\n    for (var j = 0; !result._shouldStop && j < Nfaces; j++) {\r\n        var fi = faceList ? faceList[j] : j;\r\n\r\n        var face = faces[fi];\r\n        var faceNormal = normals[fi];\r\n        var q = quat;\r\n        var x = position;\r\n\r\n        // determine if ray intersects the plane of the face\r\n        // note: this works regardless of the direction of the face normal\r\n\r\n        // Get plane point in world coordinates...\r\n        vector.copy(vertices[face[0]]);\r\n        q.vmult(vector,vector);\r\n        vector.vadd(x,vector);\r\n\r\n        // ...but make it relative to the ray from. We'll fix this later.\r\n        vector.vsub(from,vector);\r\n\r\n        // Get plane normal\r\n        q.vmult(faceNormal,normal);\r\n\r\n        // If this dot product is negative, we have something interesting\r\n        var dot = direction.dot(normal);\r\n\r\n        // Bail out if ray and plane are parallel\r\n        if ( Math.abs( dot ) < this.precision ){\r\n            continue;\r\n        }\r\n\r\n        // calc distance to plane\r\n        var scalar = normal.dot(vector) / dot;\r\n\r\n        // if negative distance, then plane is behind ray\r\n        if (scalar < 0){\r\n            continue;\r\n        }\r\n\r\n        // if (dot < 0) {\r\n\r\n        // Intersection point is from + direction * scalar\r\n        direction.mult(scalar,intersectPoint);\r\n        intersectPoint.vadd(from,intersectPoint);\r\n\r\n        // a is the point we compare points b and c with.\r\n        a.copy(vertices[face[0]]);\r\n        q.vmult(a,a);\r\n        x.vadd(a,a);\r\n\r\n        for(var i = 1; !result._shouldStop && i < face.length - 1; i++){\r\n            // Transform 3 vertices to world coords\r\n            b.copy(vertices[face[i]]);\r\n            c.copy(vertices[face[i+1]]);\r\n            q.vmult(b,b);\r\n            q.vmult(c,c);\r\n            x.vadd(b,b);\r\n            x.vadd(c,c);\r\n\r\n            var distance = intersectPoint.distanceTo(from);\r\n\r\n            if(!(pointInTriangle(intersectPoint, a, b, c) || pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance){\r\n                continue;\r\n            }\r\n\r\n            this.reportIntersection(normal, intersectPoint, shape, body, fi);\r\n        }\r\n        // }\r\n    }\r\n};\r\nRay.prototype[Shape.types.CONVEXPOLYHEDRON] = Ray.prototype.intersectConvex;\r\n\r\nvar intersectTrimesh_normal = new Vec3();\r\nvar intersectTrimesh_localDirection = new Vec3();\r\nvar intersectTrimesh_localFrom = new Vec3();\r\nvar intersectTrimesh_localTo = new Vec3();\r\nvar intersectTrimesh_worldNormal = new Vec3();\r\nvar intersectTrimesh_worldIntersectPoint = new Vec3();\r\nvar intersectTrimesh_localAABB = new AABB();\r\nvar intersectTrimesh_triangles = [];\r\nvar intersectTrimesh_treeTransform = new Transform();\r\n\r\n/**\r\n * @method intersectTrimesh\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n * @param {object} [options]\r\n * @todo Optimize by transforming the world to local space first.\r\n * @todo Use Octree lookup\r\n */\r\nRay.prototype.intersectTrimesh = function intersectTrimesh(\r\n    mesh,\r\n    quat,\r\n    position,\r\n    body,\r\n    options\r\n){\r\n    var normal = intersectTrimesh_normal;\r\n    var triangles = intersectTrimesh_triangles;\r\n    var treeTransform = intersectTrimesh_treeTransform;\r\n    var minDistNormal = intersectConvex_minDistNormal;\r\n    var vector = intersectConvex_vector;\r\n    var minDistIntersect = intersectConvex_minDistIntersect;\r\n    var localAABB = intersectTrimesh_localAABB;\r\n    var localDirection = intersectTrimesh_localDirection;\r\n    var localFrom = intersectTrimesh_localFrom;\r\n    var localTo = intersectTrimesh_localTo;\r\n    var worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\r\n    var worldNormal = intersectTrimesh_worldNormal;\r\n    var faceList = (options && options.faceList) || null;\r\n\r\n    // Checking faces\r\n    var indices = mesh.indices,\r\n        vertices = mesh.vertices,\r\n        normals = mesh.faceNormals;\r\n\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var direction = this._direction;\r\n\r\n    var minDist = -1;\r\n    treeTransform.position.copy(position);\r\n    treeTransform.quaternion.copy(quat);\r\n\r\n    // Transform ray to local space!\r\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\r\n    //body.vectorToLocalFrame(direction, localDirection);\r\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\r\n    //body.pointToLocalFrame(from, localFrom);\r\n    Transform.pointToLocalFrame(position, quat, to, localTo);\r\n    //body.pointToLocalFrame(to, localTo);\r\n    var fromToDistanceSquared = localFrom.distanceSquared(localTo);\r\n\r\n    mesh.tree.rayQuery(this, treeTransform, triangles);\r\n\r\n    for (var i = 0, N = triangles.length; !this.result._shouldStop && i !== N; i++) {\r\n        var trianglesIndex = triangles[i];\r\n\r\n        mesh.getNormal(trianglesIndex, normal);\r\n\r\n        // determine if ray intersects the plane of the face\r\n        // note: this works regardless of the direction of the face normal\r\n\r\n        // Get plane point in world coordinates...\r\n        mesh.getVertex(indices[trianglesIndex * 3], a);\r\n\r\n        // ...but make it relative to the ray from. We'll fix this later.\r\n        a.vsub(localFrom,vector);\r\n\r\n        // Get plane normal\r\n        // quat.vmult(normal, normal);\r\n\r\n        // If this dot product is negative, we have something interesting\r\n        var dot = localDirection.dot(normal);\r\n\r\n        // Bail out if ray and plane are parallel\r\n        // if (Math.abs( dot ) < this.precision){\r\n        //     continue;\r\n        // }\r\n\r\n        // calc distance to plane\r\n        var scalar = normal.dot(vector) / dot;\r\n\r\n        // if negative distance, then plane is behind ray\r\n        if (scalar < 0){\r\n            continue;\r\n        }\r\n\r\n        // Intersection point is from + direction * scalar\r\n        localDirection.scale(scalar,intersectPoint);\r\n        intersectPoint.vadd(localFrom,intersectPoint);\r\n\r\n        // Get triangle vertices\r\n        mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\r\n        mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\r\n\r\n        var squaredDistance = intersectPoint.distanceSquared(localFrom);\r\n\r\n        if(!(pointInTriangle(intersectPoint, b, a, c) || pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared){\r\n            continue;\r\n        }\r\n\r\n        // transform intersectpoint and normal to world\r\n        Transform.vectorToWorldFrame(quat, normal, worldNormal);\r\n        //body.vectorToWorldFrame(normal, worldNormal);\r\n        Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\r\n        //body.pointToWorldFrame(intersectPoint, worldIntersectPoint);\r\n        this.reportIntersection(worldNormal, worldIntersectPoint, mesh, body, trianglesIndex);\r\n    }\r\n    triangles.length = 0;\r\n};\r\nRay.prototype[Shape.types.TRIMESH] = Ray.prototype.intersectTrimesh;\r\n\r\n\r\n/**\r\n * @method reportIntersection\r\n * @private\r\n * @param  {Vec3} normal\r\n * @param  {Vec3} hitPointWorld\r\n * @param  {Shape} shape\r\n * @param  {Body} body\r\n * @return {boolean} True if the intersections should continue\r\n */\r\nRay.prototype.reportIntersection = function(normal, hitPointWorld, shape, body, hitFaceIndex){\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var distance = from.distanceTo(hitPointWorld);\r\n    var result = this.result;\r\n\r\n    // Skip back faces?\r\n    if(this.skipBackfaces && normal.dot(this._direction) > 0){\r\n        return;\r\n    }\r\n\r\n    result.hitFaceIndex = typeof(hitFaceIndex) !== 'undefined' ? hitFaceIndex : -1;\r\n\r\n    switch(this.mode){\r\n    case Ray.ALL:\r\n        this.hasHit = true;\r\n        result.set(\r\n            from,\r\n            to,\r\n            normal,\r\n            hitPointWorld,\r\n            shape,\r\n            body,\r\n            distance\r\n        );\r\n        result.hasHit = true;\r\n        this.callback(result);\r\n        break;\r\n\r\n    case Ray.CLOSEST:\r\n\r\n        // Store if closer than current closest\r\n        if(distance < result.distance || !result.hasHit){\r\n            this.hasHit = true;\r\n            result.hasHit = true;\r\n            result.set(\r\n                from,\r\n                to,\r\n                normal,\r\n                hitPointWorld,\r\n                shape,\r\n                body,\r\n                distance\r\n            );\r\n        }\r\n        break;\r\n\r\n    case Ray.ANY:\r\n\r\n        // Report and stop.\r\n        this.hasHit = true;\r\n        result.hasHit = true;\r\n        result.set(\r\n            from,\r\n            to,\r\n            normal,\r\n            hitPointWorld,\r\n            shape,\r\n            body,\r\n            distance\r\n        );\r\n        result._shouldStop = true;\r\n        break;\r\n    }\r\n};\r\n\r\nvar v0 = new Vec3(),\r\n    intersect = new Vec3();\r\nfunction distanceFromIntersection(from, direction, position) {\r\n\r\n    // v0 is vector from from to position\r\n    position.vsub(from,v0);\r\n    var dot = v0.dot(direction);\r\n\r\n    // intersect = direction*dot + from\r\n    direction.mult(dot,intersect);\r\n    intersect.vadd(from,intersect);\r\n\r\n    var distance = position.distanceTo(intersect);\r\n\r\n    return distance;\r\n}\r\n\r\n\r\n},{\"../collision/AABB\":3,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43}],10:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\nmodule.exports = RaycastResult;\r\n\r\n/**\r\n * Storage for Ray casting data.\r\n * @class RaycastResult\r\n * @constructor\r\n */\r\nfunction RaycastResult(){\r\n\r\n\t/**\r\n\t * @property {Vec3} rayFromWorld\r\n\t */\r\n\tthis.rayFromWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {Vec3} rayToWorld\r\n\t */\r\n\tthis.rayToWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {Vec3} hitNormalWorld\r\n\t */\r\n\tthis.hitNormalWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {Vec3} hitPointWorld\r\n\t */\r\n\tthis.hitPointWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {boolean} hasHit\r\n\t */\r\n\tthis.hasHit = false;\r\n\r\n\t/**\r\n\t * The hit shape, or null.\r\n\t * @property {Shape} shape\r\n\t */\r\n\tthis.shape = null;\r\n\r\n\t/**\r\n\t * The hit body, or null.\r\n\t * @property {Body} body\r\n\t */\r\n\tthis.body = null;\r\n\r\n\t/**\r\n\t * The index of the hit triangle, if the hit shape was a trimesh.\r\n\t * @property {number} hitFaceIndex\r\n\t * @default -1\r\n\t */\r\n\tthis.hitFaceIndex = -1;\r\n\r\n\t/**\r\n\t * Distance to the hit. Will be set to -1 if there was no hit.\r\n\t * @property {number} distance\r\n\t * @default -1\r\n\t */\r\n\tthis.distance = -1;\r\n\r\n\t/**\r\n\t * If the ray should stop traversing the bodies.\r\n\t * @private\r\n\t * @property {Boolean} _shouldStop\r\n\t * @default false\r\n\t */\r\n\tthis._shouldStop = false;\r\n}\r\n\r\n/**\r\n * Reset all result data.\r\n * @method reset\r\n */\r\nRaycastResult.prototype.reset = function () {\r\n\tthis.rayFromWorld.setZero();\r\n\tthis.rayToWorld.setZero();\r\n\tthis.hitNormalWorld.setZero();\r\n\tthis.hitPointWorld.setZero();\r\n\tthis.hasHit = false;\r\n\tthis.shape = null;\r\n\tthis.body = null;\r\n\tthis.hitFaceIndex = -1;\r\n\tthis.distance = -1;\r\n\tthis._shouldStop = false;\r\n};\r\n\r\n/**\r\n * @method abort\r\n */\r\nRaycastResult.prototype.abort = function(){\r\n\tthis._shouldStop = true;\r\n};\r\n\r\n/**\r\n * @method set\r\n * @param {Vec3} rayFromWorld\r\n * @param {Vec3} rayToWorld\r\n * @param {Vec3} hitNormalWorld\r\n * @param {Vec3} hitPointWorld\r\n * @param {Shape} shape\r\n * @param {Body} body\r\n * @param {number} distance\r\n */\r\nRaycastResult.prototype.set = function(\r\n\trayFromWorld,\r\n\trayToWorld,\r\n\thitNormalWorld,\r\n\thitPointWorld,\r\n\tshape,\r\n\tbody,\r\n\tdistance\r\n){\r\n\tthis.rayFromWorld.copy(rayFromWorld);\r\n\tthis.rayToWorld.copy(rayToWorld);\r\n\tthis.hitNormalWorld.copy(hitNormalWorld);\r\n\tthis.hitPointWorld.copy(hitPointWorld);\r\n\tthis.shape = shape;\r\n\tthis.body = body;\r\n\tthis.distance = distance;\r\n};\r\n},{\"../math/Vec3\":30}],11:[function(_dereq_,module,exports){\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Broadphase = _dereq_('../collision/Broadphase');\r\n\r\nmodule.exports = SAPBroadphase;\r\n\r\n/**\r\n * Sweep and prune broadphase along one axis.\r\n *\r\n * @class SAPBroadphase\r\n * @constructor\r\n * @param {World} [world]\r\n * @extends Broadphase\r\n */\r\nfunction SAPBroadphase(world){\r\n    Broadphase.apply(this);\r\n\r\n    /**\r\n     * List of bodies currently in the broadphase.\r\n     * @property axisList\r\n     * @type {Array}\r\n     */\r\n    this.axisList = [];\r\n\r\n    /**\r\n     * The world to search in.\r\n     * @property world\r\n     * @type {World}\r\n     */\r\n    this.world = null;\r\n\r\n    /**\r\n     * Axis to sort the bodies along. Set to 0 for x axis, and 1 for y axis. For best performance, choose an axis that the bodies are spread out more on.\r\n     * @property axisIndex\r\n     * @type {Number}\r\n     */\r\n    this.axisIndex = 0;\r\n\r\n    var axisList = this.axisList;\r\n\r\n    this._addBodyHandler = function(e){\r\n        axisList.push(e.body);\r\n    };\r\n\r\n    this._removeBodyHandler = function(e){\r\n        var idx = axisList.indexOf(e.body);\r\n        if(idx !== -1){\r\n            axisList.splice(idx,1);\r\n        }\r\n    };\r\n\r\n    if(world){\r\n        this.setWorld(world);\r\n    }\r\n}\r\nSAPBroadphase.prototype = new Broadphase();\r\n\r\n/**\r\n * Change the world\r\n * @method setWorld\r\n * @param  {World} world\r\n */\r\nSAPBroadphase.prototype.setWorld = function(world){\r\n    // Clear the old axis array\r\n    this.axisList.length = 0;\r\n\r\n    // Add all bodies from the new world\r\n    for(var i=0; i<world.bodies.length; i++){\r\n        this.axisList.push(world.bodies[i]);\r\n    }\r\n\r\n    // Remove old handlers, if any\r\n    world.removeEventListener(\"addBody\", this._addBodyHandler);\r\n    world.removeEventListener(\"removeBody\", this._removeBodyHandler);\r\n\r\n    // Add handlers to update the list of bodies.\r\n    world.addEventListener(\"addBody\", this._addBodyHandler);\r\n    world.addEventListener(\"removeBody\", this._removeBodyHandler);\r\n\r\n    this.world = world;\r\n    this.dirty = true;\r\n};\r\n\r\n/**\r\n * @static\r\n * @method insertionSortX\r\n * @param  {Array} a\r\n * @return {Array}\r\n */\r\nSAPBroadphase.insertionSortX = function(a) {\r\n    for(var i=1,l=a.length;i<l;i++) {\r\n        var v = a[i];\r\n        for(var j=i - 1;j>=0;j--) {\r\n            if(a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x){\r\n                break;\r\n            }\r\n            a[j+1] = a[j];\r\n        }\r\n        a[j+1] = v;\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * @static\r\n * @method insertionSortY\r\n * @param  {Array} a\r\n * @return {Array}\r\n */\r\nSAPBroadphase.insertionSortY = function(a) {\r\n    for(var i=1,l=a.length;i<l;i++) {\r\n        var v = a[i];\r\n        for(var j=i - 1;j>=0;j--) {\r\n            if(a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y){\r\n                break;\r\n            }\r\n            a[j+1] = a[j];\r\n        }\r\n        a[j+1] = v;\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * @static\r\n * @method insertionSortZ\r\n * @param  {Array} a\r\n * @return {Array}\r\n */\r\nSAPBroadphase.insertionSortZ = function(a) {\r\n    for(var i=1,l=a.length;i<l;i++) {\r\n        var v = a[i];\r\n        for(var j=i - 1;j>=0;j--) {\r\n            if(a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z){\r\n                break;\r\n            }\r\n            a[j+1] = a[j];\r\n        }\r\n        a[j+1] = v;\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * Collect all collision pairs\r\n * @method collisionPairs\r\n * @param  {World} world\r\n * @param  {Array} p1\r\n * @param  {Array} p2\r\n */\r\nSAPBroadphase.prototype.collisionPairs = function(world,p1,p2){\r\n    var bodies = this.axisList,\r\n        N = bodies.length,\r\n        axisIndex = this.axisIndex,\r\n        i, j;\r\n\r\n    if(this.dirty){\r\n        this.sortList();\r\n        this.dirty = false;\r\n    }\r\n\r\n    // Look through the list\r\n    for(i=0; i !== N; i++){\r\n        var bi = bodies[i];\r\n\r\n        for(j=i+1; j < N; j++){\r\n            var bj = bodies[j];\r\n\r\n            if(!this.needBroadphaseCollision(bi,bj)){\r\n                continue;\r\n            }\r\n\r\n            if(!SAPBroadphase.checkBounds(bi,bj,axisIndex)){\r\n                break;\r\n            }\r\n\r\n            this.intersectionTest(bi,bj,p1,p2);\r\n        }\r\n    }\r\n};\r\n\r\nSAPBroadphase.prototype.sortList = function(){\r\n    var axisList = this.axisList;\r\n    var axisIndex = this.axisIndex;\r\n    var N = axisList.length;\r\n\r\n    // Update AABBs\r\n    for(var i = 0; i!==N; i++){\r\n        var bi = axisList[i];\r\n        if(bi.aabbNeedsUpdate){\r\n            bi.computeAABB();\r\n        }\r\n    }\r\n\r\n    // Sort the list\r\n    if(axisIndex === 0){\r\n        SAPBroadphase.insertionSortX(axisList);\r\n    } else if(axisIndex === 1){\r\n        SAPBroadphase.insertionSortY(axisList);\r\n    } else if(axisIndex === 2){\r\n        SAPBroadphase.insertionSortZ(axisList);\r\n    }\r\n};\r\n\r\n/**\r\n * Check if the bounds of two bodies overlap, along the given SAP axis.\r\n * @static\r\n * @method checkBounds\r\n * @param  {Body} bi\r\n * @param  {Body} bj\r\n * @param  {Number} axisIndex\r\n * @return {Boolean}\r\n */\r\nSAPBroadphase.checkBounds = function(bi, bj, axisIndex){\r\n    var biPos;\r\n    var bjPos;\r\n\r\n    if(axisIndex === 0){\r\n        biPos = bi.position.x;\r\n        bjPos = bj.position.x;\r\n    } else if(axisIndex === 1){\r\n        biPos = bi.position.y;\r\n        bjPos = bj.position.y;\r\n    } else if(axisIndex === 2){\r\n        biPos = bi.position.z;\r\n        bjPos = bj.position.z;\r\n    }\r\n\r\n    var ri = bi.boundingRadius,\r\n        rj = bj.boundingRadius,\r\n        boundA1 = biPos - ri,\r\n        boundA2 = biPos + ri,\r\n        boundB1 = bjPos - rj,\r\n        boundB2 = bjPos + rj;\r\n\r\n    return boundB1 < boundA2;\r\n};\r\n\r\n/**\r\n * Computes the variance of the body positions and estimates the best\r\n * axis to use. Will automatically set property .axisIndex.\r\n * @method autoDetectAxis\r\n */\r\nSAPBroadphase.prototype.autoDetectAxis = function(){\r\n    var sumX=0,\r\n        sumX2=0,\r\n        sumY=0,\r\n        sumY2=0,\r\n        sumZ=0,\r\n        sumZ2=0,\r\n        bodies = this.axisList,\r\n        N = bodies.length,\r\n        invN=1/N;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var b = bodies[i];\r\n\r\n        var centerX = b.position.x;\r\n        sumX += centerX;\r\n        sumX2 += centerX*centerX;\r\n\r\n        var centerY = b.position.y;\r\n        sumY += centerY;\r\n        sumY2 += centerY*centerY;\r\n\r\n        var centerZ = b.position.z;\r\n        sumZ += centerZ;\r\n        sumZ2 += centerZ*centerZ;\r\n    }\r\n\r\n    var varianceX = sumX2 - sumX*sumX*invN,\r\n        varianceY = sumY2 - sumY*sumY*invN,\r\n        varianceZ = sumZ2 - sumZ*sumZ*invN;\r\n\r\n    if(varianceX > varianceY){\r\n        if(varianceX > varianceZ){\r\n            this.axisIndex = 0;\r\n        } else{\r\n            this.axisIndex = 2;\r\n        }\r\n    } else if(varianceY > varianceZ){\r\n        this.axisIndex = 1;\r\n    } else{\r\n        this.axisIndex = 2;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns all the bodies within an AABB.\r\n * @method aabbQuery\r\n * @param  {World} world\r\n * @param  {AABB} aabb\r\n * @param {array} result An array to store resulting bodies in.\r\n * @return {array}\r\n */\r\nSAPBroadphase.prototype.aabbQuery = function(world, aabb, result){\r\n    result = result || [];\r\n\r\n    if(this.dirty){\r\n        this.sortList();\r\n        this.dirty = false;\r\n    }\r\n\r\n    var axisIndex = this.axisIndex, axis = 'x';\r\n    if(axisIndex === 1){ axis = 'y'; }\r\n    if(axisIndex === 2){ axis = 'z'; }\r\n\r\n    var axisList = this.axisList;\r\n    var lower = aabb.lowerBound[axis];\r\n    var upper = aabb.upperBound[axis];\r\n    for(var i = 0; i < axisList.length; i++){\r\n        var b = axisList[i];\r\n\r\n        if(b.aabbNeedsUpdate){\r\n            b.computeAABB();\r\n        }\r\n\r\n        if(b.aabb.overlaps(aabb)){\r\n            result.push(b);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n},{\"../collision/Broadphase\":5,\"../shapes/Shape\":43}],12:[function(_dereq_,module,exports){\r\nmodule.exports = ConeTwistConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\r\nvar ConeEquation = _dereq_('../equations/ConeEquation');\r\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * @class ConeTwistConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {Vec3} [options.pivotA]\r\n * @param {Vec3} [options.pivotB]\r\n * @param {Vec3} [options.axisA]\r\n * @param {Vec3} [options.axisB]\r\n * @param {Number} [options.maxForce=1e6]\r\n * @extends PointToPointConstraint\r\n */\r\nfunction ConeTwistConstraint(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    // Set pivot point in between\r\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\r\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\r\n\r\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\r\n\r\n    this.collideConnected = !!options.collideConnected;\r\n\r\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\r\n\r\n    /**\r\n     * @property {ConeEquation} coneEquation\r\n     */\r\n    var c = this.coneEquation = new ConeEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} twistEquation\r\n     */\r\n    var t = this.twistEquation = new RotationalEquation(bodyA,bodyB,options);\r\n    this.twistAngle = typeof(options.twistAngle) !== 'undefined' ? options.twistAngle : 0;\r\n\r\n    // Make the cone equation push the bodies toward the cone axis, not outward\r\n    c.maxForce = 0;\r\n    c.minForce = -maxForce;\r\n\r\n    // Make the twist equation add torque toward the initial position\r\n    t.maxForce = 0;\r\n    t.minForce = -maxForce;\r\n\r\n    this.equations.push(c, t);\r\n}\r\nConeTwistConstraint.prototype = new PointToPointConstraint();\r\nConeTwistConstraint.constructor = ConeTwistConstraint;\r\n\r\nvar ConeTwistConstraint_update_tmpVec1 = new Vec3();\r\nvar ConeTwistConstraint_update_tmpVec2 = new Vec3();\r\n\r\nConeTwistConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        cone = this.coneEquation,\r\n        twist = this.twistEquation;\r\n\r\n    PointToPointConstraint.prototype.update.call(this);\r\n\r\n    // Update the axes to the cone constraint\r\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\r\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB);\r\n\r\n    // Update the world axes in the twist constraint\r\n    this.axisA.tangents(twist.axisA, twist.axisA);\r\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\r\n\r\n    this.axisB.tangents(twist.axisB, twist.axisB);\r\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\r\n\r\n    cone.angle = this.angle;\r\n    twist.maxAngle = this.twistAngle;\r\n};\r\n\r\n\r\n},{\"../equations/ConeEquation\":18,\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],13:[function(_dereq_,module,exports){\r\nmodule.exports = Constraint;\r\n\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\n/**\r\n * Constraint base class\r\n * @class Constraint\r\n * @author schteppe\r\n * @constructor\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {boolean} [options.collideConnected=true]\r\n * @param {boolean} [options.wakeUpBodies=true]\r\n */\r\nfunction Constraint(bodyA, bodyB, options){\r\n    options = Utils.defaults(options,{\r\n        collideConnected : true,\r\n        wakeUpBodies : true,\r\n    });\r\n\r\n    /**\r\n     * Equations to be solved in this constraint\r\n     * @property equations\r\n     * @type {Array}\r\n     */\r\n    this.equations = [];\r\n\r\n    /**\r\n     * @property {Body} bodyA\r\n     */\r\n    this.bodyA = bodyA;\r\n\r\n    /**\r\n     * @property {Body} bodyB\r\n     */\r\n    this.bodyB = bodyB;\r\n\r\n    /**\r\n     * @property {Number} id\r\n     */\r\n    this.id = Constraint.idCounter++;\r\n\r\n    /**\r\n     * Set to true if you want the bodies to collide when they are connected.\r\n     * @property collideConnected\r\n     * @type {boolean}\r\n     */\r\n    this.collideConnected = options.collideConnected;\r\n\r\n    if(options.wakeUpBodies){\r\n        if(bodyA){\r\n            bodyA.wakeUp();\r\n        }\r\n        if(bodyB){\r\n            bodyB.wakeUp();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Update all the equations with data.\r\n * @method update\r\n */\r\nConstraint.prototype.update = function(){\r\n    throw new Error(\"method update() not implmemented in this Constraint subclass!\");\r\n};\r\n\r\n/**\r\n * Enables all equations in the constraint.\r\n * @method enable\r\n */\r\nConstraint.prototype.enable = function(){\r\n    var eqs = this.equations;\r\n    for(var i=0; i<eqs.length; i++){\r\n        eqs[i].enabled = true;\r\n    }\r\n};\r\n\r\n/**\r\n * Disables all equations in the constraint.\r\n * @method disable\r\n */\r\nConstraint.prototype.disable = function(){\r\n    var eqs = this.equations;\r\n    for(var i=0; i<eqs.length; i++){\r\n        eqs[i].enabled = false;\r\n    }\r\n};\r\n\r\nConstraint.idCounter = 0;\r\n\r\n},{\"../utils/Utils\":53}],14:[function(_dereq_,module,exports){\r\nmodule.exports = DistanceConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\n\r\n/**\r\n * Constrains two bodies to be at a constant distance from each others center of mass.\r\n * @class DistanceConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\r\n * @param {Number} [maxForce=1e6]\r\n * @extends Constraint\r\n */\r\nfunction DistanceConstraint(bodyA,bodyB,distance,maxForce){\r\n    Constraint.call(this,bodyA,bodyB);\r\n\r\n    if(typeof(distance)===\"undefined\") {\r\n        distance = bodyA.position.distanceTo(bodyB.position);\r\n    }\r\n\r\n    if(typeof(maxForce)===\"undefined\") {\r\n        maxForce = 1e6;\r\n    }\r\n\r\n    /**\r\n     * @property {number} distance\r\n     */\r\n    this.distance = distance;\r\n\r\n    /**\r\n     * @property {ContactEquation} distanceEquation\r\n     */\r\n    var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\r\n    this.equations.push(eq);\r\n\r\n    // Make it bidirectional\r\n    eq.minForce = -maxForce;\r\n    eq.maxForce =  maxForce;\r\n}\r\nDistanceConstraint.prototype = new Constraint();\r\n\r\nDistanceConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA;\r\n    var bodyB = this.bodyB;\r\n    var eq = this.distanceEquation;\r\n    var halfDist = this.distance * 0.5;\r\n    var normal = eq.ni;\r\n\r\n    bodyB.position.vsub(bodyA.position, normal);\r\n    normal.normalize();\r\n    normal.mult(halfDist, eq.ri);\r\n    normal.mult(-halfDist, eq.rj);\r\n};\r\n},{\"../equations/ContactEquation\":19,\"./Constraint\":13}],15:[function(_dereq_,module,exports){\r\nmodule.exports = HingeConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\r\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\r\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\r\n * @class HingeConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {Vec3} [options.pivotA] A point defined locally in bodyA. This defines the offset of axisA.\r\n * @param {Vec3} [options.axisA] An axis that bodyA can rotate around, defined locally in bodyA.\r\n * @param {Vec3} [options.pivotB]\r\n * @param {Vec3} [options.axisB]\r\n * @param {Number} [options.maxForce=1e6]\r\n * @extends PointToPointConstraint\r\n */\r\nfunction HingeConstraint(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\r\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\r\n\r\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\r\n\r\n    /**\r\n     * Rotation axis, defined locally in bodyA.\r\n     * @property {Vec3} axisA\r\n     */\r\n    var axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1,0,0);\r\n    axisA.normalize();\r\n\r\n    /**\r\n     * Rotation axis, defined locally in bodyB.\r\n     * @property {Vec3} axisB\r\n     */\r\n    var axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1,0,0);\r\n    axisB.normalize();\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation1\r\n     */\r\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation2\r\n     */\r\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalMotorEquation} motorEquation\r\n     */\r\n    var motor = this.motorEquation = new RotationalMotorEquation(bodyA,bodyB,maxForce);\r\n    motor.enabled = false; // Not enabled by default\r\n\r\n    // Equations to be fed to the solver\r\n    this.equations.push(\r\n        r1, // rotational1\r\n        r2, // rotational2\r\n        motor\r\n    );\r\n}\r\nHingeConstraint.prototype = new PointToPointConstraint();\r\nHingeConstraint.constructor = HingeConstraint;\r\n\r\n/**\r\n * @method enableMotor\r\n */\r\nHingeConstraint.prototype.enableMotor = function(){\r\n    this.motorEquation.enabled = true;\r\n};\r\n\r\n/**\r\n * @method disableMotor\r\n */\r\nHingeConstraint.prototype.disableMotor = function(){\r\n    this.motorEquation.enabled = false;\r\n};\r\n\r\n/**\r\n * @method setMotorSpeed\r\n * @param {number} speed\r\n */\r\nHingeConstraint.prototype.setMotorSpeed = function(speed){\r\n    this.motorEquation.targetVelocity = speed;\r\n};\r\n\r\n/**\r\n * @method setMotorMaxForce\r\n * @param {number} maxForce\r\n */\r\nHingeConstraint.prototype.setMotorMaxForce = function(maxForce){\r\n    this.motorEquation.maxForce = maxForce;\r\n    this.motorEquation.minForce = -maxForce;\r\n};\r\n\r\nvar HingeConstraint_update_tmpVec1 = new Vec3();\r\nvar HingeConstraint_update_tmpVec2 = new Vec3();\r\n\r\nHingeConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        motor = this.motorEquation,\r\n        r1 = this.rotationalEquation1,\r\n        r2 = this.rotationalEquation2,\r\n        worldAxisA = HingeConstraint_update_tmpVec1,\r\n        worldAxisB = HingeConstraint_update_tmpVec2;\r\n\r\n    var axisA = this.axisA;\r\n    var axisB = this.axisB;\r\n\r\n    PointToPointConstraint.prototype.update.call(this);\r\n\r\n    // Get world axes\r\n    bodyA.quaternion.vmult(axisA, worldAxisA);\r\n    bodyB.quaternion.vmult(axisB, worldAxisB);\r\n\r\n    worldAxisA.tangents(r1.axisA, r2.axisA);\r\n    r1.axisB.copy(worldAxisB);\r\n    r2.axisB.copy(worldAxisB);\r\n\r\n    if(this.motorEquation.enabled){\r\n        bodyA.quaternion.vmult(this.axisA, motor.axisA);\r\n        bodyB.quaternion.vmult(this.axisB, motor.axisB);\r\n    }\r\n};\r\n\r\n\r\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],16:[function(_dereq_,module,exports){\r\nmodule.exports = LockConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\r\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\r\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Lock constraint. Will remove all degrees of freedom between the bodies.\r\n * @class LockConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {Number} [options.maxForce=1e6]\r\n * @extends PointToPointConstraint\r\n */\r\nfunction LockConstraint(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    // Set pivot point in between\r\n    var pivotA = new Vec3();\r\n    var pivotB = new Vec3();\r\n    var halfWay = new Vec3();\r\n    bodyA.position.vadd(bodyB.position, halfWay);\r\n    halfWay.scale(0.5, halfWay);\r\n    bodyB.pointToLocalFrame(halfWay, pivotB);\r\n    bodyA.pointToLocalFrame(halfWay, pivotA);\r\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation1\r\n     */\r\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation2\r\n     */\r\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation3\r\n     */\r\n    var r3 = this.rotationalEquation3 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    this.equations.push(r1, r2, r3);\r\n}\r\nLockConstraint.prototype = new PointToPointConstraint();\r\nLockConstraint.constructor = LockConstraint;\r\n\r\nvar LockConstraint_update_tmpVec1 = new Vec3();\r\nvar LockConstraint_update_tmpVec2 = new Vec3();\r\n\r\nLockConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        motor = this.motorEquation,\r\n        r1 = this.rotationalEquation1,\r\n        r2 = this.rotationalEquation2,\r\n        r3 = this.rotationalEquation3,\r\n        worldAxisA = LockConstraint_update_tmpVec1,\r\n        worldAxisB = LockConstraint_update_tmpVec2;\r\n\r\n    PointToPointConstraint.prototype.update.call(this);\r\n\r\n    bodyA.vectorToWorldFrame(Vec3.UNIT_X, r1.axisA);\r\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Y, r1.axisB);\r\n\r\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Y, r2.axisA);\r\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Z, r2.axisB);\r\n\r\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Z, r3.axisA);\r\n    bodyB.vectorToWorldFrame(Vec3.UNIT_X, r3.axisB);\r\n};\r\n\r\n\r\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],17:[function(_dereq_,module,exports){\r\nmodule.exports = PointToPointConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Connects two bodies at given offset points.\r\n * @class PointToPointConstraint\r\n * @extends Constraint\r\n * @constructor\r\n * @param {Body} bodyA\r\n * @param {Vec3} pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\r\n * @param {Body} bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\r\n * @param {Vec3} pivotB See pivotA.\r\n * @param {Number} maxForce The maximum force that should be applied to constrain the bodies.\r\n *\r\n * @example\r\n *     var bodyA = new Body({ mass: 1 });\r\n *     var bodyB = new Body({ mass: 1 });\r\n *     bodyA.position.set(-1, 0, 0);\r\n *     bodyB.position.set(1, 0, 0);\r\n *     bodyA.addShape(shapeA);\r\n *     bodyB.addShape(shapeB);\r\n *     world.addBody(bodyA);\r\n *     world.addBody(bodyB);\r\n *     var localPivotA = new Vec3(1, 0, 0);\r\n *     var localPivotB = new Vec3(-1, 0, 0);\r\n *     var constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB);\r\n *     world.addConstraint(constraint);\r\n */\r\nfunction PointToPointConstraint(bodyA,pivotA,bodyB,pivotB,maxForce){\r\n    Constraint.call(this,bodyA,bodyB);\r\n\r\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\r\n\r\n    /**\r\n     * Pivot, defined locally in bodyA.\r\n     * @property {Vec3} pivotA\r\n     */\r\n    this.pivotA = pivotA ? pivotA.clone() : new Vec3();\r\n\r\n    /**\r\n     * Pivot, defined locally in bodyB.\r\n     * @property {Vec3} pivotB\r\n     */\r\n    this.pivotB = pivotB ? pivotB.clone() : new Vec3();\r\n\r\n    /**\r\n     * @property {ContactEquation} equationX\r\n     */\r\n    var x = this.equationX = new ContactEquation(bodyA,bodyB);\r\n\r\n    /**\r\n     * @property {ContactEquation} equationY\r\n     */\r\n    var y = this.equationY = new ContactEquation(bodyA,bodyB);\r\n\r\n    /**\r\n     * @property {ContactEquation} equationZ\r\n     */\r\n    var z = this.equationZ = new ContactEquation(bodyA,bodyB);\r\n\r\n    // Equations to be fed to the solver\r\n    this.equations.push(x, y, z);\r\n\r\n    // Make the equations bidirectional\r\n    x.minForce = y.minForce = z.minForce = -maxForce;\r\n    x.maxForce = y.maxForce = z.maxForce =  maxForce;\r\n\r\n    x.ni.set(1, 0, 0);\r\n    y.ni.set(0, 1, 0);\r\n    z.ni.set(0, 0, 1);\r\n}\r\nPointToPointConstraint.prototype = new Constraint();\r\n\r\nPointToPointConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA;\r\n    var bodyB = this.bodyB;\r\n    var x = this.equationX;\r\n    var y = this.equationY;\r\n    var z = this.equationZ;\r\n\r\n    // Rotate the pivots to world space\r\n    bodyA.quaternion.vmult(this.pivotA,x.ri);\r\n    bodyB.quaternion.vmult(this.pivotB,x.rj);\r\n\r\n    y.ri.copy(x.ri);\r\n    y.rj.copy(x.rj);\r\n    z.ri.copy(x.ri);\r\n    z.rj.copy(x.rj);\r\n};\r\n},{\"../equations/ContactEquation\":19,\"../math/Vec3\":30,\"./Constraint\":13}],18:[function(_dereq_,module,exports){\r\nmodule.exports = ConeEquation;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Equation = _dereq_('./Equation');\r\n\r\n/**\r\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\r\n * @class ConeEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Vec3} [options.axisA] Local axis in A\r\n * @param {Vec3} [options.axisB] Local axis in B\r\n * @param {Vec3} [options.angle] The \"cone angle\" to keep\r\n * @param {number} [options.maxForce=1e6]\r\n * @extends Equation\r\n */\r\nfunction ConeEquation(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\r\n\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\r\n\r\n    /**\r\n     * The cone angle to keep\r\n     * @property {number} angle\r\n     */\r\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\r\n}\r\n\r\nConeEquation.prototype = new Equation();\r\nConeEquation.prototype.constructor = ConeEquation;\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\n\r\nConeEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n\r\n        ni = this.axisA,\r\n        nj = this.axisB,\r\n\r\n        nixnj = tmpVec1,\r\n        njxni = tmpVec2,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n\r\n    // Caluclate cross products\r\n    ni.cross(nj, nixnj);\r\n    nj.cross(ni, njxni);\r\n\r\n    // The angle between two vector is:\r\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\r\n\r\n    // g = a * b\r\n    // gdot = (b x a) * wi + (a x b) * wj\r\n    // G = [0 bxa 0 axb]\r\n    // W = [vi wi vj wj]\r\n    GA.rotational.copy(njxni);\r\n    GB.rotational.copy(nixnj);\r\n\r\n    var g = Math.cos(this.angle) - ni.dot(nj),\r\n        GW = this.computeGW(),\r\n        GiMf = this.computeGiMf();\r\n\r\n    var B = - g * a - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],19:[function(_dereq_,module,exports){\r\nmodule.exports = ContactEquation;\r\n\r\nvar Equation = _dereq_('./Equation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\n\r\n/**\r\n * Contact/non-penetration constraint equation\r\n * @class ContactEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @extends Equation\r\n */\r\nfunction ContactEquation(bodyA, bodyB, maxForce){\r\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\r\n    Equation.call(this, bodyA, bodyB, 0, maxForce);\r\n\r\n    /**\r\n     * @property restitution\r\n     * @type {Number}\r\n     */\r\n    this.restitution = 0.0; // \"bounciness\": u1 = -e*u0\r\n\r\n    /**\r\n     * World-oriented vector that goes from the center of bi to the contact point.\r\n     * @property {Vec3} ri\r\n     */\r\n    this.ri = new Vec3();\r\n\r\n    /**\r\n     * World-oriented vector that starts in body j position and goes to the contact point.\r\n     * @property {Vec3} rj\r\n     */\r\n    this.rj = new Vec3();\r\n\r\n    /**\r\n     * Contact normal, pointing out of body i.\r\n     * @property {Vec3} ni\r\n     */\r\n    this.ni = new Vec3();\r\n}\r\n\r\nContactEquation.prototype = new Equation();\r\nContactEquation.prototype.constructor = ContactEquation;\r\n\r\nvar ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\r\nvar ContactEquation_computeB_temp2 = new Vec3();\r\nvar ContactEquation_computeB_temp3 = new Vec3();\r\nContactEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        ri = this.ri,\r\n        rj = this.rj,\r\n        rixn = ContactEquation_computeB_temp1,\r\n        rjxn = ContactEquation_computeB_temp2,\r\n\r\n        vi = bi.velocity,\r\n        wi = bi.angularVelocity,\r\n        fi = bi.force,\r\n        taui = bi.torque,\r\n\r\n        vj = bj.velocity,\r\n        wj = bj.angularVelocity,\r\n        fj = bj.force,\r\n        tauj = bj.torque,\r\n\r\n        penetrationVec = ContactEquation_computeB_temp3,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n\r\n        n = this.ni;\r\n\r\n    // Caluclate cross products\r\n    ri.cross(n,rixn);\r\n    rj.cross(n,rjxn);\r\n\r\n    // g = xj+rj -(xi+ri)\r\n    // G = [ -ni  -rixn  ni  rjxn ]\r\n    n.negate(GA.spatial);\r\n    rixn.negate(GA.rotational);\r\n    GB.spatial.copy(n);\r\n    GB.rotational.copy(rjxn);\r\n\r\n    // Calculate the penetration vector\r\n    penetrationVec.copy(bj.position);\r\n    penetrationVec.vadd(rj,penetrationVec);\r\n    penetrationVec.vsub(bi.position,penetrationVec);\r\n    penetrationVec.vsub(ri,penetrationVec);\r\n\r\n    var g = n.dot(penetrationVec);\r\n\r\n    // Compute iteration\r\n    var ePlusOne = this.restitution + 1;\r\n    var GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\r\n    var GiMf = this.computeGiMf();\r\n\r\n    var B = - g * a - GW * b - h*GiMf;\r\n\r\n    return B;\r\n};\r\n\r\nvar ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\r\n\r\n/**\r\n * Get the current relative velocity in the contact point.\r\n * @method getImpactVelocityAlongNormal\r\n * @return {number}\r\n */\r\nContactEquation.prototype.getImpactVelocityAlongNormal = function(){\r\n    var vi = ContactEquation_getImpactVelocityAlongNormal_vi;\r\n    var vj = ContactEquation_getImpactVelocityAlongNormal_vj;\r\n    var xi = ContactEquation_getImpactVelocityAlongNormal_xi;\r\n    var xj = ContactEquation_getImpactVelocityAlongNormal_xj;\r\n    var relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\r\n\r\n    this.bi.position.vadd(this.ri, xi);\r\n    this.bj.position.vadd(this.rj, xj);\r\n\r\n    this.bi.getVelocityAtWorldPoint(xi, vi);\r\n    this.bj.getVelocityAtWorldPoint(xj, vj);\r\n\r\n    vi.vsub(vj, relVel);\r\n\r\n    return this.ni.dot(relVel);\r\n};\r\n\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],20:[function(_dereq_,module,exports){\r\nmodule.exports = Equation;\r\n\r\nvar JacobianElement = _dereq_('../math/JacobianElement'),\r\n    Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Equation base class\r\n * @class Equation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bi\r\n * @param {Body} bj\r\n * @param {Number} minForce Minimum (read: negative max) force to be applied by the constraint.\r\n * @param {Number} maxForce Maximum (read: positive max) force to be applied by the constraint.\r\n */\r\nfunction Equation(bi,bj,minForce,maxForce){\r\n    this.id = Equation.id++;\r\n\r\n    /**\r\n     * @property {number} minForce\r\n     */\r\n    this.minForce = typeof(minForce)===\"undefined\" ? -1e6 : minForce;\r\n\r\n    /**\r\n     * @property {number} maxForce\r\n     */\r\n    this.maxForce = typeof(maxForce)===\"undefined\" ? 1e6 : maxForce;\r\n\r\n    /**\r\n     * @property bi\r\n     * @type {Body}\r\n     */\r\n    this.bi = bi;\r\n\r\n    /**\r\n     * @property bj\r\n     * @type {Body}\r\n     */\r\n    this.bj = bj;\r\n\r\n    /**\r\n     * SPOOK parameter\r\n     * @property {number} a\r\n     */\r\n    this.a = 0.0;\r\n\r\n    /**\r\n     * SPOOK parameter\r\n     * @property {number} b\r\n     */\r\n    this.b = 0.0;\r\n\r\n    /**\r\n     * SPOOK parameter\r\n     * @property {number} eps\r\n     */\r\n    this.eps = 0.0;\r\n\r\n    /**\r\n     * @property {JacobianElement} jacobianElementA\r\n     */\r\n    this.jacobianElementA = new JacobianElement();\r\n\r\n    /**\r\n     * @property {JacobianElement} jacobianElementB\r\n     */\r\n    this.jacobianElementB = new JacobianElement();\r\n\r\n    /**\r\n     * @property {boolean} enabled\r\n     * @default true\r\n     */\r\n    this.enabled = true;\r\n\r\n    // Set typical spook params\r\n    this.setSpookParams(1e7,4,1/60);\r\n}\r\nEquation.prototype.constructor = Equation;\r\n\r\nEquation.id = 0;\r\n\r\n/**\r\n * Recalculates a,b,eps.\r\n * @method setSpookParams\r\n */\r\nEquation.prototype.setSpookParams = function(stiffness,relaxation,timeStep){\r\n    var d = relaxation,\r\n        k = stiffness,\r\n        h = timeStep;\r\n    this.a = 4.0 / (h * (1 + 4 * d));\r\n    this.b = (4.0 * d) / (1 + 4 * d);\r\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\r\n};\r\n\r\n/**\r\n * Computes the RHS of the SPOOK equation\r\n * @method computeB\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeB = function(a,b,h){\r\n    var GW = this.computeGW(),\r\n        Gq = this.computeGq(),\r\n        GiMf = this.computeGiMf();\r\n    return - Gq * a - GW * b - GiMf*h;\r\n};\r\n\r\n/**\r\n * Computes G*q, where q are the generalized body coordinates\r\n * @method computeGq\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeGq = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        xi = bi.position,\r\n        xj = bj.position;\r\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\r\n};\r\n\r\nvar zero = new Vec3();\r\n\r\n/**\r\n * Computes G*W, where W are the body velocities\r\n * @method computeGW\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeGW = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        vi = bi.velocity,\r\n        vj = bj.velocity,\r\n        wi = bi.angularVelocity || zero,\r\n        wj = bj.angularVelocity || zero;\r\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\r\n};\r\n\r\n\r\n/**\r\n * Computes G*Wlambda, where W are the body velocities\r\n * @method computeGWlambda\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeGWlambda = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        vi = bi.vlambda,\r\n        vj = bj.vlambda,\r\n        wi = bi.wlambda || zero,\r\n        wj = bj.wlambda || zero;\r\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\r\n};\r\n\r\n/**\r\n * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\r\n * @method computeGiMf\r\n * @return {Number}\r\n */\r\nvar iMfi = new Vec3(),\r\n    iMfj = new Vec3(),\r\n    invIi_vmult_taui = new Vec3(),\r\n    invIj_vmult_tauj = new Vec3();\r\nEquation.prototype.computeGiMf = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        fi = bi.force,\r\n        ti = bi.torque,\r\n        fj = bj.force,\r\n        tj = bj.torque,\r\n        invMassi = bi.invMassSolve,\r\n        invMassj = bj.invMassSolve;\r\n\r\n    if(bi.invInertiaWorldSolve){ bi.invInertiaWorldSolve.vmult(ti,invIi_vmult_taui); }\r\n    else { invIi_vmult_taui.set(0,0,0); }\r\n    if(bj.invInertiaWorldSolve){ bj.invInertiaWorldSolve.vmult(tj,invIj_vmult_tauj); }\r\n    else { invIj_vmult_tauj.set(0,0,0); }\r\n\r\n    fi.mult(invMassi,iMfi);\r\n    fj.mult(invMassj,iMfj);\r\n\r\n    return GA.multiplyVectors(iMfi,invIi_vmult_taui) + GB.multiplyVectors(iMfj,invIj_vmult_tauj);\r\n};\r\n\r\n/**\r\n * Computes G*inv(M)*G'\r\n * @method computeGiMGt\r\n * @return {Number}\r\n */\r\nvar tmp = new Vec3();\r\nEquation.prototype.computeGiMGt = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        invMassi = bi.invMassSolve,\r\n        invMassj = bj.invMassSolve,\r\n        invIi = bi.invInertiaWorldSolve,\r\n        invIj = bj.invInertiaWorldSolve,\r\n        result = invMassi + invMassj;\r\n\r\n    if(invIi){\r\n        invIi.vmult(GA.rotational,tmp);\r\n        result += tmp.dot(GA.rotational);\r\n    }\r\n\r\n    if(invIj){\r\n        invIj.vmult(GB.rotational,tmp);\r\n        result += tmp.dot(GB.rotational);\r\n    }\r\n\r\n    return  result;\r\n};\r\n\r\nvar addToWlambda_temp = new Vec3(),\r\n    addToWlambda_Gi = new Vec3(),\r\n    addToWlambda_Gj = new Vec3(),\r\n    addToWlambda_ri = new Vec3(),\r\n    addToWlambda_rj = new Vec3(),\r\n    addToWlambda_Mdiag = new Vec3();\r\n\r\n/**\r\n * Add constraint velocity to the bodies.\r\n * @method addToWlambda\r\n * @param {Number} deltalambda\r\n */\r\nEquation.prototype.addToWlambda = function(deltalambda){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        temp = addToWlambda_temp;\r\n\r\n    // Add to linear velocity\r\n    // v_lambda += inv(M) * delta_lamba * G\r\n    GA.spatial.mult(bi.invMassSolve * deltalambda,temp);\r\n    bi.vlambda.vadd(temp, bi.vlambda);\r\n\r\n    GB.spatial.mult(bj.invMassSolve * deltalambda,temp);\r\n    bj.vlambda.vadd(temp, bj.vlambda);\r\n\r\n    // Add to angular velocity\r\n    if(bi.invInertiaWorldSolve){\r\n        bi.invInertiaWorldSolve.vmult(GA.rotational,temp);\r\n        temp.mult(deltalambda,temp);\r\n        bi.wlambda.vadd(temp,bi.wlambda);\r\n    }\r\n\r\n    if(bj.invInertiaWorldSolve){\r\n        bj.invInertiaWorldSolve.vmult(GB.rotational,temp);\r\n        temp.mult(deltalambda,temp);\r\n        bj.wlambda.vadd(temp,bj.wlambda);\r\n    }\r\n};\r\n\r\n/**\r\n * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\r\n * @method computeInvC\r\n * @param  {Number} eps\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeC = function(){\r\n    return this.computeGiMGt() + this.eps;\r\n};\r\n\r\n},{\"../math/JacobianElement\":26,\"../math/Vec3\":30}],21:[function(_dereq_,module,exports){\r\nmodule.exports = FrictionEquation;\r\n\r\nvar Equation = _dereq_('./Equation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\n\r\n/**\r\n * Constrains the slipping in a contact along a tangent\r\n * @class FrictionEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Number} slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\r\n * @extends Equation\r\n */\r\nfunction FrictionEquation(bodyA, bodyB, slipForce){\r\n    Equation.call(this,bodyA, bodyB, -slipForce, slipForce);\r\n    this.ri = new Vec3();\r\n    this.rj = new Vec3();\r\n    this.t = new Vec3(); // tangent\r\n}\r\n\r\nFrictionEquation.prototype = new Equation();\r\nFrictionEquation.prototype.constructor = FrictionEquation;\r\n\r\nvar FrictionEquation_computeB_temp1 = new Vec3();\r\nvar FrictionEquation_computeB_temp2 = new Vec3();\r\nFrictionEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        ri = this.ri,\r\n        rj = this.rj,\r\n        rixt = FrictionEquation_computeB_temp1,\r\n        rjxt = FrictionEquation_computeB_temp2,\r\n        t = this.t;\r\n\r\n    // Caluclate cross products\r\n    ri.cross(t,rixt);\r\n    rj.cross(t,rjxt);\r\n\r\n    // G = [-t -rixt t rjxt]\r\n    // And remember, this is a pure velocity constraint, g is always zero!\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n    t.negate(GA.spatial);\r\n    rixt.negate(GA.rotational);\r\n    GB.spatial.copy(t);\r\n    GB.rotational.copy(rjxt);\r\n\r\n    var GW = this.computeGW();\r\n    var GiMf = this.computeGiMf();\r\n\r\n    var B = - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],22:[function(_dereq_,module,exports){\r\nmodule.exports = RotationalEquation;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Equation = _dereq_('./Equation');\r\n\r\n/**\r\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\r\n * @class RotationalEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Vec3} [options.axisA]\r\n * @param {Vec3} [options.axisB]\r\n * @param {number} [options.maxForce]\r\n * @extends Equation\r\n */\r\nfunction RotationalEquation(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\r\n\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\r\n\r\n    this.maxAngle = Math.PI / 2;\r\n}\r\n\r\nRotationalEquation.prototype = new Equation();\r\nRotationalEquation.prototype.constructor = RotationalEquation;\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\n\r\nRotationalEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n\r\n        ni = this.axisA,\r\n        nj = this.axisB,\r\n\r\n        nixnj = tmpVec1,\r\n        njxni = tmpVec2,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n\r\n    // Caluclate cross products\r\n    ni.cross(nj, nixnj);\r\n    nj.cross(ni, njxni);\r\n\r\n    // g = ni * nj\r\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\r\n    // G = [0 njxni 0 nixnj]\r\n    // W = [vi wi vj wj]\r\n    GA.rotational.copy(njxni);\r\n    GB.rotational.copy(nixnj);\r\n\r\n    var g = Math.cos(this.maxAngle) - ni.dot(nj),\r\n        GW = this.computeGW(),\r\n        GiMf = this.computeGiMf();\r\n\r\n    var B = - g * a - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],23:[function(_dereq_,module,exports){\r\nmodule.exports = RotationalMotorEquation;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Equation = _dereq_('./Equation');\r\n\r\n/**\r\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\r\n * @class RotationalMotorEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Number} maxForce\r\n * @extends Equation\r\n */\r\nfunction RotationalMotorEquation(bodyA, bodyB, maxForce){\r\n    maxForce = typeof(maxForce)!=='undefined' ? maxForce : 1e6;\r\n    Equation.call(this,bodyA,bodyB,-maxForce,maxForce);\r\n\r\n    /**\r\n     * World oriented rotational axis\r\n     * @property {Vec3} axisA\r\n     */\r\n    this.axisA = new Vec3();\r\n\r\n    /**\r\n     * World oriented rotational axis\r\n     * @property {Vec3} axisB\r\n     */\r\n    this.axisB = new Vec3(); // World oriented rotational axis\r\n\r\n    /**\r\n     * Motor velocity\r\n     * @property {Number} targetVelocity\r\n     */\r\n    this.targetVelocity = 0;\r\n}\r\n\r\nRotationalMotorEquation.prototype = new Equation();\r\nRotationalMotorEquation.prototype.constructor = RotationalMotorEquation;\r\n\r\nRotationalMotorEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n\r\n        axisA = this.axisA,\r\n        axisB = this.axisB,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n\r\n    // g = 0\r\n    // gdot = axisA * wi - axisB * wj\r\n    // gdot = G * W = G * [vi wi vj wj]\r\n    // =>\r\n    // G = [0 axisA 0 -axisB]\r\n\r\n    GA.rotational.copy(axisA);\r\n    axisB.negate(GB.rotational);\r\n\r\n    var GW = this.computeGW() - this.targetVelocity,\r\n        GiMf = this.computeGiMf();\r\n\r\n    var B = - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],24:[function(_dereq_,module,exports){\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = ContactMaterial;\r\n\r\n/**\r\n * Defines what happens when two materials meet.\r\n * @class ContactMaterial\r\n * @constructor\r\n * @param {Material} m1\r\n * @param {Material} m2\r\n * @param {object} [options]\r\n * @param {Number} [options.friction=0.3]\r\n * @param {Number} [options.restitution=0.3]\r\n * @param {number} [options.contactEquationStiffness=1e7]\r\n * @param {number} [options.contactEquationRelaxation=3]\r\n * @param {number} [options.frictionEquationStiffness=1e7]\r\n * @param {Number} [options.frictionEquationRelaxation=3]\r\n */\r\nfunction ContactMaterial(m1, m2, options){\r\n    options = Utils.defaults(options, {\r\n        friction: 0.3,\r\n        restitution: 0.3,\r\n        contactEquationStiffness: 1e7,\r\n        contactEquationRelaxation: 3,\r\n        frictionEquationStiffness: 1e7,\r\n        frictionEquationRelaxation: 3\r\n    });\r\n\r\n    /**\r\n     * Identifier of this material\r\n     * @property {Number} id\r\n     */\r\n    this.id = ContactMaterial.idCounter++;\r\n\r\n    /**\r\n     * Participating materials\r\n     * @property {Array} materials\r\n     * @todo  Should be .materialA and .materialB instead\r\n     */\r\n    this.materials = [m1, m2];\r\n\r\n    /**\r\n     * Friction coefficient\r\n     * @property {Number} friction\r\n     */\r\n    this.friction = options.friction;\r\n\r\n    /**\r\n     * Restitution coefficient\r\n     * @property {Number} restitution\r\n     */\r\n    this.restitution = options.restitution;\r\n\r\n    /**\r\n     * Stiffness of the produced contact equations\r\n     * @property {Number} contactEquationStiffness\r\n     */\r\n    this.contactEquationStiffness = options.contactEquationStiffness;\r\n\r\n    /**\r\n     * Relaxation time of the produced contact equations\r\n     * @property {Number} contactEquationRelaxation\r\n     */\r\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\r\n\r\n    /**\r\n     * Stiffness of the produced friction equations\r\n     * @property {Number} frictionEquationStiffness\r\n     */\r\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\r\n\r\n    /**\r\n     * Relaxation time of the produced friction equations\r\n     * @property {Number} frictionEquationRelaxation\r\n     */\r\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\r\n}\r\n\r\nContactMaterial.idCounter = 0;\r\n\r\n},{\"../utils/Utils\":53}],25:[function(_dereq_,module,exports){\r\nmodule.exports = Material;\r\n\r\n/**\r\n * Defines a physics material.\r\n * @class Material\r\n * @constructor\r\n * @param {object} [options]\r\n * @author schteppe\r\n */\r\nfunction Material(options){\r\n    var name = '';\r\n    options = options || {};\r\n\r\n    // Backwards compatibility fix\r\n    if(typeof(options) === 'string'){\r\n        name = options;\r\n        options = {};\r\n    } else if(typeof(options) === 'object') {\r\n        name = '';\r\n    }\r\n\r\n    /**\r\n     * @property name\r\n     * @type {String}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * material id.\r\n     * @property id\r\n     * @type {number}\r\n     */\r\n    this.id = Material.idCounter++;\r\n\r\n    /**\r\n     * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\r\n     * @property {number} friction\r\n     */\r\n    this.friction = typeof(options.friction) !== 'undefined' ? options.friction : -1;\r\n\r\n    /**\r\n     * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\r\n     * @property {number} restitution\r\n     */\r\n    this.restitution = typeof(options.restitution) !== 'undefined' ? options.restitution : -1;\r\n}\r\n\r\nMaterial.idCounter = 0;\r\n\r\n},{}],26:[function(_dereq_,module,exports){\r\nmodule.exports = JacobianElement;\r\n\r\nvar Vec3 = _dereq_('./Vec3');\r\n\r\n/**\r\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\r\n * @class JacobianElement\r\n * @constructor\r\n */\r\nfunction JacobianElement(){\r\n\r\n    /**\r\n     * @property {Vec3} spatial\r\n     */\r\n    this.spatial = new Vec3();\r\n\r\n    /**\r\n     * @property {Vec3} rotational\r\n     */\r\n    this.rotational = new Vec3();\r\n}\r\n\r\n/**\r\n * Multiply with other JacobianElement\r\n * @method multiplyElement\r\n * @param  {JacobianElement} element\r\n * @return {Number}\r\n */\r\nJacobianElement.prototype.multiplyElement = function(element){\r\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\r\n};\r\n\r\n/**\r\n * Multiply with two vectors\r\n * @method multiplyVectors\r\n * @param  {Vec3} spatial\r\n * @param  {Vec3} rotational\r\n * @return {Number}\r\n */\r\nJacobianElement.prototype.multiplyVectors = function(spatial,rotational){\r\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\r\n};\r\n\r\n},{\"./Vec3\":30}],27:[function(_dereq_,module,exports){\r\nmodule.exports = Mat3;\r\n\r\nvar Vec3 = _dereq_('./Vec3');\r\n\r\n/**\r\n * A 3x3 matrix.\r\n * @class Mat3\r\n * @constructor\r\n * @param array elements Array of nine elements. Optional.\r\n * @author schteppe / http://github.com/schteppe\r\n */\r\nfunction Mat3(elements){\r\n    /**\r\n     * A vector of length 9, containing all matrix elements\r\n     * @property {Array} elements\r\n     */\r\n    if(elements){\r\n        this.elements = elements;\r\n    } else {\r\n        this.elements = [0,0,0,0,0,0,0,0,0];\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the matrix to identity\r\n * @method identity\r\n * @todo Should perhaps be renamed to setIdentity() to be more clear.\r\n * @todo Create another function that immediately creates an identity matrix eg. eye()\r\n */\r\nMat3.prototype.identity = function(){\r\n    var e = this.elements;\r\n    e[0] = 1;\r\n    e[1] = 0;\r\n    e[2] = 0;\r\n\r\n    e[3] = 0;\r\n    e[4] = 1;\r\n    e[5] = 0;\r\n\r\n    e[6] = 0;\r\n    e[7] = 0;\r\n    e[8] = 1;\r\n};\r\n\r\n/**\r\n * Set all elements to zero\r\n * @method setZero\r\n */\r\nMat3.prototype.setZero = function(){\r\n    var e = this.elements;\r\n    e[0] = 0;\r\n    e[1] = 0;\r\n    e[2] = 0;\r\n    e[3] = 0;\r\n    e[4] = 0;\r\n    e[5] = 0;\r\n    e[6] = 0;\r\n    e[7] = 0;\r\n    e[8] = 0;\r\n};\r\n\r\n/**\r\n * Sets the matrix diagonal elements from a Vec3\r\n * @method setTrace\r\n * @param {Vec3} vec3\r\n */\r\nMat3.prototype.setTrace = function(vec3){\r\n    var e = this.elements;\r\n    e[0] = vec3.x;\r\n    e[4] = vec3.y;\r\n    e[8] = vec3.z;\r\n};\r\n\r\n/**\r\n * Gets the matrix diagonal elements\r\n * @method getTrace\r\n * @return {Vec3}\r\n */\r\nMat3.prototype.getTrace = function(target){\r\n    var target = target || new Vec3();\r\n    var e = this.elements;\r\n    target.x = e[0];\r\n    target.y = e[4];\r\n    target.z = e[8];\r\n};\r\n\r\n/**\r\n * Matrix-Vector multiplication\r\n * @method vmult\r\n * @param {Vec3} v The vector to multiply with\r\n * @param {Vec3} target Optional, target to save the result in.\r\n */\r\nMat3.prototype.vmult = function(v,target){\r\n    target = target || new Vec3();\r\n\r\n    var e = this.elements,\r\n        x = v.x,\r\n        y = v.y,\r\n        z = v.z;\r\n    target.x = e[0]*x + e[1]*y + e[2]*z;\r\n    target.y = e[3]*x + e[4]*y + e[5]*z;\r\n    target.z = e[6]*x + e[7]*y + e[8]*z;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Matrix-scalar multiplication\r\n * @method smult\r\n * @param {Number} s\r\n */\r\nMat3.prototype.smult = function(s){\r\n    for(var i=0; i<this.elements.length; i++){\r\n        this.elements[i] *= s;\r\n    }\r\n};\r\n\r\n/**\r\n * Matrix multiplication\r\n * @method mmult\r\n * @param {Mat3} m Matrix to multiply with from left side.\r\n * @return {Mat3} The result.\r\n */\r\nMat3.prototype.mmult = function(m,target){\r\n    var r = target || new Mat3();\r\n    for(var i=0; i<3; i++){\r\n        for(var j=0; j<3; j++){\r\n            var sum = 0.0;\r\n            for(var k=0; k<3; k++){\r\n                sum += m.elements[i+k*3] * this.elements[k+j*3];\r\n            }\r\n            r.elements[i+j*3] = sum;\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * Scale each column of the matrix\r\n * @method scale\r\n * @param {Vec3} v\r\n * @return {Mat3} The result.\r\n */\r\nMat3.prototype.scale = function(v,target){\r\n    target = target || new Mat3();\r\n    var e = this.elements,\r\n        t = target.elements;\r\n    for(var i=0; i!==3; i++){\r\n        t[3*i + 0] = v.x * e[3*i + 0];\r\n        t[3*i + 1] = v.y * e[3*i + 1];\r\n        t[3*i + 2] = v.z * e[3*i + 2];\r\n    }\r\n    return target;\r\n};\r\n\r\n/**\r\n * Solve Ax=b\r\n * @method solve\r\n * @param {Vec3} b The right hand side\r\n * @param {Vec3} target Optional. Target vector to save in.\r\n * @return {Vec3} The solution x\r\n * @todo should reuse arrays\r\n */\r\nMat3.prototype.solve = function(b,target){\r\n    target = target || new Vec3();\r\n\r\n    // Construct equations\r\n    var nr = 3; // num rows\r\n    var nc = 4; // num cols\r\n    var eqns = [];\r\n    for(var i=0; i<nr*nc; i++){\r\n        eqns.push(0);\r\n    }\r\n    var i,j;\r\n    for(i=0; i<3; i++){\r\n        for(j=0; j<3; j++){\r\n            eqns[i+nc*j] = this.elements[i+3*j];\r\n        }\r\n    }\r\n    eqns[3+4*0] = b.x;\r\n    eqns[3+4*1] = b.y;\r\n    eqns[3+4*2] = b.z;\r\n\r\n    // Compute right upper triangular version of the matrix - Gauss elimination\r\n    var n = 3, k = n, np;\r\n    var kp = 4; // num rows\r\n    var p, els;\r\n    do {\r\n        i = k - n;\r\n        if (eqns[i+nc*i] === 0) {\r\n            // the pivot is null, swap lines\r\n            for (j = i + 1; j < k; j++) {\r\n                if (eqns[i+nc*j] !== 0) {\r\n                    np = kp;\r\n                    do {  // do ligne( i ) = ligne( i ) + ligne( k )\r\n                        p = kp - np;\r\n                        eqns[p+nc*i] += eqns[p+nc*j];\r\n                    } while (--np);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (eqns[i+nc*i] !== 0) {\r\n            for (j = i + 1; j < k; j++) {\r\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\r\n                np = kp;\r\n                do {  // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\r\n                    p = kp - np;\r\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\r\n                } while (--np);\r\n            }\r\n        }\r\n    } while (--n);\r\n\r\n    // Get the solution\r\n    target.z = eqns[2*nc+3] / eqns[2*nc+2];\r\n    target.y = (eqns[1*nc+3] - eqns[1*nc+2]*target.z) / eqns[1*nc+1];\r\n    target.x = (eqns[0*nc+3] - eqns[0*nc+2]*target.z - eqns[0*nc+1]*target.y) / eqns[0*nc+0];\r\n\r\n    if(isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x===Infinity || target.y===Infinity || target.z===Infinity){\r\n        throw \"Could not solve equation! Got x=[\"+target.toString()+\"], b=[\"+b.toString()+\"], A=[\"+this.toString()+\"]\";\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get an element in the matrix by index. Index starts at 0, not 1!!!\r\n * @method e\r\n * @param {Number} row\r\n * @param {Number} column\r\n * @param {Number} value Optional. If provided, the matrix element will be set to this value.\r\n * @return {Number}\r\n */\r\nMat3.prototype.e = function( row , column ,value){\r\n    if(value===undefined){\r\n        return this.elements[column+3*row];\r\n    } else {\r\n        // Set value\r\n        this.elements[column+3*row] = value;\r\n    }\r\n};\r\n\r\n/**\r\n * Copy another matrix into this matrix object.\r\n * @method copy\r\n * @param {Mat3} source\r\n * @return {Mat3} this\r\n */\r\nMat3.prototype.copy = function(source){\r\n    for(var i=0; i < source.elements.length; i++){\r\n        this.elements[i] = source.elements[i];\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Returns a string representation of the matrix.\r\n * @method toString\r\n * @return string\r\n */\r\nMat3.prototype.toString = function(){\r\n    var r = \"\";\r\n    var sep = \",\";\r\n    for(var i=0; i<9; i++){\r\n        r += this.elements[i] + sep;\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * reverse the matrix\r\n * @method reverse\r\n * @param {Mat3} target Optional. Target matrix to save in.\r\n * @return {Mat3} The solution x\r\n */\r\nMat3.prototype.reverse = function(target){\r\n\r\n    target = target || new Mat3();\r\n\r\n    // Construct equations\r\n    var nr = 3; // num rows\r\n    var nc = 6; // num cols\r\n    var eqns = [];\r\n    for(var i=0; i<nr*nc; i++){\r\n        eqns.push(0);\r\n    }\r\n    var i,j;\r\n    for(i=0; i<3; i++){\r\n        for(j=0; j<3; j++){\r\n            eqns[i+nc*j] = this.elements[i+3*j];\r\n        }\r\n    }\r\n    eqns[3+6*0] = 1;\r\n    eqns[3+6*1] = 0;\r\n    eqns[3+6*2] = 0;\r\n    eqns[4+6*0] = 0;\r\n    eqns[4+6*1] = 1;\r\n    eqns[4+6*2] = 0;\r\n    eqns[5+6*0] = 0;\r\n    eqns[5+6*1] = 0;\r\n    eqns[5+6*2] = 1;\r\n\r\n    // Compute right upper triangular version of the matrix - Gauss elimination\r\n    var n = 3, k = n, np;\r\n    var kp = nc; // num rows\r\n    var p;\r\n    do {\r\n        i = k - n;\r\n        if (eqns[i+nc*i] === 0) {\r\n            // the pivot is null, swap lines\r\n            for (j = i + 1; j < k; j++) {\r\n                if (eqns[i+nc*j] !== 0) {\r\n                    np = kp;\r\n                    do { // do line( i ) = line( i ) + line( k )\r\n                        p = kp - np;\r\n                        eqns[p+nc*i] += eqns[p+nc*j];\r\n                    } while (--np);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (eqns[i+nc*i] !== 0) {\r\n            for (j = i + 1; j < k; j++) {\r\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\r\n                np = kp;\r\n                do { // do line( k ) = line( k ) - multiplier * line( i )\r\n                    p = kp - np;\r\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\r\n                } while (--np);\r\n            }\r\n        }\r\n    } while (--n);\r\n\r\n    // eliminate the upper left triangle of the matrix\r\n    i = 2;\r\n    do {\r\n        j = i-1;\r\n        do {\r\n            var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\r\n            np = nc;\r\n            do {\r\n                p = nc - np;\r\n                eqns[p+nc*j] =  eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\r\n            } while (--np);\r\n        } while (j--);\r\n    } while (--i);\r\n\r\n    // operations on the diagonal\r\n    i = 2;\r\n    do {\r\n        var multiplier = 1 / eqns[i+nc*i];\r\n        np = nc;\r\n        do {\r\n            p = nc - np;\r\n            eqns[p+nc*i] = eqns[p+nc*i] * multiplier ;\r\n        } while (--np);\r\n    } while (i--);\r\n\r\n    i = 2;\r\n    do {\r\n        j = 2;\r\n        do {\r\n            p = eqns[nr+j+nc*i];\r\n            if( isNaN( p ) || p ===Infinity ){\r\n                throw \"Could not reverse! A=[\"+this.toString()+\"]\";\r\n            }\r\n            target.e( i , j , p );\r\n        } while (j--);\r\n    } while (i--);\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Set the matrix from a quaterion\r\n * @method setRotationFromQuaternion\r\n * @param {Quaternion} q\r\n */\r\nMat3.prototype.setRotationFromQuaternion = function( q ) {\r\n    var x = q.x, y = q.y, z = q.z, w = q.w,\r\n        x2 = x + x, y2 = y + y, z2 = z + z,\r\n        xx = x * x2, xy = x * y2, xz = x * z2,\r\n        yy = y * y2, yz = y * z2, zz = z * z2,\r\n        wx = w * x2, wy = w * y2, wz = w * z2,\r\n        e = this.elements;\r\n\r\n    e[3*0 + 0] = 1 - ( yy + zz );\r\n    e[3*0 + 1] = xy - wz;\r\n    e[3*0 + 2] = xz + wy;\r\n\r\n    e[3*1 + 0] = xy + wz;\r\n    e[3*1 + 1] = 1 - ( xx + zz );\r\n    e[3*1 + 2] = yz - wx;\r\n\r\n    e[3*2 + 0] = xz - wy;\r\n    e[3*2 + 1] = yz + wx;\r\n    e[3*2 + 2] = 1 - ( xx + yy );\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Transpose the matrix\r\n * @method transpose\r\n * @param  {Mat3} target Where to store the result.\r\n * @return {Mat3} The target Mat3, or a new Mat3 if target was omitted.\r\n */\r\nMat3.prototype.transpose = function( target ) {\r\n    target = target || new Mat3();\r\n\r\n    var Mt = target.elements,\r\n        M = this.elements;\r\n\r\n    for(var i=0; i!==3; i++){\r\n        for(var j=0; j!==3; j++){\r\n            Mt[3*i + j] = M[3*j + i];\r\n        }\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\n},{\"./Vec3\":30}],28:[function(_dereq_,module,exports){\r\nmodule.exports = Quaternion;\r\n\r\nvar Vec3 = _dereq_('./Vec3');\r\n\r\n/**\r\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\r\n * @class Quaternion\r\n * @constructor\r\n * @param {Number} x Multiplier of the imaginary basis vector i.\r\n * @param {Number} y Multiplier of the imaginary basis vector j.\r\n * @param {Number} z Multiplier of the imaginary basis vector k.\r\n * @param {Number} w Multiplier of the real part.\r\n * @see http://en.wikipedia.org/wiki/Quaternion\r\n */\r\nfunction Quaternion(x,y,z,w){\r\n    /**\r\n     * @property {Number} x\r\n     */\r\n    this.x = x!==undefined ? x : 0;\r\n\r\n    /**\r\n     * @property {Number} y\r\n     */\r\n    this.y = y!==undefined ? y : 0;\r\n\r\n    /**\r\n     * @property {Number} z\r\n     */\r\n    this.z = z!==undefined ? z : 0;\r\n\r\n    /**\r\n     * The multiplier of the real quaternion basis vector.\r\n     * @property {Number} w\r\n     */\r\n    this.w = w!==undefined ? w : 1;\r\n}\r\n\r\n/**\r\n * Set the value of the quaternion.\r\n * @method set\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @param {Number} w\r\n */\r\nQuaternion.prototype.set = function(x,y,z,w){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.w = w;\r\n};\r\n\r\n/**\r\n * Convert to a readable format\r\n * @method toString\r\n * @return string\r\n */\r\nQuaternion.prototype.toString = function(){\r\n    return this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w;\r\n};\r\n\r\n/**\r\n * Convert to an Array\r\n * @method toArray\r\n * @return Array\r\n */\r\nQuaternion.prototype.toArray = function(){\r\n    return [this.x, this.y, this.z, this.w];\r\n};\r\n\r\n/**\r\n * Set the quaternion components given an axis and an angle.\r\n * @method setFromAxisAngle\r\n * @param {Vec3} axis\r\n * @param {Number} angle in radians\r\n */\r\nQuaternion.prototype.setFromAxisAngle = function(axis,angle){\r\n    var s = Math.sin(angle*0.5);\r\n    this.x = axis.x * s;\r\n    this.y = axis.y * s;\r\n    this.z = axis.z * s;\r\n    this.w = Math.cos(angle*0.5);\r\n};\r\n\r\n/**\r\n * Converts the quaternion to axis/angle representation.\r\n * @method toAxisAngle\r\n * @param {Vec3} targetAxis Optional. A vector object to reuse for storing the axis.\r\n * @return Array An array, first elemnt is the axis and the second is the angle in radians.\r\n */\r\nQuaternion.prototype.toAxisAngle = function(targetAxis){\r\n    targetAxis = targetAxis || new Vec3();\r\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\r\n    var angle = 2 * Math.acos(this.w);\r\n    var s = Math.sqrt(1-this.w*this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\r\n    if (s < 0.001) { // test to avoid divide by zero, s is always positive due to sqrt\r\n        // if s close to zero then direction of axis not important\r\n        targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\r\n        targetAxis.y = this.y;\r\n        targetAxis.z = this.z;\r\n    } else {\r\n        targetAxis.x = this.x / s; // normalise axis\r\n        targetAxis.y = this.y / s;\r\n        targetAxis.z = this.z / s;\r\n    }\r\n    return [targetAxis,angle];\r\n};\r\n\r\nvar sfv_t1 = new Vec3(),\r\n    sfv_t2 = new Vec3();\r\n\r\n/**\r\n * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\r\n * @method setFromVectors\r\n * @param {Vec3} u\r\n * @param {Vec3} v\r\n */\r\nQuaternion.prototype.setFromVectors = function(u,v){\r\n    if(u.isAntiparallelTo(v)){\r\n        var t1 = sfv_t1;\r\n        var t2 = sfv_t2;\r\n\r\n        u.tangents(t1,t2);\r\n        this.setFromAxisAngle(t1,Math.PI);\r\n    } else {\r\n        var a = u.cross(v);\r\n        this.x = a.x;\r\n        this.y = a.y;\r\n        this.z = a.z;\r\n        this.w = Math.sqrt(Math.pow(u.norm(),2) * Math.pow(v.norm(),2)) + u.dot(v);\r\n        this.normalize();\r\n    }\r\n};\r\n\r\n/**\r\n * Quaternion multiplication\r\n * @method mult\r\n * @param {Quaternion} q\r\n * @param {Quaternion} target Optional.\r\n * @return {Quaternion}\r\n */\r\nvar Quaternion_mult_va = new Vec3();\r\nvar Quaternion_mult_vb = new Vec3();\r\nvar Quaternion_mult_vaxvb = new Vec3();\r\nQuaternion.prototype.mult = function(q,target){\r\n    target = target || new Quaternion();\r\n    var w = this.w,\r\n        va = Quaternion_mult_va,\r\n        vb = Quaternion_mult_vb,\r\n        vaxvb = Quaternion_mult_vaxvb;\r\n\r\n    va.set(this.x,this.y,this.z);\r\n    vb.set(q.x,q.y,q.z);\r\n    target.w = w*q.w - va.dot(vb);\r\n    va.cross(vb,vaxvb);\r\n\r\n    target.x = w * vb.x + q.w*va.x + vaxvb.x;\r\n    target.y = w * vb.y + q.w*va.y + vaxvb.y;\r\n    target.z = w * vb.z + q.w*va.z + vaxvb.z;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get the inverse quaternion rotation.\r\n * @method inverse\r\n * @param {Quaternion} target\r\n * @return {Quaternion}\r\n */\r\nQuaternion.prototype.inverse = function(target){\r\n    var x = this.x, y = this.y, z = this.z, w = this.w;\r\n    target = target || new Quaternion();\r\n\r\n    this.conjugate(target);\r\n    var inorm2 = 1/(x*x + y*y + z*z + w*w);\r\n    target.x *= inorm2;\r\n    target.y *= inorm2;\r\n    target.z *= inorm2;\r\n    target.w *= inorm2;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get the quaternion conjugate\r\n * @method conjugate\r\n * @param {Quaternion} target\r\n * @return {Quaternion}\r\n */\r\nQuaternion.prototype.conjugate = function(target){\r\n    target = target || new Quaternion();\r\n\r\n    target.x = -this.x;\r\n    target.y = -this.y;\r\n    target.z = -this.z;\r\n    target.w = this.w;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Normalize the quaternion. Note that this changes the values of the quaternion.\r\n * @method normalize\r\n */\r\nQuaternion.prototype.normalize = function(){\r\n    var l = Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);\r\n    if ( l === 0 ) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    } else {\r\n        l = 1 / l;\r\n        this.x *= l;\r\n        this.y *= l;\r\n        this.z *= l;\r\n        this.w *= l;\r\n    }\r\n};\r\n\r\n/**\r\n * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\r\n * @method normalizeFast\r\n * @see http://jsperf.com/fast-quaternion-normalization\r\n * @author unphased, https://github.com/unphased\r\n */\r\nQuaternion.prototype.normalizeFast = function () {\r\n    var f = (3.0-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2.0;\r\n    if ( f === 0 ) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    } else {\r\n        this.x *= f;\r\n        this.y *= f;\r\n        this.z *= f;\r\n        this.w *= f;\r\n    }\r\n};\r\n\r\n/**\r\n * Multiply the quaternion by a vector\r\n * @method vmult\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional\r\n * @return {Vec3}\r\n */\r\nQuaternion.prototype.vmult = function(v,target){\r\n    target = target || new Vec3();\r\n\r\n    var x = v.x,\r\n        y = v.y,\r\n        z = v.z;\r\n\r\n    var qx = this.x,\r\n        qy = this.y,\r\n        qz = this.z,\r\n        qw = this.w;\r\n\r\n    // q*v\r\n    var ix =  qw * x + qy * z - qz * y,\r\n    iy =  qw * y + qz * x - qx * z,\r\n    iz =  qw * z + qx * y - qy * x,\r\n    iw = -qx * x - qy * y - qz * z;\r\n\r\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Copies value of source to this quaternion.\r\n * @method copy\r\n * @param {Quaternion} source\r\n * @return {Quaternion} this\r\n */\r\nQuaternion.prototype.copy = function(source){\r\n    this.x = source.x;\r\n    this.y = source.y;\r\n    this.z = source.z;\r\n    this.w = source.w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: http://www.euclideanspace.com/maths/standards/index.htm\r\n * @method toEuler\r\n * @param {Vec3} target\r\n * @param string order Three-character string e.g. \"YZX\", which also is default.\r\n */\r\nQuaternion.prototype.toEuler = function(target,order){\r\n    order = order || \"YZX\";\r\n\r\n    var heading, attitude, bank;\r\n    var x = this.x, y = this.y, z = this.z, w = this.w;\r\n\r\n    switch(order){\r\n    case \"YZX\":\r\n        var test = x*y + z*w;\r\n        if (test > 0.499) { // singularity at north pole\r\n            heading = 2 * Math.atan2(x,w);\r\n            attitude = Math.PI/2;\r\n            bank = 0;\r\n        }\r\n        if (test < -0.499) { // singularity at south pole\r\n            heading = -2 * Math.atan2(x,w);\r\n            attitude = - Math.PI/2;\r\n            bank = 0;\r\n        }\r\n        if(isNaN(heading)){\r\n            var sqx = x*x;\r\n            var sqy = y*y;\r\n            var sqz = z*z;\r\n            heading = Math.atan2(2*y*w - 2*x*z , 1 - 2*sqy - 2*sqz); // Heading\r\n            attitude = Math.asin(2*test); // attitude\r\n            bank = Math.atan2(2*x*w - 2*y*z , 1 - 2*sqx - 2*sqz); // bank\r\n        }\r\n        break;\r\n    default:\r\n        throw new Error(\"Euler order \"+order+\" not supported yet.\");\r\n    }\r\n\r\n    target.y = heading;\r\n    target.z = attitude;\r\n    target.x = bank;\r\n};\r\n\r\n/**\r\n * See http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\r\n * @method setFromEuler\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @param {String} order The order to apply angles: 'XYZ' or 'YXZ' or any other combination\r\n */\r\nQuaternion.prototype.setFromEuler = function ( x, y, z, order ) {\r\n    order = order || \"XYZ\";\r\n\r\n    var c1 = Math.cos( x / 2 );\r\n    var c2 = Math.cos( y / 2 );\r\n    var c3 = Math.cos( z / 2 );\r\n    var s1 = Math.sin( x / 2 );\r\n    var s2 = Math.sin( y / 2 );\r\n    var s3 = Math.sin( z / 2 );\r\n\r\n    if ( order === 'XYZ' ) {\r\n\r\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    } else if ( order === 'YXZ' ) {\r\n\r\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    } else if ( order === 'ZXY' ) {\r\n\r\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    } else if ( order === 'ZYX' ) {\r\n\r\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    } else if ( order === 'YZX' ) {\r\n\r\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    } else if ( order === 'XZY' ) {\r\n\r\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    }\r\n\r\n    return this;\r\n\r\n};\r\n\r\nQuaternion.prototype.clone = function(){\r\n    return new Quaternion(this.x, this.y, this.z, this.w);\r\n};\r\n},{\"./Vec3\":30}],29:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('./Vec3');\r\nvar Quaternion = _dereq_('./Quaternion');\r\n\r\nmodule.exports = Transform;\r\n\r\n/**\r\n * @class Transform\r\n * @constructor\r\n */\r\nfunction Transform(options) {\r\n    options = options || {};\r\n\r\n\t/**\r\n\t * @property {Vec3} position\r\n\t */\r\n\tthis.position = new Vec3();\r\n    if(options.position){\r\n        this.position.copy(options.position);\r\n    }\r\n\r\n\t/**\r\n\t * @property {Quaternion} quaternion\r\n\t */\r\n\tthis.quaternion = new Quaternion();\r\n    if(options.quaternion){\r\n        this.quaternion.copy(options.quaternion);\r\n    }\r\n}\r\n\r\nvar tmpQuat = new Quaternion();\r\n\r\n/**\r\n * @static\r\n * @method pointToLocaFrame\r\n * @param {Vec3} position\r\n * @param {Quaternion} quaternion\r\n * @param {Vec3} worldPoint\r\n * @param {Vec3} result\r\n */\r\nTransform.pointToLocalFrame = function(position, quaternion, worldPoint, result){\r\n    var result = result || new Vec3();\r\n    worldPoint.vsub(position, result);\r\n    quaternion.conjugate(tmpQuat);\r\n    tmpQuat.vmult(result, result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get a global point in local transform coordinates.\r\n * @method pointToLocal\r\n * @param  {Vec3} point\r\n * @param  {Vec3} result\r\n * @return {Vec3} The \"result\" vector object\r\n */\r\nTransform.prototype.pointToLocal = function(worldPoint, result){\r\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\r\n};\r\n\r\n/**\r\n * @static\r\n * @method pointToWorldFrame\r\n * @param {Vec3} position\r\n * @param {Vec3} quaternion\r\n * @param {Vec3} localPoint\r\n * @param {Vec3} result\r\n */\r\nTransform.pointToWorldFrame = function(position, quaternion, localPoint, result){\r\n    var result = result || new Vec3();\r\n    quaternion.vmult(localPoint, result);\r\n    result.vadd(position, result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get a local point in global transform coordinates.\r\n * @method pointToWorld\r\n * @param  {Vec3} point\r\n * @param  {Vec3} result\r\n * @return {Vec3} The \"result\" vector object\r\n */\r\nTransform.prototype.pointToWorld = function(localPoint, result){\r\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\r\n};\r\n\r\n\r\nTransform.prototype.vectorToWorldFrame = function(localVector, result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.vmult(localVector, result);\r\n    return result;\r\n};\r\n\r\nTransform.vectorToWorldFrame = function(quaternion, localVector, result){\r\n    quaternion.vmult(localVector, result);\r\n    return result;\r\n};\r\n\r\nTransform.vectorToLocalFrame = function(position, quaternion, worldVector, result){\r\n    var result = result || new Vec3();\r\n    quaternion.w *= -1;\r\n    quaternion.vmult(worldVector, result);\r\n    quaternion.w *= -1;\r\n    return result;\r\n};\r\n\r\n},{\"./Quaternion\":28,\"./Vec3\":30}],30:[function(_dereq_,module,exports){\r\nmodule.exports = Vec3;\r\n\r\nvar Mat3 = _dereq_('./Mat3');\r\n\r\n/**\r\n * 3-dimensional vector\r\n * @class Vec3\r\n * @constructor\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @author schteppe\r\n * @example\r\n *     var v = new Vec3(1, 2, 3);\r\n *     console.log('x=' + v.x); // x=1\r\n */\r\nfunction Vec3(x,y,z){\r\n    /**\r\n     * @property x\r\n     * @type {Number}\r\n     */\r\n    this.x = x||0.0;\r\n\r\n    /**\r\n     * @property y\r\n     * @type {Number}\r\n     */\r\n    this.y = y||0.0;\r\n\r\n    /**\r\n     * @property z\r\n     * @type {Number}\r\n     */\r\n    this.z = z||0.0;\r\n}\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} ZERO\r\n */\r\nVec3.ZERO = new Vec3(0, 0, 0);\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} UNIT_X\r\n */\r\nVec3.UNIT_X = new Vec3(1, 0, 0);\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} UNIT_Y\r\n */\r\nVec3.UNIT_Y = new Vec3(0, 1, 0);\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} UNIT_Z\r\n */\r\nVec3.UNIT_Z = new Vec3(0, 0, 1);\r\n\r\n/**\r\n * Vector cross product\r\n * @method cross\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional. Target to save in.\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.cross = function(v,target){\r\n    var vx=v.x, vy=v.y, vz=v.z, x=this.x, y=this.y, z=this.z;\r\n    target = target || new Vec3();\r\n\r\n    target.x = (y * vz) - (z * vy);\r\n    target.y = (z * vx) - (x * vz);\r\n    target.z = (x * vy) - (y * vx);\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Set the vectors' 3 elements\r\n * @method set\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @return Vec3\r\n */\r\nVec3.prototype.set = function(x,y,z){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set all components of the vector to zero.\r\n * @method setZero\r\n */\r\nVec3.prototype.setZero = function(){\r\n    this.x = this.y = this.z = 0;\r\n};\r\n\r\n/**\r\n * Vector addition\r\n * @method vadd\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional.\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.vadd = function(v,target){\r\n    if(target){\r\n        target.x = v.x + this.x;\r\n        target.y = v.y + this.y;\r\n        target.z = v.z + this.z;\r\n    } else {\r\n        return new Vec3(this.x + v.x,\r\n                               this.y + v.y,\r\n                               this.z + v.z);\r\n    }\r\n};\r\n\r\n/**\r\n * Vector subtraction\r\n * @method vsub\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional. Target to save in.\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.vsub = function(v,target){\r\n    if(target){\r\n        target.x = this.x - v.x;\r\n        target.y = this.y - v.y;\r\n        target.z = this.z - v.z;\r\n    } else {\r\n        return new Vec3(this.x-v.x,\r\n                               this.y-v.y,\r\n                               this.z-v.z);\r\n    }\r\n};\r\n\r\n/**\r\n * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\r\n * @method crossmat\r\n * @see http://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf\r\n * @return {Mat3}\r\n */\r\nVec3.prototype.crossmat = function(){\r\n    return new Mat3([     0,  -this.z,   this.y,\r\n                            this.z,        0,  -this.x,\r\n                           -this.y,   this.x,        0]);\r\n};\r\n\r\n/**\r\n * Normalize the vector. Note that this changes the values in the vector.\r\n * @method normalize\r\n * @return {Number} Returns the norm of the vector\r\n */\r\nVec3.prototype.normalize = function(){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var n = Math.sqrt(x*x + y*y + z*z);\r\n    if(n>0.0){\r\n        var invN = 1/n;\r\n        this.x *= invN;\r\n        this.y *= invN;\r\n        this.z *= invN;\r\n    } else {\r\n        // Make something up\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n    return n;\r\n};\r\n\r\n/**\r\n * Get the version of this vector that is of length 1.\r\n * @method unit\r\n * @param {Vec3} target Optional target to save in\r\n * @return {Vec3} Returns the unit vector\r\n */\r\nVec3.prototype.unit = function(target){\r\n    target = target || new Vec3();\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var ninv = Math.sqrt(x*x + y*y + z*z);\r\n    if(ninv>0.0){\r\n        ninv = 1.0/ninv;\r\n        target.x = x * ninv;\r\n        target.y = y * ninv;\r\n        target.z = z * ninv;\r\n    } else {\r\n        target.x = 1;\r\n        target.y = 0;\r\n        target.z = 0;\r\n    }\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get the length of the vector\r\n * @method norm\r\n * @return {Number}\r\n * @deprecated Use .length() instead\r\n */\r\nVec3.prototype.norm = function(){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    return Math.sqrt(x*x + y*y + z*z);\r\n};\r\n\r\n/**\r\n * Get the length of the vector\r\n * @method length\r\n * @return {Number}\r\n */\r\nVec3.prototype.length = Vec3.prototype.norm;\r\n\r\n/**\r\n * Get the squared length of the vector\r\n * @method norm2\r\n * @return {Number}\r\n * @deprecated Use .lengthSquared() instead.\r\n */\r\nVec3.prototype.norm2 = function(){\r\n    return this.dot(this);\r\n};\r\n\r\n/**\r\n * Get the squared length of the vector.\r\n * @method lengthSquared\r\n * @return {Number}\r\n */\r\nVec3.prototype.lengthSquared = Vec3.prototype.norm2;\r\n\r\n/**\r\n * Get distance from this point to another point\r\n * @method distanceTo\r\n * @param  {Vec3} p\r\n * @return {Number}\r\n */\r\nVec3.prototype.distanceTo = function(p){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var px=p.x, py=p.y, pz=p.z;\r\n    return Math.sqrt((px-x)*(px-x)+\r\n                     (py-y)*(py-y)+\r\n                     (pz-z)*(pz-z));\r\n};\r\n\r\n/**\r\n * Get squared distance from this point to another point\r\n * @method distanceSquared\r\n * @param  {Vec3} p\r\n * @return {Number}\r\n */\r\nVec3.prototype.distanceSquared = function(p){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var px=p.x, py=p.y, pz=p.z;\r\n    return (px-x)*(px-x) + (py-y)*(py-y) + (pz-z)*(pz-z);\r\n};\r\n\r\n/**\r\n * Multiply all the components of the vector with a scalar.\r\n * @deprecated Use .scale instead\r\n * @method mult\r\n * @param {Number} scalar\r\n * @param {Vec3} target The vector to save the result in.\r\n * @return {Vec3}\r\n * @deprecated Use .scale() instead\r\n */\r\nVec3.prototype.mult = function(scalar,target){\r\n    target = target || new Vec3();\r\n    var x = this.x,\r\n        y = this.y,\r\n        z = this.z;\r\n    target.x = scalar * x;\r\n    target.y = scalar * y;\r\n    target.z = scalar * z;\r\n    return target;\r\n};\r\n\r\n/**\r\n * Multiply the vector with a scalar.\r\n * @method scale\r\n * @param {Number} scalar\r\n * @param {Vec3} target\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.scale = Vec3.prototype.mult;\r\n\r\n/**\r\n * Calculate dot product\r\n * @method dot\r\n * @param {Vec3} v\r\n * @return {Number}\r\n */\r\nVec3.prototype.dot = function(v){\r\n    return this.x * v.x + this.y * v.y + this.z * v.z;\r\n};\r\n\r\n/**\r\n * @method isZero\r\n * @return bool\r\n */\r\nVec3.prototype.isZero = function(){\r\n    return this.x===0 && this.y===0 && this.z===0;\r\n};\r\n\r\n/**\r\n * Make the vector point in the opposite direction.\r\n * @method negate\r\n * @param {Vec3} target Optional target to save in\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.negate = function(target){\r\n    target = target || new Vec3();\r\n    target.x = -this.x;\r\n    target.y = -this.y;\r\n    target.z = -this.z;\r\n    return target;\r\n};\r\n\r\n/**\r\n * Compute two artificial tangents to the vector\r\n * @method tangents\r\n * @param {Vec3} t1 Vector object to save the first tangent in\r\n * @param {Vec3} t2 Vector object to save the second tangent in\r\n */\r\nvar Vec3_tangents_n = new Vec3();\r\nvar Vec3_tangents_randVec = new Vec3();\r\nVec3.prototype.tangents = function(t1,t2){\r\n    var norm = this.norm();\r\n    if(norm>0.0){\r\n        var n = Vec3_tangents_n;\r\n        var inorm = 1/norm;\r\n        n.set(this.x*inorm,this.y*inorm,this.z*inorm);\r\n        var randVec = Vec3_tangents_randVec;\r\n        if(Math.abs(n.x) < 0.9){\r\n            randVec.set(1,0,0);\r\n            n.cross(randVec,t1);\r\n        } else {\r\n            randVec.set(0,1,0);\r\n            n.cross(randVec,t1);\r\n        }\r\n        n.cross(t1,t2);\r\n    } else {\r\n        // The normal length is zero, make something up\r\n        t1.set(1, 0, 0);\r\n        t2.set(0, 1, 0);\r\n    }\r\n};\r\n\r\n/**\r\n * Converts to a more readable format\r\n * @method toString\r\n * @return string\r\n */\r\nVec3.prototype.toString = function(){\r\n    return this.x+\",\"+this.y+\",\"+this.z;\r\n};\r\n\r\n/**\r\n * Converts to an array\r\n * @method toArray\r\n * @return Array\r\n */\r\nVec3.prototype.toArray = function(){\r\n    return [this.x, this.y, this.z];\r\n};\r\n\r\n/**\r\n * Copies value of source to this vector.\r\n * @method copy\r\n * @param {Vec3} source\r\n * @return {Vec3} this\r\n */\r\nVec3.prototype.copy = function(source){\r\n    this.x = source.x;\r\n    this.y = source.y;\r\n    this.z = source.z;\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Do a linear interpolation between two vectors\r\n * @method lerp\r\n * @param {Vec3} v\r\n * @param {Number} t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\r\n * @param {Vec3} target\r\n */\r\nVec3.prototype.lerp = function(v,t,target){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    target.x = x + (v.x-x)*t;\r\n    target.y = y + (v.y-y)*t;\r\n    target.z = z + (v.z-z)*t;\r\n};\r\n\r\n/**\r\n * Check if a vector equals is almost equal to another one.\r\n * @method almostEquals\r\n * @param {Vec3} v\r\n * @param {Number} precision\r\n * @return bool\r\n */\r\nVec3.prototype.almostEquals = function(v,precision){\r\n    if(precision===undefined){\r\n        precision = 1e-6;\r\n    }\r\n    if( Math.abs(this.x-v.x)>precision ||\r\n        Math.abs(this.y-v.y)>precision ||\r\n        Math.abs(this.z-v.z)>precision){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Check if a vector is almost zero\r\n * @method almostZero\r\n * @param {Number} precision\r\n */\r\nVec3.prototype.almostZero = function(precision){\r\n    if(precision===undefined){\r\n        precision = 1e-6;\r\n    }\r\n    if( Math.abs(this.x)>precision ||\r\n        Math.abs(this.y)>precision ||\r\n        Math.abs(this.z)>precision){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nvar antip_neg = new Vec3();\r\n\r\n/**\r\n * Check if the vector is anti-parallel to another vector.\r\n * @method isAntiparallelTo\r\n * @param  {Vec3}  v\r\n * @param  {Number}  precision Set to zero for exact comparisons\r\n * @return {Boolean}\r\n */\r\nVec3.prototype.isAntiparallelTo = function(v,precision){\r\n    this.negate(antip_neg);\r\n    return antip_neg.almostEquals(v,precision);\r\n};\r\n\r\n/**\r\n * Clone the vector\r\n * @method clone\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.clone = function(){\r\n    return new Vec3(this.x, this.y, this.z);\r\n};\r\n},{\"./Mat3\":27}],31:[function(_dereq_,module,exports){\r\nmodule.exports = Body;\r\n\r\nvar EventTarget = _dereq_('../utils/EventTarget');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Material = _dereq_('../material/Material');\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Box = _dereq_('../shapes/Box');\r\n\r\n/**\r\n * Base class for all body types.\r\n * @class Body\r\n * @constructor\r\n * @extends EventTarget\r\n * @param {object} [options]\r\n * @param {Vec3} [options.position]\r\n * @param {Vec3} [options.velocity]\r\n * @param {Vec3} [options.angularVelocity]\r\n * @param {Quaternion} [options.quaternion]\r\n * @param {number} [options.mass]\r\n * @param {Material} [options.material]\r\n * @param {number} [options.type]\r\n * @param {number} [options.linearDamping=0.01]\r\n * @param {number} [options.angularDamping=0.01]\r\n * @param {boolean} [options.allowSleep=true]\r\n * @param {number} [options.sleepSpeedLimit=0.1]\r\n * @param {number} [options.sleepTimeLimit=1]\r\n * @param {number} [options.collisionFilterGroup=1]\r\n * @param {number} [options.collisionFilterMask=1]\r\n * @param {boolean} [options.fixedRotation=false]\r\n * @param {Body} [options.shape]\r\n * @example\r\n *     var body = new Body({\r\n *         mass: 1\r\n *     });\r\n *     var shape = new Sphere(1);\r\n *     body.addShape(shape);\r\n *     world.add(body);\r\n */\r\nfunction Body(options){\r\n    options = options || {};\r\n\r\n    EventTarget.apply(this);\r\n\r\n    this.id = Body.idCounter++;\r\n\r\n    /**\r\n     * Reference to the world the body is living in\r\n     * @property world\r\n     * @type {World}\r\n     */\r\n    this.world = null;\r\n\r\n    /**\r\n     * Callback function that is used BEFORE stepping the system. Use it to apply forces, for example. Inside the function, \"this\" will refer to this Body object.\r\n     * @property preStep\r\n     * @type {Function}\r\n     * @deprecated Use World events instead\r\n     */\r\n    this.preStep = null;\r\n\r\n    /**\r\n     * Callback function that is used AFTER stepping the system. Inside the function, \"this\" will refer to this Body object.\r\n     * @property postStep\r\n     * @type {Function}\r\n     * @deprecated Use World events instead\r\n     */\r\n    this.postStep = null;\r\n\r\n    this.vlambda = new Vec3();\r\n\r\n    /**\r\n     * @property {Number} collisionFilterGroup\r\n     */\r\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) === 'number' ? options.collisionFilterGroup : 1;\r\n\r\n    /**\r\n     * @property {Number} collisionFilterMask\r\n     */\r\n    this.collisionFilterMask = typeof(options.collisionFilterMask) === 'number' ? options.collisionFilterMask : 1;\r\n\r\n    /**\r\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\r\n     * @property {Number} collisionResponse\r\n     */\r\n\tthis.collisionResponse = true;\r\n\r\n    /**\r\n     * @property position\r\n     * @type {Vec3}\r\n     */\r\n    this.position = new Vec3();\r\n\r\n    if(options.position){\r\n        this.position.copy(options.position);\r\n    }\r\n\r\n    /**\r\n     * @property {Vec3} previousPosition\r\n     */\r\n    this.previousPosition = new Vec3();\r\n\r\n    /**\r\n     * Initial position of the body\r\n     * @property initPosition\r\n     * @type {Vec3}\r\n     */\r\n    this.initPosition = new Vec3();\r\n\r\n    /**\r\n     * @property velocity\r\n     * @type {Vec3}\r\n     */\r\n    this.velocity = new Vec3();\r\n\r\n    if(options.velocity){\r\n        this.velocity.copy(options.velocity);\r\n    }\r\n\r\n    /**\r\n     * @property initVelocity\r\n     * @type {Vec3}\r\n     */\r\n    this.initVelocity = new Vec3();\r\n\r\n    /**\r\n     * Linear force on the body\r\n     * @property force\r\n     * @type {Vec3}\r\n     */\r\n    this.force = new Vec3();\r\n\r\n    var mass = typeof(options.mass) === 'number' ? options.mass : 0;\r\n\r\n    /**\r\n     * @property mass\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    this.mass = mass;\r\n\r\n    /**\r\n     * @property invMass\r\n     * @type {Number}\r\n     */\r\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\r\n\r\n    /**\r\n     * @property material\r\n     * @type {Material}\r\n     */\r\n    this.material = options.material || null;\r\n\r\n    /**\r\n     * @property linearDamping\r\n     * @type {Number}\r\n     */\r\n    this.linearDamping = typeof(options.linearDamping) === 'number' ? options.linearDamping : 0.01;\r\n\r\n    /**\r\n     * One of: Body.DYNAMIC, Body.STATIC and Body.KINEMATIC.\r\n     * @property type\r\n     * @type {Number}\r\n     */\r\n    this.type = (mass <= 0.0 ? Body.STATIC : Body.DYNAMIC);\r\n    if(typeof(options.type) === typeof(Body.STATIC)){\r\n        this.type = options.type;\r\n    }\r\n\r\n    /**\r\n     * If true, the body will automatically fall to sleep.\r\n     * @property allowSleep\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    this.allowSleep = typeof(options.allowSleep) !== 'undefined' ? options.allowSleep : true;\r\n\r\n    /**\r\n     * Current sleep state.\r\n     * @property sleepState\r\n     * @type {Number}\r\n     */\r\n    this.sleepState = 0;\r\n\r\n    /**\r\n     * If the speed (the norm of the velocity) is smaller than this value, the body is considered sleepy.\r\n     * @property sleepSpeedLimit\r\n     * @type {Number}\r\n     * @default 0.1\r\n     */\r\n    this.sleepSpeedLimit = typeof(options.sleepSpeedLimit) !== 'undefined' ? options.sleepSpeedLimit : 0.1;\r\n\r\n    /**\r\n     * If the body has been sleepy for this sleepTimeLimit seconds, it is considered sleeping.\r\n     * @property sleepTimeLimit\r\n     * @type {Number}\r\n     * @default 1\r\n     */\r\n    this.sleepTimeLimit = typeof(options.sleepTimeLimit) !== 'undefined' ? options.sleepTimeLimit : 1;\r\n\r\n    this.timeLastSleepy = 0;\r\n\r\n    this._wakeUpAfterNarrowphase = false;\r\n\r\n\r\n    /**\r\n     * Rotational force on the body, around center of mass\r\n     * @property {Vec3} torque\r\n     */\r\n    this.torque = new Vec3();\r\n\r\n    /**\r\n     * Orientation of the body\r\n     * @property quaternion\r\n     * @type {Quaternion}\r\n     */\r\n    this.quaternion = new Quaternion();\r\n\r\n    if(options.quaternion){\r\n        this.quaternion.copy(options.quaternion);\r\n    }\r\n\r\n    /**\r\n     * @property initQuaternion\r\n     * @type {Quaternion}\r\n     */\r\n    this.initQuaternion = new Quaternion();\r\n\r\n    /**\r\n     * @property angularVelocity\r\n     * @type {Vec3}\r\n     */\r\n    this.angularVelocity = new Vec3();\r\n\r\n    if(options.angularVelocity){\r\n        this.angularVelocity.copy(options.angularVelocity);\r\n    }\r\n\r\n    /**\r\n     * @property initAngularVelocity\r\n     * @type {Vec3}\r\n     */\r\n    this.initAngularVelocity = new Vec3();\r\n\r\n    this.interpolatedPosition = new Vec3();\r\n    this.interpolatedQuaternion = new Quaternion();\r\n\r\n    /**\r\n     * @property shapes\r\n     * @type {array}\r\n     */\r\n    this.shapes = [];\r\n\r\n    /**\r\n     * @property shapeOffsets\r\n     * @type {array}\r\n     */\r\n    this.shapeOffsets = [];\r\n\r\n    /**\r\n     * @property shapeOrientations\r\n     * @type {array}\r\n     */\r\n    this.shapeOrientations = [];\r\n\r\n    /**\r\n     * @property inertia\r\n     * @type {Vec3}\r\n     */\r\n    this.inertia = new Vec3();\r\n\r\n    /**\r\n     * @property {Vec3} invInertia\r\n     */\r\n    this.invInertia = new Vec3();\r\n\r\n    /**\r\n     * @property {Mat3} invInertiaWorld\r\n     */\r\n    this.invInertiaWorld = new Mat3();\r\n\r\n    this.invMassSolve = 0;\r\n\r\n    /**\r\n     * @property {Vec3} invInertiaSolve\r\n     */\r\n    this.invInertiaSolve = new Vec3();\r\n\r\n    /**\r\n     * @property {Mat3} invInertiaWorldSolve\r\n     */\r\n    this.invInertiaWorldSolve = new Mat3();\r\n\r\n    /**\r\n     * Set to true if you don't want the body to rotate. Make sure to run .updateMassProperties() after changing this.\r\n     * @property {Boolean} fixedRotation\r\n     * @default false\r\n     */\r\n    this.fixedRotation = typeof(options.fixedRotation) !== \"undefined\" ? options.fixedRotation : false;\r\n\r\n    /**\r\n     * @property {Number} angularDamping\r\n     */\r\n    this.angularDamping = typeof(options.angularDamping) !== 'undefined' ? options.angularDamping : 0.01;\r\n\r\n    /**\r\n     * @property aabb\r\n     * @type {AABB}\r\n     */\r\n    this.aabb = new AABB();\r\n\r\n    /**\r\n     * Indicates if the AABB needs to be updated before use.\r\n     * @property aabbNeedsUpdate\r\n     * @type {Boolean}\r\n     */\r\n    this.aabbNeedsUpdate = true;\r\n\r\n    this.wlambda = new Vec3();\r\n\r\n    if(options.shape){\r\n        this.addShape(options.shape);\r\n    }\r\n\r\n    this.updateMassProperties();\r\n}\r\nBody.prototype = new EventTarget();\r\nBody.prototype.constructor = Body;\r\n\r\n/**\r\n * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\r\n * @static\r\n * @property DYNAMIC\r\n * @type {Number}\r\n */\r\nBody.DYNAMIC = 1;\r\n\r\n/**\r\n * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\r\n * @static\r\n * @property STATIC\r\n * @type {Number}\r\n */\r\nBody.STATIC = 2;\r\n\r\n/**\r\n * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\r\n * @static\r\n * @property KINEMATIC\r\n * @type {Number}\r\n */\r\nBody.KINEMATIC = 4;\r\n\r\n\r\n\r\n/**\r\n * @static\r\n * @property AWAKE\r\n * @type {number}\r\n */\r\nBody.AWAKE = 0;\r\n\r\n/**\r\n * @static\r\n * @property SLEEPY\r\n * @type {number}\r\n */\r\nBody.SLEEPY = 1;\r\n\r\n/**\r\n * @static\r\n * @property SLEEPING\r\n * @type {number}\r\n */\r\nBody.SLEEPING = 2;\r\n\r\nBody.idCounter = 0;\r\n\r\n/**\r\n * Wake the body up.\r\n * @method wakeUp\r\n */\r\nBody.prototype.wakeUp = function(){\r\n    var s = this.sleepState;\r\n    this.sleepState = 0;\r\n    if(s === Body.SLEEPING){\r\n        this.dispatchEvent({type:\"wakeup\"});\r\n    }\r\n};\r\n\r\n/**\r\n * Force body sleep\r\n * @method sleep\r\n */\r\nBody.prototype.sleep = function(){\r\n    this.sleepState = Body.SLEEPING;\r\n    this.velocity.set(0,0,0);\r\n    this.angularVelocity.set(0,0,0);\r\n};\r\n\r\nBody.sleepyEvent = {\r\n    type: \"sleepy\"\r\n};\r\n\r\nBody.sleepEvent = {\r\n    type: \"sleep\"\r\n};\r\n\r\n/**\r\n * Called every timestep to update internal sleep timer and change sleep state if needed.\r\n * @method sleepTick\r\n * @param {Number} time The world time in seconds\r\n */\r\nBody.prototype.sleepTick = function(time){\r\n    if(this.allowSleep){\r\n        var sleepState = this.sleepState;\r\n        var speedSquared = this.velocity.norm2() + this.angularVelocity.norm2();\r\n        var speedLimitSquared = Math.pow(this.sleepSpeedLimit,2);\r\n        if(sleepState===Body.AWAKE && speedSquared < speedLimitSquared){\r\n            this.sleepState = Body.SLEEPY; // Sleepy\r\n            this.timeLastSleepy = time;\r\n            this.dispatchEvent(Body.sleepyEvent);\r\n        } else if(sleepState===Body.SLEEPY && speedSquared > speedLimitSquared){\r\n            this.wakeUp(); // Wake up\r\n        } else if(sleepState===Body.SLEEPY && (time - this.timeLastSleepy ) > this.sleepTimeLimit){\r\n            this.sleep(); // Sleeping\r\n            this.dispatchEvent(Body.sleepEvent);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\r\n * @method updateSolveMassProperties\r\n */\r\nBody.prototype.updateSolveMassProperties = function(){\r\n    if(this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC){\r\n        this.invMassSolve = 0;\r\n        this.invInertiaSolve.setZero();\r\n        this.invInertiaWorldSolve.setZero();\r\n    } else {\r\n        this.invMassSolve = this.invMass;\r\n        this.invInertiaSolve.copy(this.invInertia);\r\n        this.invInertiaWorldSolve.copy(this.invInertiaWorld);\r\n    }\r\n};\r\n\r\n/**\r\n * Convert a world point to local body frame.\r\n * @method pointToLocalFrame\r\n * @param  {Vec3} worldPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.pointToLocalFrame = function(worldPoint,result){\r\n    var result = result || new Vec3();\r\n    worldPoint.vsub(this.position,result);\r\n    this.quaternion.conjugate().vmult(result,result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Convert a world vector to local body frame.\r\n * @method vectorToLocalFrame\r\n * @param  {Vec3} worldPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.vectorToLocalFrame = function(worldVector, result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.conjugate().vmult(worldVector,result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Convert a local body point to world frame.\r\n * @method pointToWorldFrame\r\n * @param  {Vec3} localPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.pointToWorldFrame = function(localPoint,result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.vmult(localPoint,result);\r\n    result.vadd(this.position,result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Convert a local body point to world frame.\r\n * @method vectorToWorldFrame\r\n * @param  {Vec3} localVector\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.vectorToWorldFrame = function(localVector, result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.vmult(localVector, result);\r\n    return result;\r\n};\r\n\r\nvar tmpVec = new Vec3();\r\nvar tmpQuat = new Quaternion();\r\n\r\n/**\r\n * Add a shape to the body with a local offset and orientation.\r\n * @method addShape\r\n * @param {Shape} shape\r\n * @param {Vec3} offset\r\n * @param {Quaternion} quaternion\r\n * @return {Body} The body object, for chainability.\r\n */\r\nBody.prototype.addShape = function(shape, _offset, _orientation){\r\n    var offset = new Vec3();\r\n    var orientation = new Quaternion();\r\n\r\n    if(_offset){\r\n        offset.copy(_offset);\r\n    }\r\n    if(_orientation){\r\n        orientation.copy(_orientation);\r\n    }\r\n\r\n    this.shapes.push(shape);\r\n    this.shapeOffsets.push(offset);\r\n    this.shapeOrientations.push(orientation);\r\n    this.updateMassProperties();\r\n    this.updateBoundingRadius();\r\n\r\n    this.aabbNeedsUpdate = true;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Update the bounding radius of the body. Should be done if any of the shapes are changed.\r\n * @method updateBoundingRadius\r\n */\r\nBody.prototype.updateBoundingRadius = function(){\r\n    var shapes = this.shapes,\r\n        shapeOffsets = this.shapeOffsets,\r\n        N = shapes.length,\r\n        radius = 0;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var shape = shapes[i];\r\n        shape.updateBoundingSphereRadius();\r\n        var offset = shapeOffsets[i].norm(),\r\n            r = shape.boundingSphereRadius;\r\n        if(offset + r > radius){\r\n            radius = offset + r;\r\n        }\r\n    }\r\n\r\n    this.boundingRadius = radius;\r\n};\r\n\r\nvar computeAABB_shapeAABB = new AABB();\r\n\r\n/**\r\n * Updates the .aabb\r\n * @method computeAABB\r\n * @todo rename to updateAABB()\r\n */\r\nBody.prototype.computeAABB = function(){\r\n    var shapes = this.shapes,\r\n        shapeOffsets = this.shapeOffsets,\r\n        shapeOrientations = this.shapeOrientations,\r\n        N = shapes.length,\r\n        offset = tmpVec,\r\n        orientation = tmpQuat,\r\n        bodyQuat = this.quaternion,\r\n        aabb = this.aabb,\r\n        shapeAABB = computeAABB_shapeAABB;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var shape = shapes[i];\r\n\r\n        // Get shape world quaternion\r\n        shapeOrientations[i].mult(bodyQuat, orientation);\r\n\r\n        // Get shape world position\r\n        orientation.vmult(shapeOffsets[i], offset);\r\n        offset.vadd(this.position, offset);\r\n\r\n        // vec2.rotate(offset, shapeOffsets[i], bodyAngle);\r\n        // vec2.add(offset, offset, this.position);\r\n\r\n        // Get shape AABB\r\n        shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\r\n\r\n        if(i === 0){\r\n            aabb.copy(shapeAABB);\r\n        } else {\r\n            aabb.extend(shapeAABB);\r\n        }\r\n    }\r\n\r\n    this.aabbNeedsUpdate = false;\r\n};\r\n\r\nvar uiw_m1 = new Mat3(),\r\n    uiw_m2 = new Mat3(),\r\n    uiw_m3 = new Mat3();\r\n\r\n/**\r\n * Update .inertiaWorld and .invInertiaWorld\r\n * @method updateInertiaWorld\r\n */\r\nBody.prototype.updateInertiaWorld = function(force){\r\n    var I = this.invInertia;\r\n    if (I.x === I.y && I.y === I.z && !force) {\r\n        // If inertia M = s*I, where I is identity and s a scalar, then\r\n        //    R*M*R' = R*(s*I)*R' = s*R*I*R' = s*R*R' = s*I = M\r\n        // where R is the rotation matrix.\r\n        // In other words, we don't have to transform the inertia if all\r\n        // inertia diagonal entries are equal.\r\n    } else {\r\n        var m1 = uiw_m1,\r\n            m2 = uiw_m2,\r\n            m3 = uiw_m3;\r\n        m1.setRotationFromQuaternion(this.quaternion);\r\n        m1.transpose(m2);\r\n        m1.scale(I,m1);\r\n        m1.mmult(m2,this.invInertiaWorld);\r\n        //m3.getTrace(this.invInertiaWorld);\r\n    }\r\n\r\n    /*\r\n    this.quaternion.vmult(this.inertia,this.inertiaWorld);\r\n    this.quaternion.vmult(this.invInertia,this.invInertiaWorld);\r\n    */\r\n};\r\n\r\n/**\r\n * Apply force to a world point. This could for example be a point on the Body surface. Applying force this way will add to Body.force and Body.torque.\r\n * @method applyForce\r\n * @param  {Vec3} force The amount of force to add.\r\n * @param  {Vec3} worldPoint A world point to apply the force on.\r\n */\r\nvar Body_applyForce_r = new Vec3();\r\nvar Body_applyForce_rotForce = new Vec3();\r\nBody.prototype.applyForce = function(force,worldPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    // Compute point position relative to the body center\r\n    var r = Body_applyForce_r;\r\n    worldPoint.vsub(this.position,r);\r\n\r\n    // Compute produced rotational force\r\n    var rotForce = Body_applyForce_rotForce;\r\n    r.cross(force,rotForce);\r\n\r\n    // Add linear force\r\n    this.force.vadd(force,this.force);\r\n\r\n    // Add rotational force\r\n    this.torque.vadd(rotForce,this.torque);\r\n};\r\n\r\n/**\r\n * Apply force to a local point in the body.\r\n * @method applyLocalForce\r\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\r\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\r\n */\r\nvar Body_applyLocalForce_worldForce = new Vec3();\r\nvar Body_applyLocalForce_worldPoint = new Vec3();\r\nBody.prototype.applyLocalForce = function(localForce, localPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    var worldForce = Body_applyLocalForce_worldForce;\r\n    var worldPoint = Body_applyLocalForce_worldPoint;\r\n\r\n    // Transform the force vector to world space\r\n    this.vectorToWorldFrame(localForce, worldForce);\r\n    this.pointToWorldFrame(localPoint, worldPoint);\r\n\r\n    this.applyForce(worldForce, worldPoint);\r\n};\r\n\r\n/**\r\n * Apply impulse to a world point. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.\r\n * @method applyImpulse\r\n * @param  {Vec3} impulse The amount of impulse to add.\r\n * @param  {Vec3} worldPoint A world point to apply the force on.\r\n */\r\nvar Body_applyImpulse_r = new Vec3();\r\nvar Body_applyImpulse_velo = new Vec3();\r\nvar Body_applyImpulse_rotVelo = new Vec3();\r\nBody.prototype.applyImpulse = function(impulse, worldPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    // Compute point position relative to the body center\r\n    var r = Body_applyImpulse_r;\r\n    worldPoint.vsub(this.position,r);\r\n\r\n    // Compute produced central impulse velocity\r\n    var velo = Body_applyImpulse_velo;\r\n    velo.copy(impulse);\r\n    velo.mult(this.invMass,velo);\r\n\r\n    // Add linear impulse\r\n    this.velocity.vadd(velo, this.velocity);\r\n\r\n    // Compute produced rotational impulse velocity\r\n    var rotVelo = Body_applyImpulse_rotVelo;\r\n    r.cross(impulse,rotVelo);\r\n\r\n    /*\r\n    rotVelo.x *= this.invInertia.x;\r\n    rotVelo.y *= this.invInertia.y;\r\n    rotVelo.z *= this.invInertia.z;\r\n    */\r\n    this.invInertiaWorld.vmult(rotVelo,rotVelo);\r\n\r\n    // Add rotational Impulse\r\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\r\n};\r\n\r\n/**\r\n * Apply locally-defined impulse to a local point in the body.\r\n * @method applyLocalImpulse\r\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\r\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\r\n */\r\nvar Body_applyLocalImpulse_worldImpulse = new Vec3();\r\nvar Body_applyLocalImpulse_worldPoint = new Vec3();\r\nBody.prototype.applyLocalImpulse = function(localImpulse, localPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    var worldImpulse = Body_applyLocalImpulse_worldImpulse;\r\n    var worldPoint = Body_applyLocalImpulse_worldPoint;\r\n\r\n    // Transform the force vector to world space\r\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\r\n    this.pointToWorldFrame(localPoint, worldPoint);\r\n\r\n    this.applyImpulse(worldImpulse, worldPoint);\r\n};\r\n\r\nvar Body_updateMassProperties_halfExtents = new Vec3();\r\n\r\n/**\r\n * Should be called whenever you change the body shape or mass.\r\n * @method updateMassProperties\r\n */\r\nBody.prototype.updateMassProperties = function(){\r\n    var halfExtents = Body_updateMassProperties_halfExtents;\r\n\r\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\r\n    var I = this.inertia;\r\n    var fixed = this.fixedRotation;\r\n\r\n    // Approximate with AABB box\r\n    this.computeAABB();\r\n    halfExtents.set(\r\n        (this.aabb.upperBound.x-this.aabb.lowerBound.x) / 2,\r\n        (this.aabb.upperBound.y-this.aabb.lowerBound.y) / 2,\r\n        (this.aabb.upperBound.z-this.aabb.lowerBound.z) / 2\r\n    );\r\n    Box.calculateInertia(halfExtents, this.mass, I);\r\n\r\n    this.invInertia.set(\r\n        I.x > 0 && !fixed ? 1.0 / I.x : 0,\r\n        I.y > 0 && !fixed ? 1.0 / I.y : 0,\r\n        I.z > 0 && !fixed ? 1.0 / I.z : 0\r\n    );\r\n    this.updateInertiaWorld(true);\r\n};\r\n\r\n/**\r\n * Get world velocity of a point in the body.\r\n * @method getVelocityAtWorldPoint\r\n * @param  {Vec3} worldPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3} The result vector.\r\n */\r\nBody.prototype.getVelocityAtWorldPoint = function(worldPoint, result){\r\n    var r = new Vec3();\r\n    worldPoint.vsub(this.position, r);\r\n    this.angularVelocity.cross(r, result);\r\n    this.velocity.vadd(result, result);\r\n    return result;\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../material/Material\":25,\"../math/Mat3\":27,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Shape\":43,\"../utils/EventTarget\":49}],32:[function(_dereq_,module,exports){\r\nvar Body = _dereq_('./Body');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar Ray = _dereq_('../collision/Ray');\r\nvar WheelInfo = _dereq_('../objects/WheelInfo');\r\n\r\nmodule.exports = RaycastVehicle;\r\n\r\n/**\r\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\r\n * @class RaycastVehicle\r\n * @constructor\r\n * @param {object} [options]\r\n * @param {Body} [options.chassisBody] The car chassis body.\r\n * @param {integer} [options.indexRightAxis] Axis to use for right. x=0, y=1, z=2\r\n * @param {integer} [options.indexLeftAxis]\r\n * @param {integer} [options.indexUpAxis]\r\n */\r\nfunction RaycastVehicle(options){\r\n\r\n    /**\r\n     * @property {Body} chassisBody\r\n     */\r\n    this.chassisBody = options.chassisBody;\r\n\r\n    /**\r\n     * An array of WheelInfo objects.\r\n     * @property {array} wheelInfos\r\n     */\r\n    this.wheelInfos = [];\r\n\r\n    /**\r\n     * Will be set to true if the car is sliding.\r\n     * @property {boolean} sliding\r\n     */\r\n    this.sliding = false;\r\n\r\n    /**\r\n     * @property {World} world\r\n     */\r\n    this.world = null;\r\n\r\n    /**\r\n     * Index of the right axis, 0=x, 1=y, 2=z\r\n     * @property {integer} indexRightAxis\r\n     * @default 1\r\n     */\r\n    this.indexRightAxis = typeof(options.indexRightAxis) !== 'undefined' ? options.indexRightAxis : 1;\r\n\r\n    /**\r\n     * Index of the forward axis, 0=x, 1=y, 2=z\r\n     * @property {integer} indexForwardAxis\r\n     * @default 0\r\n     */\r\n    this.indexForwardAxis = typeof(options.indexForwardAxis) !== 'undefined' ? options.indexForwardAxis : 0;\r\n\r\n    /**\r\n     * Index of the up axis, 0=x, 1=y, 2=z\r\n     * @property {integer} indexUpAxis\r\n     * @default 2\r\n     */\r\n    this.indexUpAxis = typeof(options.indexUpAxis) !== 'undefined' ? options.indexUpAxis : 2;\r\n}\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\nvar tmpVec3 = new Vec3();\r\nvar tmpVec4 = new Vec3();\r\nvar tmpVec5 = new Vec3();\r\nvar tmpVec6 = new Vec3();\r\nvar tmpRay = new Ray();\r\n\r\n/**\r\n * Add a wheel. For information about the options, see WheelInfo.\r\n * @method addWheel\r\n * @param {object} [options]\r\n */\r\nRaycastVehicle.prototype.addWheel = function(options){\r\n    options = options || {};\r\n\r\n    var info = new WheelInfo(options);\r\n    var index = this.wheelInfos.length;\r\n    this.wheelInfos.push(info);\r\n\r\n    return index;\r\n};\r\n\r\n/**\r\n * Set the steering value of a wheel.\r\n * @method setSteeringValue\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n */\r\nRaycastVehicle.prototype.setSteeringValue = function(value, wheelIndex){\r\n    var wheel = this.wheelInfos[wheelIndex];\r\n    wheel.steering = value;\r\n};\r\n\r\nvar torque = new Vec3();\r\n\r\n/**\r\n * Set the wheel force to apply on one of the wheels each time step\r\n * @method applyEngineForce\r\n * @param  {number} value\r\n * @param  {integer} wheelIndex\r\n */\r\nRaycastVehicle.prototype.applyEngineForce = function(value, wheelIndex){\r\n    this.wheelInfos[wheelIndex].engineForce = value;\r\n};\r\n\r\n/**\r\n * Set the braking force of a wheel\r\n * @method setBrake\r\n * @param {number} brake\r\n * @param {integer} wheelIndex\r\n */\r\nRaycastVehicle.prototype.setBrake = function(brake, wheelIndex){\r\n    this.wheelInfos[wheelIndex].brake = brake;\r\n};\r\n\r\n/**\r\n * Add the vehicle including its constraints to the world.\r\n * @method addToWorld\r\n * @param {World} world\r\n */\r\nRaycastVehicle.prototype.addToWorld = function(world){\r\n    var constraints = this.constraints;\r\n    world.add(this.chassisBody);\r\n    var that = this;\r\n    this.preStepCallback = function(){\r\n        that.updateVehicle(world.dt);\r\n    };\r\n    world.addEventListener('preStep', this.preStepCallback);\r\n    this.world = world;\r\n};\r\n\r\n/**\r\n * Get one of the wheel axles, world-oriented.\r\n * @private\r\n * @method getVehicleAxisWorld\r\n * @param  {integer} axisIndex\r\n * @param  {Vec3} result\r\n */\r\nRaycastVehicle.prototype.getVehicleAxisWorld = function(axisIndex, result){\r\n    result.set(\r\n        axisIndex === 0 ? 1 : 0,\r\n        axisIndex === 1 ? 1 : 0,\r\n        axisIndex === 2 ? 1 : 0\r\n    );\r\n    this.chassisBody.vectorToWorldFrame(result, result);\r\n};\r\n\r\nRaycastVehicle.prototype.updateVehicle = function(timeStep){\r\n    var wheelInfos = this.wheelInfos;\r\n    var numWheels = wheelInfos.length;\r\n    var chassisBody = this.chassisBody;\r\n\r\n    for (var i = 0; i < numWheels; i++) {\r\n        this.updateWheelTransform(i);\r\n    }\r\n\r\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.norm();\r\n\r\n    var forwardWorld = new Vec3();\r\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\r\n\r\n    if (forwardWorld.dot(chassisBody.velocity) < 0){\r\n        this.currentVehicleSpeedKmHour *= -1;\r\n    }\r\n\r\n    // simulate suspension\r\n    for (var i = 0; i < numWheels; i++) {\r\n        this.castRay(wheelInfos[i]);\r\n    }\r\n\r\n    this.updateSuspension(timeStep);\r\n\r\n    var impulse = new Vec3();\r\n    var relpos = new Vec3();\r\n    for (var i = 0; i < numWheels; i++) {\r\n        //apply suspension force\r\n        var wheel = wheelInfos[i];\r\n        var suspensionForce = wheel.suspensionForce;\r\n        if (suspensionForce > wheel.maxSuspensionForce) {\r\n            suspensionForce = wheel.maxSuspensionForce;\r\n        }\r\n        wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\r\n\r\n        wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\r\n        chassisBody.applyImpulse(impulse, wheel.raycastResult.hitPointWorld/*relpos*/);\r\n    }\r\n\r\n    this.updateFriction(timeStep);\r\n\r\n    var hitNormalWorldScaledWithProj = new Vec3();\r\n    var fwd  = new Vec3();\r\n    var vel = new Vec3();\r\n    for (i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n        //var relpos = new Vec3();\r\n        //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\r\n        chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel);\r\n\r\n        // Hack to get the rotation in the correct direction\r\n        var m = 1;\r\n        switch(this.indexUpAxis){\r\n        case 1:\r\n            m = -1;\r\n            break;\r\n        }\r\n\r\n        if (wheel.isInContact) {\r\n\r\n            this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\r\n            var proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\r\n            wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\r\n\r\n            fwd.vsub(hitNormalWorldScaledWithProj, fwd);\r\n\r\n            var proj2 = fwd.dot(vel);\r\n            wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\r\n        }\r\n\r\n        if((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed){\r\n            // Apply custom rotation when accelerating and sliding\r\n            wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\r\n        }\r\n\r\n        // Lock wheels\r\n        if(Math.abs(wheel.brake) > Math.abs(wheel.engineForce)){\r\n            wheel.deltaRotation = 0;\r\n        }\r\n\r\n        wheel.rotation += wheel.deltaRotation; // Use the old value\r\n        wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\r\n    }\r\n};\r\n\r\nRaycastVehicle.prototype.updateSuspension = function(deltaTime) {\r\n    var chassisBody = this.chassisBody;\r\n    var chassisMass = chassisBody.mass;\r\n    var wheelInfos = this.wheelInfos;\r\n    var numWheels = wheelInfos.length;\r\n\r\n    for (var w_it = 0; w_it < numWheels; w_it++){\r\n        var wheel = wheelInfos[w_it];\r\n\r\n        if (wheel.isInContact){\r\n            var force;\r\n\r\n            // Spring\r\n            var susp_length = wheel.suspensionRestLength;\r\n            var current_length = wheel.suspensionLength;\r\n            var length_diff = (susp_length - current_length);\r\n\r\n            force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension;\r\n\r\n            // Damper\r\n            var projected_rel_vel = wheel.suspensionRelativeVelocity;\r\n            var susp_damping;\r\n            if (projected_rel_vel < 0) {\r\n                susp_damping = wheel.dampingCompression;\r\n            } else {\r\n                susp_damping = wheel.dampingRelaxation;\r\n            }\r\n            force -= susp_damping * projected_rel_vel;\r\n\r\n            wheel.suspensionForce = force * chassisMass;\r\n            if (wheel.suspensionForce < 0) {\r\n                wheel.suspensionForce = 0;\r\n            }\r\n        } else {\r\n            wheel.suspensionForce = 0;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Remove the vehicle including its constraints from the world.\r\n * @method removeFromWorld\r\n * @param {World} world\r\n */\r\nRaycastVehicle.prototype.removeFromWorld = function(world){\r\n    var constraints = this.constraints;\r\n    world.remove(this.chassisBody);\r\n    world.removeEventListener('preStep', this.preStepCallback);\r\n    this.world = null;\r\n};\r\n\r\nvar castRay_rayvector = new Vec3();\r\nvar castRay_target = new Vec3();\r\nRaycastVehicle.prototype.castRay = function(wheel) {\r\n    var rayvector = castRay_rayvector;\r\n    var target = castRay_target;\r\n\r\n    this.updateWheelTransformWorld(wheel);\r\n    var chassisBody = this.chassisBody;\r\n\r\n    var depth = -1;\r\n\r\n    var raylen = wheel.suspensionRestLength + wheel.radius;\r\n\r\n    wheel.directionWorld.scale(raylen, rayvector);\r\n    var source = wheel.chassisConnectionPointWorld;\r\n    source.vadd(rayvector, target);\r\n    var raycastResult = wheel.raycastResult;\r\n\r\n    var param = 0;\r\n\r\n    raycastResult.reset();\r\n    // Turn off ray collision with the chassis temporarily\r\n    var oldState = chassisBody.collisionResponse;\r\n    chassisBody.collisionResponse = false;\r\n\r\n    // Cast ray against world\r\n    this.world.rayTest(source, target, raycastResult);\r\n    chassisBody.collisionResponse = oldState;\r\n\r\n    var object = raycastResult.body;\r\n\r\n    wheel.raycastResult.groundObject = 0;\r\n\r\n    if (object) {\r\n        depth = raycastResult.distance;\r\n        wheel.raycastResult.hitNormalWorld  = raycastResult.hitNormalWorld;\r\n        wheel.isInContact = true;\r\n\r\n        var hitDistance = raycastResult.distance;\r\n        wheel.suspensionLength = hitDistance - wheel.radius;\r\n\r\n        // clamp on max suspension travel\r\n        var minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\r\n        var maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\r\n        if (wheel.suspensionLength < minSuspensionLength) {\r\n            wheel.suspensionLength = minSuspensionLength;\r\n        }\r\n        if (wheel.suspensionLength > maxSuspensionLength) {\r\n            wheel.suspensionLength = maxSuspensionLength;\r\n            wheel.raycastResult.reset();\r\n        }\r\n\r\n        var denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\r\n\r\n        var chassis_velocity_at_contactPoint = new Vec3();\r\n        chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\r\n\r\n        var projVel = wheel.raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\r\n\r\n        if (denominator >= -0.1) {\r\n            wheel.suspensionRelativeVelocity = 0;\r\n            wheel.clippedInvContactDotSuspension = 1 / 0.1;\r\n        } else {\r\n            var inv = -1 / denominator;\r\n            wheel.suspensionRelativeVelocity = projVel * inv;\r\n            wheel.clippedInvContactDotSuspension = inv;\r\n        }\r\n\r\n    } else {\r\n\r\n        //put wheel info as in rest position\r\n        wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\r\n        wheel.suspensionRelativeVelocity = 0.0;\r\n        wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\r\n        wheel.clippedInvContactDotSuspension = 1.0;\r\n    }\r\n\r\n    return depth;\r\n};\r\n\r\nRaycastVehicle.prototype.updateWheelTransformWorld = function(wheel){\r\n    wheel.isInContact = false;\r\n    var chassisBody = this.chassisBody;\r\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\r\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\r\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\r\n};\r\n\r\n\r\n/**\r\n * Update one of the wheel transform.\r\n * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\r\n * @method updateWheelTransform\r\n * @param {integer} wheelIndex The wheel index to update.\r\n */\r\nRaycastVehicle.prototype.updateWheelTransform = function(wheelIndex){\r\n    var up = tmpVec4;\r\n    var right = tmpVec5;\r\n    var fwd = tmpVec6;\r\n\r\n    var wheel = this.wheelInfos[wheelIndex];\r\n    this.updateWheelTransformWorld(wheel);\r\n\r\n    wheel.directionLocal.scale(-1, up);\r\n    right.copy(wheel.axleLocal);\r\n    up.cross(right, fwd);\r\n    fwd.normalize();\r\n    right.normalize();\r\n\r\n    // Rotate around steering over the wheelAxle\r\n    var steering = wheel.steering;\r\n    var steeringOrn = new Quaternion();\r\n    steeringOrn.setFromAxisAngle(up, steering);\r\n\r\n    var rotatingOrn = new Quaternion();\r\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation);\r\n\r\n    // World rotation of the wheel\r\n    var q = wheel.worldTransform.quaternion;\r\n    this.chassisBody.quaternion.mult(steeringOrn, q);\r\n    q.mult(rotatingOrn, q);\r\n\r\n    q.normalize();\r\n\r\n    // world position of the wheel\r\n    var p = wheel.worldTransform.position;\r\n    p.copy(wheel.directionWorld);\r\n    p.scale(wheel.suspensionLength, p);\r\n    p.vadd(wheel.chassisConnectionPointWorld, p);\r\n};\r\n\r\nvar directions = [\r\n    new Vec3(1, 0, 0),\r\n    new Vec3(0, 1, 0),\r\n    new Vec3(0, 0, 1)\r\n];\r\n\r\n/**\r\n * Get the world transform of one of the wheels\r\n * @method getWheelTransformWorld\r\n * @param  {integer} wheelIndex\r\n * @return {Transform}\r\n */\r\nRaycastVehicle.prototype.getWheelTransformWorld = function(wheelIndex) {\r\n    return this.wheelInfos[wheelIndex].worldTransform;\r\n};\r\n\r\n\r\nvar updateFriction_surfNormalWS_scaled_proj = new Vec3();\r\nvar updateFriction_axle = [];\r\nvar updateFriction_forwardWS = [];\r\nvar sideFrictionStiffness2 = 1;\r\nRaycastVehicle.prototype.updateFriction = function(timeStep) {\r\n    var surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj;\r\n\r\n    //calculate the impulse, so that the wheels don't move sidewards\r\n    var wheelInfos = this.wheelInfos;\r\n    var numWheels = wheelInfos.length;\r\n    var chassisBody = this.chassisBody;\r\n    var forwardWS = updateFriction_forwardWS;\r\n    var axle = updateFriction_axle;\r\n\r\n    var numWheelsOnGround = 0;\r\n\r\n    for (var i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n\r\n        var groundObject = wheel.raycastResult.body;\r\n        if (groundObject){\r\n            numWheelsOnGround++;\r\n        }\r\n\r\n        wheel.sideImpulse = 0;\r\n        wheel.forwardImpulse = 0;\r\n        if(!forwardWS[i]){\r\n            forwardWS[i] = new Vec3();\r\n        }\r\n        if(!axle[i]){\r\n            axle[i] = new Vec3();\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < numWheels; i++){\r\n        var wheel = wheelInfos[i];\r\n\r\n        var groundObject = wheel.raycastResult.body;\r\n\r\n        if (groundObject) {\r\n            var axlei = axle[i];\r\n            var wheelTrans = this.getWheelTransformWorld(i);\r\n\r\n            // Get world axle\r\n            wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\r\n\r\n            var surfNormalWS = wheel.raycastResult.hitNormalWorld;\r\n            var proj = axlei.dot(surfNormalWS);\r\n            surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\r\n            axlei.vsub(surfNormalWS_scaled_proj, axlei);\r\n            axlei.normalize();\r\n\r\n            surfNormalWS.cross(axlei, forwardWS[i]);\r\n            forwardWS[i].normalize();\r\n\r\n            wheel.sideImpulse = resolveSingleBilateral(\r\n                chassisBody,\r\n                wheel.raycastResult.hitPointWorld,\r\n                groundObject,\r\n                wheel.raycastResult.hitPointWorld,\r\n                axlei\r\n            );\r\n\r\n            wheel.sideImpulse *= sideFrictionStiffness2;\r\n        }\r\n    }\r\n\r\n    var sideFactor = 1;\r\n    var fwdFactor = 0.5;\r\n\r\n    this.sliding = false;\r\n    for (var i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n        var groundObject = wheel.raycastResult.body;\r\n\r\n        var rollingFriction = 0;\r\n\r\n        wheel.slipInfo = 1;\r\n        if (groundObject) {\r\n            var defaultRollingFrictionImpulse = 0;\r\n            var maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse;\r\n\r\n            // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\r\n            // rollingFriction = calcRollingFriction(contactPt);\r\n            rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\r\n\r\n            rollingFriction += wheel.engineForce * timeStep;\r\n\r\n            // rollingFriction = 0;\r\n            var factor = maxImpulse / rollingFriction;\r\n            wheel.slipInfo *= factor;\r\n        }\r\n\r\n        //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\r\n\r\n        wheel.forwardImpulse = 0;\r\n        wheel.skidInfo = 1;\r\n\r\n        if (groundObject) {\r\n            wheel.skidInfo = 1;\r\n\r\n            var maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\r\n            var maximpSide = maximp;\r\n\r\n            var maximpSquared = maximp * maximpSide;\r\n\r\n            wheel.forwardImpulse = rollingFriction;//wheelInfo.engineForce* timeStep;\r\n\r\n            var x = wheel.forwardImpulse * fwdFactor;\r\n            var y = wheel.sideImpulse * sideFactor;\r\n\r\n            var impulseSquared = x * x + y * y;\r\n\r\n            wheel.sliding = false;\r\n            if (impulseSquared > maximpSquared) {\r\n                this.sliding = true;\r\n                wheel.sliding = true;\r\n\r\n                var factor = maximp / Math.sqrt(impulseSquared);\r\n\r\n                wheel.skidInfo *= factor;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (this.sliding) {\r\n        for (var i = 0; i < numWheels; i++) {\r\n            var wheel = wheelInfos[i];\r\n            if (wheel.sideImpulse !== 0) {\r\n                if (wheel.skidInfo < 1){\r\n                    wheel.forwardImpulse *= wheel.skidInfo;\r\n                    wheel.sideImpulse *= wheel.skidInfo;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // apply the impulses\r\n    for (var i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n\r\n        var rel_pos = new Vec3();\r\n        //wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos);\r\n        // cannons applyimpulse is using world coord for the position\r\n        rel_pos.copy(wheel.raycastResult.hitPointWorld);\r\n\r\n        if (wheel.forwardImpulse !== 0) {\r\n            var impulse = new Vec3();\r\n            forwardWS[i].scale(wheel.forwardImpulse, impulse);\r\n            chassisBody.applyImpulse(impulse, rel_pos);\r\n        }\r\n\r\n        if (wheel.sideImpulse !== 0){\r\n            var groundObject = wheel.raycastResult.body;\r\n\r\n            var rel_pos2 = new Vec3();\r\n            //wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2);\r\n            rel_pos2.copy(wheel.raycastResult.hitPointWorld);\r\n            var sideImp = new Vec3();\r\n            axle[i].scale(wheel.sideImpulse, sideImp);\r\n\r\n            // Scale the relative position in the up direction with rollInfluence.\r\n            // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\r\n            chassisBody.pointToLocalFrame(rel_pos, rel_pos);\r\n            rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\r\n            chassisBody.pointToWorldFrame(rel_pos, rel_pos);\r\n            chassisBody.applyImpulse(sideImp, rel_pos);\r\n\r\n            //apply friction impulse on the ground\r\n            sideImp.scale(-1, sideImp);\r\n            groundObject.applyImpulse(sideImp, rel_pos2);\r\n        }\r\n    }\r\n};\r\n\r\nvar calcRollingFriction_vel1 = new Vec3();\r\nvar calcRollingFriction_vel2 = new Vec3();\r\nvar calcRollingFriction_vel = new Vec3();\r\n\r\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\r\n    var j1 = 0;\r\n    var contactPosWorld = frictionPosWorld;\r\n\r\n    // var rel_pos1 = new Vec3();\r\n    // var rel_pos2 = new Vec3();\r\n    var vel1 = calcRollingFriction_vel1;\r\n    var vel2 = calcRollingFriction_vel2;\r\n    var vel = calcRollingFriction_vel;\r\n    // contactPosWorld.vsub(body0.position, rel_pos1);\r\n    // contactPosWorld.vsub(body1.position, rel_pos2);\r\n\r\n    body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\r\n    body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\r\n    vel1.vsub(vel2, vel);\r\n\r\n    var vrel = frictionDirectionWorld.dot(vel);\r\n\r\n    var denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\r\n    var denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\r\n    var relaxation = 1;\r\n    var jacDiagABInv = relaxation / (denom0 + denom1);\r\n\r\n    // calculate j that moves us to zero relative velocity\r\n    j1 = -vrel * jacDiagABInv;\r\n\r\n    if (maxImpulse < j1) {\r\n        j1 = maxImpulse;\r\n    }\r\n    if (j1 < -maxImpulse) {\r\n        j1 = -maxImpulse;\r\n    }\r\n\r\n    return j1;\r\n}\r\n\r\nvar computeImpulseDenominator_r0 = new Vec3();\r\nvar computeImpulseDenominator_c0 = new Vec3();\r\nvar computeImpulseDenominator_vec = new Vec3();\r\nvar computeImpulseDenominator_m = new Vec3();\r\nfunction computeImpulseDenominator(body, pos, normal) {\r\n    var r0 = computeImpulseDenominator_r0;\r\n    var c0 = computeImpulseDenominator_c0;\r\n    var vec = computeImpulseDenominator_vec;\r\n    var m = computeImpulseDenominator_m;\r\n\r\n    pos.vsub(body.position, r0);\r\n    r0.cross(normal, c0);\r\n    body.invInertiaWorld.vmult(c0, m);\r\n    m.cross(r0, vec);\r\n\r\n    return body.invMass + normal.dot(vec);\r\n}\r\n\r\n\r\nvar resolveSingleBilateral_vel1 = new Vec3();\r\nvar resolveSingleBilateral_vel2 = new Vec3();\r\nvar resolveSingleBilateral_vel = new Vec3();\r\n\r\n//bilateral constraint between two dynamic objects\r\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal, impulse){\r\n    var normalLenSqr = normal.norm2();\r\n    if (normalLenSqr > 1.1){\r\n        return 0; // no impulse\r\n    }\r\n    // var rel_pos1 = new Vec3();\r\n    // var rel_pos2 = new Vec3();\r\n    // pos1.vsub(body1.position, rel_pos1);\r\n    // pos2.vsub(body2.position, rel_pos2);\r\n\r\n    var vel1 = resolveSingleBilateral_vel1;\r\n    var vel2 = resolveSingleBilateral_vel2;\r\n    var vel = resolveSingleBilateral_vel;\r\n    body1.getVelocityAtWorldPoint(pos1, vel1);\r\n    body2.getVelocityAtWorldPoint(pos2, vel2);\r\n\r\n    vel1.vsub(vel2, vel);\r\n\r\n    var rel_vel = normal.dot(vel);\r\n\r\n    var contactDamping = 0.2;\r\n    var massTerm = 1 / (body1.invMass + body2.invMass);\r\n    var impulse = - contactDamping * rel_vel * massTerm;\r\n\r\n    return impulse;\r\n}\r\n},{\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/WheelInfo\":36,\"./Body\":31}],33:[function(_dereq_,module,exports){\r\nvar Body = _dereq_('./Body');\r\nvar Sphere = _dereq_('../shapes/Sphere');\r\nvar Box = _dereq_('../shapes/Box');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar HingeConstraint = _dereq_('../constraints/HingeConstraint');\r\n\r\nmodule.exports = RigidVehicle;\r\n\r\n/**\r\n * Simple vehicle helper class with spherical rigid body wheels.\r\n * @class RigidVehicle\r\n * @constructor\r\n * @param {Body} [options.chassisBody]\r\n */\r\nfunction RigidVehicle(options){\r\n    this.wheelBodies = [];\r\n\r\n    /**\r\n     * @property coordinateSystem\r\n     * @type {Vec3}\r\n     */\r\n    this.coordinateSystem = typeof(options.coordinateSystem)==='undefined' ? new Vec3(1, 2, 3) : options.coordinateSystem.clone();\r\n\r\n    /**\r\n     * @property {Body} chassisBody\r\n     */\r\n    this.chassisBody = options.chassisBody;\r\n\r\n    if(!this.chassisBody){\r\n        // No chassis body given. Create it!\r\n        var chassisShape = new Box(new Vec3(5, 2, 0.5));\r\n        this.chassisBody = new Body(1, chassisShape);\r\n    }\r\n\r\n    /**\r\n     * @property constraints\r\n     * @type {Array}\r\n     */\r\n    this.constraints = [];\r\n\r\n    this.wheelAxes = [];\r\n    this.wheelForces = [];\r\n}\r\n\r\n/**\r\n * Add a wheel\r\n * @method addWheel\r\n * @param {object} options\r\n * @param {boolean} [options.isFrontWheel]\r\n * @param {Vec3} [options.position] Position of the wheel, locally in the chassis body.\r\n * @param {Vec3} [options.direction] Slide direction of the wheel along the suspension.\r\n * @param {Vec3} [options.axis] Axis of rotation of the wheel, locally defined in the chassis.\r\n * @param {Body} [options.body] The wheel body.\r\n */\r\nRigidVehicle.prototype.addWheel = function(options){\r\n    options = options || {};\r\n    var wheelBody = options.body;\r\n    if(!wheelBody){\r\n        wheelBody =  new Body(1, new Sphere(1.2));\r\n    }\r\n    this.wheelBodies.push(wheelBody);\r\n    this.wheelForces.push(0);\r\n\r\n    // Position constrain wheels\r\n    var zero = new Vec3();\r\n    var position = typeof(options.position) !== 'undefined' ? options.position.clone() : new Vec3();\r\n\r\n    // Set position locally to the chassis\r\n    var worldPosition = new Vec3();\r\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\r\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z);\r\n\r\n    // Constrain wheel\r\n    var axis = typeof(options.axis) !== 'undefined' ? options.axis.clone() : new Vec3(0, 1, 0);\r\n    this.wheelAxes.push(axis);\r\n\r\n    var hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\r\n        pivotA: position,\r\n        axisA: axis,\r\n        pivotB: Vec3.ZERO,\r\n        axisB: axis,\r\n        collideConnected: false\r\n    });\r\n    this.constraints.push(hingeConstraint);\r\n\r\n    return this.wheelBodies.length - 1;\r\n};\r\n\r\n/**\r\n * Set the steering value of a wheel.\r\n * @method setSteeringValue\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n * @todo check coordinateSystem\r\n */\r\nRigidVehicle.prototype.setSteeringValue = function(value, wheelIndex){\r\n    // Set angle of the hinge axis\r\n    var axis = this.wheelAxes[wheelIndex];\r\n\r\n    var c = Math.cos(value),\r\n        s = Math.sin(value),\r\n        x = axis.x,\r\n        y = axis.y;\r\n    this.constraints[wheelIndex].axisA.set(\r\n        c*x -s*y,\r\n        s*x +c*y,\r\n        0\r\n    );\r\n};\r\n\r\n/**\r\n * Set the target rotational speed of the hinge constraint.\r\n * @method setMotorSpeed\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.setMotorSpeed = function(value, wheelIndex){\r\n    var hingeConstraint = this.constraints[wheelIndex];\r\n    hingeConstraint.enableMotor();\r\n    hingeConstraint.motorTargetVelocity = value;\r\n};\r\n\r\n/**\r\n * Set the target rotational speed of the hinge constraint.\r\n * @method disableMotor\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.disableMotor = function(wheelIndex){\r\n    var hingeConstraint = this.constraints[wheelIndex];\r\n    hingeConstraint.disableMotor();\r\n};\r\n\r\nvar torque = new Vec3();\r\n\r\n/**\r\n * Set the wheel force to apply on one of the wheels each time step\r\n * @method setWheelForce\r\n * @param  {number} value\r\n * @param  {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.setWheelForce = function(value, wheelIndex){\r\n    this.wheelForces[wheelIndex] = value;\r\n};\r\n\r\n/**\r\n * Apply a torque on one of the wheels.\r\n * @method applyWheelForce\r\n * @param  {number} value\r\n * @param  {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.applyWheelForce = function(value, wheelIndex){\r\n    var axis = this.wheelAxes[wheelIndex];\r\n    var wheelBody = this.wheelBodies[wheelIndex];\r\n    var bodyTorque = wheelBody.torque;\r\n\r\n    axis.scale(value, torque);\r\n    wheelBody.vectorToWorldFrame(torque, torque);\r\n    bodyTorque.vadd(torque, bodyTorque);\r\n};\r\n\r\n/**\r\n * Add the vehicle including its constraints to the world.\r\n * @method addToWorld\r\n * @param {World} world\r\n */\r\nRigidVehicle.prototype.addToWorld = function(world){\r\n    var constraints = this.constraints;\r\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\r\n\r\n    for (var i = 0; i < bodies.length; i++) {\r\n        world.add(bodies[i]);\r\n    }\r\n\r\n    for (var i = 0; i < constraints.length; i++) {\r\n        world.addConstraint(constraints[i]);\r\n    }\r\n\r\n    world.addEventListener('preStep', this._update.bind(this));\r\n};\r\n\r\nRigidVehicle.prototype._update = function(){\r\n    var wheelForces = this.wheelForces;\r\n    for (var i = 0; i < wheelForces.length; i++) {\r\n        this.applyWheelForce(wheelForces[i], i);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove the vehicle including its constraints from the world.\r\n * @method removeFromWorld\r\n * @param {World} world\r\n */\r\nRigidVehicle.prototype.removeFromWorld = function(world){\r\n    var constraints = this.constraints;\r\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\r\n\r\n    for (var i = 0; i < bodies.length; i++) {\r\n        world.remove(bodies[i]);\r\n    }\r\n\r\n    for (var i = 0; i < constraints.length; i++) {\r\n        world.removeConstraint(constraints[i]);\r\n    }\r\n};\r\n\r\nvar worldAxis = new Vec3();\r\n\r\n/**\r\n * Get current rotational velocity of a wheel\r\n * @method getWheelSpeed\r\n * @param {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.getWheelSpeed = function(wheelIndex){\r\n    var axis = this.wheelAxes[wheelIndex];\r\n    var wheelBody = this.wheelBodies[wheelIndex];\r\n    var w = wheelBody.angularVelocity;\r\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\r\n    return w.dot(worldAxis);\r\n};\r\n\r\n},{\"../constraints/HingeConstraint\":15,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Sphere\":44,\"./Body\":31}],34:[function(_dereq_,module,exports){\r\nmodule.exports = SPHSystem;\r\n\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Particle = _dereq_('../shapes/Particle');\r\nvar Body = _dereq_('../objects/Body');\r\nvar Material = _dereq_('../material/Material');\r\n\r\n/**\r\n * Smoothed-particle hydrodynamics system\r\n * @class SPHSystem\r\n * @constructor\r\n */\r\nfunction SPHSystem(){\r\n    this.particles = [];\r\n\t\r\n    /**\r\n     * Density of the system (kg/m3).\r\n     * @property {number} density\r\n     */\r\n    this.density = 1;\r\n\t\r\n    /**\r\n     * Distance below which two particles are considered to be neighbors.\r\n     * It should be adjusted so there are about 15-20 neighbor particles within this radius.\r\n     * @property {number} smoothingRadius\r\n     */\r\n    this.smoothingRadius = 1;\r\n    this.speedOfSound = 1;\r\n\t\r\n    /**\r\n     * Viscosity of the system.\r\n     * @property {number} viscosity\r\n     */\r\n    this.viscosity = 0.01;\r\n    this.eps = 0.000001;\r\n\r\n    // Stuff Computed per particle\r\n    this.pressures = [];\r\n    this.densities = [];\r\n    this.neighbors = [];\r\n}\r\n\r\n/**\r\n * Add a particle to the system.\r\n * @method add\r\n * @param {Body} particle\r\n */\r\nSPHSystem.prototype.add = function(particle){\r\n    this.particles.push(particle);\r\n    if(this.neighbors.length < this.particles.length){\r\n        this.neighbors.push([]);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove a particle from the system.\r\n * @method remove\r\n * @param {Body} particle\r\n */\r\nSPHSystem.prototype.remove = function(particle){\r\n    var idx = this.particles.indexOf(particle);\r\n    if(idx !== -1){\r\n        this.particles.splice(idx,1);\r\n        if(this.neighbors.length > this.particles.length){\r\n            this.neighbors.pop();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get neighbors within smoothing volume, save in the array neighbors\r\n * @method getNeighbors\r\n * @param {Body} particle\r\n * @param {Array} neighbors\r\n */\r\nvar SPHSystem_getNeighbors_dist = new Vec3();\r\nSPHSystem.prototype.getNeighbors = function(particle,neighbors){\r\n    var N = this.particles.length,\r\n        id = particle.id,\r\n        R2 = this.smoothingRadius * this.smoothingRadius,\r\n        dist = SPHSystem_getNeighbors_dist;\r\n    for(var i=0; i!==N; i++){\r\n        var p = this.particles[i];\r\n        p.position.vsub(particle.position,dist);\r\n        if(id!==p.id && dist.norm2() < R2){\r\n            neighbors.push(p);\r\n        }\r\n    }\r\n};\r\n\r\n// Temp vectors for calculation\r\nvar SPHSystem_update_dist = new Vec3(),\r\n    SPHSystem_update_a_pressure = new Vec3(),\r\n    SPHSystem_update_a_visc = new Vec3(),\r\n    SPHSystem_update_gradW = new Vec3(),\r\n    SPHSystem_update_r_vec = new Vec3(),\r\n    SPHSystem_update_u = new Vec3(); // Relative velocity\r\nSPHSystem.prototype.update = function(){\r\n    var N = this.particles.length,\r\n        dist = SPHSystem_update_dist,\r\n        cs = this.speedOfSound,\r\n        eps = this.eps;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var p = this.particles[i]; // Current particle\r\n        var neighbors = this.neighbors[i];\r\n\r\n        // Get neighbors\r\n        neighbors.length = 0;\r\n        this.getNeighbors(p,neighbors);\r\n        neighbors.push(this.particles[i]); // Add current too\r\n        var numNeighbors = neighbors.length;\r\n\r\n        // Accumulate density for the particle\r\n        var sum = 0.0;\r\n        for(var j=0; j!==numNeighbors; j++){\r\n\r\n            //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\r\n            p.position.vsub(neighbors[j].position, dist);\r\n            var len = dist.norm();\r\n\r\n            var weight = this.w(len);\r\n            sum += neighbors[j].mass * weight;\r\n        }\r\n\r\n        // Save\r\n        this.densities[i] = sum;\r\n        this.pressures[i] = cs * cs * (this.densities[i] - this.density);\r\n    }\r\n\r\n    // Add forces\r\n\r\n    // Sum to these accelerations\r\n    var a_pressure= SPHSystem_update_a_pressure;\r\n    var a_visc =    SPHSystem_update_a_visc;\r\n    var gradW =     SPHSystem_update_gradW;\r\n    var r_vec =     SPHSystem_update_r_vec;\r\n    var u =         SPHSystem_update_u;\r\n\r\n    for(var i=0; i!==N; i++){\r\n\r\n        var particle = this.particles[i];\r\n\r\n        a_pressure.set(0,0,0);\r\n        a_visc.set(0,0,0);\r\n\r\n        // Init vars\r\n        var Pij;\r\n        var nabla;\r\n        var Vij;\r\n\r\n        // Sum up for all other neighbors\r\n        var neighbors = this.neighbors[i];\r\n        var numNeighbors = neighbors.length;\r\n\r\n        //printf(\"Neighbors: \");\r\n        for(var j=0; j!==numNeighbors; j++){\r\n\r\n            var neighbor = neighbors[j];\r\n            //printf(\"%d \",nj);\r\n\r\n            // Get r once for all..\r\n            particle.position.vsub(neighbor.position,r_vec);\r\n            var r = r_vec.norm();\r\n\r\n            // Pressure contribution\r\n            Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i]*this.densities[i] + eps) + this.pressures[j] / (this.densities[j]*this.densities[j] + eps));\r\n            this.gradw(r_vec, gradW);\r\n            // Add to pressure acceleration\r\n            gradW.mult(Pij , gradW);\r\n            a_pressure.vadd(gradW, a_pressure);\r\n\r\n            // Viscosity contribution\r\n            neighbor.velocity.vsub(particle.velocity, u);\r\n            u.mult( 1.0 / (0.0001+this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass , u );\r\n            nabla = this.nablaw(r);\r\n            u.mult(nabla,u);\r\n            // Add to viscosity acceleration\r\n            a_visc.vadd( u, a_visc );\r\n        }\r\n\r\n        // Calculate force\r\n        a_visc.mult(particle.mass, a_visc);\r\n        a_pressure.mult(particle.mass, a_pressure);\r\n\r\n        // Add force to particles\r\n        particle.force.vadd(a_visc, particle.force);\r\n        particle.force.vadd(a_pressure, particle.force);\r\n    }\r\n};\r\n\r\n// Calculate the weight using the W(r) weightfunction\r\nSPHSystem.prototype.w = function(r){\r\n    // 315\r\n    var h = this.smoothingRadius;\r\n    return 315.0/(64.0*Math.PI*Math.pow(h,9)) * Math.pow(h*h-r*r,3);\r\n};\r\n\r\n// calculate gradient of the weight function\r\nSPHSystem.prototype.gradw = function(rVec,resultVec){\r\n    var r = rVec.norm(),\r\n        h = this.smoothingRadius;\r\n    rVec.mult(945.0/(32.0*Math.PI*Math.pow(h,9)) * Math.pow((h*h-r*r),2) , resultVec);\r\n};\r\n\r\n// Calculate nabla(W)\r\nSPHSystem.prototype.nablaw = function(r){\r\n    var h = this.smoothingRadius;\r\n    var nabla = 945.0/(32.0*Math.PI*Math.pow(h,9)) * (h*h-r*r)*(7*r*r - 3*h*h);\r\n    return nabla;\r\n};\r\n\r\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Particle\":41,\"../shapes/Shape\":43}],35:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\nmodule.exports = Spring;\r\n\r\n/**\r\n * A spring, connecting two bodies.\r\n *\r\n * @class Spring\r\n * @constructor\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Object} [options]\r\n * @param {number} [options.restLength]   A number > 0. Default: 1\r\n * @param {number} [options.stiffness]    A number >= 0. Default: 100\r\n * @param {number} [options.damping]      A number >= 0. Default: 1\r\n * @param {Vec3}  [options.worldAnchorA] Where to hook the spring to body A, in world coordinates.\r\n * @param {Vec3}  [options.worldAnchorB]\r\n * @param {Vec3}  [options.localAnchorA] Where to hook the spring to body A, in local body coordinates.\r\n * @param {Vec3}  [options.localAnchorB]\r\n */\r\nfunction Spring(bodyA,bodyB,options){\r\n    options = options || {};\r\n\r\n    /**\r\n     * Rest length of the spring.\r\n     * @property restLength\r\n     * @type {number}\r\n     */\r\n    this.restLength = typeof(options.restLength) === \"number\" ? options.restLength : 1;\r\n\r\n    /**\r\n     * Stiffness of the spring.\r\n     * @property stiffness\r\n     * @type {number}\r\n     */\r\n    this.stiffness = options.stiffness || 100;\r\n\r\n    /**\r\n     * Damping of the spring.\r\n     * @property damping\r\n     * @type {number}\r\n     */\r\n    this.damping = options.damping || 1;\r\n\r\n    /**\r\n     * First connected body.\r\n     * @property bodyA\r\n     * @type {Body}\r\n     */\r\n    this.bodyA = bodyA;\r\n\r\n    /**\r\n     * Second connected body.\r\n     * @property bodyB\r\n     * @type {Body}\r\n     */\r\n    this.bodyB = bodyB;\r\n\r\n    /**\r\n     * Anchor for bodyA in local bodyA coordinates.\r\n     * @property localAnchorA\r\n     * @type {Vec3}\r\n     */\r\n    this.localAnchorA = new Vec3();\r\n\r\n    /**\r\n     * Anchor for bodyB in local bodyB coordinates.\r\n     * @property localAnchorB\r\n     * @type {Vec3}\r\n     */\r\n    this.localAnchorB = new Vec3();\r\n\r\n    if(options.localAnchorA){\r\n        this.localAnchorA.copy(options.localAnchorA);\r\n    }\r\n    if(options.localAnchorB){\r\n        this.localAnchorB.copy(options.localAnchorB);\r\n    }\r\n    if(options.worldAnchorA){\r\n        this.setWorldAnchorA(options.worldAnchorA);\r\n    }\r\n    if(options.worldAnchorB){\r\n        this.setWorldAnchorB(options.worldAnchorB);\r\n    }\r\n}\r\n\r\n/**\r\n * Set the anchor point on body A, using world coordinates.\r\n * @method setWorldAnchorA\r\n * @param {Vec3} worldAnchorA\r\n */\r\nSpring.prototype.setWorldAnchorA = function(worldAnchorA){\r\n    this.bodyA.pointToLocalFrame(worldAnchorA,this.localAnchorA);\r\n};\r\n\r\n/**\r\n * Set the anchor point on body B, using world coordinates.\r\n * @method setWorldAnchorB\r\n * @param {Vec3} worldAnchorB\r\n */\r\nSpring.prototype.setWorldAnchorB = function(worldAnchorB){\r\n    this.bodyB.pointToLocalFrame(worldAnchorB,this.localAnchorB);\r\n};\r\n\r\n/**\r\n * Get the anchor point on body A, in world coordinates.\r\n * @method getWorldAnchorA\r\n * @param {Vec3} result The vector to store the result in.\r\n */\r\nSpring.prototype.getWorldAnchorA = function(result){\r\n    this.bodyA.pointToWorldFrame(this.localAnchorA,result);\r\n};\r\n\r\n/**\r\n * Get the anchor point on body B, in world coordinates.\r\n * @method getWorldAnchorB\r\n * @param {Vec3} result The vector to store the result in.\r\n */\r\nSpring.prototype.getWorldAnchorB = function(result){\r\n    this.bodyB.pointToWorldFrame(this.localAnchorB,result);\r\n};\r\n\r\nvar applyForce_r =              new Vec3(),\r\n    applyForce_r_unit =         new Vec3(),\r\n    applyForce_u =              new Vec3(),\r\n    applyForce_f =              new Vec3(),\r\n    applyForce_worldAnchorA =   new Vec3(),\r\n    applyForce_worldAnchorB =   new Vec3(),\r\n    applyForce_ri =             new Vec3(),\r\n    applyForce_rj =             new Vec3(),\r\n    applyForce_ri_x_f =         new Vec3(),\r\n    applyForce_rj_x_f =         new Vec3(),\r\n    applyForce_tmp =            new Vec3();\r\n\r\n/**\r\n * Apply the spring force to the connected bodies.\r\n * @method applyForce\r\n */\r\nSpring.prototype.applyForce = function(){\r\n    var k = this.stiffness,\r\n        d = this.damping,\r\n        l = this.restLength,\r\n        bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        r = applyForce_r,\r\n        r_unit = applyForce_r_unit,\r\n        u = applyForce_u,\r\n        f = applyForce_f,\r\n        tmp = applyForce_tmp;\r\n\r\n    var worldAnchorA = applyForce_worldAnchorA,\r\n        worldAnchorB = applyForce_worldAnchorB,\r\n        ri = applyForce_ri,\r\n        rj = applyForce_rj,\r\n        ri_x_f = applyForce_ri_x_f,\r\n        rj_x_f = applyForce_rj_x_f;\r\n\r\n    // Get world anchors\r\n    this.getWorldAnchorA(worldAnchorA);\r\n    this.getWorldAnchorB(worldAnchorB);\r\n\r\n    // Get offset points\r\n    worldAnchorA.vsub(bodyA.position,ri);\r\n    worldAnchorB.vsub(bodyB.position,rj);\r\n\r\n    // Compute distance vector between world anchor points\r\n    worldAnchorB.vsub(worldAnchorA,r);\r\n    var rlen = r.norm();\r\n    r_unit.copy(r);\r\n    r_unit.normalize();\r\n\r\n    // Compute relative velocity of the anchor points, u\r\n    bodyB.velocity.vsub(bodyA.velocity,u);\r\n    // Add rotational velocity\r\n\r\n    bodyB.angularVelocity.cross(rj,tmp);\r\n    u.vadd(tmp,u);\r\n    bodyA.angularVelocity.cross(ri,tmp);\r\n    u.vsub(tmp,u);\r\n\r\n    // F = - k * ( x - L ) - D * ( u )\r\n    r_unit.mult(-k*(rlen-l) - d*u.dot(r_unit), f);\r\n\r\n    // Add forces to bodies\r\n    bodyA.force.vsub(f,bodyA.force);\r\n    bodyB.force.vadd(f,bodyB.force);\r\n\r\n    // Angular force\r\n    ri.cross(f,ri_x_f);\r\n    rj.cross(f,rj_x_f);\r\n    bodyA.torque.vsub(ri_x_f,bodyA.torque);\r\n    bodyB.torque.vadd(rj_x_f,bodyB.torque);\r\n};\r\n\r\n},{\"../math/Vec3\":30}],36:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = WheelInfo;\r\n\r\n/**\r\n * @class WheelInfo\r\n * @constructor\r\n * @param {Object} [options]\r\n *\r\n * @param {Vec3} [options.chassisConnectionPointLocal]\r\n * @param {Vec3} [options.chassisConnectionPointWorld]\r\n * @param {Vec3} [options.directionLocal]\r\n * @param {Vec3} [options.directionWorld]\r\n * @param {Vec3} [options.axleLocal]\r\n * @param {Vec3} [options.axleWorld]\r\n * @param {number} [options.suspensionRestLength=1]\r\n * @param {number} [options.suspensionMaxLength=2]\r\n * @param {number} [options.radius=1]\r\n * @param {number} [options.suspensionStiffness=100]\r\n * @param {number} [options.dampingCompression=10]\r\n * @param {number} [options.dampingRelaxation=10]\r\n * @param {number} [options.frictionSlip=10000]\r\n * @param {number} [options.steering=0]\r\n * @param {number} [options.rotation=0]\r\n * @param {number} [options.deltaRotation=0]\r\n * @param {number} [options.rollInfluence=0.01]\r\n * @param {number} [options.maxSuspensionForce]\r\n * @param {boolean} [options.isFrontWheel=true]\r\n * @param {number} [options.clippedInvContactDotSuspension=1]\r\n * @param {number} [options.suspensionRelativeVelocity=0]\r\n * @param {number} [options.suspensionForce=0]\r\n * @param {number} [options.skidInfo=0]\r\n * @param {number} [options.suspensionLength=0]\r\n * @param {number} [options.maxSuspensionTravel=1]\r\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\r\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\r\n */\r\nfunction WheelInfo(options){\r\n    options = Utils.defaults(options, {\r\n        chassisConnectionPointLocal: new Vec3(),\r\n        chassisConnectionPointWorld: new Vec3(),\r\n        directionLocal: new Vec3(),\r\n        directionWorld: new Vec3(),\r\n        axleLocal: new Vec3(),\r\n        axleWorld: new Vec3(),\r\n        suspensionRestLength: 1,\r\n        suspensionMaxLength: 2,\r\n        radius: 1,\r\n        suspensionStiffness: 100,\r\n        dampingCompression: 10,\r\n        dampingRelaxation: 10,\r\n        frictionSlip: 10000,\r\n        steering: 0,\r\n        rotation: 0,\r\n        deltaRotation: 0,\r\n        rollInfluence: 0.01,\r\n        maxSuspensionForce: Number.MAX_VALUE,\r\n        isFrontWheel: true,\r\n        clippedInvContactDotSuspension: 1,\r\n        suspensionRelativeVelocity: 0,\r\n        suspensionForce: 0,\r\n        skidInfo: 0,\r\n        suspensionLength: 0,\r\n        maxSuspensionTravel: 1,\r\n        useCustomSlidingRotationalSpeed: false,\r\n        customSlidingRotationalSpeed: -0.1\r\n    });\r\n\r\n    /**\r\n     * Max travel distance of the suspension, in meters.\r\n     * @property {number} maxSuspensionTravel\r\n     */\r\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\r\n\r\n    /**\r\n     * Speed to apply to the wheel rotation when the wheel is sliding.\r\n     * @property {number} customSlidingRotationalSpeed\r\n     */\r\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\r\n\r\n    /**\r\n     * If the customSlidingRotationalSpeed should be used.\r\n     * @property {Boolean} useCustomSlidingRotationalSpeed\r\n     */\r\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\r\n\r\n    /**\r\n     * @property {Boolean} sliding\r\n     */\r\n    this.sliding = false;\r\n\r\n    /**\r\n     * Connection point, defined locally in the chassis body frame.\r\n     * @property {Vec3} chassisConnectionPointLocal\r\n     */\r\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\r\n\r\n    /**\r\n     * @property {Vec3} chassisConnectionPointWorld\r\n     */\r\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\r\n\r\n    /**\r\n     * @property {Vec3} directionLocal\r\n     */\r\n    this.directionLocal = options.directionLocal.clone();\r\n\r\n    /**\r\n     * @property {Vec3} directionWorld\r\n     */\r\n    this.directionWorld = options.directionWorld.clone();\r\n\r\n    /**\r\n     * @property {Vec3} axleLocal\r\n     */\r\n    this.axleLocal = options.axleLocal.clone();\r\n\r\n    /**\r\n     * @property {Vec3} axleWorld\r\n     */\r\n    this.axleWorld = options.axleWorld.clone();\r\n\r\n    /**\r\n     * @property {number} suspensionRestLength\r\n     */\r\n    this.suspensionRestLength = options.suspensionRestLength;\r\n\r\n    /**\r\n     * @property {number} suspensionMaxLength\r\n     */\r\n    this.suspensionMaxLength = options.suspensionMaxLength;\r\n\r\n    /**\r\n     * @property {number} radius\r\n     */\r\n    this.radius = options.radius;\r\n\r\n    /**\r\n     * @property {number} suspensionStiffness\r\n     */\r\n    this.suspensionStiffness = options.suspensionStiffness;\r\n\r\n    /**\r\n     * @property {number} dampingCompression\r\n     */\r\n    this.dampingCompression = options.dampingCompression;\r\n\r\n    /**\r\n     * @property {number} dampingRelaxation\r\n     */\r\n    this.dampingRelaxation = options.dampingRelaxation;\r\n\r\n    /**\r\n     * @property {number} frictionSlip\r\n     */\r\n    this.frictionSlip = options.frictionSlip;\r\n\r\n    /**\r\n     * @property {number} steering\r\n     */\r\n    this.steering = 0;\r\n\r\n    /**\r\n     * Rotation value, in radians.\r\n     * @property {number} rotation\r\n     */\r\n    this.rotation = 0;\r\n\r\n    /**\r\n     * @property {number} deltaRotation\r\n     */\r\n    this.deltaRotation = 0;\r\n\r\n    /**\r\n     * @property {number} rollInfluence\r\n     */\r\n    this.rollInfluence = options.rollInfluence;\r\n\r\n    /**\r\n     * @property {number} maxSuspensionForce\r\n     */\r\n    this.maxSuspensionForce = options.maxSuspensionForce;\r\n\r\n    /**\r\n     * @property {number} engineForce\r\n     */\r\n    this.engineForce = 0;\r\n\r\n    /**\r\n     * @property {number} brake\r\n     */\r\n    this.brake = 0;\r\n\r\n    /**\r\n     * @property {number} isFrontWheel\r\n     */\r\n    this.isFrontWheel = options.isFrontWheel;\r\n\r\n    /**\r\n     * @property {number} clippedInvContactDotSuspension\r\n     */\r\n    this.clippedInvContactDotSuspension = 1;\r\n\r\n    /**\r\n     * @property {number} suspensionRelativeVelocity\r\n     */\r\n    this.suspensionRelativeVelocity = 0;\r\n\r\n    /**\r\n     * @property {number} suspensionForce\r\n     */\r\n    this.suspensionForce = 0;\r\n\r\n    /**\r\n     * @property {number} skidInfo\r\n     */\r\n    this.skidInfo = 0;\r\n\r\n    /**\r\n     * @property {number} suspensionLength\r\n     */\r\n    this.suspensionLength = 0;\r\n\r\n    /**\r\n     * @property {number} sideImpulse\r\n     */\r\n    this.sideImpulse = 0;\r\n\r\n    /**\r\n     * @property {number} forwardImpulse\r\n     */\r\n    this.forwardImpulse = 0;\r\n\r\n    /**\r\n     * The result from raycasting\r\n     * @property {RaycastResult} raycastResult\r\n     */\r\n    this.raycastResult = new RaycastResult();\r\n\r\n    /**\r\n     * Wheel world transform\r\n     * @property {Transform} worldTransform\r\n     */\r\n    this.worldTransform = new Transform();\r\n\r\n    /**\r\n     * @property {boolean} isInContact\r\n     */\r\n    this.isInContact = false;\r\n}\r\n\r\nvar chassis_velocity_at_contactPoint = new Vec3();\r\nvar relpos = new Vec3();\r\nvar chassis_velocity_at_contactPoint = new Vec3();\r\nWheelInfo.prototype.updateWheel = function(chassis){\r\n    var raycastResult = this.raycastResult;\r\n\r\n    if (this.isInContact){\r\n        var project= raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\r\n        raycastResult.hitPointWorld.vsub(chassis.position, relpos);\r\n        chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\r\n        var projVel = raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\r\n        if (project >= -0.1) {\r\n            this.suspensionRelativeVelocity = 0.0;\r\n            this.clippedInvContactDotSuspension = 1.0 / 0.1;\r\n        } else {\r\n            var inv = -1 / project;\r\n            this.suspensionRelativeVelocity = projVel * inv;\r\n            this.clippedInvContactDotSuspension = inv;\r\n        }\r\n\r\n    } else {\r\n        // Not in contact : position wheel in a nice (rest length) position\r\n        raycastResult.suspensionLength = this.suspensionRestLength;\r\n        this.suspensionRelativeVelocity = 0.0;\r\n        raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\r\n        this.clippedInvContactDotSuspension = 1.0;\r\n    }\r\n};\r\n},{\"../collision/RaycastResult\":10,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Utils\":53}],37:[function(_dereq_,module,exports){\r\nmodule.exports = Box;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\r\n\r\n/**\r\n * A 3d box shape.\r\n * @class Box\r\n * @constructor\r\n * @param {Vec3} halfExtents\r\n * @author schteppe\r\n * @extends Shape\r\n */\r\nfunction Box(halfExtents){\r\n    Shape.call(this);\r\n\r\n    this.type = Shape.types.BOX;\r\n\r\n    /**\r\n     * @property halfExtents\r\n     * @type {Vec3}\r\n     */\r\n    this.halfExtents = halfExtents;\r\n\r\n    /**\r\n     * Used by the contact generator to make contacts with other convex polyhedra for example\r\n     * @property convexPolyhedronRepresentation\r\n     * @type {ConvexPolyhedron}\r\n     */\r\n    this.convexPolyhedronRepresentation = null;\r\n\r\n    this.updateConvexPolyhedronRepresentation();\r\n    this.updateBoundingSphereRadius();\r\n}\r\nBox.prototype = new Shape();\r\nBox.prototype.constructor = Box;\r\n\r\n/**\r\n * Updates the local convex polyhedron representation used for some collisions.\r\n * @method updateConvexPolyhedronRepresentation\r\n */\r\nBox.prototype.updateConvexPolyhedronRepresentation = function(){\r\n    var sx = this.halfExtents.x;\r\n    var sy = this.halfExtents.y;\r\n    var sz = this.halfExtents.z;\r\n    var V = Vec3;\r\n\r\n    var vertices = [\r\n        new V(-sx,-sy,-sz),\r\n        new V( sx,-sy,-sz),\r\n        new V( sx, sy,-sz),\r\n        new V(-sx, sy,-sz),\r\n        new V(-sx,-sy, sz),\r\n        new V( sx,-sy, sz),\r\n        new V( sx, sy, sz),\r\n        new V(-sx, sy, sz)\r\n    ];\r\n\r\n    var indices = [\r\n        [3,2,1,0], // -z\r\n        [4,5,6,7], // +z\r\n        [5,4,0,1], // -y\r\n        [2,3,7,6], // +y\r\n        [0,4,7,3], // -x\r\n        [1,2,6,5], // +x\r\n    ];\r\n\r\n    var axes = [\r\n        new V(0, 0, 1),\r\n        new V(0, 1, 0),\r\n        new V(1, 0, 0)\r\n    ];\r\n\r\n    var h = new ConvexPolyhedron(vertices, indices);\r\n    this.convexPolyhedronRepresentation = h;\r\n    h.material = this.material;\r\n};\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n * @return {Vec3}\r\n */\r\nBox.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    Box.calculateInertia(this.halfExtents, mass, target);\r\n    return target;\r\n};\r\n\r\nBox.calculateInertia = function(halfExtents,mass,target){\r\n    var e = halfExtents;\r\n    target.x = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.z*2*e.z );\r\n    target.y = 1.0 / 12.0 * mass * (   2*e.x*2*e.x + 2*e.z*2*e.z );\r\n    target.z = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.x*2*e.x );\r\n};\r\n\r\n/**\r\n * Get the box 6 side normals\r\n * @method getSideNormals\r\n * @param {array}      sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\r\n * @param {Quaternion} quat             Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\r\n * @return {array}\r\n */\r\nBox.prototype.getSideNormals = function(sixTargetVectors,quat){\r\n    var sides = sixTargetVectors;\r\n    var ex = this.halfExtents;\r\n    sides[0].set(  ex.x,     0,     0);\r\n    sides[1].set(     0,  ex.y,     0);\r\n    sides[2].set(     0,     0,  ex.z);\r\n    sides[3].set( -ex.x,     0,     0);\r\n    sides[4].set(     0, -ex.y,     0);\r\n    sides[5].set(     0,     0, -ex.z);\r\n\r\n    if(quat!==undefined){\r\n        for(var i=0; i!==sides.length; i++){\r\n            quat.vmult(sides[i],sides[i]);\r\n        }\r\n    }\r\n\r\n    return sides;\r\n};\r\n\r\nBox.prototype.volume = function(){\r\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\r\n};\r\n\r\nBox.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = this.halfExtents.norm();\r\n};\r\n\r\nvar worldCornerTempPos = new Vec3();\r\nvar worldCornerTempNeg = new Vec3();\r\nBox.prototype.forEachWorldCorner = function(pos,quat,callback){\r\n\r\n    var e = this.halfExtents;\r\n    var corners = [[  e.x,  e.y,  e.z],\r\n                   [ -e.x,  e.y,  e.z],\r\n                   [ -e.x, -e.y,  e.z],\r\n                   [ -e.x, -e.y, -e.z],\r\n                   [  e.x, -e.y, -e.z],\r\n                   [  e.x,  e.y, -e.z],\r\n                   [ -e.x,  e.y, -e.z],\r\n                   [  e.x, -e.y,  e.z]];\r\n    for(var i=0; i<corners.length; i++){\r\n        worldCornerTempPos.set(corners[i][0],corners[i][1],corners[i][2]);\r\n        quat.vmult(worldCornerTempPos,worldCornerTempPos);\r\n        pos.vadd(worldCornerTempPos,worldCornerTempPos);\r\n        callback(worldCornerTempPos.x,\r\n                 worldCornerTempPos.y,\r\n                 worldCornerTempPos.z);\r\n    }\r\n};\r\n\r\nvar worldCornersTemp = [\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3()\r\n];\r\nBox.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n\r\n    var e = this.halfExtents;\r\n    worldCornersTemp[0].set(e.x, e.y, e.z);\r\n    worldCornersTemp[1].set(-e.x,  e.y, e.z);\r\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\r\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\r\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\r\n    worldCornersTemp[5].set(e.x,  e.y, -e.z);\r\n    worldCornersTemp[6].set(-e.x,  e.y, -e.z);\r\n    worldCornersTemp[7].set(e.x, -e.y,  e.z);\r\n\r\n    var wc = worldCornersTemp[0];\r\n    quat.vmult(wc, wc);\r\n    pos.vadd(wc, wc);\r\n    max.copy(wc);\r\n    min.copy(wc);\r\n    for(var i=1; i<8; i++){\r\n        var wc = worldCornersTemp[i];\r\n        quat.vmult(wc, wc);\r\n        pos.vadd(wc, wc);\r\n        var x = wc.x;\r\n        var y = wc.y;\r\n        var z = wc.z;\r\n        if(x > max.x){\r\n            max.x = x;\r\n        }\r\n        if(y > max.y){\r\n            max.y = y;\r\n        }\r\n        if(z > max.z){\r\n            max.z = z;\r\n        }\r\n\r\n        if(x < min.x){\r\n            min.x = x;\r\n        }\r\n        if(y < min.y){\r\n            min.y = y;\r\n        }\r\n        if(z < min.z){\r\n            min.z = z;\r\n        }\r\n    }\r\n\r\n    // Get each axis max\r\n    // min.set(Infinity,Infinity,Infinity);\r\n    // max.set(-Infinity,-Infinity,-Infinity);\r\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\r\n    //     if(x > max.x){\r\n    //         max.x = x;\r\n    //     }\r\n    //     if(y > max.y){\r\n    //         max.y = y;\r\n    //     }\r\n    //     if(z > max.z){\r\n    //         max.z = z;\r\n    //     }\r\n\r\n    //     if(x < min.x){\r\n    //         min.x = x;\r\n    //     }\r\n    //     if(y < min.y){\r\n    //         min.y = y;\r\n    //     }\r\n    //     if(z < min.z){\r\n    //         min.z = z;\r\n    //     }\r\n    // });\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],38:[function(_dereq_,module,exports){\r\nmodule.exports = ConvexPolyhedron;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Transform = _dereq_('../math/Transform');\r\n\r\n/**\r\n * A set of polygons describing a convex shape.\r\n * @class ConvexPolyhedron\r\n * @constructor\r\n * @extends Shape\r\n * @description The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\r\n * in the same 3D plane), instead these should be merged into one polygon.\r\n *\r\n * @param {array} points An array of Vec3's\r\n * @param {array} faces Array of integer arrays, describing which vertices that is included in each face.\r\n *\r\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\r\n * @author schteppe / https://github.com/schteppe\r\n * @see http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\r\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\r\n *\r\n * @todo Move the clipping functions to ContactGenerator?\r\n * @todo Automatically merge coplanar polygons in constructor.\r\n */\r\nfunction ConvexPolyhedron(points, faces, uniqueAxes) {\r\n    var that = this;\r\n    Shape.call(this);\r\n    this.type = Shape.types.CONVEXPOLYHEDRON;\r\n\r\n    /**\r\n     * Array of Vec3\r\n     * @property vertices\r\n     * @type {Array}\r\n     */\r\n    this.vertices = points||[];\r\n\r\n    this.worldVertices = []; // World transformed version of .vertices\r\n    this.worldVerticesNeedsUpdate = true;\r\n\r\n    /**\r\n     * Array of integer arrays, indicating which vertices each face consists of\r\n     * @property faces\r\n     * @type {Array}\r\n     */\r\n    this.faces = faces||[];\r\n\r\n    /**\r\n     * Array of Vec3\r\n     * @property faceNormals\r\n     * @type {Array}\r\n     */\r\n    this.faceNormals = [];\r\n    this.computeNormals();\r\n\r\n    this.worldFaceNormalsNeedsUpdate = true;\r\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\r\n\r\n    /**\r\n     * Array of Vec3\r\n     * @property uniqueEdges\r\n     * @type {Array}\r\n     */\r\n    this.uniqueEdges = [];\r\n\r\n    /**\r\n     * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\r\n     * @property {Array} uniqueAxes\r\n     */\r\n    this.uniqueAxes = uniqueAxes ? uniqueAxes.slice() : null;\r\n\r\n    this.computeEdges();\r\n    this.updateBoundingSphereRadius();\r\n}\r\nConvexPolyhedron.prototype = new Shape();\r\nConvexPolyhedron.prototype.constructor = ConvexPolyhedron;\r\n\r\nvar computeEdges_tmpEdge = new Vec3();\r\n/**\r\n * Computes uniqueEdges\r\n * @method computeEdges\r\n */\r\nConvexPolyhedron.prototype.computeEdges = function(){\r\n    var faces = this.faces;\r\n    var vertices = this.vertices;\r\n    var nv = vertices.length;\r\n    var edges = this.uniqueEdges;\r\n\r\n    edges.length = 0;\r\n\r\n    var edge = computeEdges_tmpEdge;\r\n\r\n    for(var i=0; i !== faces.length; i++){\r\n        var face = faces[i];\r\n        var numVertices = face.length;\r\n        for(var j = 0; j !== numVertices; j++){\r\n            var k = ( j+1 ) % numVertices;\r\n            vertices[face[j]].vsub(vertices[face[k]], edge);\r\n            edge.normalize();\r\n            var found = false;\r\n            for(var p=0; p !== edges.length; p++){\r\n                if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!found){\r\n                edges.push(edge.clone());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Compute the normals of the faces. Will reuse existing Vec3 objects in the .faceNormals array if they exist.\r\n * @method computeNormals\r\n */\r\nConvexPolyhedron.prototype.computeNormals = function(){\r\n    this.faceNormals.length = this.faces.length;\r\n\r\n    // Generate normals\r\n    for(var i=0; i<this.faces.length; i++){\r\n\r\n        // Check so all vertices exists for this face\r\n        for(var j=0; j<this.faces[i].length; j++){\r\n            if(!this.vertices[this.faces[i][j]]){\r\n                throw new Error(\"Vertex \"+this.faces[i][j]+\" not found!\");\r\n            }\r\n        }\r\n\r\n        var n = this.faceNormals[i] || new Vec3();\r\n        this.getFaceNormal(i,n);\r\n        n.negate(n);\r\n        this.faceNormals[i] = n;\r\n        var vertex = this.vertices[this.faces[i][0]];\r\n        if(n.dot(vertex) < 0){\r\n            console.error(\".faceNormals[\" + i + \"] = Vec3(\"+n.toString()+\") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");\r\n            for(var j=0; j<this.faces[i].length; j++){\r\n                console.warn(\".vertices[\"+this.faces[i][j]+\"] = Vec3(\"+this.vertices[this.faces[i][j]].toString()+\")\");\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get face normal given 3 vertices\r\n * @static\r\n * @method getFaceNormal\r\n * @param {Vec3} va\r\n * @param {Vec3} vb\r\n * @param {Vec3} vc\r\n * @param {Vec3} target\r\n */\r\nvar cb = new Vec3();\r\nvar ab = new Vec3();\r\nConvexPolyhedron.computeNormal = function ( va, vb, vc, target ) {\r\n    vb.vsub(va,ab);\r\n    vc.vsub(vb,cb);\r\n    cb.cross(ab,target);\r\n    if ( !target.isZero() ) {\r\n        target.normalize();\r\n    }\r\n};\r\n\r\n/**\r\n * Compute the normal of a face from its vertices\r\n * @method getFaceNormal\r\n * @param  {Number} i\r\n * @param  {Vec3} target\r\n */\r\nConvexPolyhedron.prototype.getFaceNormal = function(i,target){\r\n    var f = this.faces[i];\r\n    var va = this.vertices[f[0]];\r\n    var vb = this.vertices[f[1]];\r\n    var vc = this.vertices[f[2]];\r\n    return ConvexPolyhedron.computeNormal(va,vb,vc,target);\r\n};\r\n\r\n/**\r\n * @method clipAgainstHull\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {ConvexPolyhedron} hullB\r\n * @param {Vec3} posB\r\n * @param {Quaternion} quatB\r\n * @param {Vec3} separatingNormal\r\n * @param {Number} minDist Clamp distance\r\n * @param {Number} maxDist\r\n * @param {array} result The an array of contact point objects, see clipFaceAgainstHull\r\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\r\n */\r\nvar cah_WorldNormal = new Vec3();\r\nConvexPolyhedron.prototype.clipAgainstHull = function(posA,quatA,hullB,posB,quatB,separatingNormal,minDist,maxDist,result){\r\n    var WorldNormal = cah_WorldNormal;\r\n    var hullA = this;\r\n    var curMaxDist = maxDist;\r\n    var closestFaceB = -1;\r\n    var dmax = -Number.MAX_VALUE;\r\n    for(var face=0; face < hullB.faces.length; face++){\r\n        WorldNormal.copy(hullB.faceNormals[face]);\r\n        quatB.vmult(WorldNormal,WorldNormal);\r\n        //posB.vadd(WorldNormal,WorldNormal);\r\n        var d = WorldNormal.dot(separatingNormal);\r\n        if (d > dmax){\r\n            dmax = d;\r\n            closestFaceB = face;\r\n        }\r\n    }\r\n    var worldVertsB1 = [];\r\n    var polyB = hullB.faces[closestFaceB];\r\n    var numVertices = polyB.length;\r\n    for(var e0=0; e0<numVertices; e0++){\r\n        var b = hullB.vertices[polyB[e0]];\r\n        var worldb = new Vec3();\r\n        worldb.copy(b);\r\n        quatB.vmult(worldb,worldb);\r\n        posB.vadd(worldb,worldb);\r\n        worldVertsB1.push(worldb);\r\n    }\r\n\r\n    if (closestFaceB>=0){\r\n        this.clipFaceAgainstHull(separatingNormal,\r\n                                 posA,\r\n                                 quatA,\r\n                                 worldVertsB1,\r\n                                 minDist,\r\n                                 maxDist,\r\n                                 result);\r\n    }\r\n};\r\n\r\n/**\r\n * Find the separating axis between this hull and another\r\n * @method findSeparatingAxis\r\n * @param {ConvexPolyhedron} hullB\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {Vec3} posB\r\n * @param {Quaternion} quatB\r\n * @param {Vec3} target The target vector to save the axis in\r\n * @return {bool} Returns false if a separation is found, else true\r\n */\r\nvar fsa_faceANormalWS3 = new Vec3(),\r\n    fsa_Worldnormal1 = new Vec3(),\r\n    fsa_deltaC = new Vec3(),\r\n    fsa_worldEdge0 = new Vec3(),\r\n    fsa_worldEdge1 = new Vec3(),\r\n    fsa_Cross = new Vec3();\r\nConvexPolyhedron.prototype.findSeparatingAxis = function(hullB,posA,quatA,posB,quatB,target, faceListA, faceListB){\r\n    var faceANormalWS3 = fsa_faceANormalWS3,\r\n        Worldnormal1 = fsa_Worldnormal1,\r\n        deltaC = fsa_deltaC,\r\n        worldEdge0 = fsa_worldEdge0,\r\n        worldEdge1 = fsa_worldEdge1,\r\n        Cross = fsa_Cross;\r\n\r\n    var dmin = Number.MAX_VALUE;\r\n    var hullA = this;\r\n    var curPlaneTests=0;\r\n\r\n    if(!hullA.uniqueAxes){\r\n\r\n        var numFacesA = faceListA ? faceListA.length : hullA.faces.length;\r\n\r\n        // Test face normals from hullA\r\n        for(var i=0; i<numFacesA; i++){\r\n            var fi = faceListA ? faceListA[i] : i;\r\n\r\n            // Get world face normal\r\n            faceANormalWS3.copy(hullA.faceNormals[fi]);\r\n            quatA.vmult(faceANormalWS3,faceANormalWS3);\r\n\r\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(faceANormalWS3);\r\n            }\r\n        }\r\n\r\n    } else {\r\n\r\n        // Test unique axes\r\n        for(var i = 0; i !== hullA.uniqueAxes.length; i++){\r\n\r\n            // Get world axis\r\n            quatA.vmult(hullA.uniqueAxes[i],faceANormalWS3);\r\n\r\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(faceANormalWS3);\r\n            }\r\n        }\r\n    }\r\n\r\n    if(!hullB.uniqueAxes){\r\n\r\n        // Test face normals from hullB\r\n        var numFacesB = faceListB ? faceListB.length : hullB.faces.length;\r\n        for(var i=0;i<numFacesB;i++){\r\n\r\n            var fi = faceListB ? faceListB[i] : i;\r\n\r\n            Worldnormal1.copy(hullB.faceNormals[fi]);\r\n            quatB.vmult(Worldnormal1,Worldnormal1);\r\n            curPlaneTests++;\r\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(Worldnormal1);\r\n            }\r\n        }\r\n    } else {\r\n\r\n        // Test unique axes in B\r\n        for(var i = 0; i !== hullB.uniqueAxes.length; i++){\r\n            quatB.vmult(hullB.uniqueAxes[i],Worldnormal1);\r\n\r\n            curPlaneTests++;\r\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(Worldnormal1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Test edges\r\n    for(var e0=0; e0 !== hullA.uniqueEdges.length; e0++){\r\n\r\n        // Get world edge\r\n        quatA.vmult(hullA.uniqueEdges[e0],worldEdge0);\r\n\r\n        for(var e1=0; e1 !== hullB.uniqueEdges.length; e1++){\r\n\r\n            // Get world edge 2\r\n            quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\r\n            worldEdge0.cross(worldEdge1,Cross);\r\n\r\n            if(!Cross.almostZero()){\r\n                Cross.normalize();\r\n                var dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\r\n                if(dist === false){\r\n                    return false;\r\n                }\r\n                if(dist < dmin){\r\n                    dmin = dist;\r\n                    target.copy(Cross);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    posB.vsub(posA,deltaC);\r\n    if((deltaC.dot(target))>0.0){\r\n        target.negate(target);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nvar maxminA=[], maxminB=[];\r\n\r\n/**\r\n * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\r\n * @method testSepAxis\r\n * @param {Vec3} axis\r\n * @param {ConvexPolyhedron} hullB\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {Vec3} posB\r\n * @param {Quaternion} quatB\r\n * @return {number} The overlap depth, or FALSE if no penetration.\r\n */\r\nConvexPolyhedron.prototype.testSepAxis = function(axis, hullB, posA, quatA, posB, quatB){\r\n    var hullA=this;\r\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\r\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\r\n    var maxA = maxminA[0];\r\n    var minA = maxminA[1];\r\n    var maxB = maxminB[0];\r\n    var minB = maxminB[1];\r\n    if(maxA<minB || maxB<minA){\r\n        return false; // Separated\r\n    }\r\n    var d0 = maxA - minB;\r\n    var d1 = maxB - minA;\r\n    var depth = d0<d1 ? d0:d1;\r\n    return depth;\r\n};\r\n\r\nvar cli_aabbmin = new Vec3(),\r\n    cli_aabbmax = new Vec3();\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n */\r\nConvexPolyhedron.prototype.calculateLocalInertia = function(mass,target){\r\n    // Approximate with box inertia\r\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\r\n    this.computeLocalAABB(cli_aabbmin,cli_aabbmax);\r\n    var x = cli_aabbmax.x - cli_aabbmin.x,\r\n        y = cli_aabbmax.y - cli_aabbmin.y,\r\n        z = cli_aabbmax.z - cli_aabbmin.z;\r\n    target.x = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z );\r\n    target.y = 1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z );\r\n    target.z = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x );\r\n};\r\n\r\n/**\r\n * @method getPlaneConstantOfFace\r\n * @param  {Number} face_i Index of the face\r\n * @return {Number}\r\n */\r\nConvexPolyhedron.prototype.getPlaneConstantOfFace = function(face_i){\r\n    var f = this.faces[face_i];\r\n    var n = this.faceNormals[face_i];\r\n    var v = this.vertices[f[0]];\r\n    var c = -n.dot(v);\r\n    return c;\r\n};\r\n\r\n/**\r\n * Clip a face against a hull.\r\n * @method clipFaceAgainstHull\r\n * @param {Vec3} separatingNormal\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {Array} worldVertsB1 An array of Vec3 with vertices in the world frame.\r\n * @param {Number} minDist Distance clamping\r\n * @param {Number} maxDist\r\n * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\r\n */\r\nvar cfah_faceANormalWS = new Vec3(),\r\n    cfah_edge0 = new Vec3(),\r\n    cfah_WorldEdge0 = new Vec3(),\r\n    cfah_worldPlaneAnormal1 = new Vec3(),\r\n    cfah_planeNormalWS1 = new Vec3(),\r\n    cfah_worldA1 = new Vec3(),\r\n    cfah_localPlaneNormal = new Vec3(),\r\n    cfah_planeNormalWS = new Vec3();\r\nConvexPolyhedron.prototype.clipFaceAgainstHull = function(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist,result){\r\n    var faceANormalWS = cfah_faceANormalWS,\r\n        edge0 = cfah_edge0,\r\n        WorldEdge0 = cfah_WorldEdge0,\r\n        worldPlaneAnormal1 = cfah_worldPlaneAnormal1,\r\n        planeNormalWS1 = cfah_planeNormalWS1,\r\n        worldA1 = cfah_worldA1,\r\n        localPlaneNormal = cfah_localPlaneNormal,\r\n        planeNormalWS = cfah_planeNormalWS;\r\n\r\n    var hullA = this;\r\n    var worldVertsB2 = [];\r\n    var pVtxIn = worldVertsB1;\r\n    var pVtxOut = worldVertsB2;\r\n    // Find the face with normal closest to the separating axis\r\n    var closestFaceA = -1;\r\n    var dmin = Number.MAX_VALUE;\r\n    for(var face=0; face<hullA.faces.length; face++){\r\n        faceANormalWS.copy(hullA.faceNormals[face]);\r\n        quatA.vmult(faceANormalWS,faceANormalWS);\r\n        //posA.vadd(faceANormalWS,faceANormalWS);\r\n        var d = faceANormalWS.dot(separatingNormal);\r\n        if (d < dmin){\r\n            dmin = d;\r\n            closestFaceA = face;\r\n        }\r\n    }\r\n    if (closestFaceA < 0){\r\n        // console.log(\"--- did not find any closest face... ---\");\r\n        return;\r\n    }\r\n    //console.log(\"closest A: \",closestFaceA);\r\n    // Get the face and construct connected faces\r\n    var polyA = hullA.faces[closestFaceA];\r\n    polyA.connectedFaces = [];\r\n    for(var i=0; i<hullA.faces.length; i++){\r\n        for(var j=0; j<hullA.faces[i].length; j++){\r\n            if(polyA.indexOf(hullA.faces[i][j])!==-1 /* Sharing a vertex*/ && i!==closestFaceA /* Not the one we are looking for connections from */ && polyA.connectedFaces.indexOf(i)===-1 /* Not already added */ ){\r\n                polyA.connectedFaces.push(i);\r\n            }\r\n        }\r\n    }\r\n    // Clip the polygon to the back of the planes of all faces of hull A, that are adjacent to the witness face\r\n    var numContacts = pVtxIn.length;\r\n    var numVerticesA = polyA.length;\r\n    var res = [];\r\n    for(var e0=0; e0<numVerticesA; e0++){\r\n        var a = hullA.vertices[polyA[e0]];\r\n        var b = hullA.vertices[polyA[(e0+1)%numVerticesA]];\r\n        a.vsub(b,edge0);\r\n        WorldEdge0.copy(edge0);\r\n        quatA.vmult(WorldEdge0,WorldEdge0);\r\n        posA.vadd(WorldEdge0,WorldEdge0);\r\n        worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);//transA.getBasis()* btVector3(polyA.m_plane[0],polyA.m_plane[1],polyA.m_plane[2]);\r\n        quatA.vmult(worldPlaneAnormal1,worldPlaneAnormal1);\r\n        posA.vadd(worldPlaneAnormal1,worldPlaneAnormal1);\r\n        WorldEdge0.cross(worldPlaneAnormal1,planeNormalWS1);\r\n        planeNormalWS1.negate(planeNormalWS1);\r\n        worldA1.copy(a);\r\n        quatA.vmult(worldA1,worldA1);\r\n        posA.vadd(worldA1,worldA1);\r\n        var planeEqWS1 = -worldA1.dot(planeNormalWS1);\r\n        var planeEqWS;\r\n        if(true){\r\n            var otherFace = polyA.connectedFaces[e0];\r\n            localPlaneNormal.copy(this.faceNormals[otherFace]);\r\n            var localPlaneEq = this.getPlaneConstantOfFace(otherFace);\r\n\r\n            planeNormalWS.copy(localPlaneNormal);\r\n            quatA.vmult(planeNormalWS,planeNormalWS);\r\n            //posA.vadd(planeNormalWS,planeNormalWS);\r\n            var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\r\n        } else  {\r\n            planeNormalWS.copy(planeNormalWS1);\r\n            planeEqWS = planeEqWS1;\r\n        }\r\n\r\n        // Clip face against our constructed plane\r\n        this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS);\r\n\r\n        // Throw away all clipped points, but save the reamining until next clip\r\n        while(pVtxIn.length){\r\n            pVtxIn.shift();\r\n        }\r\n        while(pVtxOut.length){\r\n            pVtxIn.push(pVtxOut.shift());\r\n        }\r\n    }\r\n\r\n    //console.log(\"Resulting points after clip:\",pVtxIn);\r\n\r\n    // only keep contact points that are behind the witness face\r\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\r\n\r\n    var localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\r\n    planeNormalWS.copy(localPlaneNormal);\r\n    quatA.vmult(planeNormalWS,planeNormalWS);\r\n\r\n    var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\r\n    for (var i=0; i<pVtxIn.length; i++){\r\n        var depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; //???\r\n        /*console.log(\"depth calc from normal=\",planeNormalWS.toString(),\" and constant \"+planeEqWS+\" and vertex \",pVtxIn[i].toString(),\" gives \"+depth);*/\r\n        if (depth <=minDist){\r\n            console.log(\"clamped: depth=\"+depth+\" to minDist=\"+(minDist+\"\"));\r\n            depth = minDist;\r\n        }\r\n\r\n        if (depth <=maxDist){\r\n            var point = pVtxIn[i];\r\n            if(depth<=0){\r\n                /*console.log(\"Got contact point \",point.toString(),\r\n                  \", depth=\",depth,\r\n                  \"contact normal=\",separatingNormal.toString(),\r\n                  \"plane\",planeNormalWS.toString(),\r\n                  \"planeConstant\",planeEqWS);*/\r\n                var p = {\r\n                    point:point,\r\n                    normal:planeNormalWS,\r\n                    depth: depth,\r\n                };\r\n                result.push(p);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Clip a face in a hull against the back of a plane.\r\n * @method clipFaceAgainstPlane\r\n * @param {Array} inVertices\r\n * @param {Array} outVertices\r\n * @param {Vec3} planeNormal\r\n * @param {Number} planeConstant The constant in the mathematical plane equation\r\n */\r\nConvexPolyhedron.prototype.clipFaceAgainstPlane = function(inVertices,outVertices, planeNormal, planeConstant){\r\n    var n_dot_first, n_dot_last;\r\n    var numVerts = inVertices.length;\r\n\r\n    if(numVerts < 2){\r\n        return outVertices;\r\n    }\r\n\r\n    var firstVertex = inVertices[inVertices.length-1],\r\n        lastVertex =   inVertices[0];\r\n\r\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\r\n\r\n    for(var vi = 0; vi < numVerts; vi++){\r\n        lastVertex = inVertices[vi];\r\n        n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\r\n        if(n_dot_first < 0){\r\n            if(n_dot_last < 0){\r\n                // Start < 0, end < 0, so output lastVertex\r\n                var newv = new Vec3();\r\n                newv.copy(lastVertex);\r\n                outVertices.push(newv);\r\n            } else {\r\n                // Start < 0, end >= 0, so output intersection\r\n                var newv = new Vec3();\r\n                firstVertex.lerp(lastVertex,\r\n                                 n_dot_first / (n_dot_first - n_dot_last),\r\n                                 newv);\r\n                outVertices.push(newv);\r\n            }\r\n        } else {\r\n            if(n_dot_last<0){\r\n                // Start >= 0, end < 0 so output intersection and end\r\n                var newv = new Vec3();\r\n                firstVertex.lerp(lastVertex,\r\n                                 n_dot_first / (n_dot_first - n_dot_last),\r\n                                 newv);\r\n                outVertices.push(newv);\r\n                outVertices.push(lastVertex);\r\n            }\r\n        }\r\n        firstVertex = lastVertex;\r\n        n_dot_first = n_dot_last;\r\n    }\r\n    return outVertices;\r\n};\r\n\r\n// Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\r\nConvexPolyhedron.prototype.computeWorldVertices = function(position,quat){\r\n    var N = this.vertices.length;\r\n    while(this.worldVertices.length < N){\r\n        this.worldVertices.push( new Vec3() );\r\n    }\r\n\r\n    var verts = this.vertices,\r\n        worldVerts = this.worldVertices;\r\n    for(var i=0; i!==N; i++){\r\n        quat.vmult( verts[i] , worldVerts[i] );\r\n        position.vadd( worldVerts[i] , worldVerts[i] );\r\n    }\r\n\r\n    this.worldVerticesNeedsUpdate = false;\r\n};\r\n\r\nvar computeLocalAABB_worldVert = new Vec3();\r\nConvexPolyhedron.prototype.computeLocalAABB = function(aabbmin,aabbmax){\r\n    var n = this.vertices.length,\r\n        vertices = this.vertices,\r\n        worldVert = computeLocalAABB_worldVert;\r\n\r\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n\r\n    for(var i=0; i<n; i++){\r\n        var v = vertices[i];\r\n        if     (v.x < aabbmin.x){\r\n            aabbmin.x = v.x;\r\n        } else if(v.x > aabbmax.x){\r\n            aabbmax.x = v.x;\r\n        }\r\n        if     (v.y < aabbmin.y){\r\n            aabbmin.y = v.y;\r\n        } else if(v.y > aabbmax.y){\r\n            aabbmax.y = v.y;\r\n        }\r\n        if     (v.z < aabbmin.z){\r\n            aabbmin.z = v.z;\r\n        } else if(v.z > aabbmax.z){\r\n            aabbmax.z = v.z;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\r\n * @method computeWorldFaceNormals\r\n * @param  {Quaternion} quat\r\n */\r\nConvexPolyhedron.prototype.computeWorldFaceNormals = function(quat){\r\n    var N = this.faceNormals.length;\r\n    while(this.worldFaceNormals.length < N){\r\n        this.worldFaceNormals.push( new Vec3() );\r\n    }\r\n\r\n    var normals = this.faceNormals,\r\n        worldNormals = this.worldFaceNormals;\r\n    for(var i=0; i!==N; i++){\r\n        quat.vmult( normals[i] , worldNormals[i] );\r\n    }\r\n\r\n    this.worldFaceNormalsNeedsUpdate = false;\r\n};\r\n\r\n/**\r\n * @method updateBoundingSphereRadius\r\n */\r\nConvexPolyhedron.prototype.updateBoundingSphereRadius = function(){\r\n    // Assume points are distributed with local (0,0,0) as center\r\n    var max2 = 0;\r\n    var verts = this.vertices;\r\n    for(var i=0, N=verts.length; i!==N; i++) {\r\n        var norm2 = verts[i].norm2();\r\n        if(norm2 > max2){\r\n            max2 = norm2;\r\n        }\r\n    }\r\n    this.boundingSphereRadius = Math.sqrt(max2);\r\n};\r\n\r\nvar tempWorldVertex = new Vec3();\r\n\r\n/**\r\n * @method calculateWorldAABB\r\n * @param {Vec3}        pos\r\n * @param {Quaternion}  quat\r\n * @param {Vec3}        min\r\n * @param {Vec3}        max\r\n */\r\nConvexPolyhedron.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    var n = this.vertices.length, verts = this.vertices;\r\n    var minx,miny,minz,maxx,maxy,maxz;\r\n    for(var i=0; i<n; i++){\r\n        tempWorldVertex.copy(verts[i]);\r\n        quat.vmult(tempWorldVertex,tempWorldVertex);\r\n        pos.vadd(tempWorldVertex,tempWorldVertex);\r\n        var v = tempWorldVertex;\r\n        if     (v.x < minx || minx===undefined){\r\n            minx = v.x;\r\n        } else if(v.x > maxx || maxx===undefined){\r\n            maxx = v.x;\r\n        }\r\n\r\n        if     (v.y < miny || miny===undefined){\r\n            miny = v.y;\r\n        } else if(v.y > maxy || maxy===undefined){\r\n            maxy = v.y;\r\n        }\r\n\r\n        if     (v.z < minz || minz===undefined){\r\n            minz = v.z;\r\n        } else if(v.z > maxz || maxz===undefined){\r\n            maxz = v.z;\r\n        }\r\n    }\r\n    min.set(minx,miny,minz);\r\n    max.set(maxx,maxy,maxz);\r\n};\r\n\r\n/**\r\n * Get approximate convex volume\r\n * @method volume\r\n * @return {Number}\r\n */\r\nConvexPolyhedron.prototype.volume = function(){\r\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\r\n};\r\n\r\n/**\r\n * Get an average of all the vertices positions\r\n * @method getAveragePointLocal\r\n * @param  {Vec3} target\r\n * @return {Vec3}\r\n */\r\nConvexPolyhedron.prototype.getAveragePointLocal = function(target){\r\n    target = target || new Vec3();\r\n    var n = this.vertices.length,\r\n        verts = this.vertices;\r\n    for(var i=0; i<n; i++){\r\n        target.vadd(verts[i],target);\r\n    }\r\n    target.mult(1/n,target);\r\n    return target;\r\n};\r\n\r\n/**\r\n * Transform all local points. Will change the .vertices\r\n * @method transformAllPoints\r\n * @param  {Vec3} offset\r\n * @param  {Quaternion} quat\r\n */\r\nConvexPolyhedron.prototype.transformAllPoints = function(offset,quat){\r\n    var n = this.vertices.length,\r\n        verts = this.vertices;\r\n\r\n    // Apply rotation\r\n    if(quat){\r\n        // Rotate vertices\r\n        for(var i=0; i<n; i++){\r\n            var v = verts[i];\r\n            quat.vmult(v,v);\r\n        }\r\n        // Rotate face normals\r\n        for(var i=0; i<this.faceNormals.length; i++){\r\n            var v = this.faceNormals[i];\r\n            quat.vmult(v,v);\r\n        }\r\n        /*\r\n        // Rotate edges\r\n        for(var i=0; i<this.uniqueEdges.length; i++){\r\n            var v = this.uniqueEdges[i];\r\n            quat.vmult(v,v);\r\n        }*/\r\n    }\r\n\r\n    // Apply offset\r\n    if(offset){\r\n        for(var i=0; i<n; i++){\r\n            var v = verts[i];\r\n            v.vadd(offset,v);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Checks whether p is inside the polyhedra. Must be in local coords. The point lies outside of the convex hull of the other points if and only if the direction of all the vectors from it to those other points are on less than one half of a sphere around it.\r\n * @method pointIsInside\r\n * @param  {Vec3} p      A point given in local coordinates\r\n * @return {Boolean}\r\n */\r\nvar ConvexPolyhedron_pointIsInside = new Vec3();\r\nvar ConvexPolyhedron_vToP = new Vec3();\r\nvar ConvexPolyhedron_vToPointInside = new Vec3();\r\nConvexPolyhedron.prototype.pointIsInside = function(p){\r\n    var n = this.vertices.length,\r\n        verts = this.vertices,\r\n        faces = this.faces,\r\n        normals = this.faceNormals;\r\n    var positiveResult = null;\r\n    var N = this.faces.length;\r\n    var pointInside = ConvexPolyhedron_pointIsInside;\r\n    this.getAveragePointLocal(pointInside);\r\n    for(var i=0; i<N; i++){\r\n        var numVertices = this.faces[i].length;\r\n        var n = normals[i];\r\n        var v = verts[faces[i][0]]; // We only need one point in the face\r\n\r\n        // This dot product determines which side of the edge the point is\r\n        var vToP = ConvexPolyhedron_vToP;\r\n        p.vsub(v,vToP);\r\n        var r1 = n.dot(vToP);\r\n\r\n        var vToPointInside = ConvexPolyhedron_vToPointInside;\r\n        pointInside.vsub(v,vToPointInside);\r\n        var r2 = n.dot(vToPointInside);\r\n\r\n        if((r1<0 && r2>0) || (r1>0 && r2<0)){\r\n            return false; // Encountered some other sign. Exit.\r\n        } else {\r\n        }\r\n    }\r\n\r\n    // If we got here, all dot products were of the same sign.\r\n    return positiveResult ? 1 : -1;\r\n};\r\n\r\n/**\r\n * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis. Results are saved in the array maxmin.\r\n * @static\r\n * @method project\r\n * @param {ConvexPolyhedron} hull\r\n * @param {Vec3} axis\r\n * @param {Vec3} pos\r\n * @param {Quaternion} quat\r\n * @param {array} result result[0] and result[1] will be set to maximum and minimum, respectively.\r\n */\r\nvar project_worldVertex = new Vec3();\r\nvar project_localAxis = new Vec3();\r\nvar project_localOrigin = new Vec3();\r\nConvexPolyhedron.project = function(hull, axis, pos, quat, result){\r\n    var n = hull.vertices.length,\r\n        worldVertex = project_worldVertex,\r\n        localAxis = project_localAxis,\r\n        max = 0,\r\n        min = 0,\r\n        localOrigin = project_localOrigin,\r\n        vs = hull.vertices;\r\n\r\n    localOrigin.setZero();\r\n\r\n    // Transform the axis to local\r\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\r\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\r\n    var add = localOrigin.dot(localAxis);\r\n\r\n    min = max = vs[0].dot(localAxis);\r\n\r\n    for(var i = 1; i < n; i++){\r\n        var val = vs[i].dot(localAxis);\r\n\r\n        if(val > max){\r\n            max = val;\r\n        }\r\n\r\n        if(val < min){\r\n            min = val;\r\n        }\r\n    }\r\n\r\n    min -= add;\r\n    max -= add;\r\n\r\n    if(min > max){\r\n        // Inconsistent - swap\r\n        var temp = min;\r\n        min = max;\r\n        max = temp;\r\n    }\r\n    // Output\r\n    result[0] = max;\r\n    result[1] = min;\r\n};\r\n\r\n},{\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"./Shape\":43}],39:[function(_dereq_,module,exports){\r\nmodule.exports = Cylinder;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\r\n\r\n/**\r\n * @class Cylinder\r\n * @constructor\r\n * @extends ConvexPolyhedron\r\n * @author schteppe / https://github.com/schteppe\r\n * @param {Number} radiusTop\r\n * @param {Number} radiusBottom\r\n * @param {Number} height\r\n * @param {Number} numSegments The number of segments to build the cylinder out of\r\n */\r\nfunction Cylinder( radiusTop, radiusBottom, height , numSegments ) {\r\n    var N = numSegments,\r\n        verts = [],\r\n        axes = [],\r\n        faces = [],\r\n        bottomface = [],\r\n        topface = [],\r\n        cos = Math.cos,\r\n        sin = Math.sin;\r\n\r\n    // First bottom point\r\n    verts.push(new Vec3(radiusBottom*cos(0),\r\n                               radiusBottom*sin(0),\r\n                               -height*0.5));\r\n    bottomface.push(0);\r\n\r\n    // First top point\r\n    verts.push(new Vec3(radiusTop*cos(0),\r\n                               radiusTop*sin(0),\r\n                               height*0.5));\r\n    topface.push(1);\r\n\r\n    for(var i=0; i<N; i++){\r\n        var theta = 2*Math.PI/N * (i+1);\r\n        var thetaN = 2*Math.PI/N * (i+0.5);\r\n        if(i<N-1){\r\n            // Bottom\r\n            verts.push(new Vec3(radiusBottom*cos(theta),\r\n                                       radiusBottom*sin(theta),\r\n                                       -height*0.5));\r\n            bottomface.push(2*i+2);\r\n            // Top\r\n            verts.push(new Vec3(radiusTop*cos(theta),\r\n                                       radiusTop*sin(theta),\r\n                                       height*0.5));\r\n            topface.push(2*i+3);\r\n\r\n            // Face\r\n            faces.push([2*i+2, 2*i+3, 2*i+1,2*i]);\r\n        } else {\r\n            faces.push([0,1, 2*i+1, 2*i]); // Connect\r\n        }\r\n\r\n        // Axis: we can cut off half of them if we have even number of segments\r\n        if(N % 2 === 1 || i < N / 2){\r\n            axes.push(new Vec3(cos(thetaN), sin(thetaN), 0));\r\n        }\r\n    }\r\n    faces.push(topface);\r\n    axes.push(new Vec3(0,0,1));\r\n\r\n    // Reorder bottom face\r\n    var temp = [];\r\n    for(var i=0; i<bottomface.length; i++){\r\n        temp.push(bottomface[bottomface.length - i - 1]);\r\n    }\r\n    faces.push(temp);\r\n\r\n    this.type = Shape.types.CONVEXPOLYHEDRON;\r\n    ConvexPolyhedron.call( this, verts, faces, axes );\r\n}\r\n\r\nCylinder.prototype = new ConvexPolyhedron();\r\n\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],40:[function(_dereq_,module,exports){\r\nvar Shape = _dereq_('./Shape');\r\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = Heightfield;\r\n\r\n/**\r\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\r\n * @class Heightfield\r\n * @extends Shape\r\n * @constructor\r\n * @param {Array} data An array of Y values that will be used to construct the terrain.\r\n * @param {object} options\r\n * @param {Number} [options.minValue] Minimum value of the data points in the data array. Will be computed automatically if not given.\r\n * @param {Number} [options.maxValue] Maximum value.\r\n * @param {Number} [options.elementSize=0.1] World spacing between the data points in X direction.\r\n * @todo Should be possible to use along all axes, not just y\r\n *\r\n * @example\r\n *     // Generate some height data (y-values).\r\n *     var data = [];\r\n *     for(var i = 0; i < 1000; i++){\r\n *         var y = 0.5 * Math.cos(0.2 * i);\r\n *         data.push(y);\r\n *     }\r\n *\r\n *     // Create the heightfield shape\r\n *     var heightfieldShape = new Heightfield(data, {\r\n *         elementSize: 1 // Distance between the data points in X and Y directions\r\n *     });\r\n *     var heightfieldBody = new Body();\r\n *     heightfieldBody.addShape(heightfieldShape);\r\n *     world.addBody(heightfieldBody);\r\n */\r\nfunction Heightfield(data, options){\r\n    options = Utils.defaults(options, {\r\n        maxValue : null,\r\n        minValue : null,\r\n        elementSize : 1\r\n    });\r\n\r\n    /**\r\n     * An array of numbers, or height values, that are spread out along the x axis.\r\n     * @property {array} data\r\n     */\r\n    this.data = data;\r\n\r\n    /**\r\n     * Max value of the data\r\n     * @property {number} maxValue\r\n     */\r\n    this.maxValue = options.maxValue;\r\n\r\n    /**\r\n     * Max value of the data\r\n     * @property {number} minValue\r\n     */\r\n    this.minValue = options.minValue;\r\n\r\n    /**\r\n     * The width of each element\r\n     * @property {number} elementSize\r\n     * @todo elementSizeX and Y\r\n     */\r\n    this.elementSize = options.elementSize;\r\n\r\n    if(options.minValue === null){\r\n        this.updateMinValue();\r\n    }\r\n    if(options.maxValue === null){\r\n        this.updateMaxValue();\r\n    }\r\n\r\n    this.cacheEnabled = true;\r\n\r\n    Shape.call(this);\r\n\r\n    this.pillarConvex = new ConvexPolyhedron();\r\n    this.pillarOffset = new Vec3();\r\n\r\n    this.type = Shape.types.HEIGHTFIELD;\r\n    this.updateBoundingSphereRadius();\r\n\r\n    // \"i_j_isUpper\" => { convex: ..., offset: ... }\r\n    // for example:\r\n    // _cachedPillars[\"0_2_1\"]\r\n    this._cachedPillars = {};\r\n}\r\nHeightfield.prototype = new Shape();\r\n\r\n/**\r\n * Call whenever you change the data array.\r\n * @method update\r\n */\r\nHeightfield.prototype.update = function(){\r\n    this._cachedPillars = {};\r\n};\r\n\r\n/**\r\n * Update the .minValue property\r\n * @method updateMinValue\r\n */\r\nHeightfield.prototype.updateMinValue = function(){\r\n    var data = this.data;\r\n    var minValue = data[0][0];\r\n    for(var i=0; i !== data.length; i++){\r\n        for(var j=0; j !== data[i].length; j++){\r\n            var v = data[i][j];\r\n            if(v < minValue){\r\n                minValue = v;\r\n            }\r\n        }\r\n    }\r\n    this.minValue = minValue;\r\n};\r\n\r\n/**\r\n * Update the .maxValue property\r\n * @method updateMaxValue\r\n */\r\nHeightfield.prototype.updateMaxValue = function(){\r\n    var data = this.data;\r\n    var maxValue = data[0][0];\r\n    for(var i=0; i !== data.length; i++){\r\n        for(var j=0; j !== data[i].length; j++){\r\n            var v = data[i][j];\r\n            if(v > maxValue){\r\n                maxValue = v;\r\n            }\r\n        }\r\n    }\r\n    this.maxValue = maxValue;\r\n};\r\n\r\n/**\r\n * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\r\n * @method setHeightValueAtIndex\r\n * @param {integer} xi\r\n * @param {integer} yi\r\n * @param {number} value\r\n */\r\nHeightfield.prototype.setHeightValueAtIndex = function(xi, yi, value){\r\n    var data = this.data;\r\n    data[xi][yi] = value;\r\n\r\n    // Invalidate cache\r\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\r\n    if(xi > 0){\r\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\r\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\r\n    }\r\n    if(yi > 0){\r\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\r\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\r\n    }\r\n    if(yi > 0 && xi > 0){\r\n        this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\r\n    }\r\n};\r\n\r\n/**\r\n * Get max/min in a rectangle in the matrix data\r\n * @method getRectMinMax\r\n * @param  {integer} iMinX\r\n * @param  {integer} iMinY\r\n * @param  {integer} iMaxX\r\n * @param  {integer} iMaxY\r\n * @param  {array} [result] An array to store the results in.\r\n * @return {array} The result array, if it was passed in. Minimum will be at position 0 and max at 1.\r\n */\r\nHeightfield.prototype.getRectMinMax = function (iMinX, iMinY, iMaxX, iMaxY, result) {\r\n    result = result || [];\r\n\r\n    // Get max and min of the data\r\n    var data = this.data,\r\n        max = this.minValue; // Set first value\r\n    for(var i = iMinX; i <= iMaxX; i++){\r\n        for(var j = iMinY; j <= iMaxY; j++){\r\n            var height = data[i][j];\r\n            if(height > max){\r\n                max = height;\r\n            }\r\n        }\r\n    }\r\n\r\n    result[0] = this.minValue;\r\n    result[1] = max;\r\n};\r\n\r\n/**\r\n * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\r\n * @method getIndexOfPosition\r\n * @param  {number} x\r\n * @param  {number} y\r\n * @param  {array} result Two-element array\r\n * @param  {boolean} clamp If the position should be clamped to the heightfield edge.\r\n * @return {boolean}\r\n */\r\nHeightfield.prototype.getIndexOfPosition = function (x, y, result, clamp) {\r\n\r\n    // Get the index of the data points to test against\r\n    var w = this.elementSize;\r\n    var data = this.data;\r\n    var xi = Math.floor(x / w);\r\n    var yi = Math.floor(y / w);\r\n\r\n    result[0] = xi;\r\n    result[1] = yi;\r\n\r\n    if(clamp){\r\n        // Clamp index to edges\r\n        if(xi < 0){ xi = 0; }\r\n        if(yi < 0){ yi = 0; }\r\n        if(xi >= data.length - 1){ xi = data.length - 1; }\r\n        if(yi >= data[0].length - 1){ yi = data[0].length - 1; }\r\n    }\r\n\r\n    // Bail out if we are out of the terrain\r\n    if(xi < 0 || yi < 0 || xi >= data.length-1 || yi >= data[0].length-1){\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nHeightfield.prototype.getHeightAt = function(x, y, edgeClamp){\r\n    var idx = [];\r\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\r\n\r\n    // TODO: get upper or lower triangle, then use barycentric interpolation to get the height in the triangle.\r\n    var minmax = [];\r\n    this.getRectMinMax(idx[0], idx[1] + 1, idx[0], idx[1] + 1, minmax);\r\n\r\n    return (minmax[0] + minmax[1]) / 2; // average\r\n};\r\n\r\nHeightfield.prototype.getCacheConvexTrianglePillarKey = function(xi, yi, getUpperTriangle){\r\n    return xi + '_' + yi + '_' + (getUpperTriangle ? 1 : 0);\r\n};\r\n\r\nHeightfield.prototype.getCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\r\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\r\n};\r\n\r\nHeightfield.prototype.setCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle, convex, offset){\r\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\r\n        convex: convex,\r\n        offset: offset\r\n    };\r\n};\r\n\r\nHeightfield.prototype.clearCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\r\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\r\n};\r\n\r\n/**\r\n * Get a triangle in the terrain in the form of a triangular convex shape.\r\n * @method getConvexTrianglePillar\r\n * @param  {integer} i\r\n * @param  {integer} j\r\n * @param  {boolean} getUpperTriangle\r\n */\r\nHeightfield.prototype.getConvexTrianglePillar = function(xi, yi, getUpperTriangle){\r\n    var result = this.pillarConvex;\r\n    var offsetResult = this.pillarOffset;\r\n\r\n    if(this.cacheEnabled){\r\n        var data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\r\n        if(data){\r\n            this.pillarConvex = data.convex;\r\n            this.pillarOffset = data.offset;\r\n            return;\r\n        }\r\n\r\n        result = new ConvexPolyhedron();\r\n        offsetResult = new Vec3();\r\n\r\n        this.pillarConvex = result;\r\n        this.pillarOffset = offsetResult;\r\n    }\r\n\r\n    var data = this.data;\r\n    var elementSize = this.elementSize;\r\n    var faces = result.faces;\r\n\r\n    // Reuse verts if possible\r\n    result.vertices.length = 6;\r\n    for (var i = 0; i < 6; i++) {\r\n        if(!result.vertices[i]){\r\n            result.vertices[i] = new Vec3();\r\n        }\r\n    }\r\n\r\n    // Reuse faces if possible\r\n    faces.length = 5;\r\n    for (var i = 0; i < 5; i++) {\r\n        if(!faces[i]){\r\n            faces[i] = [];\r\n        }\r\n    }\r\n\r\n    var verts = result.vertices;\r\n\r\n    var h = (Math.min(\r\n        data[xi][yi],\r\n        data[xi+1][yi],\r\n        data[xi][yi+1],\r\n        data[xi+1][yi+1]\r\n    ) - this.minValue ) / 2 + this.minValue;\r\n\r\n    if (!getUpperTriangle) {\r\n\r\n        // Center of the triangle pillar - all polygons are given relative to this one\r\n        offsetResult.set(\r\n            (xi + 0.25) * elementSize, // sort of center of a triangle\r\n            (yi + 0.25) * elementSize,\r\n            h // vertical center\r\n        );\r\n\r\n        // Top triangle verts\r\n        verts[0].set(\r\n            -0.25 * elementSize,\r\n            -0.25 * elementSize,\r\n            data[xi][yi] - h\r\n        );\r\n        verts[1].set(\r\n            0.75 * elementSize,\r\n            -0.25 * elementSize,\r\n            data[xi + 1][yi] - h\r\n        );\r\n        verts[2].set(\r\n            -0.25 * elementSize,\r\n            0.75 * elementSize,\r\n            data[xi][yi + 1] - h\r\n        );\r\n\r\n        // bottom triangle verts\r\n        verts[3].set(\r\n            -0.25 * elementSize,\r\n            -0.25 * elementSize,\r\n            -h-1\r\n        );\r\n        verts[4].set(\r\n            0.75 * elementSize,\r\n            -0.25 * elementSize,\r\n            -h-1\r\n        );\r\n        verts[5].set(\r\n            -0.25 * elementSize,\r\n            0.75  * elementSize,\r\n            -h-1\r\n        );\r\n\r\n        // top triangle\r\n        faces[0][0] = 0;\r\n        faces[0][1] = 1;\r\n        faces[0][2] = 2;\r\n\r\n        // bottom triangle\r\n        faces[1][0] = 5;\r\n        faces[1][1] = 4;\r\n        faces[1][2] = 3;\r\n\r\n        // -x facing quad\r\n        faces[2][0] = 0;\r\n        faces[2][1] = 2;\r\n        faces[2][2] = 5;\r\n        faces[2][3] = 3;\r\n\r\n        // -y facing quad\r\n        faces[3][0] = 1;\r\n        faces[3][1] = 0;\r\n        faces[3][2] = 3;\r\n        faces[3][3] = 4;\r\n\r\n        // +xy facing quad\r\n        faces[4][0] = 4;\r\n        faces[4][1] = 5;\r\n        faces[4][2] = 2;\r\n        faces[4][3] = 1;\r\n\r\n\r\n    } else {\r\n\r\n        // Center of the triangle pillar - all polygons are given relative to this one\r\n        offsetResult.set(\r\n            (xi + 0.75) * elementSize, // sort of center of a triangle\r\n            (yi + 0.75) * elementSize,\r\n            h // vertical center\r\n        );\r\n\r\n        // Top triangle verts\r\n        verts[0].set(\r\n            0.25 * elementSize,\r\n            0.25 * elementSize,\r\n            data[xi + 1][yi + 1] - h\r\n        );\r\n        verts[1].set(\r\n            -0.75 * elementSize,\r\n            0.25 * elementSize,\r\n            data[xi][yi + 1] - h\r\n        );\r\n        verts[2].set(\r\n            0.25 * elementSize,\r\n            -0.75 * elementSize,\r\n            data[xi + 1][yi] - h\r\n        );\r\n\r\n        // bottom triangle verts\r\n        verts[3].set(\r\n            0.25 * elementSize,\r\n            0.25 * elementSize,\r\n            - h-1\r\n        );\r\n        verts[4].set(\r\n            -0.75 * elementSize,\r\n            0.25 * elementSize,\r\n            - h-1\r\n        );\r\n        verts[5].set(\r\n            0.25 * elementSize,\r\n            -0.75 * elementSize,\r\n            - h-1\r\n        );\r\n\r\n        // Top triangle\r\n        faces[0][0] = 0;\r\n        faces[0][1] = 1;\r\n        faces[0][2] = 2;\r\n\r\n        // bottom triangle\r\n        faces[1][0] = 5;\r\n        faces[1][1] = 4;\r\n        faces[1][2] = 3;\r\n\r\n        // +x facing quad\r\n        faces[2][0] = 2;\r\n        faces[2][1] = 5;\r\n        faces[2][2] = 3;\r\n        faces[2][3] = 0;\r\n\r\n        // +y facing quad\r\n        faces[3][0] = 3;\r\n        faces[3][1] = 4;\r\n        faces[3][2] = 1;\r\n        faces[3][3] = 0;\r\n\r\n        // -xy facing quad\r\n        faces[4][0] = 1;\r\n        faces[4][1] = 4;\r\n        faces[4][2] = 5;\r\n        faces[4][3] = 2;\r\n    }\r\n\r\n    result.computeNormals();\r\n    result.computeEdges();\r\n    result.updateBoundingSphereRadius();\r\n\r\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\r\n};\r\n\r\nHeightfield.prototype.calculateLocalInertia = function(mass, target){\r\n    target = target || new Vec3();\r\n    target.set(0, 0, 0);\r\n    return target;\r\n};\r\n\r\nHeightfield.prototype.volume = function(){\r\n    return Number.MAX_VALUE; // The terrain is infinite\r\n};\r\n\r\nHeightfield.prototype.calculateWorldAABB = function(pos, quat, min, max){\r\n    // TODO: do it properly\r\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n};\r\n\r\nHeightfield.prototype.updateBoundingSphereRadius = function(){\r\n    // Use the bounding box of the min/max values\r\n    var data = this.data,\r\n        s = this.elementSize;\r\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm();\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"../utils/Utils\":53,\"./ConvexPolyhedron\":38,\"./Shape\":43}],41:[function(_dereq_,module,exports){\r\nmodule.exports = Particle;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Particle shape.\r\n * @class Particle\r\n * @constructor\r\n * @author schteppe\r\n * @extends Shape\r\n */\r\nfunction Particle(){\r\n    Shape.call(this);\r\n\r\n    this.type = Shape.types.PARTICLE;\r\n}\r\nParticle.prototype = new Shape();\r\nParticle.prototype.constructor = Particle;\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n * @return {Vec3}\r\n */\r\nParticle.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    target.set(0, 0, 0);\r\n    return target;\r\n};\r\n\r\nParticle.prototype.volume = function(){\r\n    return 0;\r\n};\r\n\r\nParticle.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = 0;\r\n};\r\n\r\nParticle.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    // Get each axis max\r\n    min.copy(pos);\r\n    max.copy(pos);\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./Shape\":43}],42:[function(_dereq_,module,exports){\r\nmodule.exports = Plane;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a RigidBody and rotate that body. See the demos.\r\n * @class Plane\r\n * @constructor\r\n * @extends Shape\r\n * @author schteppe\r\n */\r\nfunction Plane(){\r\n    Shape.call(this);\r\n    this.type = Shape.types.PLANE;\r\n\r\n    // World oriented normal\r\n    this.worldNormal = new Vec3();\r\n    this.worldNormalNeedsUpdate = true;\r\n\r\n    this.boundingSphereRadius = Number.MAX_VALUE;\r\n}\r\nPlane.prototype = new Shape();\r\nPlane.prototype.constructor = Plane;\r\n\r\nPlane.prototype.computeWorldNormal = function(quat){\r\n    var n = this.worldNormal;\r\n    n.set(0,0,1);\r\n    quat.vmult(n,n);\r\n    this.worldNormalNeedsUpdate = false;\r\n};\r\n\r\nPlane.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    return target;\r\n};\r\n\r\nPlane.prototype.volume = function(){\r\n    return Number.MAX_VALUE; // The plane is infinite...\r\n};\r\n\r\nvar tempNormal = new Vec3();\r\nPlane.prototype.calculateWorldAABB = function(pos, quat, min, max){\r\n    // The plane AABB is infinite, except if the normal is pointing along any axis\r\n    tempNormal.set(0,0,1); // Default plane normal is z\r\n    quat.vmult(tempNormal,tempNormal);\r\n    var maxVal = Number.MAX_VALUE;\r\n    min.set(-maxVal, -maxVal, -maxVal);\r\n    max.set(maxVal, maxVal, maxVal);\r\n\r\n    if(tempNormal.x === 1){ max.x = pos.x; }\r\n    if(tempNormal.y === 1){ max.y = pos.y; }\r\n    if(tempNormal.z === 1){ max.z = pos.z; }\r\n\r\n    if(tempNormal.x === -1){ min.x = pos.x; }\r\n    if(tempNormal.y === -1){ min.y = pos.y; }\r\n    if(tempNormal.z === -1){ min.z = pos.z; }\r\n};\r\n\r\nPlane.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = Number.MAX_VALUE;\r\n};\r\n},{\"../math/Vec3\":30,\"./Shape\":43}],43:[function(_dereq_,module,exports){\r\nmodule.exports = Shape;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Material = _dereq_('../material/Material');\r\n\r\n/**\r\n * Base class for shapes\r\n * @class Shape\r\n * @constructor\r\n * @author schteppe\r\n * @todo Should have a mechanism for caching bounding sphere radius instead of calculating it each time\r\n */\r\nfunction Shape(){\r\n\r\n    /**\r\n     * Identifyer of the Shape.\r\n     * @property {number} id\r\n     */\r\n    this.id = Shape.idCounter++;\r\n\r\n    /**\r\n     * The type of this shape. Must be set to an int > 0 by subclasses.\r\n     * @property type\r\n     * @type {Number}\r\n     * @see Shape.types\r\n     */\r\n    this.type = 0;\r\n\r\n    /**\r\n     * The local bounding sphere radius of this shape.\r\n     * @property {Number} boundingSphereRadius\r\n     */\r\n    this.boundingSphereRadius = 0;\r\n\r\n    /**\r\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\r\n     * @property {boolean} collisionResponse\r\n     */\r\n    this.collisionResponse = true;\r\n\r\n    /**\r\n     * @property {Material} material\r\n     */\r\n    this.material = null;\r\n}\r\nShape.prototype.constructor = Shape;\r\n\r\n/**\r\n * Computes the bounding sphere radius. The result is stored in the property .boundingSphereRadius\r\n * @method updateBoundingSphereRadius\r\n * @return {Number}\r\n */\r\nShape.prototype.updateBoundingSphereRadius = function(){\r\n    throw \"computeBoundingSphereRadius() not implemented for shape type \"+this.type;\r\n};\r\n\r\n/**\r\n * Get the volume of this shape\r\n * @method volume\r\n * @return {Number}\r\n */\r\nShape.prototype.volume = function(){\r\n    throw \"volume() not implemented for shape type \"+this.type;\r\n};\r\n\r\n/**\r\n * Calculates the inertia in the local frame for this shape.\r\n * @method calculateLocalInertia\r\n * @return {Vec3}\r\n * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\r\n */\r\nShape.prototype.calculateLocalInertia = function(mass,target){\r\n    throw \"calculateLocalInertia() not implemented for shape type \"+this.type;\r\n};\r\n\r\nShape.idCounter = 0;\r\n\r\n/**\r\n * The available shape types.\r\n * @static\r\n * @property types\r\n * @type {Object}\r\n */\r\nShape.types = {\r\n    SPHERE:1,\r\n    PLANE:2,\r\n    BOX:4,\r\n    COMPOUND:8,\r\n    CONVEXPOLYHEDRON:16,\r\n    HEIGHTFIELD:32,\r\n    PARTICLE:64,\r\n    CYLINDER:128,\r\n    TRIMESH:256\r\n};\r\n\r\n\r\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Shape\":43}],44:[function(_dereq_,module,exports){\r\nmodule.exports = Sphere;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Spherical shape\r\n * @class Sphere\r\n * @constructor\r\n * @extends Shape\r\n * @param {Number} radius The radius of the sphere, a non-negative number.\r\n * @author schteppe / http://github.com/schteppe\r\n */\r\nfunction Sphere(radius){\r\n    Shape.call(this);\r\n\r\n    /**\r\n     * @property {Number} radius\r\n     */\r\n    this.radius = radius!==undefined ? Number(radius) : 1.0;\r\n    this.type = Shape.types.SPHERE;\r\n\r\n    if(this.radius < 0){\r\n        throw new Error('The sphere radius cannot be negative.');\r\n    }\r\n\r\n    this.updateBoundingSphereRadius();\r\n}\r\nSphere.prototype = new Shape();\r\nSphere.prototype.constructor = Sphere;\r\n\r\nSphere.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    var I = 2.0*mass*this.radius*this.radius/5.0;\r\n    target.x = I;\r\n    target.y = I;\r\n    target.z = I;\r\n    return target;\r\n};\r\n\r\nSphere.prototype.volume = function(){\r\n    return 4.0 * Math.PI * this.radius / 3.0;\r\n};\r\n\r\nSphere.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = this.radius;\r\n};\r\n\r\nSphere.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    var r = this.radius;\r\n    var axes = ['x','y','z'];\r\n    for(var i=0; i<axes.length; i++){\r\n        var ax = axes[i];\r\n        min[ax] = pos[ax] - r;\r\n        max[ax] = pos[ax] + r;\r\n    }\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./Shape\":43}],45:[function(_dereq_,module,exports){\r\nmodule.exports = Trimesh;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Octree = _dereq_('../utils/Octree');\r\n\r\n/**\r\n * @class Trimesh\r\n * @constructor\r\n * @param {array} vertices\r\n * @param {array} indices\r\n * @extends Shape\r\n * @example\r\n *     // How to make a mesh with a single triangle\r\n *     var vertices = [\r\n *         0, 0, 0, // vertex 0\r\n *         1, 0, 0, // vertex 1\r\n *         0, 1, 0  // vertex 2\r\n *     ];\r\n *     var indices = [\r\n *         0, 1, 2  // triangle 0\r\n *     ];\r\n *     var trimeshShape = new Trimesh(vertices, indices);\r\n */\r\nfunction Trimesh(vertices, indices) {\r\n    Shape.call(this);\r\n    this.type = Shape.types.TRIMESH;\r\n\r\n    /**\r\n     * @property vertices\r\n     * @type {Array}\r\n     */\r\n    this.vertices = new Float32Array(vertices);\r\n\r\n    /**\r\n     * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\r\n     * @property indices\r\n     * @type {Array}\r\n     */\r\n    this.indices = new Int16Array(indices);\r\n\r\n    /**\r\n     * The normals data.\r\n     * @property normals\r\n     * @type {Array}\r\n     */\r\n    this.normals = new Float32Array(indices.length);\r\n\r\n    /**\r\n     * The local AABB of the mesh.\r\n     * @property aabb\r\n     * @type {Array}\r\n     */\r\n    this.aabb = new AABB();\r\n\r\n    /**\r\n     * References to vertex pairs, making up all unique edges in the trimesh.\r\n     * @property {array} edges\r\n     */\r\n    this.edges = null;\r\n\r\n    /**\r\n     * Local scaling of the mesh. Use .setScale() to set it.\r\n     * @property {Vec3} scale\r\n     */\r\n    this.scale = new Vec3(1, 1, 1);\r\n\r\n    /**\r\n     * The indexed triangles. Use .updateTree() to update it.\r\n     * @property {Octree} tree\r\n     */\r\n    this.tree = new Octree();\r\n\r\n    this.updateEdges();\r\n    this.updateNormals();\r\n    this.updateAABB();\r\n    this.updateBoundingSphereRadius();\r\n    this.updateTree();\r\n}\r\nTrimesh.prototype = new Shape();\r\nTrimesh.prototype.constructor = Trimesh;\r\n\r\nvar computeNormals_n = new Vec3();\r\n\r\n/**\r\n * @method updateTree\r\n */\r\nTrimesh.prototype.updateTree = function(){\r\n    var tree = this.tree;\r\n\r\n    tree.reset();\r\n    tree.aabb.copy(this.aabb);\r\n    var scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\r\n    tree.aabb.lowerBound.x *= 1 / scale.x;\r\n    tree.aabb.lowerBound.y *= 1 / scale.y;\r\n    tree.aabb.lowerBound.z *= 1 / scale.z;\r\n    tree.aabb.upperBound.x *= 1 / scale.x;\r\n    tree.aabb.upperBound.y *= 1 / scale.y;\r\n    tree.aabb.upperBound.z *= 1 / scale.z;\r\n\r\n    // Insert all triangles\r\n    var triangleAABB = new AABB();\r\n    var a = new Vec3();\r\n    var b = new Vec3();\r\n    var c = new Vec3();\r\n    var points = [a, b, c];\r\n    for (var i = 0; i < this.indices.length / 3; i++) {\r\n        //this.getTriangleVertices(i, a, b, c);\r\n\r\n        // Get unscaled triangle verts\r\n        var i3 = i * 3;\r\n        this._getUnscaledVertex(this.indices[i3], a);\r\n        this._getUnscaledVertex(this.indices[i3 + 1], b);\r\n        this._getUnscaledVertex(this.indices[i3 + 2], c);\r\n\r\n        triangleAABB.setFromPoints(points);\r\n        tree.insert(triangleAABB, i);\r\n    }\r\n    tree.removeEmptyNodes();\r\n};\r\n\r\nvar unscaledAABB = new AABB();\r\n\r\n/**\r\n * Get triangles in a local AABB from the trimesh.\r\n * @method getTrianglesInAABB\r\n * @param  {AABB} aabb\r\n * @param  {array} result An array of integers, referencing the queried triangles.\r\n */\r\nTrimesh.prototype.getTrianglesInAABB = function(aabb, result){\r\n    unscaledAABB.copy(aabb);\r\n\r\n    // Scale it to local\r\n    var scale = this.scale;\r\n    var isx = scale.x;\r\n    var isy = scale.y;\r\n    var isz = scale.z;\r\n    var l = unscaledAABB.lowerBound;\r\n    var u = unscaledAABB.upperBound;\r\n    l.x /= isx;\r\n    l.y /= isy;\r\n    l.z /= isz;\r\n    u.x /= isx;\r\n    u.y /= isy;\r\n    u.z /= isz;\r\n\r\n    return this.tree.aabbQuery(unscaledAABB, result);\r\n};\r\n\r\n/**\r\n * @method setScale\r\n * @param {Vec3} scale\r\n */\r\nTrimesh.prototype.setScale = function(scale){\r\n    var wasUniform = this.scale.x === this.scale.y === this.scale.z;\r\n    var isUniform = scale.x === scale.y === scale.z;\r\n\r\n    if(!(wasUniform && isUniform)){\r\n        // Non-uniform scaling. Need to update normals.\r\n        this.updateNormals();\r\n    }\r\n    this.scale.copy(scale);\r\n    this.updateAABB();\r\n    this.updateBoundingSphereRadius();\r\n};\r\n\r\n/**\r\n * Compute the normals of the faces. Will save in the .normals array.\r\n * @method updateNormals\r\n */\r\nTrimesh.prototype.updateNormals = function(){\r\n    var n = computeNormals_n;\r\n\r\n    // Generate normals\r\n    var normals = this.normals;\r\n    for(var i=0; i < this.indices.length / 3; i++){\r\n        var i3 = i * 3;\r\n\r\n        var a = this.indices[i3],\r\n            b = this.indices[i3 + 1],\r\n            c = this.indices[i3 + 2];\r\n\r\n        this.getVertex(a, va);\r\n        this.getVertex(b, vb);\r\n        this.getVertex(c, vc);\r\n\r\n        Trimesh.computeNormal(vb, va, vc, n);\r\n\r\n        normals[i3] = n.x;\r\n        normals[i3 + 1] = n.y;\r\n        normals[i3 + 2] = n.z;\r\n    }\r\n};\r\n\r\n/**\r\n * Update the .edges property\r\n * @method updateEdges\r\n */\r\nTrimesh.prototype.updateEdges = function(){\r\n    var edges = {};\r\n    var add = function(indexA, indexB){\r\n        var key = a < b ? a + '_' + b : b + '_' + a;\r\n        edges[key] = true;\r\n    };\r\n    for(var i=0; i < this.indices.length / 3; i++){\r\n        var i3 = i * 3;\r\n        var a = this.indices[i3],\r\n            b = this.indices[i3 + 1],\r\n            c = this.indices[i3 + 2];\r\n        add(a,b);\r\n        add(b,c);\r\n        add(c,a);\r\n    }\r\n    var keys = Object.keys(edges);\r\n    this.edges = new Int16Array(keys.length * 2);\r\n    for (var i = 0; i < keys.length; i++) {\r\n        var indices = keys[i].split('_');\r\n        this.edges[2 * i] = parseInt(indices[0], 10);\r\n        this.edges[2 * i + 1] = parseInt(indices[1], 10);\r\n    }\r\n};\r\n\r\n/**\r\n * Get an edge vertex\r\n * @method getEdgeVertex\r\n * @param  {number} edgeIndex\r\n * @param  {number} firstOrSecond 0 or 1, depending on which one of the vertices you need.\r\n * @param  {Vec3} vertexStore Where to store the result\r\n */\r\nTrimesh.prototype.getEdgeVertex = function(edgeIndex, firstOrSecond, vertexStore){\r\n    var vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\r\n    this.getVertex(vertexIndex, vertexStore);\r\n};\r\n\r\nvar getEdgeVector_va = new Vec3();\r\nvar getEdgeVector_vb = new Vec3();\r\n\r\n/**\r\n * Get a vector along an edge.\r\n * @method getEdgeVector\r\n * @param  {number} edgeIndex\r\n * @param  {Vec3} vectorStore\r\n */\r\nTrimesh.prototype.getEdgeVector = function(edgeIndex, vectorStore){\r\n    var va = getEdgeVector_va;\r\n    var vb = getEdgeVector_vb;\r\n    this.getEdgeVertex(edgeIndex, 0, va);\r\n    this.getEdgeVertex(edgeIndex, 1, vb);\r\n    vb.vsub(va, vectorStore);\r\n};\r\n\r\n/**\r\n * Get face normal given 3 vertices\r\n * @static\r\n * @method computeNormal\r\n * @param {Vec3} va\r\n * @param {Vec3} vb\r\n * @param {Vec3} vc\r\n * @param {Vec3} target\r\n */\r\nvar cb = new Vec3();\r\nvar ab = new Vec3();\r\nTrimesh.computeNormal = function ( va, vb, vc, target ) {\r\n    vb.vsub(va,ab);\r\n    vc.vsub(vb,cb);\r\n    cb.cross(ab,target);\r\n    if ( !target.isZero() ) {\r\n        target.normalize();\r\n    }\r\n};\r\n\r\nvar va = new Vec3();\r\nvar vb = new Vec3();\r\nvar vc = new Vec3();\r\n\r\n/**\r\n * Get vertex i.\r\n * @method getVertex\r\n * @param  {number} i\r\n * @param  {Vec3} out\r\n * @return {Vec3} The \"out\" vector object\r\n */\r\nTrimesh.prototype.getVertex = function(i, out){\r\n    var scale = this.scale;\r\n    this._getUnscaledVertex(i, out);\r\n    out.x *= scale.x;\r\n    out.y *= scale.y;\r\n    out.z *= scale.z;\r\n    return out;\r\n};\r\n\r\n/**\r\n * Get raw vertex i\r\n * @private\r\n * @method _getUnscaledVertex\r\n * @param  {number} i\r\n * @param  {Vec3} out\r\n * @return {Vec3} The \"out\" vector object\r\n */\r\nTrimesh.prototype._getUnscaledVertex = function(i, out){\r\n    var i3 = i * 3;\r\n    var vertices = this.vertices;\r\n    return out.set(\r\n        vertices[i3],\r\n        vertices[i3 + 1],\r\n        vertices[i3 + 2]\r\n    );\r\n};\r\n\r\n/**\r\n * Get a vertex from the trimesh,transformed by the given position and quaternion.\r\n * @method getWorldVertex\r\n * @param  {number} i\r\n * @param  {Vec3} pos\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} out\r\n * @return {Vec3} The \"out\" vector object\r\n */\r\nTrimesh.prototype.getWorldVertex = function(i, pos, quat, out){\r\n    this.getVertex(i, out);\r\n    Transform.pointToWorldFrame(pos, quat, out, out);\r\n    return out;\r\n};\r\n\r\n/**\r\n * Get the three vertices for triangle i.\r\n * @method getTriangleVertices\r\n * @param  {number} i\r\n * @param  {Vec3} a\r\n * @param  {Vec3} b\r\n * @param  {Vec3} c\r\n */\r\nTrimesh.prototype.getTriangleVertices = function(i, a, b, c){\r\n    var i3 = i * 3;\r\n    this.getVertex(this.indices[i3], a);\r\n    this.getVertex(this.indices[i3 + 1], b);\r\n    this.getVertex(this.indices[i3 + 2], c);\r\n};\r\n\r\n/**\r\n * Compute the normal of triangle i.\r\n * @method getNormal\r\n * @param  {Number} i\r\n * @param  {Vec3} target\r\n * @return {Vec3} The \"target\" vector object\r\n */\r\nTrimesh.prototype.getNormal = function(i, target){\r\n    var i3 = i * 3;\r\n    return target.set(\r\n        this.normals[i3],\r\n        this.normals[i3 + 1],\r\n        this.normals[i3 + 2]\r\n    );\r\n};\r\n\r\nvar cli_aabb = new AABB();\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n * @return {Vec3} The \"target\" vector object\r\n */\r\nTrimesh.prototype.calculateLocalInertia = function(mass,target){\r\n    // Approximate with box inertia\r\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\r\n    this.computeLocalAABB(cli_aabb);\r\n    var x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x,\r\n        y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y,\r\n        z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\r\n    return target.set(\r\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z ),\r\n        1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z ),\r\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x )\r\n    );\r\n};\r\n\r\nvar computeLocalAABB_worldVert = new Vec3();\r\n\r\n/**\r\n * Compute the local AABB for the trimesh\r\n * @method computeLocalAABB\r\n * @param  {AABB} aabb\r\n */\r\nTrimesh.prototype.computeLocalAABB = function(aabb){\r\n    var l = aabb.lowerBound,\r\n        u = aabb.upperBound,\r\n        n = this.vertices.length,\r\n        vertices = this.vertices,\r\n        v = computeLocalAABB_worldVert;\r\n\r\n    this.getVertex(0, v);\r\n    l.copy(v);\r\n    u.copy(v);\r\n\r\n    for(var i=0; i !== n; i++){\r\n        this.getVertex(i, v);\r\n\r\n        if(v.x < l.x){\r\n            l.x = v.x;\r\n        } else if(v.x > u.x){\r\n            u.x = v.x;\r\n        }\r\n\r\n        if(v.y < l.y){\r\n            l.y = v.y;\r\n        } else if(v.y > u.y){\r\n            u.y = v.y;\r\n        }\r\n\r\n        if(v.z < l.z){\r\n            l.z = v.z;\r\n        } else if(v.z > u.z){\r\n            u.z = v.z;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Update the .aabb property\r\n * @method updateAABB\r\n */\r\nTrimesh.prototype.updateAABB = function(){\r\n    this.computeLocalAABB(this.aabb);\r\n};\r\n\r\n/**\r\n * Will update the .boundingSphereRadius property\r\n * @method updateBoundingSphereRadius\r\n */\r\nTrimesh.prototype.updateBoundingSphereRadius = function(){\r\n    // Assume points are distributed with local (0,0,0) as center\r\n    var max2 = 0;\r\n    var vertices = this.vertices;\r\n    var v = new Vec3();\r\n    for(var i=0, N=vertices.length / 3; i !== N; i++) {\r\n        this.getVertex(i, v);\r\n        var norm2 = v.norm2();\r\n        if(norm2 > max2){\r\n            max2 = norm2;\r\n        }\r\n    }\r\n    this.boundingSphereRadius = Math.sqrt(max2);\r\n};\r\n\r\nvar tempWorldVertex = new Vec3();\r\nvar calculateWorldAABB_frame = new Transform();\r\nvar calculateWorldAABB_aabb = new AABB();\r\n\r\n/**\r\n * @method calculateWorldAABB\r\n * @param {Vec3}        pos\r\n * @param {Quaternion}  quat\r\n * @param {Vec3}        min\r\n * @param {Vec3}        max\r\n */\r\nTrimesh.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    /*\r\n    var n = this.vertices.length / 3,\r\n        verts = this.vertices;\r\n    var minx,miny,minz,maxx,maxy,maxz;\r\n\r\n    var v = tempWorldVertex;\r\n    for(var i=0; i<n; i++){\r\n        this.getVertex(i, v);\r\n        quat.vmult(v, v);\r\n        pos.vadd(v, v);\r\n        if (v.x < minx || minx===undefined){\r\n            minx = v.x;\r\n        } else if(v.x > maxx || maxx===undefined){\r\n            maxx = v.x;\r\n        }\r\n\r\n        if (v.y < miny || miny===undefined){\r\n            miny = v.y;\r\n        } else if(v.y > maxy || maxy===undefined){\r\n            maxy = v.y;\r\n        }\r\n\r\n        if (v.z < minz || minz===undefined){\r\n            minz = v.z;\r\n        } else if(v.z > maxz || maxz===undefined){\r\n            maxz = v.z;\r\n        }\r\n    }\r\n    min.set(minx,miny,minz);\r\n    max.set(maxx,maxy,maxz);\r\n    */\r\n\r\n    // Faster approximation using local AABB\r\n    var frame = calculateWorldAABB_frame;\r\n    var result = calculateWorldAABB_aabb;\r\n    frame.position = pos;\r\n    frame.quaternion = quat;\r\n    this.aabb.toWorldFrame(frame, result);\r\n    min.copy(result.lowerBound);\r\n    max.copy(result.upperBound);\r\n};\r\n\r\n/**\r\n * Get approximate volume\r\n * @method volume\r\n * @return {Number}\r\n */\r\nTrimesh.prototype.volume = function(){\r\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\r\n};\r\n\r\n/**\r\n * Create a Trimesh instance, shaped as a torus.\r\n * @static\r\n * @method createTorus\r\n * @param  {number} [radius=1]\r\n * @param  {number} [tube=0.5]\r\n * @param  {number} [radialSegments=8]\r\n * @param  {number} [tubularSegments=6]\r\n * @param  {number} [arc=6.283185307179586]\r\n * @return {Trimesh} A torus\r\n */\r\nTrimesh.createTorus = function (radius, tube, radialSegments, tubularSegments, arc) {\r\n    radius = radius || 1;\r\n    tube = tube || 0.5;\r\n    radialSegments = radialSegments || 8;\r\n    tubularSegments = tubularSegments || 6;\r\n    arc = arc || Math.PI * 2;\r\n\r\n    var vertices = [];\r\n    var indices = [];\r\n\r\n    for ( var j = 0; j <= radialSegments; j ++ ) {\r\n        for ( var i = 0; i <= tubularSegments; i ++ ) {\r\n            var u = i / tubularSegments * arc;\r\n            var v = j / radialSegments * Math.PI * 2;\r\n\r\n            var x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n            var y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n            var z = tube * Math.sin( v );\r\n\r\n            vertices.push( x, y, z );\r\n        }\r\n    }\r\n\r\n    for ( var j = 1; j <= radialSegments; j ++ ) {\r\n        for ( var i = 1; i <= tubularSegments; i ++ ) {\r\n            var a = ( tubularSegments + 1 ) * j + i - 1;\r\n            var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n            var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n            var d = ( tubularSegments + 1 ) * j + i;\r\n\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d);\r\n        }\r\n    }\r\n\r\n    return new Trimesh(vertices, indices);\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Octree\":50,\"./Shape\":43}],46:[function(_dereq_,module,exports){\r\nmodule.exports = GSSolver;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Solver = _dereq_('./Solver');\r\n\r\n/**\r\n * Constraint equation Gauss-Seidel solver.\r\n * @class GSSolver\r\n * @constructor\r\n * @todo The spook parameters should be specified for each constraint, not globally.\r\n * @author schteppe / https://github.com/schteppe\r\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\r\n * @extends Solver\r\n */\r\nfunction GSSolver(){\r\n    Solver.call(this);\r\n\r\n    /**\r\n     * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\r\n     * @property iterations\r\n     * @type {Number}\r\n     * @todo write more about solver and iterations in the wiki\r\n     */\r\n    this.iterations = 10;\r\n\r\n    /**\r\n     * When tolerance is reached, the system is assumed to be converged.\r\n     * @property tolerance\r\n     * @type {Number}\r\n     */\r\n    this.tolerance = 1e-7;\r\n}\r\nGSSolver.prototype = new Solver();\r\n\r\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\r\nvar GSSolver_solve_invCs = [];\r\nvar GSSolver_solve_Bs = [];\r\nGSSolver.prototype.solve = function(dt,world){\r\n    var iter = 0,\r\n        maxIter = this.iterations,\r\n        tolSquared = this.tolerance*this.tolerance,\r\n        equations = this.equations,\r\n        Neq = equations.length,\r\n        bodies = world.bodies,\r\n        Nbodies = bodies.length,\r\n        h = dt,\r\n        q, B, invC, deltalambda, deltalambdaTot, GWlambda, lambdaj;\r\n\r\n    // Update solve mass\r\n    if(Neq !== 0){\r\n        for(var i=0; i!==Nbodies; i++){\r\n            bodies[i].updateSolveMassProperties();\r\n        }\r\n    }\r\n\r\n    // Things that does not change during iteration can be computed once\r\n    var invCs = GSSolver_solve_invCs,\r\n        Bs = GSSolver_solve_Bs,\r\n        lambda = GSSolver_solve_lambda;\r\n    invCs.length = Neq;\r\n    Bs.length = Neq;\r\n    lambda.length = Neq;\r\n    for(var i=0; i!==Neq; i++){\r\n        var c = equations[i];\r\n        lambda[i] = 0.0;\r\n        Bs[i] = c.computeB(h);\r\n        invCs[i] = 1.0 / c.computeC();\r\n    }\r\n\r\n    if(Neq !== 0){\r\n\r\n        // Reset vlambda\r\n        for(var i=0; i!==Nbodies; i++){\r\n            var b=bodies[i],\r\n                vlambda=b.vlambda,\r\n                wlambda=b.wlambda;\r\n            vlambda.set(0,0,0);\r\n            if(wlambda){\r\n                wlambda.set(0,0,0);\r\n            }\r\n        }\r\n\r\n        // Iterate over equations\r\n        for(iter=0; iter!==maxIter; iter++){\r\n\r\n            // Accumulate the total error for each iteration.\r\n            deltalambdaTot = 0.0;\r\n\r\n            for(var j=0; j!==Neq; j++){\r\n\r\n                var c = equations[j];\r\n\r\n                // Compute iteration\r\n                B = Bs[j];\r\n                invC = invCs[j];\r\n                lambdaj = lambda[j];\r\n                GWlambda = c.computeGWlambda();\r\n                deltalambda = invC * ( B - GWlambda - c.eps * lambdaj );\r\n\r\n                // Clamp if we are not within the min/max interval\r\n                if(lambdaj + deltalambda < c.minForce){\r\n                    deltalambda = c.minForce - lambdaj;\r\n                } else if(lambdaj + deltalambda > c.maxForce){\r\n                    deltalambda = c.maxForce - lambdaj;\r\n                }\r\n                lambda[j] += deltalambda;\r\n\r\n                deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\r\n\r\n                c.addToWlambda(deltalambda);\r\n            }\r\n\r\n            // If the total error is small enough - stop iterate\r\n            if(deltalambdaTot*deltalambdaTot < tolSquared){\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Add result to velocity\r\n        for(var i=0; i!==Nbodies; i++){\r\n            var b=bodies[i],\r\n                v=b.velocity,\r\n                w=b.angularVelocity;\r\n            v.vadd(b.vlambda, v);\r\n            if(w){\r\n                w.vadd(b.wlambda, w);\r\n            }\r\n        }\r\n    }\r\n\r\n    return iter;\r\n};\r\n\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Solver\":47}],47:[function(_dereq_,module,exports){\r\nmodule.exports = Solver;\r\n\r\n/**\r\n * Constraint equation solver base class.\r\n * @class Solver\r\n * @constructor\r\n * @author schteppe / https://github.com/schteppe\r\n */\r\nfunction Solver(){\r\n    /**\r\n     * All equations to be solved\r\n     * @property {Array} equations\r\n     */\r\n    this.equations = [];\r\n}\r\n\r\n/**\r\n * Should be implemented in subclasses!\r\n * @method solve\r\n * @param  {Number} dt\r\n * @param  {World} world\r\n */\r\nSolver.prototype.solve = function(dt,world){\r\n    // Should return the number of iterations done!\r\n    return 0;\r\n};\r\n\r\n/**\r\n * Add an equation\r\n * @method addEquation\r\n * @param {Equation} eq\r\n */\r\nSolver.prototype.addEquation = function(eq){\r\n    if (eq.enabled) {\r\n        this.equations.push(eq);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove an equation\r\n * @method removeEquation\r\n * @param {Equation} eq\r\n */\r\nSolver.prototype.removeEquation = function(eq){\r\n    var eqs = this.equations;\r\n    var i = eqs.indexOf(eq);\r\n    if(i !== -1){\r\n        eqs.splice(i,1);\r\n    }\r\n};\r\n\r\n/**\r\n * Add all equations\r\n * @method removeAllEquations\r\n */\r\nSolver.prototype.removeAllEquations = function(){\r\n    this.equations.length = 0;\r\n};\r\n\r\n\r\n},{}],48:[function(_dereq_,module,exports){\r\nmodule.exports = SplitSolver;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Solver = _dereq_('./Solver');\r\nvar Body = _dereq_('../objects/Body');\r\n\r\n/**\r\n * Splits the equations into islands and solves them independently. Can improve performance.\r\n * @class SplitSolver\r\n * @constructor\r\n * @extends Solver\r\n * @param {Solver} subsolver\r\n */\r\nfunction SplitSolver(subsolver){\r\n    Solver.call(this);\r\n    this.iterations = 10;\r\n    this.tolerance = 1e-7;\r\n    this.subsolver = subsolver;\r\n    this.nodes = [];\r\n    this.nodePool = [];\r\n\r\n    // Create needed nodes, reuse if possible\r\n    while(this.nodePool.length < 128){\r\n        this.nodePool.push(this.createNode());\r\n    }\r\n}\r\nSplitSolver.prototype = new Solver();\r\n\r\n// Returns the number of subsystems\r\nvar SplitSolver_solve_nodes = []; // All allocated node objects\r\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\r\nvar SplitSolver_solve_eqs = [];   // Temp array\r\nvar SplitSolver_solve_bds = [];   // Temp array\r\nvar SplitSolver_solve_dummyWorld = {bodies:[]}; // Temp object\r\n\r\nvar STATIC = Body.STATIC;\r\nfunction getUnvisitedNode(nodes){\r\n    var Nnodes = nodes.length;\r\n    for(var i=0; i!==Nnodes; i++){\r\n        var node = nodes[i];\r\n        if(!node.visited && !(node.body.type & STATIC)){\r\n            return node;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nvar queue = [];\r\nfunction bfs(root,visitFunc,bds,eqs){\r\n    queue.push(root);\r\n    root.visited = true;\r\n    visitFunc(root,bds,eqs);\r\n    while(queue.length) {\r\n        var node = queue.pop();\r\n        // Loop over unvisited child nodes\r\n        var child;\r\n        while((child = getUnvisitedNode(node.children))) {\r\n            child.visited = true;\r\n            visitFunc(child,bds,eqs);\r\n            queue.push(child);\r\n        }\r\n    }\r\n}\r\n\r\nfunction visitFunc(node,bds,eqs){\r\n    bds.push(node.body);\r\n    var Neqs = node.eqs.length;\r\n    for(var i=0; i!==Neqs; i++){\r\n        var eq = node.eqs[i];\r\n        if(eqs.indexOf(eq) === -1){\r\n            eqs.push(eq);\r\n        }\r\n    }\r\n}\r\n\r\nSplitSolver.prototype.createNode = function(){\r\n    return { body:null, children:[], eqs:[], visited:false };\r\n};\r\n\r\n/**\r\n * Solve the subsystems\r\n * @method solve\r\n * @param  {Number} dt\r\n * @param  {World} world\r\n */\r\nSplitSolver.prototype.solve = function(dt,world){\r\n    var nodes=SplitSolver_solve_nodes,\r\n        nodePool=this.nodePool,\r\n        bodies=world.bodies,\r\n        equations=this.equations,\r\n        Neq=equations.length,\r\n        Nbodies=bodies.length,\r\n        subsolver=this.subsolver;\r\n\r\n    // Create needed nodes, reuse if possible\r\n    while(nodePool.length < Nbodies){\r\n        nodePool.push(this.createNode());\r\n    }\r\n    nodes.length = Nbodies;\r\n    for (var i = 0; i < Nbodies; i++) {\r\n        nodes[i] = nodePool[i];\r\n    }\r\n\r\n    // Reset node values\r\n    for(var i=0; i!==Nbodies; i++){\r\n        var node = nodes[i];\r\n        node.body = bodies[i];\r\n        node.children.length = 0;\r\n        node.eqs.length = 0;\r\n        node.visited = false;\r\n    }\r\n    for(var k=0; k!==Neq; k++){\r\n        var eq=equations[k],\r\n            i=bodies.indexOf(eq.bi),\r\n            j=bodies.indexOf(eq.bj),\r\n            ni=nodes[i],\r\n            nj=nodes[j];\r\n        ni.children.push(nj);\r\n        ni.eqs.push(eq);\r\n        nj.children.push(ni);\r\n        nj.eqs.push(eq);\r\n    }\r\n\r\n    var child, n=0, eqs=SplitSolver_solve_eqs;\r\n\r\n    subsolver.tolerance = this.tolerance;\r\n    subsolver.iterations = this.iterations;\r\n\r\n    var dummyWorld = SplitSolver_solve_dummyWorld;\r\n    while((child = getUnvisitedNode(nodes))){\r\n        eqs.length = 0;\r\n        dummyWorld.bodies.length = 0;\r\n        bfs(child, visitFunc, dummyWorld.bodies, eqs);\r\n\r\n        var Neqs = eqs.length;\r\n\r\n        eqs = eqs.sort(sortById);\r\n\r\n        for(var i=0; i!==Neqs; i++){\r\n            subsolver.addEquation(eqs[i]);\r\n        }\r\n\r\n        var iter = subsolver.solve(dt,dummyWorld);\r\n        subsolver.removeAllEquations();\r\n        n++;\r\n    }\r\n\r\n    return n;\r\n};\r\n\r\nfunction sortById(a, b){\r\n    return b.id - a.id;\r\n}\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"./Solver\":47}],49:[function(_dereq_,module,exports){\r\n/**\r\n * Base class for objects that dispatches events.\r\n * @class EventTarget\r\n * @constructor\r\n */\r\nvar EventTarget = function () {\r\n\r\n};\r\n\r\nmodule.exports = EventTarget;\r\n\r\nEventTarget.prototype = {\r\n    constructor: EventTarget,\r\n\r\n    /**\r\n     * Add an event listener\r\n     * @method addEventListener\r\n     * @param  {String} type\r\n     * @param  {Function} listener\r\n     * @return {EventTarget} The self object, for chainability.\r\n     */\r\n    addEventListener: function ( type, listener ) {\r\n        if ( this._listeners === undefined ){ this._listeners = {}; }\r\n        var listeners = this._listeners;\r\n        if ( listeners[ type ] === undefined ) {\r\n            listeners[ type ] = [];\r\n        }\r\n        if ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n            listeners[ type ].push( listener );\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check if an event listener is added\r\n     * @method hasEventListener\r\n     * @param  {String} type\r\n     * @param  {Function} listener\r\n     * @return {Boolean}\r\n     */\r\n    hasEventListener: function ( type, listener ) {\r\n        if ( this._listeners === undefined ){ return false; }\r\n        var listeners = this._listeners;\r\n        if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Remove an event listener\r\n     * @method removeEventListener\r\n     * @param  {String} type\r\n     * @param  {Function} listener\r\n     * @return {EventTarget} The self object, for chainability.\r\n     */\r\n    removeEventListener: function ( type, listener ) {\r\n        if ( this._listeners === undefined ){ return this; }\r\n        var listeners = this._listeners;\r\n        if ( listeners[type] === undefined ){ return this; }\r\n        var index = listeners[ type ].indexOf( listener );\r\n        if ( index !== - 1 ) {\r\n            listeners[ type ].splice( index, 1 );\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Emit an event.\r\n     * @method dispatchEvent\r\n     * @param  {Object} event\r\n     * @param  {String} event.type\r\n     * @return {EventTarget} The self object, for chainability.\r\n     */\r\n    dispatchEvent: function ( event ) {\r\n        if ( this._listeners === undefined ){ return this; }\r\n        var listeners = this._listeners;\r\n        var listenerArray = listeners[ event.type ];\r\n        if ( listenerArray !== undefined ) {\r\n            event.target = this;\r\n            for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {\r\n                listenerArray[ i ].call( this, event );\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n};\r\n\r\n},{}],50:[function(_dereq_,module,exports){\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\nmodule.exports = Octree;\r\n\r\n/**\r\n * @class OctreeNode\r\n * @param {object} [options]\r\n * @param {Octree} [options.root]\r\n * @param {AABB} [options.aabb]\r\n */\r\nfunction OctreeNode(options){\r\n    options = options || {};\r\n\r\n    /**\r\n     * The root node\r\n     * @property {OctreeNode} root\r\n     */\r\n    this.root = options.root || null;\r\n\r\n    /**\r\n     * Boundary of this node\r\n     * @property {AABB} aabb\r\n     */\r\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\r\n\r\n    /**\r\n     * Contained data at the current node level.\r\n     * @property {Array} data\r\n     */\r\n    this.data = [];\r\n\r\n    /**\r\n     * Children to this node\r\n     * @property {Array} children\r\n     */\r\n    this.children = [];\r\n}\r\n\r\n/**\r\n * @class Octree\r\n * @param {AABB} aabb The total AABB of the tree\r\n * @param {object} [options]\r\n * @param {number} [options.maxDepth=8]\r\n * @extends OctreeNode\r\n */\r\nfunction Octree(aabb, options){\r\n    options = options || {};\r\n    options.root = null;\r\n    options.aabb = aabb;\r\n    OctreeNode.call(this, options);\r\n\r\n    /**\r\n     * Maximum subdivision depth\r\n     * @property {number} maxDepth\r\n     */\r\n    this.maxDepth = typeof(options.maxDepth) !== 'undefined' ? options.maxDepth : 8;\r\n}\r\nOctree.prototype = new OctreeNode();\r\n\r\nOctreeNode.prototype.reset = function(aabb, options){\r\n    this.children.length = this.data.length = 0;\r\n};\r\n\r\n/**\r\n * Insert data into this node\r\n * @method insert\r\n * @param  {AABB} aabb\r\n * @param  {object} elementData\r\n * @return {boolean} True if successful, otherwise false\r\n */\r\nOctreeNode.prototype.insert = function(aabb, elementData, level){\r\n    var nodeData = this.data;\r\n    level = level || 0;\r\n\r\n    // Ignore objects that do not belong in this node\r\n    if (!this.aabb.contains(aabb)){\r\n        return false; // object cannot be added\r\n    }\r\n\r\n    var children = this.children;\r\n\r\n    if(level < (this.maxDepth || this.root.maxDepth)){\r\n        // Subdivide if there are no children yet\r\n        var subdivided = false;\r\n        if (!children.length){\r\n            this.subdivide();\r\n            subdivided = true;\r\n        }\r\n\r\n        // add to whichever node will accept it\r\n        for (var i = 0; i !== 8; i++) {\r\n            if (children[i].insert(aabb, elementData, level + 1)){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if(subdivided){\r\n            // No children accepted! Might as well just remove em since they contain none\r\n            children.length = 0;\r\n        }\r\n    }\r\n\r\n    // Too deep, or children didnt want it. add it in current node\r\n    nodeData.push(elementData);\r\n\r\n    return true;\r\n};\r\n\r\nvar halfDiagonal = new Vec3();\r\n\r\n/**\r\n * Create 8 equally sized children nodes and put them in the .children array.\r\n * @method subdivide\r\n */\r\nOctreeNode.prototype.subdivide = function() {\r\n    var aabb = this.aabb;\r\n    var l = aabb.lowerBound;\r\n    var u = aabb.upperBound;\r\n\r\n    var children = this.children;\r\n\r\n    children.push(\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,0) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,0) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,0) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,0) }) })\r\n    );\r\n\r\n    u.vsub(l, halfDiagonal);\r\n    halfDiagonal.scale(0.5, halfDiagonal);\r\n\r\n    var root = this.root || this;\r\n\r\n    for (var i = 0; i !== 8; i++) {\r\n        var child = children[i];\r\n\r\n        // Set current node as root\r\n        child.root = root;\r\n\r\n        // Compute bounds\r\n        var lowerBound = child.aabb.lowerBound;\r\n        lowerBound.x *= halfDiagonal.x;\r\n        lowerBound.y *= halfDiagonal.y;\r\n        lowerBound.z *= halfDiagonal.z;\r\n\r\n        lowerBound.vadd(l, lowerBound);\r\n\r\n        // Upper bound is always lower bound + halfDiagonal\r\n        lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\r\n    }\r\n};\r\n\r\n/**\r\n * Get all data, potentially within an AABB\r\n * @method aabbQuery\r\n * @param  {AABB} aabb\r\n * @param  {array} result\r\n * @return {array} The \"result\" object\r\n */\r\nOctreeNode.prototype.aabbQuery = function(aabb, result) {\r\n\r\n    var nodeData = this.data;\r\n\r\n    // abort if the range does not intersect this node\r\n    // if (!this.aabb.overlaps(aabb)){\r\n    //     return result;\r\n    // }\r\n\r\n    // Add objects at this level\r\n    // Array.prototype.push.apply(result, nodeData);\r\n\r\n    // Add child data\r\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\r\n    var children = this.children;\r\n\r\n\r\n    // for (var i = 0, N = this.children.length; i !== N; i++) {\r\n    //     children[i].aabbQuery(aabb, result);\r\n    // }\r\n\r\n    var queue = [this];\r\n    while (queue.length) {\r\n        var node = queue.pop();\r\n        if (node.aabb.overlaps(aabb)){\r\n            Array.prototype.push.apply(result, node.data);\r\n        }\r\n        Array.prototype.push.apply(queue, node.children);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nvar tmpAABB = new AABB();\r\n\r\n/**\r\n * Get all data, potentially intersected by a ray.\r\n * @method rayQuery\r\n * @param  {Ray} ray\r\n * @param  {Transform} treeTransform\r\n * @param  {array} result\r\n * @return {array} The \"result\" object\r\n */\r\nOctreeNode.prototype.rayQuery = function(ray, treeTransform, result) {\r\n\r\n    // Use aabb query for now.\r\n    // @todo implement real ray query which needs less lookups\r\n    ray.getAABB(tmpAABB);\r\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\r\n    this.aabbQuery(tmpAABB, result);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * @method removeEmptyNodes\r\n */\r\nOctreeNode.prototype.removeEmptyNodes = function() {\r\n    var queue = [this];\r\n    while (queue.length) {\r\n        var node = queue.pop();\r\n        for (var i = node.children.length - 1; i >= 0; i--) {\r\n            if(!node.children[i].data.length){\r\n                node.children.splice(i, 1);\r\n            }\r\n        }\r\n        Array.prototype.push.apply(queue, node.children);\r\n    }\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../math/Vec3\":30}],51:[function(_dereq_,module,exports){\r\nmodule.exports = Pool;\r\n\r\n/**\r\n * For pooling objects that can be reused.\r\n * @class Pool\r\n * @constructor\r\n */\r\nfunction Pool(){\r\n    /**\r\n     * The pooled objects\r\n     * @property {Array} objects\r\n     */\r\n    this.objects = [];\r\n\r\n    /**\r\n     * Constructor of the objects\r\n     * @property {mixed} type\r\n     */\r\n    this.type = Object;\r\n}\r\n\r\n/**\r\n * Release an object after use\r\n * @method release\r\n * @param {Object} obj\r\n */\r\nPool.prototype.release = function(){\r\n    var Nargs = arguments.length;\r\n    for(var i=0; i!==Nargs; i++){\r\n        this.objects.push(arguments[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Get an object\r\n * @method get\r\n * @return {mixed}\r\n */\r\nPool.prototype.get = function(){\r\n    if(this.objects.length===0){\r\n        return this.constructObject();\r\n    } else {\r\n        return this.objects.pop();\r\n    }\r\n};\r\n\r\n/**\r\n * Construct an object. Should be implmented in each subclass.\r\n * @method constructObject\r\n * @return {mixed}\r\n */\r\nPool.prototype.constructObject = function(){\r\n    throw new Error(\"constructObject() not implemented in this Pool subclass yet!\");\r\n};\r\n\r\n},{}],52:[function(_dereq_,module,exports){\r\nmodule.exports = TupleDictionary;\r\n\r\n/**\r\n * @class TupleDictionary\r\n * @constructor\r\n */\r\nfunction TupleDictionary() {\r\n\r\n    /**\r\n     * The data storage\r\n     * @property data\r\n     * @type {Object}\r\n     */\r\n    this.data = { keys:[] };\r\n}\r\n\r\n/**\r\n * @method get\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @return {Number}\r\n */\r\nTupleDictionary.prototype.get = function(i, j) {\r\n    if (i > j) {\r\n        // swap\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n    return this.data[i+'-'+j];\r\n};\r\n\r\n/**\r\n * @method set\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @param {Number} value\r\n */\r\nTupleDictionary.prototype.set = function(i, j, value) {\r\n    if (i > j) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n    var key = i+'-'+j;\r\n\r\n    // Check if key already exists\r\n    if(!this.get(i,j)){\r\n        this.data.keys.push(key);\r\n    }\r\n\r\n    this.data[key] = value;\r\n};\r\n\r\n/**\r\n * @method reset\r\n */\r\nTupleDictionary.prototype.reset = function() {\r\n    var data = this.data,\r\n        keys = data.keys;\r\n    while(keys.length > 0){\r\n        var key = keys.pop();\r\n        delete data[key];\r\n    }\r\n};\r\n\r\n},{}],53:[function(_dereq_,module,exports){\r\nfunction Utils(){}\r\n\r\nmodule.exports = Utils;\r\n\r\n/**\r\n * Extend an options object with default values.\r\n * @static\r\n * @method defaults\r\n * @param  {object} options The options object. May be falsy: in this case, a new object is created and returned.\r\n * @param  {object} defaults An object containing default values.\r\n * @return {object} The modified options object.\r\n */\r\nUtils.defaults = function(options, defaults){\r\n    options = options || {};\r\n\r\n    for(var key in defaults){\r\n        if(!(key in options)){\r\n            options[key] = defaults[key];\r\n        }\r\n    }\r\n\r\n    return options;\r\n};\r\n\r\n},{}],54:[function(_dereq_,module,exports){\r\nmodule.exports = Vec3Pool;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Pool = _dereq_('./Pool');\r\n\r\n/**\r\n * @class Vec3Pool\r\n * @constructor\r\n * @extends Pool\r\n */\r\nfunction Vec3Pool(){\r\n    Pool.call(this);\r\n    this.type = Vec3;\r\n}\r\nVec3Pool.prototype = new Pool();\r\n\r\n/**\r\n * Construct a vector\r\n * @method constructObject\r\n * @return {Vec3}\r\n */\r\nVec3Pool.prototype.constructObject = function(){\r\n    return new Vec3();\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./Pool\":51}],55:[function(_dereq_,module,exports){\r\nmodule.exports = Narrowphase;\r\n\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Ray = _dereq_('../collision/Ray');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Solver = _dereq_('../solver/Solver');\r\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\r\n\r\n/**\r\n * Helper class for the World. Generates ContactEquations.\r\n * @class Narrowphase\r\n * @constructor\r\n * @todo Sphere-ConvexPolyhedron contacts\r\n * @todo Contact reduction\r\n * @todo  should move methods to prototype\r\n */\r\nfunction Narrowphase(world){\r\n\r\n    /**\r\n     * Internal storage of pooled contact points.\r\n     * @property {Array} contactPointPool\r\n     */\r\n    this.contactPointPool = [];\r\n\r\n    this.frictionEquationPool = [];\r\n\r\n    this.result = [];\r\n    this.frictionResult = [];\r\n\r\n    /**\r\n     * Pooled vectors.\r\n     * @property {Vec3Pool} v3pool\r\n     */\r\n    this.v3pool = new Vec3Pool();\r\n\r\n    this.world = world;\r\n    this.currentContactMaterial = null;\r\n\r\n    /**\r\n     * @property {Boolean} enableFrictionReduction\r\n     */\r\n    this.enableFrictionReduction = false;\r\n}\r\n\r\n/**\r\n * Make a contact object, by using the internal pool or creating a new one.\r\n * @method createContactEquation\r\n * @return {ContactEquation}\r\n */\r\nNarrowphase.prototype.createContactEquation = function(bi, bj, si, sj, rsi, rsj){\r\n    var c;\r\n    if(this.contactPointPool.length){\r\n        c = this.contactPointPool.pop();\r\n        c.bi = bi;\r\n        c.bj = bj;\r\n    } else {\r\n        c = new ContactEquation(bi, bj);\r\n    }\r\n\r\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\r\n\r\n    var cm = this.currentContactMaterial;\r\n\r\n    c.restitution = cm.restitution;\r\n\r\n    c.setSpookParams(\r\n        cm.contactEquationStiffness,\r\n        cm.contactEquationRelaxation,\r\n        this.world.dt\r\n    );\r\n\r\n    var matA = si.material || bi.material;\r\n    var matB = sj.material || bj.material;\r\n    if(matA && matB && matA.restitution >= 0 && matB.restitution >= 0){\r\n        c.restitution = matA.restitution * matB.restitution;\r\n    }\r\n\r\n    c.si = rsi || si;\r\n    c.sj = rsj || sj;\r\n\r\n    return c;\r\n};\r\n\r\nNarrowphase.prototype.createFrictionEquationsFromContact = function(contactEquation, outArray){\r\n    var bodyA = contactEquation.bi;\r\n    var bodyB = contactEquation.bj;\r\n    var shapeA = contactEquation.si;\r\n    var shapeB = contactEquation.sj;\r\n\r\n    var world = this.world;\r\n    var cm = this.currentContactMaterial;\r\n\r\n    // If friction or restitution were specified in the material, use them\r\n    var friction = cm.friction;\r\n    var matA = shapeA.material || bodyA.material;\r\n    var matB = shapeB.material || bodyB.material;\r\n    if(matA && matB && matA.friction >= 0 && matB.friction >= 0){\r\n        friction = matA.friction * matB.friction;\r\n    }\r\n\r\n    if(friction > 0){\r\n\r\n        // Create 2 tangent equations\r\n        var mug = friction * world.gravity.length();\r\n        var reducedMass = (bodyA.invMass + bodyB.invMass);\r\n        if(reducedMass > 0){\r\n            reducedMass = 1/reducedMass;\r\n        }\r\n        var pool = this.frictionEquationPool;\r\n        var c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\r\n        var c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\r\n\r\n        c1.bi = c2.bi = bodyA;\r\n        c1.bj = c2.bj = bodyB;\r\n        c1.minForce = c2.minForce = -mug*reducedMass;\r\n        c1.maxForce = c2.maxForce = mug*reducedMass;\r\n\r\n        // Copy over the relative vectors\r\n        c1.ri.copy(contactEquation.ri);\r\n        c1.rj.copy(contactEquation.rj);\r\n        c2.ri.copy(contactEquation.ri);\r\n        c2.rj.copy(contactEquation.rj);\r\n\r\n        // Construct tangents\r\n        contactEquation.ni.tangents(c1.t, c2.t);\r\n\r\n        // Set spook params\r\n        c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\r\n        c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\r\n\r\n        c1.enabled = c2.enabled = contactEquation.enabled;\r\n\r\n        outArray.push(c1, c2);\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nvar averageNormal = new Vec3();\r\nvar averageContactPointA = new Vec3();\r\nvar averageContactPointB = new Vec3();\r\n\r\n// Take the average N latest contact point on the plane.\r\nNarrowphase.prototype.createFrictionFromAverage = function(numContacts){\r\n    // The last contactEquation\r\n    var c = this.result[this.result.length - 1];\r\n\r\n    // Create the result: two \"average\" friction equations\r\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\r\n        return;\r\n    }\r\n\r\n    var f1 = this.frictionResult[this.frictionResult.length - 2];\r\n    var f2 = this.frictionResult[this.frictionResult.length - 1];\r\n\r\n    averageNormal.setZero();\r\n    averageContactPointA.setZero();\r\n    averageContactPointB.setZero();\r\n\r\n    var bodyA = c.bi;\r\n    var bodyB = c.bj;\r\n    for(var i=0; i!==numContacts; i++){\r\n        c = this.result[this.result.length - 1 - i];\r\n        if(c.bodyA !== bodyA){\r\n            averageNormal.vadd(c.ni, averageNormal); // vec2.add(eq.t, eq.t, c.normalA);\r\n            averageContactPointA.vadd(c.ri, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\r\n            averageContactPointB.vadd(c.rj, averageContactPointB);\r\n        } else {\r\n            averageNormal.vsub(c.ni, averageNormal); // vec2.sub(eq.t, eq.t, c.normalA);\r\n            averageContactPointA.vadd(c.rj, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\r\n            averageContactPointB.vadd(c.ri, averageContactPointB);\r\n        }\r\n    }\r\n\r\n    var invNumContacts = 1 / numContacts;\r\n    averageContactPointA.scale(invNumContacts, f1.ri); // vec2.scale(eq.contactPointA, eq.contactPointA, invNumContacts);\r\n    averageContactPointB.scale(invNumContacts, f1.rj); // vec2.scale(eq.contactPointB, eq.contactPointB, invNumContacts);\r\n    f2.ri.copy(f1.ri); // Should be the same\r\n    f2.rj.copy(f1.rj);\r\n    averageNormal.normalize();\r\n    averageNormal.tangents(f1.t, f2.t);\r\n    // return eq;\r\n};\r\n\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\nvar tmpQuat1 = new Quaternion();\r\nvar tmpQuat2 = new Quaternion();\r\n\r\n/**\r\n * Generate all contacts between a list of body pairs\r\n * @method getContacts\r\n * @param {array} p1 Array of body indices\r\n * @param {array} p2 Array of body indices\r\n * @param {World} world\r\n * @param {array} result Array to store generated contacts\r\n * @param {array} oldcontacts Optional. Array of reusable contact objects\r\n */\r\nNarrowphase.prototype.getContacts = function(p1, p2, world, result, oldcontacts, frictionResult, frictionPool){\r\n    // Save old contact objects\r\n    this.contactPointPool = oldcontacts;\r\n    this.frictionEquationPool = frictionPool;\r\n    this.result = result;\r\n    this.frictionResult = frictionResult;\r\n\r\n    var qi = tmpQuat1;\r\n    var qj = tmpQuat2;\r\n    var xi = tmpVec1;\r\n    var xj = tmpVec2;\r\n\r\n    for(var k=0, N=p1.length; k!==N; k++){\r\n\r\n        // Get current collision bodies\r\n        var bi = p1[k],\r\n            bj = p2[k];\r\n\r\n        // Get contact material\r\n        var bodyContactMaterial = null;\r\n        if(bi.material && bj.material){\r\n            bodyContactMaterial = world.getContactMaterial(bi.material,bj.material) || null;\r\n        }\r\n\r\n        for (var i = 0; i < bi.shapes.length; i++) {\r\n            bi.quaternion.mult(bi.shapeOrientations[i], qi);\r\n            bi.quaternion.vmult(bi.shapeOffsets[i], xi);\r\n            xi.vadd(bi.position, xi);\r\n            var si = bi.shapes[i];\r\n\r\n            for (var j = 0; j < bj.shapes.length; j++) {\r\n\r\n                // Compute world transform of shapes\r\n                bj.quaternion.mult(bj.shapeOrientations[j], qj);\r\n                bj.quaternion.vmult(bj.shapeOffsets[j], xj);\r\n                xj.vadd(bj.position, xj);\r\n                var sj = bj.shapes[j];\r\n\r\n                if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n                    continue;\r\n                }\r\n\r\n                // Get collision material\r\n                var shapeContactMaterial = null;\r\n                if(si.material && sj.material){\r\n                    shapeContactMaterial = world.getContactMaterial(si.material,sj.material) || null;\r\n                }\r\n\r\n                this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial;\r\n\r\n                // Get contacts\r\n                var resolver = this[si.type | sj.type];\r\n                if(resolver){\r\n                    if (si.type < sj.type) {\r\n                        resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj);\r\n                    } else {\r\n                        resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar numWarnings = 0;\r\nvar maxWarnings = 10;\r\n\r\nfunction warn(msg){\r\n    if(numWarnings > maxWarnings){\r\n        return;\r\n    }\r\n\r\n    numWarnings++;\r\n\r\n    console.warn(msg);\r\n}\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.BOX] =\r\nNarrowphase.prototype.boxBox = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    sj.convexPolyhedronRepresentation.material = sj.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\r\n    this.convexConvex(si.convexPolyhedronRepresentation,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj,si,sj);\r\n};\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.boxConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    this.convexConvex(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\r\n};\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.PARTICLE] =\r\nNarrowphase.prototype.boxParticle = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    this.convexParticle(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\r\n};\r\n\r\n/**\r\n * @method sphereSphere\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE] =\r\nNarrowphase.prototype.sphereSphere = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    // We will have only one contact in this case\r\n    var r = this.createContactEquation(bi,bj,si,sj);\r\n\r\n    // Contact normal\r\n    xj.vsub(xi, r.ni);\r\n    r.ni.normalize();\r\n\r\n    // Contact point locations\r\n    r.ri.copy(r.ni);\r\n    r.rj.copy(r.ni);\r\n    r.ri.mult(si.radius, r.ri);\r\n    r.rj.mult(-sj.radius, r.rj);\r\n\r\n    r.ri.vadd(xi, r.ri);\r\n    r.ri.vsub(bi.position, r.ri);\r\n\r\n    r.rj.vadd(xj, r.rj);\r\n    r.rj.vsub(bj.position, r.rj);\r\n\r\n    this.result.push(r);\r\n\r\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n};\r\n\r\n/**\r\n * @method planeTrimesh\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nvar planeTrimesh_normal = new Vec3();\r\nvar planeTrimesh_relpos = new Vec3();\r\nvar planeTrimesh_projected = new Vec3();\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.TRIMESH] =\r\nNarrowphase.prototype.planeTrimesh = function(\r\n    planeShape,\r\n    trimeshShape,\r\n    planePos,\r\n    trimeshPos,\r\n    planeQuat,\r\n    trimeshQuat,\r\n    planeBody,\r\n    trimeshBody\r\n){\r\n    // Make contacts!\r\n    var v = new Vec3();\r\n\r\n    var normal = planeTrimesh_normal;\r\n    normal.set(0,0,1);\r\n    planeQuat.vmult(normal,normal); // Turn normal according to plane\r\n\r\n    for(var i=0; i<trimeshShape.vertices.length / 3; i++){\r\n\r\n        // Get world vertex from trimesh\r\n        trimeshShape.getVertex(i, v);\r\n\r\n        // Safe up\r\n        var v2 = new Vec3();\r\n        v2.copy(v);\r\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\r\n\r\n        // Check plane side\r\n        var relpos = planeTrimesh_relpos;\r\n        v.vsub(planePos, relpos);\r\n        var dot = normal.dot(relpos);\r\n\r\n        if(dot <= 0.0){\r\n            var r = this.createContactEquation(planeBody,trimeshBody,planeShape,trimeshShape);\r\n\r\n            r.ni.copy(normal); // Contact normal is the plane normal\r\n\r\n            // Get vertex position projected on plane\r\n            var projected = planeTrimesh_projected;\r\n            normal.scale(relpos.dot(normal), projected);\r\n            v.vsub(projected,projected);\r\n\r\n            // ri is the projected world position minus plane position\r\n            r.ri.copy(projected);\r\n            r.ri.vsub(planeBody.position, r.ri);\r\n\r\n            r.rj.copy(v);\r\n            r.rj.vsub(trimeshBody.position, r.rj);\r\n\r\n            // Store result\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @method sphereTrimesh\r\n * @param  {Shape}      sphereShape\r\n * @param  {Shape}      trimeshShape\r\n * @param  {Vec3}       spherePos\r\n * @param  {Vec3}       trimeshPos\r\n * @param  {Quaternion} sphereQuat\r\n * @param  {Quaternion} trimeshQuat\r\n * @param  {Body}       sphereBody\r\n * @param  {Body}       trimeshBody\r\n */\r\nvar sphereTrimesh_normal = new Vec3();\r\nvar sphereTrimesh_relpos = new Vec3();\r\nvar sphereTrimesh_projected = new Vec3();\r\nvar sphereTrimesh_v = new Vec3();\r\nvar sphereTrimesh_v2 = new Vec3();\r\nvar sphereTrimesh_edgeVertexA = new Vec3();\r\nvar sphereTrimesh_edgeVertexB = new Vec3();\r\nvar sphereTrimesh_edgeVector = new Vec3();\r\nvar sphereTrimesh_edgeVectorUnit = new Vec3();\r\nvar sphereTrimesh_localSpherePos = new Vec3();\r\nvar sphereTrimesh_tmp = new Vec3();\r\nvar sphereTrimesh_va = new Vec3();\r\nvar sphereTrimesh_vb = new Vec3();\r\nvar sphereTrimesh_vc = new Vec3();\r\nvar sphereTrimesh_localSphereAABB = new AABB();\r\nvar sphereTrimesh_triangles = [];\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.TRIMESH] =\r\nNarrowphase.prototype.sphereTrimesh = function (\r\n    sphereShape,\r\n    trimeshShape,\r\n    spherePos,\r\n    trimeshPos,\r\n    sphereQuat,\r\n    trimeshQuat,\r\n    sphereBody,\r\n    trimeshBody\r\n) {\r\n\r\n    var edgeVertexA = sphereTrimesh_edgeVertexA;\r\n    var edgeVertexB = sphereTrimesh_edgeVertexB;\r\n    var edgeVector = sphereTrimesh_edgeVector;\r\n    var edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\r\n    var localSpherePos = sphereTrimesh_localSpherePos;\r\n    var tmp = sphereTrimesh_tmp;\r\n    var localSphereAABB = sphereTrimesh_localSphereAABB;\r\n    var v2 = sphereTrimesh_v2;\r\n    var relpos = sphereTrimesh_relpos;\r\n    var triangles = sphereTrimesh_triangles;\r\n\r\n    // Convert sphere position to local in the trimesh\r\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos);\r\n\r\n    // Get the aabb of the sphere locally in the trimesh\r\n    var sphereRadius = sphereShape.radius;\r\n    localSphereAABB.lowerBound.set(\r\n        localSpherePos.x - sphereRadius,\r\n        localSpherePos.y - sphereRadius,\r\n        localSpherePos.z - sphereRadius\r\n    );\r\n    localSphereAABB.upperBound.set(\r\n        localSpherePos.x + sphereRadius,\r\n        localSpherePos.y + sphereRadius,\r\n        localSpherePos.z + sphereRadius\r\n    );\r\n\r\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles);\r\n    //for (var i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\r\n\r\n    // Vertices\r\n    var v = sphereTrimesh_v;\r\n    var radiusSquared = sphereShape.radius * sphereShape.radius;\r\n    for(var i=0; i<triangles.length; i++){\r\n        for (var j = 0; j < 3; j++) {\r\n\r\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v);\r\n\r\n            // Check vertex overlap in sphere\r\n            v.vsub(localSpherePos, relpos);\r\n\r\n            if(relpos.norm2() <= radiusSquared){\r\n\r\n                // Safe up\r\n                v2.copy(v);\r\n                Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\r\n\r\n                v.vsub(spherePos, relpos);\r\n\r\n                var r = this.createContactEquation(sphereBody,trimeshBody,sphereShape,trimeshShape);\r\n                r.ni.copy(relpos);\r\n                r.ni.normalize();\r\n\r\n                // ri is the vector from sphere center to the sphere surface\r\n                r.ri.copy(r.ni);\r\n                r.ri.scale(sphereShape.radius, r.ri);\r\n                r.ri.vadd(spherePos, r.ri);\r\n                r.ri.vsub(sphereBody.position, r.ri);\r\n\r\n                r.rj.copy(v);\r\n                r.rj.vsub(trimeshBody.position, r.rj);\r\n\r\n                // Store result\r\n                this.result.push(r);\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Check all edges\r\n    for(var i=0; i<triangles.length; i++){\r\n        for (var j = 0; j < 3; j++) {\r\n\r\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\r\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + ((j+1)%3)], edgeVertexB);\r\n            edgeVertexB.vsub(edgeVertexA, edgeVector);\r\n\r\n            // Project sphere position to the edge\r\n            localSpherePos.vsub(edgeVertexB, tmp);\r\n            var positionAlongEdgeB = tmp.dot(edgeVector);\r\n\r\n            localSpherePos.vsub(edgeVertexA, tmp);\r\n            var positionAlongEdgeA = tmp.dot(edgeVector);\r\n\r\n            if(positionAlongEdgeA > 0 && positionAlongEdgeB < 0){\r\n\r\n                // Now check the orthogonal distance from edge to sphere center\r\n                localSpherePos.vsub(edgeVertexA, tmp);\r\n\r\n                edgeVectorUnit.copy(edgeVector);\r\n                edgeVectorUnit.normalize();\r\n                positionAlongEdgeA = tmp.dot(edgeVectorUnit);\r\n\r\n                edgeVectorUnit.scale(positionAlongEdgeA, tmp);\r\n                tmp.vadd(edgeVertexA, tmp);\r\n\r\n                // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\r\n                var dist = tmp.distanceTo(localSpherePos);\r\n                if(dist < sphereShape.radius){\r\n                    var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\r\n\r\n                    tmp.vsub(localSpherePos, r.ni);\r\n                    r.ni.normalize();\r\n                    r.ni.scale(sphereShape.radius, r.ri);\r\n\r\n                    Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\r\n                    tmp.vsub(trimeshBody.position, r.rj);\r\n\r\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\r\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\r\n\r\n                    this.result.push(r);\r\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Triangle faces\r\n    var va = sphereTrimesh_va;\r\n    var vb = sphereTrimesh_vb;\r\n    var vc = sphereTrimesh_vc;\r\n    var normal = sphereTrimesh_normal;\r\n    for(var i=0, N = triangles.length; i !== N; i++){\r\n        trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\r\n        trimeshShape.getNormal(triangles[i], normal);\r\n        localSpherePos.vsub(va, tmp);\r\n        var dist = tmp.dot(normal);\r\n        normal.scale(dist, tmp);\r\n        localSpherePos.vsub(tmp, tmp);\r\n\r\n        // tmp is now the sphere position projected to the triangle plane\r\n        dist = tmp.distanceTo(localSpherePos);\r\n        if(Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius){\r\n            var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\r\n\r\n            tmp.vsub(localSpherePos, r.ni);\r\n            r.ni.normalize();\r\n            r.ni.scale(sphereShape.radius, r.ri);\r\n\r\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\r\n            tmp.vsub(trimeshBody.position, r.rj);\r\n\r\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\r\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\r\n\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        }\r\n    }\r\n\r\n    triangles.length = 0;\r\n};\r\n\r\nvar point_on_plane_to_sphere = new Vec3();\r\nvar plane_to_sphere_ortho = new Vec3();\r\n\r\n/**\r\n * @method spherePlane\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.PLANE] =\r\nNarrowphase.prototype.spherePlane = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    // We will have one contact in this case\r\n    var r = this.createContactEquation(bi,bj,si,sj);\r\n\r\n    // Contact normal\r\n    r.ni.set(0,0,1);\r\n    qj.vmult(r.ni, r.ni);\r\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\r\n    r.ni.normalize(); // Needed?\r\n\r\n    // Vector from sphere center to contact point\r\n    r.ni.mult(si.radius, r.ri);\r\n\r\n    // Project down sphere on plane\r\n    xi.vsub(xj, point_on_plane_to_sphere);\r\n    r.ni.mult(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\r\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho,r.rj); // The sphere position projected to plane\r\n\r\n    if(-point_on_plane_to_sphere.dot(r.ni) <= si.radius){\r\n\r\n        // Make it relative to the body\r\n        var ri = r.ri;\r\n        var rj = r.rj;\r\n        ri.vadd(xi, ri);\r\n        ri.vsub(bi.position, ri);\r\n        rj.vadd(xj, rj);\r\n        rj.vsub(bj.position, rj);\r\n\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n};\r\n\r\n// See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\r\nvar pointInPolygon_edge = new Vec3();\r\nvar pointInPolygon_edge_x_normal = new Vec3();\r\nvar pointInPolygon_vtp = new Vec3();\r\nfunction pointInPolygon(verts, normal, p){\r\n    var positiveResult = null;\r\n    var N = verts.length;\r\n    for(var i=0; i!==N; i++){\r\n        var v = verts[i];\r\n\r\n        // Get edge to the next vertex\r\n        var edge = pointInPolygon_edge;\r\n        verts[(i+1) % (N)].vsub(v,edge);\r\n\r\n        // Get cross product between polygon normal and the edge\r\n        var edge_x_normal = pointInPolygon_edge_x_normal;\r\n        //var edge_x_normal = new Vec3();\r\n        edge.cross(normal,edge_x_normal);\r\n\r\n        // Get vector between point and current vertex\r\n        var vertex_to_p = pointInPolygon_vtp;\r\n        p.vsub(v,vertex_to_p);\r\n\r\n        // This dot product determines which side of the edge the point is\r\n        var r = edge_x_normal.dot(vertex_to_p);\r\n\r\n        // If all such dot products have same sign, we are inside the polygon.\r\n        if(positiveResult===null || (r>0 && positiveResult===true) || (r<=0 && positiveResult===false)){\r\n            if(positiveResult===null){\r\n                positiveResult = r>0;\r\n            }\r\n            continue;\r\n        } else {\r\n            return false; // Encountered some other sign. Exit.\r\n        }\r\n    }\r\n\r\n    // If we got here, all dot products were of the same sign.\r\n    return true;\r\n}\r\n\r\nvar box_to_sphere = new Vec3();\r\nvar sphereBox_ns = new Vec3();\r\nvar sphereBox_ns1 = new Vec3();\r\nvar sphereBox_ns2 = new Vec3();\r\nvar sphereBox_sides = [new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3()];\r\nvar sphereBox_sphere_to_corner = new Vec3();\r\nvar sphereBox_side_ns = new Vec3();\r\nvar sphereBox_side_ns1 = new Vec3();\r\nvar sphereBox_side_ns2 = new Vec3();\r\n\r\n/**\r\n * @method sphereBox\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.BOX] =\r\nNarrowphase.prototype.sphereBox = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    var v3pool = this.v3pool;\r\n\r\n    // we refer to the box as body j\r\n    var sides = sphereBox_sides;\r\n    xi.vsub(xj,box_to_sphere);\r\n    sj.getSideNormals(sides,qj);\r\n    var R =     si.radius;\r\n    var penetrating_sides = [];\r\n\r\n    // Check side (plane) intersections\r\n    var found = false;\r\n\r\n    // Store the resulting side penetration info\r\n    var side_ns = sphereBox_side_ns;\r\n    var side_ns1 = sphereBox_side_ns1;\r\n    var side_ns2 = sphereBox_side_ns2;\r\n    var side_h = null;\r\n    var side_penetrations = 0;\r\n    var side_dot1 = 0;\r\n    var side_dot2 = 0;\r\n    var side_distance = null;\r\n    for(var idx=0,nsides=sides.length; idx!==nsides && found===false; idx++){\r\n        // Get the plane side normal (ns)\r\n        var ns = sphereBox_ns;\r\n        ns.copy(sides[idx]);\r\n\r\n        var h = ns.norm();\r\n        ns.normalize();\r\n\r\n        // The normal/distance dot product tells which side of the plane we are\r\n        var dot = box_to_sphere.dot(ns);\r\n\r\n        if(dot<h+R && dot>0){\r\n            // Intersects plane. Now check the other two dimensions\r\n            var ns1 = sphereBox_ns1;\r\n            var ns2 = sphereBox_ns2;\r\n            ns1.copy(sides[(idx+1)%3]);\r\n            ns2.copy(sides[(idx+2)%3]);\r\n            var h1 = ns1.norm();\r\n            var h2 = ns2.norm();\r\n            ns1.normalize();\r\n            ns2.normalize();\r\n            var dot1 = box_to_sphere.dot(ns1);\r\n            var dot2 = box_to_sphere.dot(ns2);\r\n            if(dot1<h1 && dot1>-h1 && dot2<h2 && dot2>-h2){\r\n                var dist = Math.abs(dot-h-R);\r\n                if(side_distance===null || dist < side_distance){\r\n                    side_distance = dist;\r\n                    side_dot1 = dot1;\r\n                    side_dot2 = dot2;\r\n                    side_h = h;\r\n                    side_ns.copy(ns);\r\n                    side_ns1.copy(ns1);\r\n                    side_ns2.copy(ns2);\r\n                    side_penetrations++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(side_penetrations){\r\n        found = true;\r\n        var r = this.createContactEquation(bi,bj,si,sj);\r\n        side_ns.mult(-R,r.ri); // Sphere r\r\n        r.ni.copy(side_ns);\r\n        r.ni.negate(r.ni); // Normal should be out of sphere\r\n        side_ns.mult(side_h,side_ns);\r\n        side_ns1.mult(side_dot1,side_ns1);\r\n        side_ns.vadd(side_ns1,side_ns);\r\n        side_ns2.mult(side_dot2,side_ns2);\r\n        side_ns.vadd(side_ns2,r.rj);\r\n\r\n        // Make relative to bodies\r\n        r.ri.vadd(xi, r.ri);\r\n        r.ri.vsub(bi.position, r.ri);\r\n        r.rj.vadd(xj, r.rj);\r\n        r.rj.vsub(bj.position, r.rj);\r\n\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n\r\n    // Check corners\r\n    var rj = v3pool.get();\r\n    var sphere_to_corner = sphereBox_sphere_to_corner;\r\n    for(var j=0; j!==2 && !found; j++){\r\n        for(var k=0; k!==2 && !found; k++){\r\n            for(var l=0; l!==2 && !found; l++){\r\n                rj.set(0,0,0);\r\n                if(j){\r\n                    rj.vadd(sides[0],rj);\r\n                } else {\r\n                    rj.vsub(sides[0],rj);\r\n                }\r\n                if(k){\r\n                    rj.vadd(sides[1],rj);\r\n                } else {\r\n                    rj.vsub(sides[1],rj);\r\n                }\r\n                if(l){\r\n                    rj.vadd(sides[2],rj);\r\n                } else {\r\n                    rj.vsub(sides[2],rj);\r\n                }\r\n\r\n                // World position of corner\r\n                xj.vadd(rj,sphere_to_corner);\r\n                sphere_to_corner.vsub(xi,sphere_to_corner);\r\n\r\n                if(sphere_to_corner.norm2() < R*R){\r\n                    found = true;\r\n                    var r = this.createContactEquation(bi,bj,si,sj);\r\n                    r.ri.copy(sphere_to_corner);\r\n                    r.ri.normalize();\r\n                    r.ni.copy(r.ri);\r\n                    r.ri.mult(R,r.ri);\r\n                    r.rj.copy(rj);\r\n\r\n                    // Make relative to bodies\r\n                    r.ri.vadd(xi, r.ri);\r\n                    r.ri.vsub(bi.position, r.ri);\r\n                    r.rj.vadd(xj, r.rj);\r\n                    r.rj.vsub(bj.position, r.rj);\r\n\r\n                    this.result.push(r);\r\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    v3pool.release(rj);\r\n    rj = null;\r\n\r\n    // Check edges\r\n    var edgeTangent = v3pool.get();\r\n    var edgeCenter = v3pool.get();\r\n    var r = v3pool.get(); // r = edge center to sphere center\r\n    var orthogonal = v3pool.get();\r\n    var dist = v3pool.get();\r\n    var Nsides = sides.length;\r\n    for(var j=0; j!==Nsides && !found; j++){\r\n        for(var k=0; k!==Nsides && !found; k++){\r\n            if(j%3 !== k%3){\r\n                // Get edge tangent\r\n                sides[k].cross(sides[j],edgeTangent);\r\n                edgeTangent.normalize();\r\n                sides[j].vadd(sides[k], edgeCenter);\r\n                r.copy(xi);\r\n                r.vsub(edgeCenter,r);\r\n                r.vsub(xj,r);\r\n                var orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\r\n                edgeTangent.mult(orthonorm,orthogonal); // Vector from edge center to sphere center in the tangent direction\r\n\r\n                // Find the third side orthogonal to this one\r\n                var l = 0;\r\n                while(l===j%3 || l===k%3){\r\n                    l++;\r\n                }\r\n\r\n                // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\r\n                dist.copy(xi);\r\n                dist.vsub(orthogonal,dist);\r\n                dist.vsub(edgeCenter,dist);\r\n                dist.vsub(xj,dist);\r\n\r\n                // Distances in tangent direction and distance in the plane orthogonal to it\r\n                var tdist = Math.abs(orthonorm);\r\n                var ndist = dist.norm();\r\n\r\n                if(tdist < sides[l].norm() && ndist<R){\r\n                    found = true;\r\n                    var res = this.createContactEquation(bi,bj,si,sj);\r\n                    edgeCenter.vadd(orthogonal,res.rj); // box rj\r\n                    res.rj.copy(res.rj);\r\n                    dist.negate(res.ni);\r\n                    res.ni.normalize();\r\n\r\n                    res.ri.copy(res.rj);\r\n                    res.ri.vadd(xj,res.ri);\r\n                    res.ri.vsub(xi,res.ri);\r\n                    res.ri.normalize();\r\n                    res.ri.mult(R,res.ri);\r\n\r\n                    // Make relative to bodies\r\n                    res.ri.vadd(xi, res.ri);\r\n                    res.ri.vsub(bi.position, res.ri);\r\n                    res.rj.vadd(xj, res.rj);\r\n                    res.rj.vsub(bj.position, res.rj);\r\n\r\n                    this.result.push(res);\r\n                    this.createFrictionEquationsFromContact(res, this.frictionResult);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    v3pool.release(edgeTangent,edgeCenter,r,orthogonal,dist);\r\n};\r\n\r\nvar convex_to_sphere = new Vec3();\r\nvar sphereConvex_edge = new Vec3();\r\nvar sphereConvex_edgeUnit = new Vec3();\r\nvar sphereConvex_sphereToCorner = new Vec3();\r\nvar sphereConvex_worldCorner = new Vec3();\r\nvar sphereConvex_worldNormal = new Vec3();\r\nvar sphereConvex_worldPoint = new Vec3();\r\nvar sphereConvex_worldSpherePointClosestToPlane = new Vec3();\r\nvar sphereConvex_penetrationVec = new Vec3();\r\nvar sphereConvex_sphereToWorldPoint = new Vec3();\r\n\r\n/**\r\n * @method sphereConvex\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.sphereConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    var v3pool = this.v3pool;\r\n    xi.vsub(xj,convex_to_sphere);\r\n    var normals = sj.faceNormals;\r\n    var faces = sj.faces;\r\n    var verts = sj.vertices;\r\n    var R =     si.radius;\r\n    var penetrating_sides = [];\r\n\r\n    // if(convex_to_sphere.norm2() > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n    //     return;\r\n    // }\r\n\r\n    // Check corners\r\n    for(var i=0; i!==verts.length; i++){\r\n        var v = verts[i];\r\n\r\n        // World position of corner\r\n        var worldCorner = sphereConvex_worldCorner;\r\n        qj.vmult(v,worldCorner);\r\n        xj.vadd(worldCorner,worldCorner);\r\n        var sphere_to_corner = sphereConvex_sphereToCorner;\r\n        worldCorner.vsub(xi, sphere_to_corner);\r\n        if(sphere_to_corner.norm2() < R * R){\r\n            found = true;\r\n            var r = this.createContactEquation(bi,bj,si,sj);\r\n            r.ri.copy(sphere_to_corner);\r\n            r.ri.normalize();\r\n            r.ni.copy(r.ri);\r\n            r.ri.mult(R,r.ri);\r\n            worldCorner.vsub(xj,r.rj);\r\n\r\n            // Should be relative to the body.\r\n            r.ri.vadd(xi, r.ri);\r\n            r.ri.vsub(bi.position, r.ri);\r\n\r\n            // Should be relative to the body.\r\n            r.rj.vadd(xj, r.rj);\r\n            r.rj.vsub(bj.position, r.rj);\r\n\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // Check side (plane) intersections\r\n    var found = false;\r\n    for(var i=0, nfaces=faces.length; i!==nfaces && found===false; i++){\r\n        var normal = normals[i];\r\n        var face = faces[i];\r\n\r\n        // Get world-transformed normal of the face\r\n        var worldNormal = sphereConvex_worldNormal;\r\n        qj.vmult(normal,worldNormal);\r\n\r\n        // Get a world vertex from the face\r\n        var worldPoint = sphereConvex_worldPoint;\r\n        qj.vmult(verts[face[0]],worldPoint);\r\n        worldPoint.vadd(xj,worldPoint);\r\n\r\n        // Get a point on the sphere, closest to the face normal\r\n        var worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\r\n        worldNormal.mult(-R, worldSpherePointClosestToPlane);\r\n        xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane);\r\n\r\n        // Vector from a face point to the closest point on the sphere\r\n        var penetrationVec = sphereConvex_penetrationVec;\r\n        worldSpherePointClosestToPlane.vsub(worldPoint,penetrationVec);\r\n\r\n        // The penetration. Negative value means overlap.\r\n        var penetration = penetrationVec.dot(worldNormal);\r\n\r\n        var worldPointToSphere = sphereConvex_sphereToWorldPoint;\r\n        xi.vsub(worldPoint, worldPointToSphere);\r\n\r\n        if(penetration < 0 && worldPointToSphere.dot(worldNormal)>0){\r\n            // Intersects plane. Now check if the sphere is inside the face polygon\r\n            var faceVerts = []; // Face vertices, in world coords\r\n            for(var j=0, Nverts=face.length; j!==Nverts; j++){\r\n                var worldVertex = v3pool.get();\r\n                qj.vmult(verts[face[j]], worldVertex);\r\n                xj.vadd(worldVertex,worldVertex);\r\n                faceVerts.push(worldVertex);\r\n            }\r\n\r\n            if(pointInPolygon(faceVerts,worldNormal,xi)){ // Is the sphere center in the face polygon?\r\n                found = true;\r\n                var r = this.createContactEquation(bi,bj,si,sj);\r\n\r\n                worldNormal.mult(-R, r.ri); // Contact offset, from sphere center to contact\r\n                worldNormal.negate(r.ni); // Normal pointing out of sphere\r\n\r\n                var penetrationVec2 = v3pool.get();\r\n                worldNormal.mult(-penetration, penetrationVec2);\r\n                var penetrationSpherePoint = v3pool.get();\r\n                worldNormal.mult(-R, penetrationSpherePoint);\r\n\r\n                //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\r\n                xi.vsub(xj,r.rj);\r\n                r.rj.vadd(penetrationSpherePoint,r.rj);\r\n                r.rj.vadd(penetrationVec2 , r.rj);\r\n\r\n                // Should be relative to the body.\r\n                r.rj.vadd(xj, r.rj);\r\n                r.rj.vsub(bj.position, r.rj);\r\n\r\n                // Should be relative to the body.\r\n                r.ri.vadd(xi, r.ri);\r\n                r.ri.vsub(bi.position, r.ri);\r\n\r\n                v3pool.release(penetrationVec2);\r\n                v3pool.release(penetrationSpherePoint);\r\n\r\n                this.result.push(r);\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n\r\n                // Release world vertices\r\n                for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\r\n                    v3pool.release(faceVerts[j]);\r\n                }\r\n\r\n                return; // We only expect *one* face contact\r\n            } else {\r\n                // Edge?\r\n                for(var j=0; j!==face.length; j++){\r\n\r\n                    // Get two world transformed vertices\r\n                    var v1 = v3pool.get();\r\n                    var v2 = v3pool.get();\r\n                    qj.vmult(verts[face[(j+1)%face.length]], v1);\r\n                    qj.vmult(verts[face[(j+2)%face.length]], v2);\r\n                    xj.vadd(v1, v1);\r\n                    xj.vadd(v2, v2);\r\n\r\n                    // Construct edge vector\r\n                    var edge = sphereConvex_edge;\r\n                    v2.vsub(v1,edge);\r\n\r\n                    // Construct the same vector, but normalized\r\n                    var edgeUnit = sphereConvex_edgeUnit;\r\n                    edge.unit(edgeUnit);\r\n\r\n                    // p is xi projected onto the edge\r\n                    var p = v3pool.get();\r\n                    var v1_to_xi = v3pool.get();\r\n                    xi.vsub(v1, v1_to_xi);\r\n                    var dot = v1_to_xi.dot(edgeUnit);\r\n                    edgeUnit.mult(dot, p);\r\n                    p.vadd(v1, p);\r\n\r\n                    // Compute a vector from p to the center of the sphere\r\n                    var xi_to_p = v3pool.get();\r\n                    p.vsub(xi, xi_to_p);\r\n\r\n                    // Collision if the edge-sphere distance is less than the radius\r\n                    // AND if p is in between v1 and v2\r\n                    if(dot > 0 && dot*dot<edge.norm2() && xi_to_p.norm2() < R*R){ // Collision if the edge-sphere distance is less than the radius\r\n                        // Edge contact!\r\n                        var r = this.createContactEquation(bi,bj,si,sj);\r\n                        p.vsub(xj,r.rj);\r\n\r\n                        p.vsub(xi,r.ni);\r\n                        r.ni.normalize();\r\n\r\n                        r.ni.mult(R,r.ri);\r\n\r\n                        // Should be relative to the body.\r\n                        r.rj.vadd(xj, r.rj);\r\n                        r.rj.vsub(bj.position, r.rj);\r\n\r\n                        // Should be relative to the body.\r\n                        r.ri.vadd(xi, r.ri);\r\n                        r.ri.vsub(bi.position, r.ri);\r\n\r\n                        this.result.push(r);\r\n                        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n\r\n                        // Release world vertices\r\n                        for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\r\n                            v3pool.release(faceVerts[j]);\r\n                        }\r\n\r\n                        v3pool.release(v1);\r\n                        v3pool.release(v2);\r\n                        v3pool.release(p);\r\n                        v3pool.release(xi_to_p);\r\n                        v3pool.release(v1_to_xi);\r\n\r\n                        return;\r\n                    }\r\n\r\n                    v3pool.release(v1);\r\n                    v3pool.release(v2);\r\n                    v3pool.release(p);\r\n                    v3pool.release(xi_to_p);\r\n                    v3pool.release(v1_to_xi);\r\n                }\r\n            }\r\n\r\n            // Release world vertices\r\n            for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\r\n                v3pool.release(faceVerts[j]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar planeBox_normal = new Vec3();\r\nvar plane_to_corner = new Vec3();\r\n\r\n/**\r\n * @method planeBox\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.BOX] =\r\nNarrowphase.prototype.planeBox = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    sj.convexPolyhedronRepresentation.material = sj.material;\r\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\r\n    this.planeConvex(si,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj);\r\n};\r\n\r\nvar planeConvex_v = new Vec3();\r\nvar planeConvex_normal = new Vec3();\r\nvar planeConvex_relpos = new Vec3();\r\nvar planeConvex_projected = new Vec3();\r\n\r\n/**\r\n * @method planeConvex\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.planeConvex = function(\r\n    planeShape,\r\n    convexShape,\r\n    planePosition,\r\n    convexPosition,\r\n    planeQuat,\r\n    convexQuat,\r\n    planeBody,\r\n    convexBody\r\n){\r\n    // Simply return the points behind the plane.\r\n    var worldVertex = planeConvex_v,\r\n        worldNormal = planeConvex_normal;\r\n    worldNormal.set(0,0,1);\r\n    planeQuat.vmult(worldNormal,worldNormal); // Turn normal according to plane orientation\r\n\r\n    var numContacts = 0;\r\n    var relpos = planeConvex_relpos;\r\n    for(var i = 0; i !== convexShape.vertices.length; i++){\r\n\r\n        // Get world convex vertex\r\n        worldVertex.copy(convexShape.vertices[i]);\r\n        convexQuat.vmult(worldVertex, worldVertex);\r\n        convexPosition.vadd(worldVertex, worldVertex);\r\n        worldVertex.vsub(planePosition, relpos);\r\n\r\n        var dot = worldNormal.dot(relpos);\r\n        if(dot <= 0.0){\r\n\r\n            var r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape);\r\n\r\n            // Get vertex position projected on plane\r\n            var projected = planeConvex_projected;\r\n            worldNormal.mult(worldNormal.dot(relpos),projected);\r\n            worldVertex.vsub(projected, projected);\r\n            projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\r\n\r\n            r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\r\n\r\n            // rj is now just the vector from the convex center to the vertex\r\n            worldVertex.vsub(convexPosition, r.rj);\r\n\r\n            // Make it relative to the body\r\n            r.ri.vadd(planePosition, r.ri);\r\n            r.ri.vsub(planeBody.position, r.ri);\r\n            r.rj.vadd(convexPosition, r.rj);\r\n            r.rj.vsub(convexBody.position, r.rj);\r\n\r\n            this.result.push(r);\r\n            numContacts++;\r\n            if(!this.enableFrictionReduction){\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            }\r\n        }\r\n    }\r\n\r\n    if(this.enableFrictionReduction && numContacts){\r\n        this.createFrictionFromAverage(numContacts);\r\n    }\r\n};\r\n\r\nvar convexConvex_sepAxis = new Vec3();\r\nvar convexConvex_q = new Vec3();\r\n\r\n/**\r\n * @method convexConvex\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.convexConvex = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\r\n    var sepAxis = convexConvex_sepAxis;\r\n\r\n    if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n        return;\r\n    }\r\n\r\n    if(si.findSeparatingAxis(sj,xi,qi,xj,qj,sepAxis,faceListA,faceListB)){\r\n        var res = [];\r\n        var q = convexConvex_q;\r\n        si.clipAgainstHull(xi,qi,sj,xj,qj,sepAxis,-100,100,res);\r\n        var numContacts = 0;\r\n        for(var j = 0; j !== res.length; j++){\r\n            var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\r\n                ri = r.ri,\r\n                rj = r.rj;\r\n            sepAxis.negate(r.ni);\r\n            res[j].normal.negate(q);\r\n            q.mult(res[j].depth, q);\r\n            res[j].point.vadd(q, ri);\r\n            rj.copy(res[j].point);\r\n\r\n            // Contact points are in world coordinates. Transform back to relative\r\n            ri.vsub(xi,ri);\r\n            rj.vsub(xj,rj);\r\n\r\n            // Make relative to bodies\r\n            ri.vadd(xi, ri);\r\n            ri.vsub(bi.position, ri);\r\n            rj.vadd(xj, rj);\r\n            rj.vsub(bj.position, rj);\r\n\r\n            this.result.push(r);\r\n            numContacts++;\r\n            if(!this.enableFrictionReduction){\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            }\r\n        }\r\n        if(this.enableFrictionReduction && numContacts){\r\n            this.createFrictionFromAverage(numContacts);\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @method convexTrimesh\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\n// Narrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.TRIMESH] =\r\n// Narrowphase.prototype.convexTrimesh = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\r\n//     var sepAxis = convexConvex_sepAxis;\r\n\r\n//     if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n//         return;\r\n//     }\r\n\r\n//     // Construct a temp hull for each triangle\r\n//     var hullB = new ConvexPolyhedron();\r\n\r\n//     hullB.faces = [[0,1,2]];\r\n//     var va = new Vec3();\r\n//     var vb = new Vec3();\r\n//     var vc = new Vec3();\r\n//     hullB.vertices = [\r\n//         va,\r\n//         vb,\r\n//         vc\r\n//     ];\r\n\r\n//     for (var i = 0; i < sj.indices.length / 3; i++) {\r\n\r\n//         var triangleNormal = new Vec3();\r\n//         sj.getNormal(i, triangleNormal);\r\n//         hullB.faceNormals = [triangleNormal];\r\n\r\n//         sj.getTriangleVertices(i, va, vb, vc);\r\n\r\n//         var d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\r\n//         if(!d){\r\n//             triangleNormal.scale(-1, triangleNormal);\r\n//             d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\r\n\r\n//             if(!d){\r\n//                 continue;\r\n//             }\r\n//         }\r\n\r\n//         var res = [];\r\n//         var q = convexConvex_q;\r\n//         si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\r\n//         for(var j = 0; j !== res.length; j++){\r\n//             var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\r\n//                 ri = r.ri,\r\n//                 rj = r.rj;\r\n//             r.ni.copy(triangleNormal);\r\n//             r.ni.negate(r.ni);\r\n//             res[j].normal.negate(q);\r\n//             q.mult(res[j].depth, q);\r\n//             res[j].point.vadd(q, ri);\r\n//             rj.copy(res[j].point);\r\n\r\n//             // Contact points are in world coordinates. Transform back to relative\r\n//             ri.vsub(xi,ri);\r\n//             rj.vsub(xj,rj);\r\n\r\n//             // Make relative to bodies\r\n//             ri.vadd(xi, ri);\r\n//             ri.vsub(bi.position, ri);\r\n//             rj.vadd(xj, rj);\r\n//             rj.vsub(bj.position, rj);\r\n\r\n//             result.push(r);\r\n//         }\r\n//     }\r\n// };\r\n\r\nvar particlePlane_normal = new Vec3();\r\nvar particlePlane_relpos = new Vec3();\r\nvar particlePlane_projected = new Vec3();\r\n\r\n/**\r\n * @method particlePlane\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.PARTICLE] =\r\nNarrowphase.prototype.planeParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\r\n    var normal = particlePlane_normal;\r\n    normal.set(0,0,1);\r\n    bj.quaternion.vmult(normal,normal); // Turn normal according to plane orientation\r\n    var relpos = particlePlane_relpos;\r\n    xi.vsub(bj.position,relpos);\r\n    var dot = normal.dot(relpos);\r\n    if(dot <= 0.0){\r\n        var r = this.createContactEquation(bi,bj,si,sj);\r\n        r.ni.copy(normal); // Contact normal is the plane normal\r\n        r.ni.negate(r.ni);\r\n        r.ri.set(0,0,0); // Center of particle\r\n\r\n        // Get particle position projected on plane\r\n        var projected = particlePlane_projected;\r\n        normal.mult(normal.dot(xi),projected);\r\n        xi.vsub(projected,projected);\r\n        //projected.vadd(bj.position,projected);\r\n\r\n        // rj is now the projected world position minus plane position\r\n        r.rj.copy(projected);\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n};\r\n\r\nvar particleSphere_normal = new Vec3();\r\n\r\n/**\r\n * @method particleSphere\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.SPHERE] =\r\nNarrowphase.prototype.sphereParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\r\n    // The normal is the unit vector from sphere center to particle center\r\n    var normal = particleSphere_normal;\r\n    normal.set(0,0,1);\r\n    xi.vsub(xj,normal);\r\n    var lengthSquared = normal.norm2();\r\n\r\n    if(lengthSquared <= sj.radius * sj.radius){\r\n        var r = this.createContactEquation(bi,bj,si,sj);\r\n        normal.normalize();\r\n        r.rj.copy(normal);\r\n        r.rj.mult(sj.radius,r.rj);\r\n        r.ni.copy(normal); // Contact normal\r\n        r.ni.negate(r.ni);\r\n        r.ri.set(0,0,0); // Center of particle\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n};\r\n\r\n// WIP\r\nvar cqj = new Quaternion();\r\nvar convexParticle_local = new Vec3();\r\nvar convexParticle_normal = new Vec3();\r\nvar convexParticle_penetratedFaceNormal = new Vec3();\r\nvar convexParticle_vertexToParticle = new Vec3();\r\nvar convexParticle_worldPenetrationVec = new Vec3();\r\n\r\n/**\r\n * @method convexParticle\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.convexParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\r\n    var penetratedFaceIndex = -1;\r\n    var penetratedFaceNormal = convexParticle_penetratedFaceNormal;\r\n    var worldPenetrationVec = convexParticle_worldPenetrationVec;\r\n    var minPenetration = null;\r\n    var numDetectedFaces = 0;\r\n\r\n    // Convert particle position xi to local coords in the convex\r\n    var local = convexParticle_local;\r\n    local.copy(xi);\r\n    local.vsub(xj,local); // Convert position to relative the convex origin\r\n    qj.conjugate(cqj);\r\n    cqj.vmult(local,local);\r\n\r\n    if(sj.pointIsInside(local)){\r\n\r\n        if(sj.worldVerticesNeedsUpdate){\r\n            sj.computeWorldVertices(xj,qj);\r\n        }\r\n        if(sj.worldFaceNormalsNeedsUpdate){\r\n            sj.computeWorldFaceNormals(qj);\r\n        }\r\n\r\n        // For each world polygon in the polyhedra\r\n        for(var i=0,nfaces=sj.faces.length; i!==nfaces; i++){\r\n\r\n            // Construct world face vertices\r\n            var verts = [ sj.worldVertices[ sj.faces[i][0] ] ];\r\n            var normal = sj.worldFaceNormals[i];\r\n\r\n            // Check how much the particle penetrates the polygon plane.\r\n            xi.vsub(verts[0],convexParticle_vertexToParticle);\r\n            var penetration = -normal.dot(convexParticle_vertexToParticle);\r\n            if(minPenetration===null || Math.abs(penetration)<Math.abs(minPenetration)){\r\n                minPenetration = penetration;\r\n                penetratedFaceIndex = i;\r\n                penetratedFaceNormal.copy(normal);\r\n                numDetectedFaces++;\r\n            }\r\n        }\r\n\r\n        if(penetratedFaceIndex!==-1){\r\n            // Setup contact\r\n            var r = this.createContactEquation(bi,bj,si,sj);\r\n            penetratedFaceNormal.mult(minPenetration, worldPenetrationVec);\r\n\r\n            // rj is the particle position projected to the face\r\n            worldPenetrationVec.vadd(xi,worldPenetrationVec);\r\n            worldPenetrationVec.vsub(xj,worldPenetrationVec);\r\n            r.rj.copy(worldPenetrationVec);\r\n            //var projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\r\n            //projectedToFace.copy(r.rj);\r\n\r\n            //qj.vmult(r.rj,r.rj);\r\n            penetratedFaceNormal.negate( r.ni ); // Contact normal\r\n            r.ri.set(0,0,0); // Center of particle\r\n\r\n            var ri = r.ri,\r\n                rj = r.rj;\r\n\r\n            // Make relative to bodies\r\n            ri.vadd(xi, ri);\r\n            ri.vsub(bi.position, ri);\r\n            rj.vadd(xj, rj);\r\n            rj.vsub(bj.position, rj);\r\n\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        } else {\r\n            console.warn(\"Point found inside convex, but did not find penetrating face!\");\r\n        }\r\n    }\r\n};\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.HEIGHTFIELD] =\r\nNarrowphase.prototype.boxHeightfield = function (si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    this.convexHeightfield(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj);\r\n};\r\n\r\nvar convexHeightfield_tmp1 = new Vec3();\r\nvar convexHeightfield_tmp2 = new Vec3();\r\nvar convexHeightfield_faceList = [0];\r\n\r\n/**\r\n * @method convexHeightfield\r\n */\r\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD] =\r\nNarrowphase.prototype.convexHeightfield = function (\r\n    convexShape,\r\n    hfShape,\r\n    convexPos,\r\n    hfPos,\r\n    convexQuat,\r\n    hfQuat,\r\n    convexBody,\r\n    hfBody\r\n){\r\n    var data = hfShape.data,\r\n        w = hfShape.elementSize,\r\n        radius = convexShape.boundingSphereRadius,\r\n        worldPillarOffset = convexHeightfield_tmp2,\r\n        faceList = convexHeightfield_faceList;\r\n\r\n    // Get sphere position to heightfield local!\r\n    var localConvexPos = convexHeightfield_tmp1;\r\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos);\r\n\r\n    // Get the index of the data points to test against\r\n    var iMinX = Math.floor((localConvexPos.x - radius) / w) - 1,\r\n        iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1,\r\n        iMinY = Math.floor((localConvexPos.y - radius) / w) - 1,\r\n        iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1;\r\n\r\n    // Bail out if we are out of the terrain\r\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length){\r\n        return;\r\n    }\r\n\r\n    // Clamp index to edges\r\n    if(iMinX < 0){ iMinX = 0; }\r\n    if(iMaxX < 0){ iMaxX = 0; }\r\n    if(iMinY < 0){ iMinY = 0; }\r\n    if(iMaxY < 0){ iMaxY = 0; }\r\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\r\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\r\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\r\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\r\n\r\n    var minMax = [];\r\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    var min = minMax[0];\r\n    var max = minMax[1];\r\n\r\n    // Bail out if we're cant touch the bounding height box\r\n    if(localConvexPos.z - radius > max || localConvexPos.z + radius < min){\r\n        return;\r\n    }\r\n\r\n    for(var i = iMinX; i < iMaxX; i++){\r\n        for(var j = iMinY; j < iMaxY; j++){\r\n\r\n            // Lower triangle\r\n            hfShape.getConvexTrianglePillar(i, j, false);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\r\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\r\n            }\r\n\r\n            // Upper triangle\r\n            hfShape.getConvexTrianglePillar(i, j, true);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\r\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar sphereHeightfield_tmp1 = new Vec3();\r\nvar sphereHeightfield_tmp2 = new Vec3();\r\n\r\n/**\r\n * @method sphereHeightfield\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.HEIGHTFIELD] =\r\nNarrowphase.prototype.sphereHeightfield = function (\r\n    sphereShape,\r\n    hfShape,\r\n    spherePos,\r\n    hfPos,\r\n    sphereQuat,\r\n    hfQuat,\r\n    sphereBody,\r\n    hfBody\r\n){\r\n    var data = hfShape.data,\r\n        radius = sphereShape.radius,\r\n        w = hfShape.elementSize,\r\n        worldPillarOffset = sphereHeightfield_tmp2;\r\n\r\n    // Get sphere position to heightfield local!\r\n    var localSpherePos = sphereHeightfield_tmp1;\r\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos);\r\n\r\n    // Get the index of the data points to test against\r\n    var iMinX = Math.floor((localSpherePos.x - radius) / w) - 1,\r\n        iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1,\r\n        iMinY = Math.floor((localSpherePos.y - radius) / w) - 1,\r\n        iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1;\r\n\r\n    // Bail out if we are out of the terrain\r\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMaxY > data[0].length){\r\n        return;\r\n    }\r\n\r\n    // Clamp index to edges\r\n    if(iMinX < 0){ iMinX = 0; }\r\n    if(iMaxX < 0){ iMaxX = 0; }\r\n    if(iMinY < 0){ iMinY = 0; }\r\n    if(iMaxY < 0){ iMaxY = 0; }\r\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\r\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\r\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\r\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\r\n\r\n    var minMax = [];\r\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    var min = minMax[0];\r\n    var max = minMax[1];\r\n\r\n    // Bail out if we're cant touch the bounding height box\r\n    if(localSpherePos.z - radius > max || localSpherePos.z + radius < min){\r\n        return;\r\n    }\r\n\r\n    var result = this.result;\r\n    for(var i = iMinX; i < iMaxX; i++){\r\n        for(var j = iMinY; j < iMaxY; j++){\r\n\r\n            var numContactsBefore = result.length;\r\n\r\n            // Lower triangle\r\n            hfShape.getConvexTrianglePillar(i, j, false);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\r\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\r\n            }\r\n\r\n            // Upper triangle\r\n            hfShape.getConvexTrianglePillar(i, j, true);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\r\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\r\n            }\r\n\r\n            var numContacts = result.length - numContactsBefore;\r\n\r\n            if(numContacts > 2){\r\n                return;\r\n            }\r\n            /*\r\n            // Skip all but 1\r\n            for (var k = 0; k < numContacts - 1; k++) {\r\n                result.pop();\r\n            }\r\n            */\r\n        }\r\n    }\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../collision/Ray\":9,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43,\"../solver/Solver\":47,\"../utils/Vec3Pool\":54}],56:[function(_dereq_,module,exports){\r\n/* global performance */\r\n\r\nmodule.exports = World;\r\n\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar GSSolver = _dereq_('../solver/GSSolver');\r\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\r\nvar Narrowphase = _dereq_('./Narrowphase');\r\nvar EventTarget = _dereq_('../utils/EventTarget');\r\nvar ArrayCollisionMatrix = _dereq_('../collision/ArrayCollisionMatrix');\r\nvar Material = _dereq_('../material/Material');\r\nvar ContactMaterial = _dereq_('../material/ContactMaterial');\r\nvar Body = _dereq_('../objects/Body');\r\nvar TupleDictionary = _dereq_('../utils/TupleDictionary');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Ray = _dereq_('../collision/Ray');\r\nvar NaiveBroadphase = _dereq_('../collision/NaiveBroadphase');\r\n\r\n/**\r\n * The physics world\r\n * @class World\r\n * @constructor\r\n * @extends EventTarget\r\n */\r\nfunction World(){\r\n    EventTarget.apply(this);\r\n\r\n    /**\r\n     * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\r\n     * @property {Number} dt\r\n     */\r\n    this.dt = -1;\r\n\r\n    /**\r\n     * Makes bodies go to sleep when they've been inactive\r\n     * @property allowSleep\r\n     * @type {Boolean}\r\n     */\r\n    this.allowSleep = false;\r\n\r\n    /**\r\n     * All the current contacts (instances of ContactEquation) in the world.\r\n     * @property contacts\r\n     * @type {Array}\r\n     */\r\n    this.contacts = [];\r\n    this.frictionEquations = [];\r\n\r\n    /**\r\n     * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\r\n     * @property quatNormalizeSkip\r\n     * @type {Number}\r\n     */\r\n    this.quatNormalizeSkip = 0;\r\n\r\n    /**\r\n     * Set to true to use fast quaternion normalization. It is often enough accurate to use. If bodies tend to explode, set to false.\r\n     * @property quatNormalizeFast\r\n     * @type {Boolean}\r\n     * @see Quaternion.normalizeFast\r\n     * @see Quaternion.normalize\r\n     */\r\n    this.quatNormalizeFast = false;\r\n\r\n    /**\r\n     * The wall-clock time since simulation start\r\n     * @property time\r\n     * @type {Number}\r\n     */\r\n    this.time = 0.0;\r\n\r\n    /**\r\n     * Number of timesteps taken since start\r\n     * @property stepnumber\r\n     * @type {Number}\r\n     */\r\n    this.stepnumber = 0;\r\n\r\n    /// Default and last timestep sizes\r\n    this.default_dt = 1/60;\r\n\r\n    this.nextId = 0;\r\n    /**\r\n     * @property gravity\r\n     * @type {Vec3}\r\n     */\r\n    this.gravity = new Vec3();\r\n\r\n    /**\r\n     * @property broadphase\r\n     * @type {Broadphase}\r\n     */\r\n    this.broadphase = new NaiveBroadphase();\r\n\r\n    /**\r\n     * @property bodies\r\n     * @type {Array}\r\n     */\r\n    this.bodies = [];\r\n\r\n    /**\r\n     * @property solver\r\n     * @type {Solver}\r\n     */\r\n    this.solver = new GSSolver();\r\n\r\n    /**\r\n     * @property constraints\r\n     * @type {Array}\r\n     */\r\n    this.constraints = [];\r\n\r\n    /**\r\n     * @property narrowphase\r\n     * @type {Narrowphase}\r\n     */\r\n    this.narrowphase = new Narrowphase(this);\r\n\r\n    /**\r\n     * @property {ArrayCollisionMatrix} collisionMatrix\r\n\t * @type {ArrayCollisionMatrix}\r\n\t */\r\n\tthis.collisionMatrix = new ArrayCollisionMatrix();\r\n\r\n    /**\r\n     * CollisionMatrix from the previous step.\r\n     * @property {ArrayCollisionMatrix} collisionMatrixPrevious\r\n\t * @type {ArrayCollisionMatrix}\r\n\t */\r\n\tthis.collisionMatrixPrevious = new ArrayCollisionMatrix();\r\n\r\n    /**\r\n     * All added materials\r\n     * @property materials\r\n     * @type {Array}\r\n     */\r\n    this.materials = [];\r\n\r\n    /**\r\n     * @property contactmaterials\r\n     * @type {Array}\r\n     */\r\n    this.contactmaterials = [];\r\n\r\n    /**\r\n     * Used to look up a ContactMaterial given two instances of Material.\r\n     * @property {TupleDictionary} contactMaterialTable\r\n     */\r\n    this.contactMaterialTable = new TupleDictionary();\r\n\r\n    this.defaultMaterial = new Material(\"default\");\r\n\r\n    /**\r\n     * This contact material is used if no suitable contactmaterial is found for a contact.\r\n     * @property defaultContactMaterial\r\n     * @type {ContactMaterial}\r\n     */\r\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, { friction: 0.3, restitution: 0.0 });\r\n\r\n    /**\r\n     * @property doProfiling\r\n     * @type {Boolean}\r\n     */\r\n    this.doProfiling = false;\r\n\r\n    /**\r\n     * @property profile\r\n     * @type {Object}\r\n     */\r\n    this.profile = {\r\n        solve:0,\r\n        makeContactConstraints:0,\r\n        broadphase:0,\r\n        integrate:0,\r\n        narrowphase:0,\r\n    };\r\n\r\n    /**\r\n     * @property subsystems\r\n     * @type {Array}\r\n     */\r\n    this.subsystems = [];\r\n\r\n    this.addBodyEvent = {\r\n        type:\"addBody\",\r\n        body : null,\r\n    };\r\n\r\n    this.removeBodyEvent = {\r\n        type:\"removeBody\",\r\n        body : null,\r\n    };\r\n}\r\nWorld.prototype = new EventTarget();\r\n\r\n// Temp stuff\r\nvar tmpAABB1 = new AABB();\r\nvar tmpArray1 = [];\r\nvar tmpRay = new Ray();\r\n\r\n/**\r\n * Get the contact material between materials m1 and m2\r\n * @method getContactMaterial\r\n * @param {Material} m1\r\n * @param {Material} m2\r\n * @return {ContactMaterial} The contact material if it was found.\r\n */\r\nWorld.prototype.getContactMaterial = function(m1,m2){\r\n    return this.contactMaterialTable.get(m1.id,m2.id); //this.contactmaterials[this.mats2cmat[i+j*this.materials.length]];\r\n};\r\n\r\n/**\r\n * Get number of objects in the world.\r\n * @method numObjects\r\n * @return {Number}\r\n * @deprecated\r\n */\r\nWorld.prototype.numObjects = function(){\r\n    return this.bodies.length;\r\n};\r\n\r\n/**\r\n * Store old collision state info\r\n * @method collisionMatrixTick\r\n */\r\nWorld.prototype.collisionMatrixTick = function(){\r\n\tvar temp = this.collisionMatrixPrevious;\r\n\tthis.collisionMatrixPrevious = this.collisionMatrix;\r\n\tthis.collisionMatrix = temp;\r\n\tthis.collisionMatrix.reset();\r\n};\r\n\r\n/**\r\n * Add a rigid body to the simulation.\r\n * @method add\r\n * @param {Body} body\r\n * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\r\n * @todo Adding an array of bodies should be possible. This would save some loops too\r\n * @deprecated Use .addBody instead\r\n */\r\nWorld.prototype.add = World.prototype.addBody = function(body){\r\n    if(this.bodies.indexOf(body) !== -1){\r\n        return;\r\n    }\r\n    body.index = this.bodies.length;\r\n    this.bodies.push(body);\r\n    body.world = this;\r\n    body.initPosition.copy(body.position);\r\n    body.initVelocity.copy(body.velocity);\r\n    body.timeLastSleepy = this.time;\r\n    if(body instanceof Body){\r\n        body.initAngularVelocity.copy(body.angularVelocity);\r\n        body.initQuaternion.copy(body.quaternion);\r\n    }\r\n\tthis.collisionMatrix.setNumObjects(this.bodies.length);\r\n    this.addBodyEvent.body = body;\r\n    this.dispatchEvent(this.addBodyEvent);\r\n};\r\n\r\n/**\r\n * Add a constraint to the simulation.\r\n * @method addConstraint\r\n * @param {Constraint} c\r\n */\r\nWorld.prototype.addConstraint = function(c){\r\n    this.constraints.push(c);\r\n};\r\n\r\n/**\r\n * Removes a constraint\r\n * @method removeConstraint\r\n * @param {Constraint} c\r\n */\r\nWorld.prototype.removeConstraint = function(c){\r\n    var idx = this.constraints.indexOf(c);\r\n    if(idx!==-1){\r\n        this.constraints.splice(idx,1);\r\n    }\r\n};\r\n\r\n/**\r\n * Raycast test\r\n * @method rayTest\r\n * @param {Vec3} from\r\n * @param {Vec3} to\r\n * @param {Function|RaycastResult} result\r\n * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\r\n */\r\nWorld.prototype.rayTest = function(from, to, result){\r\n    if(result instanceof RaycastResult){\r\n        // Do raycastclosest\r\n        this.raycastClosest(from, to, {\r\n            skipBackfaces: true\r\n        }, result);\r\n    } else {\r\n        // Do raycastAll\r\n        this.raycastAll(from, to, {\r\n            skipBackfaces: true\r\n        }, result);\r\n    }\r\n};\r\n\r\n/**\r\n * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\r\n * @method raycastAll\r\n * @param  {Vec3} from\r\n * @param  {Vec3} to\r\n * @param  {Object} options\r\n * @param  {number} [options.collisionFilterMask=-1]\r\n * @param  {number} [options.collisionFilterGroup=-1]\r\n * @param  {boolean} [options.skipBackfaces=false]\r\n * @param  {boolean} [options.checkCollisionResponse=true]\r\n * @param  {Function} callback\r\n * @return {boolean} True if any body was hit.\r\n */\r\nWorld.prototype.raycastAll = function(from, to, options, callback){\r\n    options.mode = Ray.ALL;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.callback = callback;\r\n    return tmpRay.intersectWorld(this, options);\r\n};\r\n\r\n/**\r\n * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\r\n * @method raycastAny\r\n * @param  {Vec3} from\r\n * @param  {Vec3} to\r\n * @param  {Object} options\r\n * @param  {number} [options.collisionFilterMask=-1]\r\n * @param  {number} [options.collisionFilterGroup=-1]\r\n * @param  {boolean} [options.skipBackfaces=false]\r\n * @param  {boolean} [options.checkCollisionResponse=true]\r\n * @param  {RaycastResult} result\r\n * @return {boolean} True if any body was hit.\r\n */\r\nWorld.prototype.raycastAny = function(from, to, options, result){\r\n    options.mode = Ray.ANY;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.result = result;\r\n    return tmpRay.intersectWorld(this, options);\r\n};\r\n\r\n/**\r\n * Ray cast, and return information of the closest hit.\r\n * @method raycastClosest\r\n * @param  {Vec3} from\r\n * @param  {Vec3} to\r\n * @param  {Object} options\r\n * @param  {number} [options.collisionFilterMask=-1]\r\n * @param  {number} [options.collisionFilterGroup=-1]\r\n * @param  {boolean} [options.skipBackfaces=false]\r\n * @param  {boolean} [options.checkCollisionResponse=true]\r\n * @param  {RaycastResult} result\r\n * @return {boolean} True if any body was hit.\r\n */\r\nWorld.prototype.raycastClosest = function(from, to, options, result){\r\n    options.mode = Ray.CLOSEST;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.result = result;\r\n    return tmpRay.intersectWorld(this, options);\r\n};\r\n\r\n/**\r\n * Remove a rigid body from the simulation.\r\n * @method remove\r\n * @param {Body} body\r\n * @deprecated Use .removeBody instead\r\n */\r\nWorld.prototype.remove = function(body){\r\n    body.world = null;\r\n    var n = this.bodies.length-1,\r\n        bodies = this.bodies,\r\n        idx = bodies.indexOf(body);\r\n    if(idx !== -1){\r\n        bodies.splice(idx, 1); // Todo: should use a garbage free method\r\n\r\n        // Recompute index\r\n        for(var i=0; i!==bodies.length; i++){\r\n            bodies[i].index = i;\r\n        }\r\n\r\n        this.collisionMatrix.setNumObjects(n);\r\n        this.removeBodyEvent.body = body;\r\n        this.dispatchEvent(this.removeBodyEvent);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove a rigid body from the simulation.\r\n * @method removeBody\r\n * @param {Body} body\r\n */\r\nWorld.prototype.removeBody = World.prototype.remove;\r\n\r\n/**\r\n * Adds a material to the World.\r\n * @method addMaterial\r\n * @param {Material} m\r\n * @todo Necessary?\r\n */\r\nWorld.prototype.addMaterial = function(m){\r\n    this.materials.push(m);\r\n};\r\n\r\n/**\r\n * Adds a contact material to the World\r\n * @method addContactMaterial\r\n * @param {ContactMaterial} cmat\r\n */\r\nWorld.prototype.addContactMaterial = function(cmat) {\r\n\r\n    // Add contact material\r\n    this.contactmaterials.push(cmat);\r\n\r\n    // Add current contact material to the material table\r\n    this.contactMaterialTable.set(cmat.materials[0].id,cmat.materials[1].id,cmat);\r\n};\r\n\r\n// performance.now()\r\nif(typeof performance === 'undefined'){\r\n    performance = {};\r\n}\r\nif(!performance.now){\r\n    var nowOffset = Date.now();\r\n    if (performance.timing && performance.timing.navigationStart){\r\n        nowOffset = performance.timing.navigationStart;\r\n    }\r\n    performance.now = function(){\r\n        return Date.now() - nowOffset;\r\n    };\r\n}\r\n\r\nvar step_tmp1 = new Vec3();\r\n\r\n/**\r\n * Step the physics world forward in time.\r\n *\r\n * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\r\n *\r\n * @method step\r\n * @param {Number} dt                       The fixed time step size to use.\r\n * @param {Number} [timeSinceLastCalled]    The time elapsed since the function was last called.\r\n * @param {Number} [maxSubSteps=10]         Maximum number of fixed steps to take per function call.\r\n *\r\n * @example\r\n *     // fixed timestepping without interpolation\r\n *     world.step(1/60);\r\n *\r\n * @see http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World\r\n */\r\nWorld.prototype.step = function(dt, timeSinceLastCalled, maxSubSteps){\r\n    maxSubSteps = maxSubSteps || 10;\r\n    timeSinceLastCalled = timeSinceLastCalled || 0;\r\n\r\n    if(timeSinceLastCalled === 0){ // Fixed, simple stepping\r\n\r\n        this.internalStep(dt);\r\n\r\n        // Increment time\r\n        this.time += dt;\r\n\r\n    } else {\r\n\r\n        // Compute the number of fixed steps we should have taken since the last step\r\n        var internalSteps = Math.floor((this.time + timeSinceLastCalled) / dt) - Math.floor(this.time / dt);\r\n        internalSteps = Math.min(internalSteps,maxSubSteps);\r\n\r\n        // Do some fixed steps to catch up\r\n        var t0 = performance.now();\r\n        for(var i=0; i!==internalSteps; i++){\r\n            this.internalStep(dt);\r\n            if(performance.now() - t0 > dt * 1000){\r\n                // We are slower than real-time. Better bail out.\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Increment internal clock\r\n        this.time += timeSinceLastCalled;\r\n\r\n        // Compute \"Left over\" time step\r\n        var h = this.time % dt;\r\n        var h_div_dt = h / dt;\r\n        var interpvelo = step_tmp1;\r\n        var bodies = this.bodies;\r\n\r\n        for(var j=0; j !== bodies.length; j++){\r\n            var b = bodies[j];\r\n            if(b.type !== Body.STATIC && b.sleepState !== Body.SLEEPING){\r\n\r\n                // Interpolate\r\n                b.position.vsub(b.previousPosition, interpvelo);\r\n                interpvelo.scale(h_div_dt, interpvelo);\r\n                b.position.vadd(interpvelo, b.interpolatedPosition);\r\n\r\n                // TODO: interpolate quaternion\r\n                // b.interpolatedAngle = b.angle + (b.angle - b.previousAngle) * h_div_dt;\r\n\r\n            } else {\r\n\r\n                // For static bodies, just copy. Who else will do it?\r\n                b.interpolatedPosition.copy(b.position);\r\n                b.interpolatedQuaternion.copy(b.quaternion);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Step the simulation\r\n * @method step\r\n * @param {Number} dt\r\n */\r\nvar World_step_postStepEvent = {type:\"postStep\"}, // Reusable event objects to save memory\r\n    World_step_preStepEvent = {type:\"preStep\"},\r\n    World_step_collideEvent = {type:\"collide\", body:null, contact:null },\r\n    World_step_oldContacts = [], // Pools for unused objects\r\n    World_step_frictionEquationPool = [],\r\n    World_step_p1 = [], // Reusable arrays for collision pairs\r\n    World_step_p2 = [],\r\n    World_step_gvec = new Vec3(), // Temporary vectors and quats\r\n    World_step_vi = new Vec3(),\r\n    World_step_vj = new Vec3(),\r\n    World_step_wi = new Vec3(),\r\n    World_step_wj = new Vec3(),\r\n    World_step_t1 = new Vec3(),\r\n    World_step_t2 = new Vec3(),\r\n    World_step_rixn = new Vec3(),\r\n    World_step_rjxn = new Vec3(),\r\n    World_step_step_q = new Quaternion(),\r\n    World_step_step_w = new Quaternion(),\r\n    World_step_step_wq = new Quaternion(),\r\n    invI_tau_dt = new Vec3();\r\nWorld.prototype.internalStep = function(dt){\r\n    this.dt = dt;\r\n\r\n    var world = this,\r\n        that = this,\r\n        contacts = this.contacts,\r\n        p1 = World_step_p1,\r\n        p2 = World_step_p2,\r\n        N = this.numObjects(),\r\n        bodies = this.bodies,\r\n        solver = this.solver,\r\n        gravity = this.gravity,\r\n        doProfiling = this.doProfiling,\r\n        profile = this.profile,\r\n        DYNAMIC = Body.DYNAMIC,\r\n        profilingStart,\r\n        constraints = this.constraints,\r\n        frictionEquationPool = World_step_frictionEquationPool,\r\n        gnorm = gravity.norm(),\r\n        gx = gravity.x,\r\n        gy = gravity.y,\r\n        gz = gravity.z,\r\n        i=0;\r\n\r\n    if(doProfiling){\r\n        profilingStart = performance.now();\r\n    }\r\n\r\n    // Add gravity to all objects\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\r\n            var f = bi.force, m = bi.mass;\r\n            f.x += m*gx;\r\n            f.y += m*gy;\r\n            f.z += m*gz;\r\n        }\r\n    }\r\n\r\n    // Update subsystems\r\n    for(var i=0, Nsubsystems=this.subsystems.length; i!==Nsubsystems; i++){\r\n        this.subsystems[i].update();\r\n    }\r\n\r\n    // Collision detection\r\n    if(doProfiling){ profilingStart = performance.now(); }\r\n    p1.length = 0; // Clean up pair arrays from last step\r\n    p2.length = 0;\r\n    this.broadphase.collisionPairs(this,p1,p2);\r\n    if(doProfiling){ profile.broadphase = performance.now() - profilingStart; }\r\n\r\n    // Remove constrained pairs with collideConnected == false\r\n    var Nconstraints = constraints.length;\r\n    for(i=0; i!==Nconstraints; i++){\r\n        var c = constraints[i];\r\n        if(!c.collideConnected){\r\n            for(var j = p1.length-1; j>=0; j-=1){\r\n                if( (c.bodyA === p1[j] && c.bodyB === p2[j]) ||\r\n                    (c.bodyB === p1[j] && c.bodyA === p2[j])){\r\n                    p1.splice(j, 1);\r\n                    p2.splice(j, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.collisionMatrixTick();\r\n\r\n    // Generate contacts\r\n    if(doProfiling){ profilingStart = performance.now(); }\r\n    var oldcontacts = World_step_oldContacts;\r\n    var NoldContacts = contacts.length;\r\n\r\n    for(i=0; i!==NoldContacts; i++){\r\n        oldcontacts.push(contacts[i]);\r\n    }\r\n    contacts.length = 0;\r\n\r\n    // Transfer FrictionEquation from current list to the pool for reuse\r\n    var NoldFrictionEquations = this.frictionEquations.length;\r\n    for(i=0; i!==NoldFrictionEquations; i++){\r\n        frictionEquationPool.push(this.frictionEquations[i]);\r\n    }\r\n    this.frictionEquations.length = 0;\r\n\r\n    this.narrowphase.getContacts(\r\n        p1,\r\n        p2,\r\n        this,\r\n        contacts,\r\n        oldcontacts, // To be reused\r\n        this.frictionEquations,\r\n        frictionEquationPool\r\n    );\r\n\r\n    if(doProfiling){\r\n        profile.narrowphase = performance.now() - profilingStart;\r\n    }\r\n\r\n    // Loop over all collisions\r\n    if(doProfiling){\r\n        profilingStart = performance.now();\r\n    }\r\n\r\n    // Add all friction eqs\r\n    for (var i = 0; i < this.frictionEquations.length; i++) {\r\n        solver.addEquation(this.frictionEquations[i]);\r\n    }\r\n\r\n    var ncontacts = contacts.length;\r\n    for(var k=0; k!==ncontacts; k++){\r\n\r\n        // Current contact\r\n        var c = contacts[k];\r\n\r\n        // Get current collision indeces\r\n        var bi = c.bi,\r\n            bj = c.bj,\r\n            si = c.si,\r\n            sj = c.sj;\r\n\r\n        // Get collision properties\r\n        var cm;\r\n        if(bi.material && bj.material){\r\n            cm = this.getContactMaterial(bi.material,bj.material) || this.defaultContactMaterial;\r\n        } else {\r\n            cm = this.defaultContactMaterial;\r\n        }\r\n\r\n        // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\r\n\r\n        var mu = cm.friction;\r\n        // c.restitution = cm.restitution;\r\n\r\n        // If friction or restitution were specified in the material, use them\r\n        if(bi.material && bj.material){\r\n            if(bi.material.friction >= 0 && bj.material.friction >= 0){\r\n                mu = bi.material.friction * bj.material.friction;\r\n            }\r\n\r\n            if(bi.material.restitution >= 0 && bj.material.restitution >= 0){\r\n                c.restitution = bi.material.restitution * bj.material.restitution;\r\n            }\r\n        }\r\n\r\n\t\t// c.setSpookParams(\r\n  //           cm.contactEquationStiffness,\r\n  //           cm.contactEquationRelaxation,\r\n  //           dt\r\n  //       );\r\n\r\n\t\tsolver.addEquation(c);\r\n\r\n\t\t// // Add friction constraint equation\r\n\t\t// if(mu > 0){\r\n\r\n\t\t// \t// Create 2 tangent equations\r\n\t\t// \tvar mug = mu * gnorm;\r\n\t\t// \tvar reducedMass = (bi.invMass + bj.invMass);\r\n\t\t// \tif(reducedMass > 0){\r\n\t\t// \t\treducedMass = 1/reducedMass;\r\n\t\t// \t}\r\n\t\t// \tvar pool = frictionEquationPool;\r\n\t\t// \tvar c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\r\n\t\t// \tvar c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\r\n\t\t// \tthis.frictionEquations.push(c1, c2);\r\n\r\n\t\t// \tc1.bi = c2.bi = bi;\r\n\t\t// \tc1.bj = c2.bj = bj;\r\n\t\t// \tc1.minForce = c2.minForce = -mug*reducedMass;\r\n\t\t// \tc1.maxForce = c2.maxForce = mug*reducedMass;\r\n\r\n\t\t// \t// Copy over the relative vectors\r\n\t\t// \tc1.ri.copy(c.ri);\r\n\t\t// \tc1.rj.copy(c.rj);\r\n\t\t// \tc2.ri.copy(c.ri);\r\n\t\t// \tc2.rj.copy(c.rj);\r\n\r\n\t\t// \t// Construct tangents\r\n\t\t// \tc.ni.tangents(c1.t, c2.t);\r\n\r\n  //           // Set spook params\r\n  //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\r\n  //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\r\n\r\n  //           c1.enabled = c2.enabled = c.enabled;\r\n\r\n\t\t// \t// Add equations to solver\r\n\t\t// \tsolver.addEquation(c1);\r\n\t\t// \tsolver.addEquation(c2);\r\n\t\t// }\r\n\r\n        if( bi.allowSleep &&\r\n            bi.type === Body.DYNAMIC &&\r\n            bi.sleepState  === Body.SLEEPING &&\r\n            bj.sleepState  === Body.AWAKE &&\r\n            bj.type !== Body.STATIC\r\n        ){\r\n            var speedSquaredB = bj.velocity.norm2() + bj.angularVelocity.norm2();\r\n            var speedLimitSquaredB = Math.pow(bj.sleepSpeedLimit,2);\r\n            if(speedSquaredB >= speedLimitSquaredB*2){\r\n                bi._wakeUpAfterNarrowphase = true;\r\n            }\r\n        }\r\n\r\n        if( bj.allowSleep &&\r\n            bj.type === Body.DYNAMIC &&\r\n            bj.sleepState  === Body.SLEEPING &&\r\n            bi.sleepState  === Body.AWAKE &&\r\n            bi.type !== Body.STATIC\r\n        ){\r\n            var speedSquaredA = bi.velocity.norm2() + bi.angularVelocity.norm2();\r\n            var speedLimitSquaredA = Math.pow(bi.sleepSpeedLimit,2);\r\n            if(speedSquaredA >= speedLimitSquaredA*2){\r\n                bj._wakeUpAfterNarrowphase = true;\r\n            }\r\n        }\r\n\r\n        // Now we know that i and j are in contact. Set collision matrix state\r\n\t\tthis.collisionMatrix.set(bi, bj, true);\r\n\r\n        if (!this.collisionMatrixPrevious.get(bi, bj)) {\r\n            // First contact!\r\n            // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\r\n            World_step_collideEvent.body = bj;\r\n            World_step_collideEvent.contact = c;\r\n            bi.dispatchEvent(World_step_collideEvent);\r\n\r\n            World_step_collideEvent.body = bi;\r\n            bj.dispatchEvent(World_step_collideEvent);\r\n        }\r\n    }\r\n    if(doProfiling){\r\n        profile.makeContactConstraints = performance.now() - profilingStart;\r\n        profilingStart = performance.now();\r\n    }\r\n\r\n    // Wake up bodies\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi._wakeUpAfterNarrowphase){\r\n            bi.wakeUp();\r\n            bi._wakeUpAfterNarrowphase = false;\r\n        }\r\n    }\r\n\r\n    // Add user-added constraints\r\n    var Nconstraints = constraints.length;\r\n    for(i=0; i!==Nconstraints; i++){\r\n        var c = constraints[i];\r\n        c.update();\r\n        for(var j=0, Neq=c.equations.length; j!==Neq; j++){\r\n            var eq = c.equations[j];\r\n            solver.addEquation(eq);\r\n        }\r\n    }\r\n\r\n    // Solve the constrained system\r\n    solver.solve(dt,this);\r\n\r\n    if(doProfiling){\r\n        profile.solve = performance.now() - profilingStart;\r\n    }\r\n\r\n    // Remove all contacts from solver\r\n    solver.removeAllEquations();\r\n\r\n    // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\r\n    var pow = Math.pow;\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\r\n            var ld = pow(1.0 - bi.linearDamping,dt);\r\n            var v = bi.velocity;\r\n            v.mult(ld,v);\r\n            var av = bi.angularVelocity;\r\n            if(av){\r\n                var ad = pow(1.0 - bi.angularDamping,dt);\r\n                av.mult(ad,av);\r\n            }\r\n        }\r\n    }\r\n\r\n    this.dispatchEvent(World_step_preStepEvent);\r\n\r\n    // Invoke pre-step callbacks\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi.preStep){\r\n            bi.preStep.call(bi);\r\n        }\r\n    }\r\n\r\n    // Leap frog\r\n    // vnew = v + h*f/m\r\n    // xnew = x + h*vnew\r\n    if(doProfiling){\r\n        profilingStart = performance.now();\r\n    }\r\n    var q = World_step_step_q;\r\n    var w = World_step_step_w;\r\n    var wq = World_step_step_wq;\r\n    var stepnumber = this.stepnumber;\r\n    var DYNAMIC_OR_KINEMATIC = Body.DYNAMIC | Body.KINEMATIC;\r\n    var quatNormalize = stepnumber % (this.quatNormalizeSkip+1) === 0;\r\n    var quatNormalizeFast = this.quatNormalizeFast;\r\n    var half_dt = dt * 0.5;\r\n    var PLANE = Shape.types.PLANE,\r\n        CONVEX = Shape.types.CONVEXPOLYHEDRON;\r\n\r\n    for(i=0; i!==N; i++){\r\n        var b = bodies[i],\r\n            force = b.force,\r\n            tau = b.torque;\r\n        if((b.type & DYNAMIC_OR_KINEMATIC) && b.sleepState !== Body.SLEEPING){ // Only for dynamic\r\n            var velo = b.velocity,\r\n                angularVelo = b.angularVelocity,\r\n                pos = b.position,\r\n                quat = b.quaternion,\r\n                invMass = b.invMass,\r\n                invInertia = b.invInertiaWorld;\r\n\r\n            velo.x += force.x * invMass * dt;\r\n            velo.y += force.y * invMass * dt;\r\n            velo.z += force.z * invMass * dt;\r\n\r\n            if(b.angularVelocity){\r\n                invInertia.vmult(tau,invI_tau_dt);\r\n                invI_tau_dt.mult(dt,invI_tau_dt);\r\n                invI_tau_dt.vadd(angularVelo,angularVelo);\r\n            }\r\n\r\n            // Use new velocity  - leap frog\r\n            pos.x += velo.x * dt;\r\n            pos.y += velo.y * dt;\r\n            pos.z += velo.z * dt;\r\n\r\n            if(b.angularVelocity){\r\n                w.set(angularVelo.x, angularVelo.y, angularVelo.z, 0);\r\n                w.mult(quat,wq);\r\n                quat.x += half_dt * wq.x;\r\n                quat.y += half_dt * wq.y;\r\n                quat.z += half_dt * wq.z;\r\n                quat.w += half_dt * wq.w;\r\n                if(quatNormalize){\r\n                    if(quatNormalizeFast){\r\n                        quat.normalizeFast();\r\n                    } else {\r\n                        quat.normalize();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(b.aabb){\r\n                b.aabbNeedsUpdate = true;\r\n            }\r\n\r\n            // Update world inertia\r\n            if(b.updateInertiaWorld){\r\n                b.updateInertiaWorld();\r\n            }\r\n        }\r\n    }\r\n    this.clearForces();\r\n\r\n    this.broadphase.dirty = true;\r\n\r\n    if(doProfiling){\r\n        profile.integrate = performance.now() - profilingStart;\r\n    }\r\n\r\n    // Update world time\r\n    this.time += dt;\r\n    this.stepnumber += 1;\r\n\r\n    this.dispatchEvent(World_step_postStepEvent);\r\n\r\n    // Invoke post-step callbacks\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        var postStep = bi.postStep;\r\n        if(postStep){\r\n            postStep.call(bi);\r\n        }\r\n    }\r\n\r\n    // Sleeping update\r\n    if(this.allowSleep){\r\n        for(i=0; i!==N; i++){\r\n            bodies[i].sleepTick(this.time);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Sets all body forces in the world to zero.\r\n * @method clearForces\r\n */\r\nWorld.prototype.clearForces = function(){\r\n    var bodies = this.bodies;\r\n    var N = bodies.length;\r\n    for(var i=0; i !== N; i++){\r\n        var b = bodies[i],\r\n            force = b.force,\r\n            tau = b.torque;\r\n\r\n        b.force.set(0,0,0);\r\n        b.torque.set(0,0,0);\r\n    }\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../collision/ArrayCollisionMatrix\":4,\"../collision/NaiveBroadphase\":7,\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../material/ContactMaterial\":24,\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Shape\":43,\"../solver/GSSolver\":46,\"../utils/EventTarget\":49,\"../utils/TupleDictionary\":52,\"../utils/Vec3Pool\":54,\"./Narrowphase\":55}]},{},[2])\r\n(2)\r\n});"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/cannon/build/cannon.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1659,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1660,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1661,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1662,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1663,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1664,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1665,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1666,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1667,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1668,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1669,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1670,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1671,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1672,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1673,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1674,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1675,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1676,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1677,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1678,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1679,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1680,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1681,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1682,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1683,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1684,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1685,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1686,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1687,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1688,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1689,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1690,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1691,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1692,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1693,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1694,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1695,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1696,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1697,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1698,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1699,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1700,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1701,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1702,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1703,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1704,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1705,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1706,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1707,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1708,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1709,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1710,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1711,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1712,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1713,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1714,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1715,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1716,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1717,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1718,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1719,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1720,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1721,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1722,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1723,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1724,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1725,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1726,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1727,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1728,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1729,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1730,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1731,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1732,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1733,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1734,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1735,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1736,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1737,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1738,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1739,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1740,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1741,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1742,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1743,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1744,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1745,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1746,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1747,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1748,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1749,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1750,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1751,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1752,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1753,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1754,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1755,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1756,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1757,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1758,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1759,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1760,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1761,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1762,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1763,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1764,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1765,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1766,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1767,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1768,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1769,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1770,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1771,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1772,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1773,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1774,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1775,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1776,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1777,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1778,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1779,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1780,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1781,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1782,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1783,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1784,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1785,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1786,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1787,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1788,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1789,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1790,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1791,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1792,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1793,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1794,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1795,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1796,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1797,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1798,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1799,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1800,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1801,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1802,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1803,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1804,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1805,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1806,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1807,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1808,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1809,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1810,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1811,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1812,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1813,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1814,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1815,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1816,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1817,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1818,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1819,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1820,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1821,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1822,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1823,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1824,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1825,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1826,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1827,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1828,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1829,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1830,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1831,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1832,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1833,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1834,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1835,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1836,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1837,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1838,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1839,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1840,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1841,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1842,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1843,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1844,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1845,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1846,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1847,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1848,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1849,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1850,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1851,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1852,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1853,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1854,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1855,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1856,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1857,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1858,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1859,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1860,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1861,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1862,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1863,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1864,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1865,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1866,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1867,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1868,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1869,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1870,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1871,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1872,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1873,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1874,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1875,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1876,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1877,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1878,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1879,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1880,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1881,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1882,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1883,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1884,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1885,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1886,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1887,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1888,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1889,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1890,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1891,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1892,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1893,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1894,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1895,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1896,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1897,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1898,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1899,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1900,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1901,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1902,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1903,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1904,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1905,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1906,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1907,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1908,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1909,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1910,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1911,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1912,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1913,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1914,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1915,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1916,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1917,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1918,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1919,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1920,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1921,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1922,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1923,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1924,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1925,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1926,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1927,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1928,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1929,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1930,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1931,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1932,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1933,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1934,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1935,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1936,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1937,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1938,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1939,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1940,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1941,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1942,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1943,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1944,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1945,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1946,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1947,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1948,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1949,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1950,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1951,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1952,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1953,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1954,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1955,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1956,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1957,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1958,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1959,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1960,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1961,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1962,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1963,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1964,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1965,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1966,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1967,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1968,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1969,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1970,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1971,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1972,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1973,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1974,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1975,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1976,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1977,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1978,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1979,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1980,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1981,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1982,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1983,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1984,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1985,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1986,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1987,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1988,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1989,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1990,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1991,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1992,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1993,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1994,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1995,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1996,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1997,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1998,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":1999,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2000,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2001,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2002,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2003,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2004,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2005,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2006,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2007,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2008,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2009,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2010,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2011,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2012,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2013,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2014,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2015,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2016,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2017,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2018,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2019,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2020,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2021,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2022,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2023,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2024,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2025,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2026,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2027,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2028,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2029,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2030,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2031,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2032,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2033,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2034,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2035,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2036,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2037,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2038,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2039,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2040,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2041,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2042,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2043,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2044,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2045,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2046,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2047,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2048,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2049,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2050,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2051,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2052,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2053,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2054,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2055,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2056,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2057,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2058,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2059,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2060,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2061,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2062,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2063,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2064,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2065,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2066,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2067,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2068,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2069,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2070,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2071,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2072,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2073,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2074,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2075,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2076,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2077,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2078,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2079,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2080,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2081,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2082,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2083,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2084,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2085,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2086,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2087,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2088,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2089,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2090,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2091,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2092,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2093,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2094,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2095,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2096,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2097,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2098,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2099,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2100,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2101,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2102,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2103,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2104,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2105,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2106,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2107,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2108,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2109,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2110,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2111,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2112,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2113,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2114,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2115,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2116,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2117,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2118,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2119,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2120,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2121,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2122,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2123,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2124,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2125,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2126,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2127,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2128,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2129,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2130,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2131,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2132,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2133,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2134,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2135,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2136,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2137,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2138,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2139,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2140,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2141,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2142,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2143,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2144,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2145,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2146,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2147,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2148,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2149,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2150,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2151,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2152,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2153,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2154,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2155,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2156,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2157,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2158,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2159,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2160,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2161,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2162,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2163,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2164,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2165,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2166,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2167,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2168,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2169,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2170,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2171,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2172,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2173,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2174,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2175,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2176,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2177,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2178,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2179,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2180,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2181,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2182,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2183,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2184,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2185,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2186,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2187,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2188,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2189,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2190,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2191,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2192,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2193,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2194,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2195,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2196,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2197,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2198,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2199,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2200,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2201,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2202,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2203,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2204,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2205,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2206,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2207,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2208,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2209,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2210,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2211,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2212,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2213,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2214,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2215,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2216,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2217,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2218,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2219,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2220,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2221,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2222,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2223,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2224,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2225,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2226,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2227,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2228,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2229,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2230,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2231,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2232,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2233,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2234,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2235,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2236,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2237,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2238,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2239,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2240,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2241,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2242,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2243,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2244,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2245,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2246,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2247,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2248,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2249,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2250,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2251,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2252,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2253,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2254,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2255,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2256,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2257,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2258,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2259,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2260,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2261,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2262,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2263,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2264,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2265,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2266,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2267,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2268,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2269,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2270,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2271,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2272,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2273,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2274,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2275,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2276,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2277,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2278,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2279,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2280,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2281,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2282,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2283,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2284,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2285,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2286,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2287,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2288,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2289,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2290,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2291,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2292,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2293,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2294,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2295,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2296,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2297,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2298,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2299,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2300,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2301,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2302,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2303,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2304,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2305,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2306,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2307,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2308,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2309,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2310,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2311,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2312,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2313,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2314,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2315,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2316,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2317,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2318,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2319,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2320,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2321,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2322,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2323,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2324,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2325,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2326,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2327,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2328,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2329,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2330,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2331,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2332,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2333,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2334,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2335,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2336,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2337,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2338,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2339,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2340,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2341,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2342,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2343,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2344,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2345,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2346,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2347,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2348,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2349,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2350,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2351,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2352,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2353,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2354,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2355,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2356,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2357,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2358,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2359,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2360,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2361,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2362,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2363,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2364,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2365,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2366,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2367,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2368,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2369,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2370,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2371,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2372,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2373,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2374,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2375,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2376,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2377,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2378,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2379,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2380,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2381,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2382,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2383,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2384,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2385,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2386,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2387,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2388,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2389,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2390,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2391,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2392,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2393,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2394,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2395,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2396,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2397,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2398,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2399,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2400,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2401,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2402,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2403,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2404,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2405,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2406,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2407,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2408,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2409,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2410,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2411,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2412,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2413,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2414,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2415,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2416,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2417,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2418,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2419,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2420,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2421,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2422,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2423,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2424,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2425,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2426,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2427,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2428,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2429,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2430,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2431,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2432,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2433,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2434,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2435,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2436,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2437,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2438,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2439,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2440,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2441,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2442,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2443,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2444,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2445,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2446,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2447,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2448,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2449,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2450,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2451,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2452,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2453,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2454,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2455,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2456,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2457,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2458,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2459,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2460,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2461,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2462,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2463,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2464,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2465,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2466,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2467,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2468,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2469,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2470,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2471,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2472,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2473,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2474,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2475,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2476,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2477,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2478,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2479,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2480,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2481,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2482,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2483,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2484,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2485,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2486,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2487,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2488,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2489,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2490,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2491,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2492,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2493,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2494,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2495,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2496,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2497,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2498,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2499,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2500,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2501,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2502,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2503,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2504,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2505,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2506,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2507,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2508,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2509,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2510,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2511,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2512,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2513,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2514,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2515,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2516,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2517,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2518,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2519,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2520,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2521,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2522,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2523,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2524,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2525,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2526,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2527,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2528,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2529,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2530,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2531,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2532,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2533,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2534,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2535,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2536,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2537,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2538,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2539,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2540,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2541,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2542,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2543,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2544,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2545,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2546,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2547,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2548,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2549,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2550,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2551,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2552,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2553,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2554,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2555,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2556,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2557,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2558,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2559,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2560,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2561,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2562,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2563,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2564,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2565,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2566,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2567,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2568,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2569,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2570,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2571,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2572,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2573,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2574,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2575,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2576,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2577,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2578,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2579,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2580,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2581,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2582,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2583,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2584,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2585,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2586,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2587,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2588,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2589,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2590,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2591,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2592,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2593,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2594,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2595,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2596,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2597,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2598,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2599,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2600,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2601,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2602,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2603,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2604,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2605,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2606,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2607,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2608,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2609,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2610,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2611,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2612,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2613,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2614,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2615,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2616,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2617,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2618,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2619,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2620,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2621,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2622,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2623,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2624,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2625,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2626,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2627,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2628,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2629,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2630,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2631,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2632,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2633,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2634,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2635,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2636,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2637,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2638,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2639,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2640,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2641,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2642,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2643,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2644,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2645,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2646,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2647,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2648,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2649,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2650,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2651,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2652,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2653,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2654,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2655,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2656,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2657,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2658,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2659,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2660,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2661,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2662,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2663,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2664,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2665,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2666,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2667,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2668,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2669,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2670,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2671,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2672,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2673,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2674,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2675,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2676,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2677,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2678,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2679,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2680,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2681,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2682,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2683,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2684,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2685,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2686,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2687,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2688,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2689,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2690,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2691,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2692,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2693,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2694,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2695,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2696,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2697,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2698,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2699,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2700,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2701,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2702,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2703,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2704,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2705,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2706,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2707,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2708,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2709,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2710,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2711,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2712,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2713,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2714,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2715,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2716,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2717,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2718,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2719,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2720,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2721,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2722,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2723,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2724,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2725,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2726,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2727,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2728,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2729,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2730,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2731,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2732,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2733,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2734,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2735,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2736,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2737,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2738,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2739,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2740,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2741,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2742,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2743,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2744,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2745,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2746,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2747,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2748,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2749,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2750,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2751,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2752,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2753,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2754,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2755,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2756,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2757,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2758,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2759,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2760,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2761,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2762,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2763,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2764,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2765,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2766,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2767,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2768,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2769,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2770,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2771,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2772,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2773,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2774,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2775,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2776,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2777,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2778,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2779,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2780,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2781,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2782,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2783,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2784,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2785,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2786,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2787,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2788,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2789,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2790,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2791,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2792,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2793,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2794,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2795,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2796,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2797,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2798,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2799,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2800,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2801,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2802,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2803,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2804,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2805,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2806,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2807,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2808,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2809,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2810,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2811,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2812,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2813,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2814,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2815,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2816,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2817,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2818,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2819,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2820,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2821,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2822,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2823,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2824,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2825,"column":0},"generated":{"line":2827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2826,"column":0},"generated":{"line":2828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2827,"column":0},"generated":{"line":2829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2828,"column":0},"generated":{"line":2830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2829,"column":0},"generated":{"line":2831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2830,"column":0},"generated":{"line":2832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2831,"column":0},"generated":{"line":2833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2832,"column":0},"generated":{"line":2834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2833,"column":0},"generated":{"line":2835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2834,"column":0},"generated":{"line":2836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2835,"column":0},"generated":{"line":2837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2836,"column":0},"generated":{"line":2838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2837,"column":0},"generated":{"line":2839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2838,"column":0},"generated":{"line":2840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2839,"column":0},"generated":{"line":2841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2840,"column":0},"generated":{"line":2842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2841,"column":0},"generated":{"line":2843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2842,"column":0},"generated":{"line":2844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2843,"column":0},"generated":{"line":2845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2844,"column":0},"generated":{"line":2846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2845,"column":0},"generated":{"line":2847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2846,"column":0},"generated":{"line":2848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2847,"column":0},"generated":{"line":2849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2848,"column":0},"generated":{"line":2850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2849,"column":0},"generated":{"line":2851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2850,"column":0},"generated":{"line":2852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2851,"column":0},"generated":{"line":2853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2852,"column":0},"generated":{"line":2854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2853,"column":0},"generated":{"line":2855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2854,"column":0},"generated":{"line":2856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2855,"column":0},"generated":{"line":2857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2856,"column":0},"generated":{"line":2858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2857,"column":0},"generated":{"line":2859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2858,"column":0},"generated":{"line":2860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2859,"column":0},"generated":{"line":2861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2860,"column":0},"generated":{"line":2862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2861,"column":0},"generated":{"line":2863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2862,"column":0},"generated":{"line":2864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2863,"column":0},"generated":{"line":2865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2864,"column":0},"generated":{"line":2866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2865,"column":0},"generated":{"line":2867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2866,"column":0},"generated":{"line":2868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2867,"column":0},"generated":{"line":2869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2868,"column":0},"generated":{"line":2870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2869,"column":0},"generated":{"line":2871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2870,"column":0},"generated":{"line":2872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2871,"column":0},"generated":{"line":2873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2872,"column":0},"generated":{"line":2874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2873,"column":0},"generated":{"line":2875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2874,"column":0},"generated":{"line":2876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2875,"column":0},"generated":{"line":2877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2876,"column":0},"generated":{"line":2878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2877,"column":0},"generated":{"line":2879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2878,"column":0},"generated":{"line":2880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2879,"column":0},"generated":{"line":2881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2880,"column":0},"generated":{"line":2882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2881,"column":0},"generated":{"line":2883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2882,"column":0},"generated":{"line":2884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2883,"column":0},"generated":{"line":2885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2884,"column":0},"generated":{"line":2886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2885,"column":0},"generated":{"line":2887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2886,"column":0},"generated":{"line":2888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2887,"column":0},"generated":{"line":2889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2888,"column":0},"generated":{"line":2890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2889,"column":0},"generated":{"line":2891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2890,"column":0},"generated":{"line":2892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2891,"column":0},"generated":{"line":2893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2892,"column":0},"generated":{"line":2894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2893,"column":0},"generated":{"line":2895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2894,"column":0},"generated":{"line":2896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2895,"column":0},"generated":{"line":2897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2896,"column":0},"generated":{"line":2898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2897,"column":0},"generated":{"line":2899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2898,"column":0},"generated":{"line":2900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2899,"column":0},"generated":{"line":2901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2900,"column":0},"generated":{"line":2902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2901,"column":0},"generated":{"line":2903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2902,"column":0},"generated":{"line":2904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2903,"column":0},"generated":{"line":2905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2904,"column":0},"generated":{"line":2906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2905,"column":0},"generated":{"line":2907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2906,"column":0},"generated":{"line":2908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2907,"column":0},"generated":{"line":2909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2908,"column":0},"generated":{"line":2910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2909,"column":0},"generated":{"line":2911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2910,"column":0},"generated":{"line":2912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2911,"column":0},"generated":{"line":2913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2912,"column":0},"generated":{"line":2914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2913,"column":0},"generated":{"line":2915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2914,"column":0},"generated":{"line":2916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2915,"column":0},"generated":{"line":2917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2916,"column":0},"generated":{"line":2918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2917,"column":0},"generated":{"line":2919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2918,"column":0},"generated":{"line":2920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2919,"column":0},"generated":{"line":2921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2920,"column":0},"generated":{"line":2922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2921,"column":0},"generated":{"line":2923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2922,"column":0},"generated":{"line":2924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2923,"column":0},"generated":{"line":2925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2924,"column":0},"generated":{"line":2926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2925,"column":0},"generated":{"line":2927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2926,"column":0},"generated":{"line":2928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2927,"column":0},"generated":{"line":2929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2928,"column":0},"generated":{"line":2930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2929,"column":0},"generated":{"line":2931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2930,"column":0},"generated":{"line":2932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2931,"column":0},"generated":{"line":2933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2932,"column":0},"generated":{"line":2934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2933,"column":0},"generated":{"line":2935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2934,"column":0},"generated":{"line":2936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2935,"column":0},"generated":{"line":2937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2936,"column":0},"generated":{"line":2938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2937,"column":0},"generated":{"line":2939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2938,"column":0},"generated":{"line":2940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2939,"column":0},"generated":{"line":2941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2940,"column":0},"generated":{"line":2942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2941,"column":0},"generated":{"line":2943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2942,"column":0},"generated":{"line":2944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2943,"column":0},"generated":{"line":2945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2944,"column":0},"generated":{"line":2946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2945,"column":0},"generated":{"line":2947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2946,"column":0},"generated":{"line":2948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2947,"column":0},"generated":{"line":2949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2948,"column":0},"generated":{"line":2950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2949,"column":0},"generated":{"line":2951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2950,"column":0},"generated":{"line":2952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2951,"column":0},"generated":{"line":2953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2952,"column":0},"generated":{"line":2954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2953,"column":0},"generated":{"line":2955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2954,"column":0},"generated":{"line":2956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2955,"column":0},"generated":{"line":2957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2956,"column":0},"generated":{"line":2958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2957,"column":0},"generated":{"line":2959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2958,"column":0},"generated":{"line":2960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2959,"column":0},"generated":{"line":2961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2960,"column":0},"generated":{"line":2962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2961,"column":0},"generated":{"line":2963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2962,"column":0},"generated":{"line":2964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2963,"column":0},"generated":{"line":2965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2964,"column":0},"generated":{"line":2966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2965,"column":0},"generated":{"line":2967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2966,"column":0},"generated":{"line":2968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2967,"column":0},"generated":{"line":2969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2968,"column":0},"generated":{"line":2970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2969,"column":0},"generated":{"line":2971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2970,"column":0},"generated":{"line":2972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2971,"column":0},"generated":{"line":2973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2972,"column":0},"generated":{"line":2974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2973,"column":0},"generated":{"line":2975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2974,"column":0},"generated":{"line":2976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2975,"column":0},"generated":{"line":2977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2976,"column":0},"generated":{"line":2978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2977,"column":0},"generated":{"line":2979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2978,"column":0},"generated":{"line":2980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2979,"column":0},"generated":{"line":2981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2980,"column":0},"generated":{"line":2982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2981,"column":0},"generated":{"line":2983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2982,"column":0},"generated":{"line":2984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2983,"column":0},"generated":{"line":2985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2984,"column":0},"generated":{"line":2986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2985,"column":0},"generated":{"line":2987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2986,"column":0},"generated":{"line":2988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2987,"column":0},"generated":{"line":2989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2988,"column":0},"generated":{"line":2990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2989,"column":0},"generated":{"line":2991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2990,"column":0},"generated":{"line":2992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2991,"column":0},"generated":{"line":2993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2992,"column":0},"generated":{"line":2994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2993,"column":0},"generated":{"line":2995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2994,"column":0},"generated":{"line":2996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2995,"column":0},"generated":{"line":2997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2996,"column":0},"generated":{"line":2998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2997,"column":0},"generated":{"line":2999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2998,"column":0},"generated":{"line":3000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":2999,"column":0},"generated":{"line":3001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3000,"column":0},"generated":{"line":3002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3001,"column":0},"generated":{"line":3003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3002,"column":0},"generated":{"line":3004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3003,"column":0},"generated":{"line":3005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3004,"column":0},"generated":{"line":3006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3005,"column":0},"generated":{"line":3007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3006,"column":0},"generated":{"line":3008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3007,"column":0},"generated":{"line":3009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3008,"column":0},"generated":{"line":3010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3009,"column":0},"generated":{"line":3011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3010,"column":0},"generated":{"line":3012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3011,"column":0},"generated":{"line":3013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3012,"column":0},"generated":{"line":3014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3013,"column":0},"generated":{"line":3015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3014,"column":0},"generated":{"line":3016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3015,"column":0},"generated":{"line":3017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3016,"column":0},"generated":{"line":3018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3017,"column":0},"generated":{"line":3019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3018,"column":0},"generated":{"line":3020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3019,"column":0},"generated":{"line":3021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3020,"column":0},"generated":{"line":3022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3021,"column":0},"generated":{"line":3023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3022,"column":0},"generated":{"line":3024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3023,"column":0},"generated":{"line":3025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3024,"column":0},"generated":{"line":3026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3025,"column":0},"generated":{"line":3027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3026,"column":0},"generated":{"line":3028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3027,"column":0},"generated":{"line":3029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3028,"column":0},"generated":{"line":3030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3029,"column":0},"generated":{"line":3031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3030,"column":0},"generated":{"line":3032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3031,"column":0},"generated":{"line":3033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3032,"column":0},"generated":{"line":3034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3033,"column":0},"generated":{"line":3035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3034,"column":0},"generated":{"line":3036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3035,"column":0},"generated":{"line":3037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3036,"column":0},"generated":{"line":3038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3037,"column":0},"generated":{"line":3039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3038,"column":0},"generated":{"line":3040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3039,"column":0},"generated":{"line":3041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3040,"column":0},"generated":{"line":3042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3041,"column":0},"generated":{"line":3043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3042,"column":0},"generated":{"line":3044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3043,"column":0},"generated":{"line":3045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3044,"column":0},"generated":{"line":3046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3045,"column":0},"generated":{"line":3047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3046,"column":0},"generated":{"line":3048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3047,"column":0},"generated":{"line":3049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3048,"column":0},"generated":{"line":3050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3049,"column":0},"generated":{"line":3051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3050,"column":0},"generated":{"line":3052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3051,"column":0},"generated":{"line":3053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3052,"column":0},"generated":{"line":3054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3053,"column":0},"generated":{"line":3055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3054,"column":0},"generated":{"line":3056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3055,"column":0},"generated":{"line":3057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3056,"column":0},"generated":{"line":3058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3057,"column":0},"generated":{"line":3059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3058,"column":0},"generated":{"line":3060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3059,"column":0},"generated":{"line":3061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3060,"column":0},"generated":{"line":3062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3061,"column":0},"generated":{"line":3063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3062,"column":0},"generated":{"line":3064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3063,"column":0},"generated":{"line":3065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3064,"column":0},"generated":{"line":3066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3065,"column":0},"generated":{"line":3067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3066,"column":0},"generated":{"line":3068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3067,"column":0},"generated":{"line":3069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3068,"column":0},"generated":{"line":3070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3069,"column":0},"generated":{"line":3071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3070,"column":0},"generated":{"line":3072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3071,"column":0},"generated":{"line":3073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3072,"column":0},"generated":{"line":3074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3073,"column":0},"generated":{"line":3075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3074,"column":0},"generated":{"line":3076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3075,"column":0},"generated":{"line":3077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3076,"column":0},"generated":{"line":3078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3077,"column":0},"generated":{"line":3079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3078,"column":0},"generated":{"line":3080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3079,"column":0},"generated":{"line":3081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3080,"column":0},"generated":{"line":3082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3081,"column":0},"generated":{"line":3083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3082,"column":0},"generated":{"line":3084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3083,"column":0},"generated":{"line":3085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3084,"column":0},"generated":{"line":3086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3085,"column":0},"generated":{"line":3087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3086,"column":0},"generated":{"line":3088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3087,"column":0},"generated":{"line":3089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3088,"column":0},"generated":{"line":3090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3089,"column":0},"generated":{"line":3091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3090,"column":0},"generated":{"line":3092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3091,"column":0},"generated":{"line":3093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3092,"column":0},"generated":{"line":3094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3093,"column":0},"generated":{"line":3095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3094,"column":0},"generated":{"line":3096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3095,"column":0},"generated":{"line":3097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3096,"column":0},"generated":{"line":3098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3097,"column":0},"generated":{"line":3099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3098,"column":0},"generated":{"line":3100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3099,"column":0},"generated":{"line":3101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3100,"column":0},"generated":{"line":3102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3101,"column":0},"generated":{"line":3103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3102,"column":0},"generated":{"line":3104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3103,"column":0},"generated":{"line":3105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3104,"column":0},"generated":{"line":3106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3105,"column":0},"generated":{"line":3107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3106,"column":0},"generated":{"line":3108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3107,"column":0},"generated":{"line":3109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3108,"column":0},"generated":{"line":3110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3109,"column":0},"generated":{"line":3111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3110,"column":0},"generated":{"line":3112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3111,"column":0},"generated":{"line":3113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3112,"column":0},"generated":{"line":3114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3113,"column":0},"generated":{"line":3115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3114,"column":0},"generated":{"line":3116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3115,"column":0},"generated":{"line":3117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3116,"column":0},"generated":{"line":3118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3117,"column":0},"generated":{"line":3119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3118,"column":0},"generated":{"line":3120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3119,"column":0},"generated":{"line":3121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3120,"column":0},"generated":{"line":3122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3121,"column":0},"generated":{"line":3123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3122,"column":0},"generated":{"line":3124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3123,"column":0},"generated":{"line":3125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3124,"column":0},"generated":{"line":3126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3125,"column":0},"generated":{"line":3127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3126,"column":0},"generated":{"line":3128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3127,"column":0},"generated":{"line":3129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3128,"column":0},"generated":{"line":3130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3129,"column":0},"generated":{"line":3131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3130,"column":0},"generated":{"line":3132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3131,"column":0},"generated":{"line":3133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3132,"column":0},"generated":{"line":3134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3133,"column":0},"generated":{"line":3135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3134,"column":0},"generated":{"line":3136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3135,"column":0},"generated":{"line":3137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3136,"column":0},"generated":{"line":3138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3137,"column":0},"generated":{"line":3139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3138,"column":0},"generated":{"line":3140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3139,"column":0},"generated":{"line":3141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3140,"column":0},"generated":{"line":3142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3141,"column":0},"generated":{"line":3143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3142,"column":0},"generated":{"line":3144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3143,"column":0},"generated":{"line":3145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3144,"column":0},"generated":{"line":3146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3145,"column":0},"generated":{"line":3147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3146,"column":0},"generated":{"line":3148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3147,"column":0},"generated":{"line":3149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3148,"column":0},"generated":{"line":3150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3149,"column":0},"generated":{"line":3151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3150,"column":0},"generated":{"line":3152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3151,"column":0},"generated":{"line":3153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3152,"column":0},"generated":{"line":3154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3153,"column":0},"generated":{"line":3155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3154,"column":0},"generated":{"line":3156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3155,"column":0},"generated":{"line":3157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3156,"column":0},"generated":{"line":3158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3157,"column":0},"generated":{"line":3159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3158,"column":0},"generated":{"line":3160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3159,"column":0},"generated":{"line":3161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3160,"column":0},"generated":{"line":3162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3161,"column":0},"generated":{"line":3163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3162,"column":0},"generated":{"line":3164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3163,"column":0},"generated":{"line":3165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3164,"column":0},"generated":{"line":3166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3165,"column":0},"generated":{"line":3167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3166,"column":0},"generated":{"line":3168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3167,"column":0},"generated":{"line":3169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3168,"column":0},"generated":{"line":3170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3169,"column":0},"generated":{"line":3171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3170,"column":0},"generated":{"line":3172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3171,"column":0},"generated":{"line":3173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3172,"column":0},"generated":{"line":3174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3173,"column":0},"generated":{"line":3175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3174,"column":0},"generated":{"line":3176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3175,"column":0},"generated":{"line":3177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3176,"column":0},"generated":{"line":3178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3177,"column":0},"generated":{"line":3179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3178,"column":0},"generated":{"line":3180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3179,"column":0},"generated":{"line":3181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3180,"column":0},"generated":{"line":3182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3181,"column":0},"generated":{"line":3183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3182,"column":0},"generated":{"line":3184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3183,"column":0},"generated":{"line":3185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3184,"column":0},"generated":{"line":3186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3185,"column":0},"generated":{"line":3187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3186,"column":0},"generated":{"line":3188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3187,"column":0},"generated":{"line":3189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3188,"column":0},"generated":{"line":3190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3189,"column":0},"generated":{"line":3191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3190,"column":0},"generated":{"line":3192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3191,"column":0},"generated":{"line":3193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3192,"column":0},"generated":{"line":3194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3193,"column":0},"generated":{"line":3195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3194,"column":0},"generated":{"line":3196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3195,"column":0},"generated":{"line":3197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3196,"column":0},"generated":{"line":3198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3197,"column":0},"generated":{"line":3199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3198,"column":0},"generated":{"line":3200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3199,"column":0},"generated":{"line":3201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3200,"column":0},"generated":{"line":3202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3201,"column":0},"generated":{"line":3203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3202,"column":0},"generated":{"line":3204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3203,"column":0},"generated":{"line":3205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3204,"column":0},"generated":{"line":3206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3205,"column":0},"generated":{"line":3207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3206,"column":0},"generated":{"line":3208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3207,"column":0},"generated":{"line":3209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3208,"column":0},"generated":{"line":3210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3209,"column":0},"generated":{"line":3211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3210,"column":0},"generated":{"line":3212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3211,"column":0},"generated":{"line":3213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3212,"column":0},"generated":{"line":3214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3213,"column":0},"generated":{"line":3215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3214,"column":0},"generated":{"line":3216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3215,"column":0},"generated":{"line":3217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3216,"column":0},"generated":{"line":3218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3217,"column":0},"generated":{"line":3219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3218,"column":0},"generated":{"line":3220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3219,"column":0},"generated":{"line":3221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3220,"column":0},"generated":{"line":3222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3221,"column":0},"generated":{"line":3223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3222,"column":0},"generated":{"line":3224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3223,"column":0},"generated":{"line":3225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3224,"column":0},"generated":{"line":3226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3225,"column":0},"generated":{"line":3227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3226,"column":0},"generated":{"line":3228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3227,"column":0},"generated":{"line":3229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3228,"column":0},"generated":{"line":3230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3229,"column":0},"generated":{"line":3231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3230,"column":0},"generated":{"line":3232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3231,"column":0},"generated":{"line":3233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3232,"column":0},"generated":{"line":3234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3233,"column":0},"generated":{"line":3235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3234,"column":0},"generated":{"line":3236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3235,"column":0},"generated":{"line":3237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3236,"column":0},"generated":{"line":3238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3237,"column":0},"generated":{"line":3239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3238,"column":0},"generated":{"line":3240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3239,"column":0},"generated":{"line":3241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3240,"column":0},"generated":{"line":3242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3241,"column":0},"generated":{"line":3243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3242,"column":0},"generated":{"line":3244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3243,"column":0},"generated":{"line":3245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3244,"column":0},"generated":{"line":3246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3245,"column":0},"generated":{"line":3247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3246,"column":0},"generated":{"line":3248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3247,"column":0},"generated":{"line":3249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3248,"column":0},"generated":{"line":3250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3249,"column":0},"generated":{"line":3251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3250,"column":0},"generated":{"line":3252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3251,"column":0},"generated":{"line":3253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3252,"column":0},"generated":{"line":3254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3253,"column":0},"generated":{"line":3255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3254,"column":0},"generated":{"line":3256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3255,"column":0},"generated":{"line":3257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3256,"column":0},"generated":{"line":3258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3257,"column":0},"generated":{"line":3259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3258,"column":0},"generated":{"line":3260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3259,"column":0},"generated":{"line":3261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3260,"column":0},"generated":{"line":3262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3261,"column":0},"generated":{"line":3263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3262,"column":0},"generated":{"line":3264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3263,"column":0},"generated":{"line":3265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3264,"column":0},"generated":{"line":3266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3265,"column":0},"generated":{"line":3267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3266,"column":0},"generated":{"line":3268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3267,"column":0},"generated":{"line":3269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3268,"column":0},"generated":{"line":3270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3269,"column":0},"generated":{"line":3271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3270,"column":0},"generated":{"line":3272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3271,"column":0},"generated":{"line":3273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3272,"column":0},"generated":{"line":3274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3273,"column":0},"generated":{"line":3275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3274,"column":0},"generated":{"line":3276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3275,"column":0},"generated":{"line":3277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3276,"column":0},"generated":{"line":3278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3277,"column":0},"generated":{"line":3279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3278,"column":0},"generated":{"line":3280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3279,"column":0},"generated":{"line":3281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3280,"column":0},"generated":{"line":3282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3281,"column":0},"generated":{"line":3283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3282,"column":0},"generated":{"line":3284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3283,"column":0},"generated":{"line":3285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3284,"column":0},"generated":{"line":3286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3285,"column":0},"generated":{"line":3287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3286,"column":0},"generated":{"line":3288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3287,"column":0},"generated":{"line":3289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3288,"column":0},"generated":{"line":3290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3289,"column":0},"generated":{"line":3291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3290,"column":0},"generated":{"line":3292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3291,"column":0},"generated":{"line":3293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3292,"column":0},"generated":{"line":3294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3293,"column":0},"generated":{"line":3295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3294,"column":0},"generated":{"line":3296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3295,"column":0},"generated":{"line":3297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3296,"column":0},"generated":{"line":3298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3297,"column":0},"generated":{"line":3299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3298,"column":0},"generated":{"line":3300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3299,"column":0},"generated":{"line":3301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3300,"column":0},"generated":{"line":3302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3301,"column":0},"generated":{"line":3303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3302,"column":0},"generated":{"line":3304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3303,"column":0},"generated":{"line":3305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3304,"column":0},"generated":{"line":3306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3305,"column":0},"generated":{"line":3307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3306,"column":0},"generated":{"line":3308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3307,"column":0},"generated":{"line":3309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3308,"column":0},"generated":{"line":3310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3309,"column":0},"generated":{"line":3311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3310,"column":0},"generated":{"line":3312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3311,"column":0},"generated":{"line":3313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3312,"column":0},"generated":{"line":3314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3313,"column":0},"generated":{"line":3315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3314,"column":0},"generated":{"line":3316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3315,"column":0},"generated":{"line":3317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3316,"column":0},"generated":{"line":3318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3317,"column":0},"generated":{"line":3319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3318,"column":0},"generated":{"line":3320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3319,"column":0},"generated":{"line":3321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3320,"column":0},"generated":{"line":3322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3321,"column":0},"generated":{"line":3323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3322,"column":0},"generated":{"line":3324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3323,"column":0},"generated":{"line":3325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3324,"column":0},"generated":{"line":3326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3325,"column":0},"generated":{"line":3327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3326,"column":0},"generated":{"line":3328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3327,"column":0},"generated":{"line":3329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3328,"column":0},"generated":{"line":3330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3329,"column":0},"generated":{"line":3331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3330,"column":0},"generated":{"line":3332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3331,"column":0},"generated":{"line":3333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3332,"column":0},"generated":{"line":3334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3333,"column":0},"generated":{"line":3335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3334,"column":0},"generated":{"line":3336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3335,"column":0},"generated":{"line":3337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3336,"column":0},"generated":{"line":3338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3337,"column":0},"generated":{"line":3339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3338,"column":0},"generated":{"line":3340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3339,"column":0},"generated":{"line":3341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3340,"column":0},"generated":{"line":3342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3341,"column":0},"generated":{"line":3343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3342,"column":0},"generated":{"line":3344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3343,"column":0},"generated":{"line":3345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3344,"column":0},"generated":{"line":3346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3345,"column":0},"generated":{"line":3347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3346,"column":0},"generated":{"line":3348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3347,"column":0},"generated":{"line":3349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3348,"column":0},"generated":{"line":3350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3349,"column":0},"generated":{"line":3351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3350,"column":0},"generated":{"line":3352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3351,"column":0},"generated":{"line":3353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3352,"column":0},"generated":{"line":3354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3353,"column":0},"generated":{"line":3355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3354,"column":0},"generated":{"line":3356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3355,"column":0},"generated":{"line":3357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3356,"column":0},"generated":{"line":3358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3357,"column":0},"generated":{"line":3359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3358,"column":0},"generated":{"line":3360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3359,"column":0},"generated":{"line":3361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3360,"column":0},"generated":{"line":3362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3361,"column":0},"generated":{"line":3363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3362,"column":0},"generated":{"line":3364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3363,"column":0},"generated":{"line":3365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3364,"column":0},"generated":{"line":3366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3365,"column":0},"generated":{"line":3367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3366,"column":0},"generated":{"line":3368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3367,"column":0},"generated":{"line":3369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3368,"column":0},"generated":{"line":3370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3369,"column":0},"generated":{"line":3371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3370,"column":0},"generated":{"line":3372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3371,"column":0},"generated":{"line":3373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3372,"column":0},"generated":{"line":3374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3373,"column":0},"generated":{"line":3375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3374,"column":0},"generated":{"line":3376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3375,"column":0},"generated":{"line":3377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3376,"column":0},"generated":{"line":3378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3377,"column":0},"generated":{"line":3379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3378,"column":0},"generated":{"line":3380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3379,"column":0},"generated":{"line":3381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3380,"column":0},"generated":{"line":3382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3381,"column":0},"generated":{"line":3383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3382,"column":0},"generated":{"line":3384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3383,"column":0},"generated":{"line":3385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3384,"column":0},"generated":{"line":3386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3385,"column":0},"generated":{"line":3387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3386,"column":0},"generated":{"line":3388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3387,"column":0},"generated":{"line":3389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3388,"column":0},"generated":{"line":3390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3389,"column":0},"generated":{"line":3391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3390,"column":0},"generated":{"line":3392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3391,"column":0},"generated":{"line":3393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3392,"column":0},"generated":{"line":3394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3393,"column":0},"generated":{"line":3395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3394,"column":0},"generated":{"line":3396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3395,"column":0},"generated":{"line":3397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3396,"column":0},"generated":{"line":3398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3397,"column":0},"generated":{"line":3399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3398,"column":0},"generated":{"line":3400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3399,"column":0},"generated":{"line":3401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3400,"column":0},"generated":{"line":3402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3401,"column":0},"generated":{"line":3403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3402,"column":0},"generated":{"line":3404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3403,"column":0},"generated":{"line":3405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3404,"column":0},"generated":{"line":3406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3405,"column":0},"generated":{"line":3407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3406,"column":0},"generated":{"line":3408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3407,"column":0},"generated":{"line":3409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3408,"column":0},"generated":{"line":3410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3409,"column":0},"generated":{"line":3411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3410,"column":0},"generated":{"line":3412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3411,"column":0},"generated":{"line":3413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3412,"column":0},"generated":{"line":3414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3413,"column":0},"generated":{"line":3415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3414,"column":0},"generated":{"line":3416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3415,"column":0},"generated":{"line":3417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3416,"column":0},"generated":{"line":3418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3417,"column":0},"generated":{"line":3419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3418,"column":0},"generated":{"line":3420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3419,"column":0},"generated":{"line":3421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3420,"column":0},"generated":{"line":3422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3421,"column":0},"generated":{"line":3423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3422,"column":0},"generated":{"line":3424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3423,"column":0},"generated":{"line":3425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3424,"column":0},"generated":{"line":3426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3425,"column":0},"generated":{"line":3427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3426,"column":0},"generated":{"line":3428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3427,"column":0},"generated":{"line":3429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3428,"column":0},"generated":{"line":3430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3429,"column":0},"generated":{"line":3431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3430,"column":0},"generated":{"line":3432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3431,"column":0},"generated":{"line":3433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3432,"column":0},"generated":{"line":3434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3433,"column":0},"generated":{"line":3435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3434,"column":0},"generated":{"line":3436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3435,"column":0},"generated":{"line":3437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3436,"column":0},"generated":{"line":3438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3437,"column":0},"generated":{"line":3439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3438,"column":0},"generated":{"line":3440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3439,"column":0},"generated":{"line":3441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3440,"column":0},"generated":{"line":3442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3441,"column":0},"generated":{"line":3443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3442,"column":0},"generated":{"line":3444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3443,"column":0},"generated":{"line":3445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3444,"column":0},"generated":{"line":3446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3445,"column":0},"generated":{"line":3447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3446,"column":0},"generated":{"line":3448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3447,"column":0},"generated":{"line":3449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3448,"column":0},"generated":{"line":3450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3449,"column":0},"generated":{"line":3451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3450,"column":0},"generated":{"line":3452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3451,"column":0},"generated":{"line":3453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3452,"column":0},"generated":{"line":3454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3453,"column":0},"generated":{"line":3455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3454,"column":0},"generated":{"line":3456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3455,"column":0},"generated":{"line":3457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3456,"column":0},"generated":{"line":3458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3457,"column":0},"generated":{"line":3459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3458,"column":0},"generated":{"line":3460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3459,"column":0},"generated":{"line":3461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3460,"column":0},"generated":{"line":3462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3461,"column":0},"generated":{"line":3463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3462,"column":0},"generated":{"line":3464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3463,"column":0},"generated":{"line":3465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3464,"column":0},"generated":{"line":3466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3465,"column":0},"generated":{"line":3467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3466,"column":0},"generated":{"line":3468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3467,"column":0},"generated":{"line":3469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3468,"column":0},"generated":{"line":3470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3469,"column":0},"generated":{"line":3471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3470,"column":0},"generated":{"line":3472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3471,"column":0},"generated":{"line":3473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3472,"column":0},"generated":{"line":3474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3473,"column":0},"generated":{"line":3475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3474,"column":0},"generated":{"line":3476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3475,"column":0},"generated":{"line":3477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3476,"column":0},"generated":{"line":3478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3477,"column":0},"generated":{"line":3479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3478,"column":0},"generated":{"line":3480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3479,"column":0},"generated":{"line":3481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3480,"column":0},"generated":{"line":3482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3481,"column":0},"generated":{"line":3483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3482,"column":0},"generated":{"line":3484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3483,"column":0},"generated":{"line":3485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3484,"column":0},"generated":{"line":3486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3485,"column":0},"generated":{"line":3487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3486,"column":0},"generated":{"line":3488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3487,"column":0},"generated":{"line":3489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3488,"column":0},"generated":{"line":3490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3489,"column":0},"generated":{"line":3491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3490,"column":0},"generated":{"line":3492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3491,"column":0},"generated":{"line":3493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3492,"column":0},"generated":{"line":3494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3493,"column":0},"generated":{"line":3495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3494,"column":0},"generated":{"line":3496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3495,"column":0},"generated":{"line":3497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3496,"column":0},"generated":{"line":3498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3497,"column":0},"generated":{"line":3499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3498,"column":0},"generated":{"line":3500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3499,"column":0},"generated":{"line":3501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3500,"column":0},"generated":{"line":3502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3501,"column":0},"generated":{"line":3503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3502,"column":0},"generated":{"line":3504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3503,"column":0},"generated":{"line":3505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3504,"column":0},"generated":{"line":3506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3505,"column":0},"generated":{"line":3507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3506,"column":0},"generated":{"line":3508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3507,"column":0},"generated":{"line":3509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3508,"column":0},"generated":{"line":3510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3509,"column":0},"generated":{"line":3511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3510,"column":0},"generated":{"line":3512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3511,"column":0},"generated":{"line":3513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3512,"column":0},"generated":{"line":3514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3513,"column":0},"generated":{"line":3515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3514,"column":0},"generated":{"line":3516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3515,"column":0},"generated":{"line":3517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3516,"column":0},"generated":{"line":3518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3517,"column":0},"generated":{"line":3519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3518,"column":0},"generated":{"line":3520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3519,"column":0},"generated":{"line":3521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3520,"column":0},"generated":{"line":3522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3521,"column":0},"generated":{"line":3523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3522,"column":0},"generated":{"line":3524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3523,"column":0},"generated":{"line":3525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3524,"column":0},"generated":{"line":3526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3525,"column":0},"generated":{"line":3527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3526,"column":0},"generated":{"line":3528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3527,"column":0},"generated":{"line":3529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3528,"column":0},"generated":{"line":3530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3529,"column":0},"generated":{"line":3531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3530,"column":0},"generated":{"line":3532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3531,"column":0},"generated":{"line":3533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3532,"column":0},"generated":{"line":3534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3533,"column":0},"generated":{"line":3535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3534,"column":0},"generated":{"line":3536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3535,"column":0},"generated":{"line":3537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3536,"column":0},"generated":{"line":3538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3537,"column":0},"generated":{"line":3539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3538,"column":0},"generated":{"line":3540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3539,"column":0},"generated":{"line":3541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3540,"column":0},"generated":{"line":3542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3541,"column":0},"generated":{"line":3543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3542,"column":0},"generated":{"line":3544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3543,"column":0},"generated":{"line":3545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3544,"column":0},"generated":{"line":3546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3545,"column":0},"generated":{"line":3547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3546,"column":0},"generated":{"line":3548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3547,"column":0},"generated":{"line":3549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3548,"column":0},"generated":{"line":3550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3549,"column":0},"generated":{"line":3551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3550,"column":0},"generated":{"line":3552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3551,"column":0},"generated":{"line":3553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3552,"column":0},"generated":{"line":3554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3553,"column":0},"generated":{"line":3555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3554,"column":0},"generated":{"line":3556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3555,"column":0},"generated":{"line":3557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3556,"column":0},"generated":{"line":3558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3557,"column":0},"generated":{"line":3559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3558,"column":0},"generated":{"line":3560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3559,"column":0},"generated":{"line":3561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3560,"column":0},"generated":{"line":3562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3561,"column":0},"generated":{"line":3563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3562,"column":0},"generated":{"line":3564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3563,"column":0},"generated":{"line":3565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3564,"column":0},"generated":{"line":3566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3565,"column":0},"generated":{"line":3567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3566,"column":0},"generated":{"line":3568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3567,"column":0},"generated":{"line":3569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3568,"column":0},"generated":{"line":3570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3569,"column":0},"generated":{"line":3571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3570,"column":0},"generated":{"line":3572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3571,"column":0},"generated":{"line":3573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3572,"column":0},"generated":{"line":3574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3573,"column":0},"generated":{"line":3575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3574,"column":0},"generated":{"line":3576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3575,"column":0},"generated":{"line":3577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3576,"column":0},"generated":{"line":3578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3577,"column":0},"generated":{"line":3579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3578,"column":0},"generated":{"line":3580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3579,"column":0},"generated":{"line":3581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3580,"column":0},"generated":{"line":3582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3581,"column":0},"generated":{"line":3583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3582,"column":0},"generated":{"line":3584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3583,"column":0},"generated":{"line":3585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3584,"column":0},"generated":{"line":3586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3585,"column":0},"generated":{"line":3587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3586,"column":0},"generated":{"line":3588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3587,"column":0},"generated":{"line":3589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3588,"column":0},"generated":{"line":3590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3589,"column":0},"generated":{"line":3591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3590,"column":0},"generated":{"line":3592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3591,"column":0},"generated":{"line":3593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3592,"column":0},"generated":{"line":3594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3593,"column":0},"generated":{"line":3595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3594,"column":0},"generated":{"line":3596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3595,"column":0},"generated":{"line":3597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3596,"column":0},"generated":{"line":3598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3597,"column":0},"generated":{"line":3599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3598,"column":0},"generated":{"line":3600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3599,"column":0},"generated":{"line":3601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3600,"column":0},"generated":{"line":3602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3601,"column":0},"generated":{"line":3603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3602,"column":0},"generated":{"line":3604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3603,"column":0},"generated":{"line":3605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3604,"column":0},"generated":{"line":3606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3605,"column":0},"generated":{"line":3607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3606,"column":0},"generated":{"line":3608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3607,"column":0},"generated":{"line":3609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3608,"column":0},"generated":{"line":3610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3609,"column":0},"generated":{"line":3611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3610,"column":0},"generated":{"line":3612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3611,"column":0},"generated":{"line":3613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3612,"column":0},"generated":{"line":3614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3613,"column":0},"generated":{"line":3615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3614,"column":0},"generated":{"line":3616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3615,"column":0},"generated":{"line":3617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3616,"column":0},"generated":{"line":3618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3617,"column":0},"generated":{"line":3619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3618,"column":0},"generated":{"line":3620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3619,"column":0},"generated":{"line":3621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3620,"column":0},"generated":{"line":3622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3621,"column":0},"generated":{"line":3623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3622,"column":0},"generated":{"line":3624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3623,"column":0},"generated":{"line":3625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3624,"column":0},"generated":{"line":3626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3625,"column":0},"generated":{"line":3627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3626,"column":0},"generated":{"line":3628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3627,"column":0},"generated":{"line":3629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3628,"column":0},"generated":{"line":3630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3629,"column":0},"generated":{"line":3631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3630,"column":0},"generated":{"line":3632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3631,"column":0},"generated":{"line":3633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3632,"column":0},"generated":{"line":3634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3633,"column":0},"generated":{"line":3635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3634,"column":0},"generated":{"line":3636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3635,"column":0},"generated":{"line":3637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3636,"column":0},"generated":{"line":3638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3637,"column":0},"generated":{"line":3639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3638,"column":0},"generated":{"line":3640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3639,"column":0},"generated":{"line":3641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3640,"column":0},"generated":{"line":3642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3641,"column":0},"generated":{"line":3643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3642,"column":0},"generated":{"line":3644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3643,"column":0},"generated":{"line":3645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3644,"column":0},"generated":{"line":3646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3645,"column":0},"generated":{"line":3647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3646,"column":0},"generated":{"line":3648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3647,"column":0},"generated":{"line":3649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3648,"column":0},"generated":{"line":3650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3649,"column":0},"generated":{"line":3651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3650,"column":0},"generated":{"line":3652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3651,"column":0},"generated":{"line":3653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3652,"column":0},"generated":{"line":3654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3653,"column":0},"generated":{"line":3655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3654,"column":0},"generated":{"line":3656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3655,"column":0},"generated":{"line":3657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3656,"column":0},"generated":{"line":3658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3657,"column":0},"generated":{"line":3659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3658,"column":0},"generated":{"line":3660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3659,"column":0},"generated":{"line":3661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3660,"column":0},"generated":{"line":3662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3661,"column":0},"generated":{"line":3663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3662,"column":0},"generated":{"line":3664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3663,"column":0},"generated":{"line":3665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3664,"column":0},"generated":{"line":3666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3665,"column":0},"generated":{"line":3667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3666,"column":0},"generated":{"line":3668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3667,"column":0},"generated":{"line":3669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3668,"column":0},"generated":{"line":3670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3669,"column":0},"generated":{"line":3671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3670,"column":0},"generated":{"line":3672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3671,"column":0},"generated":{"line":3673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3672,"column":0},"generated":{"line":3674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3673,"column":0},"generated":{"line":3675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3674,"column":0},"generated":{"line":3676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3675,"column":0},"generated":{"line":3677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3676,"column":0},"generated":{"line":3678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3677,"column":0},"generated":{"line":3679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3678,"column":0},"generated":{"line":3680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3679,"column":0},"generated":{"line":3681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3680,"column":0},"generated":{"line":3682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3681,"column":0},"generated":{"line":3683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3682,"column":0},"generated":{"line":3684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3683,"column":0},"generated":{"line":3685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3684,"column":0},"generated":{"line":3686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3685,"column":0},"generated":{"line":3687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3686,"column":0},"generated":{"line":3688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3687,"column":0},"generated":{"line":3689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3688,"column":0},"generated":{"line":3690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3689,"column":0},"generated":{"line":3691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3690,"column":0},"generated":{"line":3692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3691,"column":0},"generated":{"line":3693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3692,"column":0},"generated":{"line":3694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3693,"column":0},"generated":{"line":3695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3694,"column":0},"generated":{"line":3696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3695,"column":0},"generated":{"line":3697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3696,"column":0},"generated":{"line":3698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3697,"column":0},"generated":{"line":3699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3698,"column":0},"generated":{"line":3700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3699,"column":0},"generated":{"line":3701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3700,"column":0},"generated":{"line":3702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3701,"column":0},"generated":{"line":3703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3702,"column":0},"generated":{"line":3704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3703,"column":0},"generated":{"line":3705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3704,"column":0},"generated":{"line":3706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3705,"column":0},"generated":{"line":3707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3706,"column":0},"generated":{"line":3708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3707,"column":0},"generated":{"line":3709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3708,"column":0},"generated":{"line":3710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3709,"column":0},"generated":{"line":3711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3710,"column":0},"generated":{"line":3712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3711,"column":0},"generated":{"line":3713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3712,"column":0},"generated":{"line":3714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3713,"column":0},"generated":{"line":3715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3714,"column":0},"generated":{"line":3716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3715,"column":0},"generated":{"line":3717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3716,"column":0},"generated":{"line":3718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3717,"column":0},"generated":{"line":3719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3718,"column":0},"generated":{"line":3720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3719,"column":0},"generated":{"line":3721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3720,"column":0},"generated":{"line":3722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3721,"column":0},"generated":{"line":3723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3722,"column":0},"generated":{"line":3724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3723,"column":0},"generated":{"line":3725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3724,"column":0},"generated":{"line":3726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3725,"column":0},"generated":{"line":3727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3726,"column":0},"generated":{"line":3728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3727,"column":0},"generated":{"line":3729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3728,"column":0},"generated":{"line":3730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3729,"column":0},"generated":{"line":3731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3730,"column":0},"generated":{"line":3732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3731,"column":0},"generated":{"line":3733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3732,"column":0},"generated":{"line":3734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3733,"column":0},"generated":{"line":3735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3734,"column":0},"generated":{"line":3736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3735,"column":0},"generated":{"line":3737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3736,"column":0},"generated":{"line":3738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3737,"column":0},"generated":{"line":3739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3738,"column":0},"generated":{"line":3740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3739,"column":0},"generated":{"line":3741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3740,"column":0},"generated":{"line":3742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3741,"column":0},"generated":{"line":3743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3742,"column":0},"generated":{"line":3744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3743,"column":0},"generated":{"line":3745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3744,"column":0},"generated":{"line":3746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3745,"column":0},"generated":{"line":3747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3746,"column":0},"generated":{"line":3748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3747,"column":0},"generated":{"line":3749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3748,"column":0},"generated":{"line":3750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3749,"column":0},"generated":{"line":3751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3750,"column":0},"generated":{"line":3752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3751,"column":0},"generated":{"line":3753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3752,"column":0},"generated":{"line":3754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3753,"column":0},"generated":{"line":3755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3754,"column":0},"generated":{"line":3756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3755,"column":0},"generated":{"line":3757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3756,"column":0},"generated":{"line":3758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3757,"column":0},"generated":{"line":3759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3758,"column":0},"generated":{"line":3760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3759,"column":0},"generated":{"line":3761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3760,"column":0},"generated":{"line":3762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3761,"column":0},"generated":{"line":3763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3762,"column":0},"generated":{"line":3764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3763,"column":0},"generated":{"line":3765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3764,"column":0},"generated":{"line":3766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3765,"column":0},"generated":{"line":3767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3766,"column":0},"generated":{"line":3768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3767,"column":0},"generated":{"line":3769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3768,"column":0},"generated":{"line":3770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3769,"column":0},"generated":{"line":3771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3770,"column":0},"generated":{"line":3772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3771,"column":0},"generated":{"line":3773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3772,"column":0},"generated":{"line":3774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3773,"column":0},"generated":{"line":3775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3774,"column":0},"generated":{"line":3776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3775,"column":0},"generated":{"line":3777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3776,"column":0},"generated":{"line":3778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3777,"column":0},"generated":{"line":3779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3778,"column":0},"generated":{"line":3780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3779,"column":0},"generated":{"line":3781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3780,"column":0},"generated":{"line":3782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3781,"column":0},"generated":{"line":3783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3782,"column":0},"generated":{"line":3784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3783,"column":0},"generated":{"line":3785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3784,"column":0},"generated":{"line":3786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3785,"column":0},"generated":{"line":3787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3786,"column":0},"generated":{"line":3788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3787,"column":0},"generated":{"line":3789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3788,"column":0},"generated":{"line":3790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3789,"column":0},"generated":{"line":3791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3790,"column":0},"generated":{"line":3792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3791,"column":0},"generated":{"line":3793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3792,"column":0},"generated":{"line":3794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3793,"column":0},"generated":{"line":3795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3794,"column":0},"generated":{"line":3796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3795,"column":0},"generated":{"line":3797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3796,"column":0},"generated":{"line":3798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3797,"column":0},"generated":{"line":3799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3798,"column":0},"generated":{"line":3800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3799,"column":0},"generated":{"line":3801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3800,"column":0},"generated":{"line":3802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3801,"column":0},"generated":{"line":3803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3802,"column":0},"generated":{"line":3804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3803,"column":0},"generated":{"line":3805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3804,"column":0},"generated":{"line":3806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3805,"column":0},"generated":{"line":3807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3806,"column":0},"generated":{"line":3808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3807,"column":0},"generated":{"line":3809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3808,"column":0},"generated":{"line":3810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3809,"column":0},"generated":{"line":3811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3810,"column":0},"generated":{"line":3812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3811,"column":0},"generated":{"line":3813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3812,"column":0},"generated":{"line":3814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3813,"column":0},"generated":{"line":3815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3814,"column":0},"generated":{"line":3816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3815,"column":0},"generated":{"line":3817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3816,"column":0},"generated":{"line":3818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3817,"column":0},"generated":{"line":3819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3818,"column":0},"generated":{"line":3820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3819,"column":0},"generated":{"line":3821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3820,"column":0},"generated":{"line":3822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3821,"column":0},"generated":{"line":3823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3822,"column":0},"generated":{"line":3824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3823,"column":0},"generated":{"line":3825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3824,"column":0},"generated":{"line":3826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3825,"column":0},"generated":{"line":3827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3826,"column":0},"generated":{"line":3828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3827,"column":0},"generated":{"line":3829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3828,"column":0},"generated":{"line":3830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3829,"column":0},"generated":{"line":3831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3830,"column":0},"generated":{"line":3832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3831,"column":0},"generated":{"line":3833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3832,"column":0},"generated":{"line":3834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3833,"column":0},"generated":{"line":3835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3834,"column":0},"generated":{"line":3836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3835,"column":0},"generated":{"line":3837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3836,"column":0},"generated":{"line":3838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3837,"column":0},"generated":{"line":3839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3838,"column":0},"generated":{"line":3840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3839,"column":0},"generated":{"line":3841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3840,"column":0},"generated":{"line":3842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3841,"column":0},"generated":{"line":3843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3842,"column":0},"generated":{"line":3844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3843,"column":0},"generated":{"line":3845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3844,"column":0},"generated":{"line":3846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3845,"column":0},"generated":{"line":3847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3846,"column":0},"generated":{"line":3848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3847,"column":0},"generated":{"line":3849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3848,"column":0},"generated":{"line":3850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3849,"column":0},"generated":{"line":3851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3850,"column":0},"generated":{"line":3852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3851,"column":0},"generated":{"line":3853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3852,"column":0},"generated":{"line":3854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3853,"column":0},"generated":{"line":3855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3854,"column":0},"generated":{"line":3856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3855,"column":0},"generated":{"line":3857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3856,"column":0},"generated":{"line":3858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3857,"column":0},"generated":{"line":3859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3858,"column":0},"generated":{"line":3860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3859,"column":0},"generated":{"line":3861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3860,"column":0},"generated":{"line":3862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3861,"column":0},"generated":{"line":3863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3862,"column":0},"generated":{"line":3864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3863,"column":0},"generated":{"line":3865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3864,"column":0},"generated":{"line":3866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3865,"column":0},"generated":{"line":3867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3866,"column":0},"generated":{"line":3868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3867,"column":0},"generated":{"line":3869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3868,"column":0},"generated":{"line":3870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3869,"column":0},"generated":{"line":3871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3870,"column":0},"generated":{"line":3872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3871,"column":0},"generated":{"line":3873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3872,"column":0},"generated":{"line":3874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3873,"column":0},"generated":{"line":3875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3874,"column":0},"generated":{"line":3876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3875,"column":0},"generated":{"line":3877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3876,"column":0},"generated":{"line":3878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3877,"column":0},"generated":{"line":3879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3878,"column":0},"generated":{"line":3880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3879,"column":0},"generated":{"line":3881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3880,"column":0},"generated":{"line":3882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3881,"column":0},"generated":{"line":3883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3882,"column":0},"generated":{"line":3884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3883,"column":0},"generated":{"line":3885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3884,"column":0},"generated":{"line":3886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3885,"column":0},"generated":{"line":3887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3886,"column":0},"generated":{"line":3888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3887,"column":0},"generated":{"line":3889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3888,"column":0},"generated":{"line":3890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3889,"column":0},"generated":{"line":3891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3890,"column":0},"generated":{"line":3892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3891,"column":0},"generated":{"line":3893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3892,"column":0},"generated":{"line":3894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3893,"column":0},"generated":{"line":3895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3894,"column":0},"generated":{"line":3896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3895,"column":0},"generated":{"line":3897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3896,"column":0},"generated":{"line":3898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3897,"column":0},"generated":{"line":3899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3898,"column":0},"generated":{"line":3900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3899,"column":0},"generated":{"line":3901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3900,"column":0},"generated":{"line":3902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3901,"column":0},"generated":{"line":3903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3902,"column":0},"generated":{"line":3904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3903,"column":0},"generated":{"line":3905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3904,"column":0},"generated":{"line":3906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3905,"column":0},"generated":{"line":3907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3906,"column":0},"generated":{"line":3908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3907,"column":0},"generated":{"line":3909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3908,"column":0},"generated":{"line":3910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3909,"column":0},"generated":{"line":3911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3910,"column":0},"generated":{"line":3912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3911,"column":0},"generated":{"line":3913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3912,"column":0},"generated":{"line":3914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3913,"column":0},"generated":{"line":3915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3914,"column":0},"generated":{"line":3916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3915,"column":0},"generated":{"line":3917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3916,"column":0},"generated":{"line":3918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3917,"column":0},"generated":{"line":3919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3918,"column":0},"generated":{"line":3920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3919,"column":0},"generated":{"line":3921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3920,"column":0},"generated":{"line":3922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3921,"column":0},"generated":{"line":3923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3922,"column":0},"generated":{"line":3924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3923,"column":0},"generated":{"line":3925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3924,"column":0},"generated":{"line":3926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3925,"column":0},"generated":{"line":3927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3926,"column":0},"generated":{"line":3928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3927,"column":0},"generated":{"line":3929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3928,"column":0},"generated":{"line":3930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3929,"column":0},"generated":{"line":3931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3930,"column":0},"generated":{"line":3932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3931,"column":0},"generated":{"line":3933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3932,"column":0},"generated":{"line":3934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3933,"column":0},"generated":{"line":3935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3934,"column":0},"generated":{"line":3936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3935,"column":0},"generated":{"line":3937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3936,"column":0},"generated":{"line":3938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3937,"column":0},"generated":{"line":3939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3938,"column":0},"generated":{"line":3940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3939,"column":0},"generated":{"line":3941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3940,"column":0},"generated":{"line":3942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3941,"column":0},"generated":{"line":3943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3942,"column":0},"generated":{"line":3944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3943,"column":0},"generated":{"line":3945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3944,"column":0},"generated":{"line":3946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3945,"column":0},"generated":{"line":3947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3946,"column":0},"generated":{"line":3948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3947,"column":0},"generated":{"line":3949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3948,"column":0},"generated":{"line":3950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3949,"column":0},"generated":{"line":3951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3950,"column":0},"generated":{"line":3952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3951,"column":0},"generated":{"line":3953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3952,"column":0},"generated":{"line":3954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3953,"column":0},"generated":{"line":3955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3954,"column":0},"generated":{"line":3956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3955,"column":0},"generated":{"line":3957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3956,"column":0},"generated":{"line":3958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3957,"column":0},"generated":{"line":3959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3958,"column":0},"generated":{"line":3960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3959,"column":0},"generated":{"line":3961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3960,"column":0},"generated":{"line":3962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3961,"column":0},"generated":{"line":3963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3962,"column":0},"generated":{"line":3964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3963,"column":0},"generated":{"line":3965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3964,"column":0},"generated":{"line":3966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3965,"column":0},"generated":{"line":3967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3966,"column":0},"generated":{"line":3968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3967,"column":0},"generated":{"line":3969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3968,"column":0},"generated":{"line":3970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3969,"column":0},"generated":{"line":3971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3970,"column":0},"generated":{"line":3972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3971,"column":0},"generated":{"line":3973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3972,"column":0},"generated":{"line":3974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3973,"column":0},"generated":{"line":3975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3974,"column":0},"generated":{"line":3976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3975,"column":0},"generated":{"line":3977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3976,"column":0},"generated":{"line":3978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3977,"column":0},"generated":{"line":3979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3978,"column":0},"generated":{"line":3980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3979,"column":0},"generated":{"line":3981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3980,"column":0},"generated":{"line":3982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3981,"column":0},"generated":{"line":3983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3982,"column":0},"generated":{"line":3984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3983,"column":0},"generated":{"line":3985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3984,"column":0},"generated":{"line":3986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3985,"column":0},"generated":{"line":3987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3986,"column":0},"generated":{"line":3988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3987,"column":0},"generated":{"line":3989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3988,"column":0},"generated":{"line":3990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3989,"column":0},"generated":{"line":3991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3990,"column":0},"generated":{"line":3992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3991,"column":0},"generated":{"line":3993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3992,"column":0},"generated":{"line":3994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3993,"column":0},"generated":{"line":3995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3994,"column":0},"generated":{"line":3996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3995,"column":0},"generated":{"line":3997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3996,"column":0},"generated":{"line":3998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3997,"column":0},"generated":{"line":3999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3998,"column":0},"generated":{"line":4000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":3999,"column":0},"generated":{"line":4001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4000,"column":0},"generated":{"line":4002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4001,"column":0},"generated":{"line":4003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4002,"column":0},"generated":{"line":4004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4003,"column":0},"generated":{"line":4005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4004,"column":0},"generated":{"line":4006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4005,"column":0},"generated":{"line":4007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4006,"column":0},"generated":{"line":4008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4007,"column":0},"generated":{"line":4009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4008,"column":0},"generated":{"line":4010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4009,"column":0},"generated":{"line":4011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4010,"column":0},"generated":{"line":4012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4011,"column":0},"generated":{"line":4013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4012,"column":0},"generated":{"line":4014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4013,"column":0},"generated":{"line":4015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4014,"column":0},"generated":{"line":4016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4015,"column":0},"generated":{"line":4017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4016,"column":0},"generated":{"line":4018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4017,"column":0},"generated":{"line":4019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4018,"column":0},"generated":{"line":4020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4019,"column":0},"generated":{"line":4021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4020,"column":0},"generated":{"line":4022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4021,"column":0},"generated":{"line":4023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4022,"column":0},"generated":{"line":4024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4023,"column":0},"generated":{"line":4025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4024,"column":0},"generated":{"line":4026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4025,"column":0},"generated":{"line":4027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4026,"column":0},"generated":{"line":4028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4027,"column":0},"generated":{"line":4029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4028,"column":0},"generated":{"line":4030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4029,"column":0},"generated":{"line":4031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4030,"column":0},"generated":{"line":4032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4031,"column":0},"generated":{"line":4033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4032,"column":0},"generated":{"line":4034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4033,"column":0},"generated":{"line":4035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4034,"column":0},"generated":{"line":4036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4035,"column":0},"generated":{"line":4037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4036,"column":0},"generated":{"line":4038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4037,"column":0},"generated":{"line":4039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4038,"column":0},"generated":{"line":4040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4039,"column":0},"generated":{"line":4041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4040,"column":0},"generated":{"line":4042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4041,"column":0},"generated":{"line":4043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4042,"column":0},"generated":{"line":4044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4043,"column":0},"generated":{"line":4045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4044,"column":0},"generated":{"line":4046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4045,"column":0},"generated":{"line":4047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4046,"column":0},"generated":{"line":4048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4047,"column":0},"generated":{"line":4049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4048,"column":0},"generated":{"line":4050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4049,"column":0},"generated":{"line":4051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4050,"column":0},"generated":{"line":4052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4051,"column":0},"generated":{"line":4053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4052,"column":0},"generated":{"line":4054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4053,"column":0},"generated":{"line":4055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4054,"column":0},"generated":{"line":4056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4055,"column":0},"generated":{"line":4057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4056,"column":0},"generated":{"line":4058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4057,"column":0},"generated":{"line":4059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4058,"column":0},"generated":{"line":4060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4059,"column":0},"generated":{"line":4061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4060,"column":0},"generated":{"line":4062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4061,"column":0},"generated":{"line":4063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4062,"column":0},"generated":{"line":4064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4063,"column":0},"generated":{"line":4065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4064,"column":0},"generated":{"line":4066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4065,"column":0},"generated":{"line":4067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4066,"column":0},"generated":{"line":4068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4067,"column":0},"generated":{"line":4069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4068,"column":0},"generated":{"line":4070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4069,"column":0},"generated":{"line":4071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4070,"column":0},"generated":{"line":4072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4071,"column":0},"generated":{"line":4073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4072,"column":0},"generated":{"line":4074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4073,"column":0},"generated":{"line":4075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4074,"column":0},"generated":{"line":4076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4075,"column":0},"generated":{"line":4077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4076,"column":0},"generated":{"line":4078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4077,"column":0},"generated":{"line":4079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4078,"column":0},"generated":{"line":4080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4079,"column":0},"generated":{"line":4081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4080,"column":0},"generated":{"line":4082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4081,"column":0},"generated":{"line":4083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4082,"column":0},"generated":{"line":4084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4083,"column":0},"generated":{"line":4085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4084,"column":0},"generated":{"line":4086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4085,"column":0},"generated":{"line":4087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4086,"column":0},"generated":{"line":4088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4087,"column":0},"generated":{"line":4089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4088,"column":0},"generated":{"line":4090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4089,"column":0},"generated":{"line":4091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4090,"column":0},"generated":{"line":4092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4091,"column":0},"generated":{"line":4093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4092,"column":0},"generated":{"line":4094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4093,"column":0},"generated":{"line":4095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4094,"column":0},"generated":{"line":4096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4095,"column":0},"generated":{"line":4097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4096,"column":0},"generated":{"line":4098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4097,"column":0},"generated":{"line":4099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4098,"column":0},"generated":{"line":4100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4099,"column":0},"generated":{"line":4101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4100,"column":0},"generated":{"line":4102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4101,"column":0},"generated":{"line":4103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4102,"column":0},"generated":{"line":4104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4103,"column":0},"generated":{"line":4105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4104,"column":0},"generated":{"line":4106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4105,"column":0},"generated":{"line":4107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4106,"column":0},"generated":{"line":4108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4107,"column":0},"generated":{"line":4109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4108,"column":0},"generated":{"line":4110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4109,"column":0},"generated":{"line":4111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4110,"column":0},"generated":{"line":4112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4111,"column":0},"generated":{"line":4113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4112,"column":0},"generated":{"line":4114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4113,"column":0},"generated":{"line":4115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4114,"column":0},"generated":{"line":4116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4115,"column":0},"generated":{"line":4117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4116,"column":0},"generated":{"line":4118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4117,"column":0},"generated":{"line":4119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4118,"column":0},"generated":{"line":4120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4119,"column":0},"generated":{"line":4121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4120,"column":0},"generated":{"line":4122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4121,"column":0},"generated":{"line":4123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4122,"column":0},"generated":{"line":4124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4123,"column":0},"generated":{"line":4125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4124,"column":0},"generated":{"line":4126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4125,"column":0},"generated":{"line":4127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4126,"column":0},"generated":{"line":4128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4127,"column":0},"generated":{"line":4129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4128,"column":0},"generated":{"line":4130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4129,"column":0},"generated":{"line":4131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4130,"column":0},"generated":{"line":4132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4131,"column":0},"generated":{"line":4133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4132,"column":0},"generated":{"line":4134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4133,"column":0},"generated":{"line":4135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4134,"column":0},"generated":{"line":4136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4135,"column":0},"generated":{"line":4137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4136,"column":0},"generated":{"line":4138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4137,"column":0},"generated":{"line":4139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4138,"column":0},"generated":{"line":4140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4139,"column":0},"generated":{"line":4141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4140,"column":0},"generated":{"line":4142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4141,"column":0},"generated":{"line":4143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4142,"column":0},"generated":{"line":4144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4143,"column":0},"generated":{"line":4145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4144,"column":0},"generated":{"line":4146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4145,"column":0},"generated":{"line":4147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4146,"column":0},"generated":{"line":4148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4147,"column":0},"generated":{"line":4149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4148,"column":0},"generated":{"line":4150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4149,"column":0},"generated":{"line":4151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4150,"column":0},"generated":{"line":4152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4151,"column":0},"generated":{"line":4153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4152,"column":0},"generated":{"line":4154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4153,"column":0},"generated":{"line":4155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4154,"column":0},"generated":{"line":4156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4155,"column":0},"generated":{"line":4157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4156,"column":0},"generated":{"line":4158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4157,"column":0},"generated":{"line":4159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4158,"column":0},"generated":{"line":4160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4159,"column":0},"generated":{"line":4161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4160,"column":0},"generated":{"line":4162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4161,"column":0},"generated":{"line":4163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4162,"column":0},"generated":{"line":4164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4163,"column":0},"generated":{"line":4165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4164,"column":0},"generated":{"line":4166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4165,"column":0},"generated":{"line":4167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4166,"column":0},"generated":{"line":4168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4167,"column":0},"generated":{"line":4169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4168,"column":0},"generated":{"line":4170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4169,"column":0},"generated":{"line":4171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4170,"column":0},"generated":{"line":4172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4171,"column":0},"generated":{"line":4173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4172,"column":0},"generated":{"line":4174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4173,"column":0},"generated":{"line":4175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4174,"column":0},"generated":{"line":4176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4175,"column":0},"generated":{"line":4177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4176,"column":0},"generated":{"line":4178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4177,"column":0},"generated":{"line":4179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4178,"column":0},"generated":{"line":4180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4179,"column":0},"generated":{"line":4181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4180,"column":0},"generated":{"line":4182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4181,"column":0},"generated":{"line":4183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4182,"column":0},"generated":{"line":4184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4183,"column":0},"generated":{"line":4185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4184,"column":0},"generated":{"line":4186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4185,"column":0},"generated":{"line":4187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4186,"column":0},"generated":{"line":4188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4187,"column":0},"generated":{"line":4189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4188,"column":0},"generated":{"line":4190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4189,"column":0},"generated":{"line":4191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4190,"column":0},"generated":{"line":4192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4191,"column":0},"generated":{"line":4193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4192,"column":0},"generated":{"line":4194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4193,"column":0},"generated":{"line":4195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4194,"column":0},"generated":{"line":4196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4195,"column":0},"generated":{"line":4197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4196,"column":0},"generated":{"line":4198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4197,"column":0},"generated":{"line":4199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4198,"column":0},"generated":{"line":4200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4199,"column":0},"generated":{"line":4201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4200,"column":0},"generated":{"line":4202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4201,"column":0},"generated":{"line":4203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4202,"column":0},"generated":{"line":4204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4203,"column":0},"generated":{"line":4205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4204,"column":0},"generated":{"line":4206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4205,"column":0},"generated":{"line":4207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4206,"column":0},"generated":{"line":4208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4207,"column":0},"generated":{"line":4209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4208,"column":0},"generated":{"line":4210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4209,"column":0},"generated":{"line":4211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4210,"column":0},"generated":{"line":4212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4211,"column":0},"generated":{"line":4213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4212,"column":0},"generated":{"line":4214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4213,"column":0},"generated":{"line":4215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4214,"column":0},"generated":{"line":4216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4215,"column":0},"generated":{"line":4217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4216,"column":0},"generated":{"line":4218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4217,"column":0},"generated":{"line":4219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4218,"column":0},"generated":{"line":4220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4219,"column":0},"generated":{"line":4221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4220,"column":0},"generated":{"line":4222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4221,"column":0},"generated":{"line":4223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4222,"column":0},"generated":{"line":4224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4223,"column":0},"generated":{"line":4225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4224,"column":0},"generated":{"line":4226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4225,"column":0},"generated":{"line":4227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4226,"column":0},"generated":{"line":4228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4227,"column":0},"generated":{"line":4229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4228,"column":0},"generated":{"line":4230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4229,"column":0},"generated":{"line":4231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4230,"column":0},"generated":{"line":4232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4231,"column":0},"generated":{"line":4233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4232,"column":0},"generated":{"line":4234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4233,"column":0},"generated":{"line":4235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4234,"column":0},"generated":{"line":4236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4235,"column":0},"generated":{"line":4237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4236,"column":0},"generated":{"line":4238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4237,"column":0},"generated":{"line":4239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4238,"column":0},"generated":{"line":4240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4239,"column":0},"generated":{"line":4241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4240,"column":0},"generated":{"line":4242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4241,"column":0},"generated":{"line":4243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4242,"column":0},"generated":{"line":4244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4243,"column":0},"generated":{"line":4245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4244,"column":0},"generated":{"line":4246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4245,"column":0},"generated":{"line":4247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4246,"column":0},"generated":{"line":4248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4247,"column":0},"generated":{"line":4249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4248,"column":0},"generated":{"line":4250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4249,"column":0},"generated":{"line":4251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4250,"column":0},"generated":{"line":4252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4251,"column":0},"generated":{"line":4253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4252,"column":0},"generated":{"line":4254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4253,"column":0},"generated":{"line":4255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4254,"column":0},"generated":{"line":4256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4255,"column":0},"generated":{"line":4257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4256,"column":0},"generated":{"line":4258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4257,"column":0},"generated":{"line":4259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4258,"column":0},"generated":{"line":4260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4259,"column":0},"generated":{"line":4261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4260,"column":0},"generated":{"line":4262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4261,"column":0},"generated":{"line":4263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4262,"column":0},"generated":{"line":4264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4263,"column":0},"generated":{"line":4265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4264,"column":0},"generated":{"line":4266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4265,"column":0},"generated":{"line":4267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4266,"column":0},"generated":{"line":4268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4267,"column":0},"generated":{"line":4269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4268,"column":0},"generated":{"line":4270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4269,"column":0},"generated":{"line":4271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4270,"column":0},"generated":{"line":4272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4271,"column":0},"generated":{"line":4273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4272,"column":0},"generated":{"line":4274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4273,"column":0},"generated":{"line":4275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4274,"column":0},"generated":{"line":4276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4275,"column":0},"generated":{"line":4277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4276,"column":0},"generated":{"line":4278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4277,"column":0},"generated":{"line":4279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4278,"column":0},"generated":{"line":4280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4279,"column":0},"generated":{"line":4281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4280,"column":0},"generated":{"line":4282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4281,"column":0},"generated":{"line":4283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4282,"column":0},"generated":{"line":4284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4283,"column":0},"generated":{"line":4285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4284,"column":0},"generated":{"line":4286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4285,"column":0},"generated":{"line":4287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4286,"column":0},"generated":{"line":4288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4287,"column":0},"generated":{"line":4289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4288,"column":0},"generated":{"line":4290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4289,"column":0},"generated":{"line":4291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4290,"column":0},"generated":{"line":4292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4291,"column":0},"generated":{"line":4293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4292,"column":0},"generated":{"line":4294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4293,"column":0},"generated":{"line":4295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4294,"column":0},"generated":{"line":4296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4295,"column":0},"generated":{"line":4297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4296,"column":0},"generated":{"line":4298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4297,"column":0},"generated":{"line":4299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4298,"column":0},"generated":{"line":4300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4299,"column":0},"generated":{"line":4301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4300,"column":0},"generated":{"line":4302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4301,"column":0},"generated":{"line":4303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4302,"column":0},"generated":{"line":4304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4303,"column":0},"generated":{"line":4305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4304,"column":0},"generated":{"line":4306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4305,"column":0},"generated":{"line":4307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4306,"column":0},"generated":{"line":4308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4307,"column":0},"generated":{"line":4309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4308,"column":0},"generated":{"line":4310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4309,"column":0},"generated":{"line":4311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4310,"column":0},"generated":{"line":4312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4311,"column":0},"generated":{"line":4313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4312,"column":0},"generated":{"line":4314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4313,"column":0},"generated":{"line":4315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4314,"column":0},"generated":{"line":4316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4315,"column":0},"generated":{"line":4317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4316,"column":0},"generated":{"line":4318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4317,"column":0},"generated":{"line":4319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4318,"column":0},"generated":{"line":4320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4319,"column":0},"generated":{"line":4321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4320,"column":0},"generated":{"line":4322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4321,"column":0},"generated":{"line":4323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4322,"column":0},"generated":{"line":4324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4323,"column":0},"generated":{"line":4325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4324,"column":0},"generated":{"line":4326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4325,"column":0},"generated":{"line":4327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4326,"column":0},"generated":{"line":4328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4327,"column":0},"generated":{"line":4329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4328,"column":0},"generated":{"line":4330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4329,"column":0},"generated":{"line":4331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4330,"column":0},"generated":{"line":4332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4331,"column":0},"generated":{"line":4333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4332,"column":0},"generated":{"line":4334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4333,"column":0},"generated":{"line":4335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4334,"column":0},"generated":{"line":4336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4335,"column":0},"generated":{"line":4337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4336,"column":0},"generated":{"line":4338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4337,"column":0},"generated":{"line":4339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4338,"column":0},"generated":{"line":4340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4339,"column":0},"generated":{"line":4341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4340,"column":0},"generated":{"line":4342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4341,"column":0},"generated":{"line":4343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4342,"column":0},"generated":{"line":4344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4343,"column":0},"generated":{"line":4345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4344,"column":0},"generated":{"line":4346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4345,"column":0},"generated":{"line":4347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4346,"column":0},"generated":{"line":4348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4347,"column":0},"generated":{"line":4349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4348,"column":0},"generated":{"line":4350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4349,"column":0},"generated":{"line":4351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4350,"column":0},"generated":{"line":4352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4351,"column":0},"generated":{"line":4353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4352,"column":0},"generated":{"line":4354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4353,"column":0},"generated":{"line":4355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4354,"column":0},"generated":{"line":4356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4355,"column":0},"generated":{"line":4357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4356,"column":0},"generated":{"line":4358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4357,"column":0},"generated":{"line":4359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4358,"column":0},"generated":{"line":4360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4359,"column":0},"generated":{"line":4361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4360,"column":0},"generated":{"line":4362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4361,"column":0},"generated":{"line":4363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4362,"column":0},"generated":{"line":4364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4363,"column":0},"generated":{"line":4365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4364,"column":0},"generated":{"line":4366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4365,"column":0},"generated":{"line":4367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4366,"column":0},"generated":{"line":4368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4367,"column":0},"generated":{"line":4369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4368,"column":0},"generated":{"line":4370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4369,"column":0},"generated":{"line":4371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4370,"column":0},"generated":{"line":4372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4371,"column":0},"generated":{"line":4373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4372,"column":0},"generated":{"line":4374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4373,"column":0},"generated":{"line":4375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4374,"column":0},"generated":{"line":4376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4375,"column":0},"generated":{"line":4377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4376,"column":0},"generated":{"line":4378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4377,"column":0},"generated":{"line":4379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4378,"column":0},"generated":{"line":4380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4379,"column":0},"generated":{"line":4381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4380,"column":0},"generated":{"line":4382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4381,"column":0},"generated":{"line":4383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4382,"column":0},"generated":{"line":4384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4383,"column":0},"generated":{"line":4385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4384,"column":0},"generated":{"line":4386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4385,"column":0},"generated":{"line":4387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4386,"column":0},"generated":{"line":4388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4387,"column":0},"generated":{"line":4389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4388,"column":0},"generated":{"line":4390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4389,"column":0},"generated":{"line":4391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4390,"column":0},"generated":{"line":4392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4391,"column":0},"generated":{"line":4393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4392,"column":0},"generated":{"line":4394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4393,"column":0},"generated":{"line":4395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4394,"column":0},"generated":{"line":4396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4395,"column":0},"generated":{"line":4397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4396,"column":0},"generated":{"line":4398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4397,"column":0},"generated":{"line":4399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4398,"column":0},"generated":{"line":4400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4399,"column":0},"generated":{"line":4401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4400,"column":0},"generated":{"line":4402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4401,"column":0},"generated":{"line":4403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4402,"column":0},"generated":{"line":4404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4403,"column":0},"generated":{"line":4405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4404,"column":0},"generated":{"line":4406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4405,"column":0},"generated":{"line":4407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4406,"column":0},"generated":{"line":4408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4407,"column":0},"generated":{"line":4409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4408,"column":0},"generated":{"line":4410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4409,"column":0},"generated":{"line":4411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4410,"column":0},"generated":{"line":4412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4411,"column":0},"generated":{"line":4413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4412,"column":0},"generated":{"line":4414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4413,"column":0},"generated":{"line":4415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4414,"column":0},"generated":{"line":4416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4415,"column":0},"generated":{"line":4417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4416,"column":0},"generated":{"line":4418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4417,"column":0},"generated":{"line":4419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4418,"column":0},"generated":{"line":4420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4419,"column":0},"generated":{"line":4421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4420,"column":0},"generated":{"line":4422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4421,"column":0},"generated":{"line":4423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4422,"column":0},"generated":{"line":4424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4423,"column":0},"generated":{"line":4425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4424,"column":0},"generated":{"line":4426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4425,"column":0},"generated":{"line":4427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4426,"column":0},"generated":{"line":4428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4427,"column":0},"generated":{"line":4429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4428,"column":0},"generated":{"line":4430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4429,"column":0},"generated":{"line":4431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4430,"column":0},"generated":{"line":4432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4431,"column":0},"generated":{"line":4433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4432,"column":0},"generated":{"line":4434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4433,"column":0},"generated":{"line":4435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4434,"column":0},"generated":{"line":4436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4435,"column":0},"generated":{"line":4437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4436,"column":0},"generated":{"line":4438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4437,"column":0},"generated":{"line":4439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4438,"column":0},"generated":{"line":4440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4439,"column":0},"generated":{"line":4441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4440,"column":0},"generated":{"line":4442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4441,"column":0},"generated":{"line":4443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4442,"column":0},"generated":{"line":4444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4443,"column":0},"generated":{"line":4445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4444,"column":0},"generated":{"line":4446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4445,"column":0},"generated":{"line":4447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4446,"column":0},"generated":{"line":4448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4447,"column":0},"generated":{"line":4449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4448,"column":0},"generated":{"line":4450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4449,"column":0},"generated":{"line":4451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4450,"column":0},"generated":{"line":4452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4451,"column":0},"generated":{"line":4453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4452,"column":0},"generated":{"line":4454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4453,"column":0},"generated":{"line":4455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4454,"column":0},"generated":{"line":4456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4455,"column":0},"generated":{"line":4457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4456,"column":0},"generated":{"line":4458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4457,"column":0},"generated":{"line":4459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4458,"column":0},"generated":{"line":4460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4459,"column":0},"generated":{"line":4461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4460,"column":0},"generated":{"line":4462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4461,"column":0},"generated":{"line":4463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4462,"column":0},"generated":{"line":4464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4463,"column":0},"generated":{"line":4465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4464,"column":0},"generated":{"line":4466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4465,"column":0},"generated":{"line":4467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4466,"column":0},"generated":{"line":4468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4467,"column":0},"generated":{"line":4469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4468,"column":0},"generated":{"line":4470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4469,"column":0},"generated":{"line":4471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4470,"column":0},"generated":{"line":4472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4471,"column":0},"generated":{"line":4473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4472,"column":0},"generated":{"line":4474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4473,"column":0},"generated":{"line":4475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4474,"column":0},"generated":{"line":4476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4475,"column":0},"generated":{"line":4477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4476,"column":0},"generated":{"line":4478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4477,"column":0},"generated":{"line":4479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4478,"column":0},"generated":{"line":4480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4479,"column":0},"generated":{"line":4481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4480,"column":0},"generated":{"line":4482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4481,"column":0},"generated":{"line":4483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4482,"column":0},"generated":{"line":4484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4483,"column":0},"generated":{"line":4485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4484,"column":0},"generated":{"line":4486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4485,"column":0},"generated":{"line":4487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4486,"column":0},"generated":{"line":4488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4487,"column":0},"generated":{"line":4489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4488,"column":0},"generated":{"line":4490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4489,"column":0},"generated":{"line":4491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4490,"column":0},"generated":{"line":4492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4491,"column":0},"generated":{"line":4493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4492,"column":0},"generated":{"line":4494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4493,"column":0},"generated":{"line":4495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4494,"column":0},"generated":{"line":4496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4495,"column":0},"generated":{"line":4497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4496,"column":0},"generated":{"line":4498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4497,"column":0},"generated":{"line":4499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4498,"column":0},"generated":{"line":4500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4499,"column":0},"generated":{"line":4501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4500,"column":0},"generated":{"line":4502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4501,"column":0},"generated":{"line":4503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4502,"column":0},"generated":{"line":4504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4503,"column":0},"generated":{"line":4505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4504,"column":0},"generated":{"line":4506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4505,"column":0},"generated":{"line":4507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4506,"column":0},"generated":{"line":4508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4507,"column":0},"generated":{"line":4509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4508,"column":0},"generated":{"line":4510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4509,"column":0},"generated":{"line":4511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4510,"column":0},"generated":{"line":4512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4511,"column":0},"generated":{"line":4513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4512,"column":0},"generated":{"line":4514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4513,"column":0},"generated":{"line":4515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4514,"column":0},"generated":{"line":4516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4515,"column":0},"generated":{"line":4517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4516,"column":0},"generated":{"line":4518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4517,"column":0},"generated":{"line":4519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4518,"column":0},"generated":{"line":4520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4519,"column":0},"generated":{"line":4521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4520,"column":0},"generated":{"line":4522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4521,"column":0},"generated":{"line":4523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4522,"column":0},"generated":{"line":4524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4523,"column":0},"generated":{"line":4525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4524,"column":0},"generated":{"line":4526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4525,"column":0},"generated":{"line":4527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4526,"column":0},"generated":{"line":4528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4527,"column":0},"generated":{"line":4529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4528,"column":0},"generated":{"line":4530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4529,"column":0},"generated":{"line":4531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4530,"column":0},"generated":{"line":4532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4531,"column":0},"generated":{"line":4533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4532,"column":0},"generated":{"line":4534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4533,"column":0},"generated":{"line":4535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4534,"column":0},"generated":{"line":4536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4535,"column":0},"generated":{"line":4537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4536,"column":0},"generated":{"line":4538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4537,"column":0},"generated":{"line":4539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4538,"column":0},"generated":{"line":4540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4539,"column":0},"generated":{"line":4541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4540,"column":0},"generated":{"line":4542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4541,"column":0},"generated":{"line":4543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4542,"column":0},"generated":{"line":4544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4543,"column":0},"generated":{"line":4545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4544,"column":0},"generated":{"line":4546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4545,"column":0},"generated":{"line":4547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4546,"column":0},"generated":{"line":4548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4547,"column":0},"generated":{"line":4549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4548,"column":0},"generated":{"line":4550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4549,"column":0},"generated":{"line":4551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4550,"column":0},"generated":{"line":4552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4551,"column":0},"generated":{"line":4553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4552,"column":0},"generated":{"line":4554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4553,"column":0},"generated":{"line":4555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4554,"column":0},"generated":{"line":4556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4555,"column":0},"generated":{"line":4557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4556,"column":0},"generated":{"line":4558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4557,"column":0},"generated":{"line":4559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4558,"column":0},"generated":{"line":4560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4559,"column":0},"generated":{"line":4561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4560,"column":0},"generated":{"line":4562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4561,"column":0},"generated":{"line":4563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4562,"column":0},"generated":{"line":4564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4563,"column":0},"generated":{"line":4565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4564,"column":0},"generated":{"line":4566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4565,"column":0},"generated":{"line":4567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4566,"column":0},"generated":{"line":4568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4567,"column":0},"generated":{"line":4569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4568,"column":0},"generated":{"line":4570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4569,"column":0},"generated":{"line":4571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4570,"column":0},"generated":{"line":4572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4571,"column":0},"generated":{"line":4573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4572,"column":0},"generated":{"line":4574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4573,"column":0},"generated":{"line":4575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4574,"column":0},"generated":{"line":4576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4575,"column":0},"generated":{"line":4577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4576,"column":0},"generated":{"line":4578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4577,"column":0},"generated":{"line":4579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4578,"column":0},"generated":{"line":4580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4579,"column":0},"generated":{"line":4581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4580,"column":0},"generated":{"line":4582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4581,"column":0},"generated":{"line":4583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4582,"column":0},"generated":{"line":4584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4583,"column":0},"generated":{"line":4585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4584,"column":0},"generated":{"line":4586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4585,"column":0},"generated":{"line":4587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4586,"column":0},"generated":{"line":4588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4587,"column":0},"generated":{"line":4589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4588,"column":0},"generated":{"line":4590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4589,"column":0},"generated":{"line":4591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4590,"column":0},"generated":{"line":4592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4591,"column":0},"generated":{"line":4593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4592,"column":0},"generated":{"line":4594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4593,"column":0},"generated":{"line":4595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4594,"column":0},"generated":{"line":4596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4595,"column":0},"generated":{"line":4597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4596,"column":0},"generated":{"line":4598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4597,"column":0},"generated":{"line":4599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4598,"column":0},"generated":{"line":4600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4599,"column":0},"generated":{"line":4601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4600,"column":0},"generated":{"line":4602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4601,"column":0},"generated":{"line":4603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4602,"column":0},"generated":{"line":4604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4603,"column":0},"generated":{"line":4605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4604,"column":0},"generated":{"line":4606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4605,"column":0},"generated":{"line":4607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4606,"column":0},"generated":{"line":4608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4607,"column":0},"generated":{"line":4609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4608,"column":0},"generated":{"line":4610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4609,"column":0},"generated":{"line":4611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4610,"column":0},"generated":{"line":4612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4611,"column":0},"generated":{"line":4613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4612,"column":0},"generated":{"line":4614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4613,"column":0},"generated":{"line":4615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4614,"column":0},"generated":{"line":4616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4615,"column":0},"generated":{"line":4617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4616,"column":0},"generated":{"line":4618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4617,"column":0},"generated":{"line":4619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4618,"column":0},"generated":{"line":4620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4619,"column":0},"generated":{"line":4621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4620,"column":0},"generated":{"line":4622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4621,"column":0},"generated":{"line":4623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4622,"column":0},"generated":{"line":4624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4623,"column":0},"generated":{"line":4625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4624,"column":0},"generated":{"line":4626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4625,"column":0},"generated":{"line":4627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4626,"column":0},"generated":{"line":4628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4627,"column":0},"generated":{"line":4629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4628,"column":0},"generated":{"line":4630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4629,"column":0},"generated":{"line":4631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4630,"column":0},"generated":{"line":4632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4631,"column":0},"generated":{"line":4633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4632,"column":0},"generated":{"line":4634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4633,"column":0},"generated":{"line":4635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4634,"column":0},"generated":{"line":4636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4635,"column":0},"generated":{"line":4637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4636,"column":0},"generated":{"line":4638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4637,"column":0},"generated":{"line":4639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4638,"column":0},"generated":{"line":4640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4639,"column":0},"generated":{"line":4641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4640,"column":0},"generated":{"line":4642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4641,"column":0},"generated":{"line":4643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4642,"column":0},"generated":{"line":4644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4643,"column":0},"generated":{"line":4645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4644,"column":0},"generated":{"line":4646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4645,"column":0},"generated":{"line":4647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4646,"column":0},"generated":{"line":4648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4647,"column":0},"generated":{"line":4649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4648,"column":0},"generated":{"line":4650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4649,"column":0},"generated":{"line":4651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4650,"column":0},"generated":{"line":4652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4651,"column":0},"generated":{"line":4653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4652,"column":0},"generated":{"line":4654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4653,"column":0},"generated":{"line":4655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4654,"column":0},"generated":{"line":4656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4655,"column":0},"generated":{"line":4657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4656,"column":0},"generated":{"line":4658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4657,"column":0},"generated":{"line":4659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4658,"column":0},"generated":{"line":4660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4659,"column":0},"generated":{"line":4661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4660,"column":0},"generated":{"line":4662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4661,"column":0},"generated":{"line":4663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4662,"column":0},"generated":{"line":4664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4663,"column":0},"generated":{"line":4665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4664,"column":0},"generated":{"line":4666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4665,"column":0},"generated":{"line":4667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4666,"column":0},"generated":{"line":4668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4667,"column":0},"generated":{"line":4669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4668,"column":0},"generated":{"line":4670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4669,"column":0},"generated":{"line":4671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4670,"column":0},"generated":{"line":4672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4671,"column":0},"generated":{"line":4673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4672,"column":0},"generated":{"line":4674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4673,"column":0},"generated":{"line":4675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4674,"column":0},"generated":{"line":4676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4675,"column":0},"generated":{"line":4677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4676,"column":0},"generated":{"line":4678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4677,"column":0},"generated":{"line":4679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4678,"column":0},"generated":{"line":4680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4679,"column":0},"generated":{"line":4681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4680,"column":0},"generated":{"line":4682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4681,"column":0},"generated":{"line":4683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4682,"column":0},"generated":{"line":4684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4683,"column":0},"generated":{"line":4685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4684,"column":0},"generated":{"line":4686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4685,"column":0},"generated":{"line":4687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4686,"column":0},"generated":{"line":4688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4687,"column":0},"generated":{"line":4689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4688,"column":0},"generated":{"line":4690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4689,"column":0},"generated":{"line":4691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4690,"column":0},"generated":{"line":4692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4691,"column":0},"generated":{"line":4693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4692,"column":0},"generated":{"line":4694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4693,"column":0},"generated":{"line":4695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4694,"column":0},"generated":{"line":4696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4695,"column":0},"generated":{"line":4697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4696,"column":0},"generated":{"line":4698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4697,"column":0},"generated":{"line":4699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4698,"column":0},"generated":{"line":4700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4699,"column":0},"generated":{"line":4701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4700,"column":0},"generated":{"line":4702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4701,"column":0},"generated":{"line":4703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4702,"column":0},"generated":{"line":4704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4703,"column":0},"generated":{"line":4705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4704,"column":0},"generated":{"line":4706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4705,"column":0},"generated":{"line":4707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4706,"column":0},"generated":{"line":4708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4707,"column":0},"generated":{"line":4709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4708,"column":0},"generated":{"line":4710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4709,"column":0},"generated":{"line":4711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4710,"column":0},"generated":{"line":4712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4711,"column":0},"generated":{"line":4713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4712,"column":0},"generated":{"line":4714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4713,"column":0},"generated":{"line":4715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4714,"column":0},"generated":{"line":4716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4715,"column":0},"generated":{"line":4717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4716,"column":0},"generated":{"line":4718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4717,"column":0},"generated":{"line":4719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4718,"column":0},"generated":{"line":4720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4719,"column":0},"generated":{"line":4721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4720,"column":0},"generated":{"line":4722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4721,"column":0},"generated":{"line":4723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4722,"column":0},"generated":{"line":4724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4723,"column":0},"generated":{"line":4725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4724,"column":0},"generated":{"line":4726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4725,"column":0},"generated":{"line":4727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4726,"column":0},"generated":{"line":4728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4727,"column":0},"generated":{"line":4729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4728,"column":0},"generated":{"line":4730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4729,"column":0},"generated":{"line":4731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4730,"column":0},"generated":{"line":4732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4731,"column":0},"generated":{"line":4733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4732,"column":0},"generated":{"line":4734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4733,"column":0},"generated":{"line":4735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4734,"column":0},"generated":{"line":4736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4735,"column":0},"generated":{"line":4737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4736,"column":0},"generated":{"line":4738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4737,"column":0},"generated":{"line":4739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4738,"column":0},"generated":{"line":4740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4739,"column":0},"generated":{"line":4741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4740,"column":0},"generated":{"line":4742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4741,"column":0},"generated":{"line":4743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4742,"column":0},"generated":{"line":4744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4743,"column":0},"generated":{"line":4745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4744,"column":0},"generated":{"line":4746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4745,"column":0},"generated":{"line":4747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4746,"column":0},"generated":{"line":4748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4747,"column":0},"generated":{"line":4749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4748,"column":0},"generated":{"line":4750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4749,"column":0},"generated":{"line":4751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4750,"column":0},"generated":{"line":4752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4751,"column":0},"generated":{"line":4753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4752,"column":0},"generated":{"line":4754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4753,"column":0},"generated":{"line":4755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4754,"column":0},"generated":{"line":4756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4755,"column":0},"generated":{"line":4757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4756,"column":0},"generated":{"line":4758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4757,"column":0},"generated":{"line":4759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4758,"column":0},"generated":{"line":4760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4759,"column":0},"generated":{"line":4761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4760,"column":0},"generated":{"line":4762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4761,"column":0},"generated":{"line":4763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4762,"column":0},"generated":{"line":4764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4763,"column":0},"generated":{"line":4765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4764,"column":0},"generated":{"line":4766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4765,"column":0},"generated":{"line":4767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4766,"column":0},"generated":{"line":4768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4767,"column":0},"generated":{"line":4769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4768,"column":0},"generated":{"line":4770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4769,"column":0},"generated":{"line":4771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4770,"column":0},"generated":{"line":4772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4771,"column":0},"generated":{"line":4773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4772,"column":0},"generated":{"line":4774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4773,"column":0},"generated":{"line":4775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4774,"column":0},"generated":{"line":4776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4775,"column":0},"generated":{"line":4777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4776,"column":0},"generated":{"line":4778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4777,"column":0},"generated":{"line":4779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4778,"column":0},"generated":{"line":4780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4779,"column":0},"generated":{"line":4781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4780,"column":0},"generated":{"line":4782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4781,"column":0},"generated":{"line":4783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4782,"column":0},"generated":{"line":4784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4783,"column":0},"generated":{"line":4785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4784,"column":0},"generated":{"line":4786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4785,"column":0},"generated":{"line":4787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4786,"column":0},"generated":{"line":4788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4787,"column":0},"generated":{"line":4789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4788,"column":0},"generated":{"line":4790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4789,"column":0},"generated":{"line":4791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4790,"column":0},"generated":{"line":4792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4791,"column":0},"generated":{"line":4793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4792,"column":0},"generated":{"line":4794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4793,"column":0},"generated":{"line":4795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4794,"column":0},"generated":{"line":4796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4795,"column":0},"generated":{"line":4797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4796,"column":0},"generated":{"line":4798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4797,"column":0},"generated":{"line":4799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4798,"column":0},"generated":{"line":4800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4799,"column":0},"generated":{"line":4801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4800,"column":0},"generated":{"line":4802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4801,"column":0},"generated":{"line":4803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4802,"column":0},"generated":{"line":4804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4803,"column":0},"generated":{"line":4805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4804,"column":0},"generated":{"line":4806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4805,"column":0},"generated":{"line":4807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4806,"column":0},"generated":{"line":4808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4807,"column":0},"generated":{"line":4809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4808,"column":0},"generated":{"line":4810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4809,"column":0},"generated":{"line":4811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4810,"column":0},"generated":{"line":4812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4811,"column":0},"generated":{"line":4813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4812,"column":0},"generated":{"line":4814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4813,"column":0},"generated":{"line":4815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4814,"column":0},"generated":{"line":4816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4815,"column":0},"generated":{"line":4817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4816,"column":0},"generated":{"line":4818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4817,"column":0},"generated":{"line":4819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4818,"column":0},"generated":{"line":4820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4819,"column":0},"generated":{"line":4821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4820,"column":0},"generated":{"line":4822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4821,"column":0},"generated":{"line":4823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4822,"column":0},"generated":{"line":4824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4823,"column":0},"generated":{"line":4825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4824,"column":0},"generated":{"line":4826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4825,"column":0},"generated":{"line":4827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4826,"column":0},"generated":{"line":4828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4827,"column":0},"generated":{"line":4829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4828,"column":0},"generated":{"line":4830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4829,"column":0},"generated":{"line":4831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4830,"column":0},"generated":{"line":4832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4831,"column":0},"generated":{"line":4833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4832,"column":0},"generated":{"line":4834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4833,"column":0},"generated":{"line":4835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4834,"column":0},"generated":{"line":4836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4835,"column":0},"generated":{"line":4837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4836,"column":0},"generated":{"line":4838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4837,"column":0},"generated":{"line":4839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4838,"column":0},"generated":{"line":4840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4839,"column":0},"generated":{"line":4841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4840,"column":0},"generated":{"line":4842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4841,"column":0},"generated":{"line":4843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4842,"column":0},"generated":{"line":4844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4843,"column":0},"generated":{"line":4845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4844,"column":0},"generated":{"line":4846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4845,"column":0},"generated":{"line":4847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4846,"column":0},"generated":{"line":4848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4847,"column":0},"generated":{"line":4849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4848,"column":0},"generated":{"line":4850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4849,"column":0},"generated":{"line":4851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4850,"column":0},"generated":{"line":4852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4851,"column":0},"generated":{"line":4853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4852,"column":0},"generated":{"line":4854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4853,"column":0},"generated":{"line":4855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4854,"column":0},"generated":{"line":4856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4855,"column":0},"generated":{"line":4857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4856,"column":0},"generated":{"line":4858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4857,"column":0},"generated":{"line":4859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4858,"column":0},"generated":{"line":4860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4859,"column":0},"generated":{"line":4861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4860,"column":0},"generated":{"line":4862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4861,"column":0},"generated":{"line":4863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4862,"column":0},"generated":{"line":4864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4863,"column":0},"generated":{"line":4865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4864,"column":0},"generated":{"line":4866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4865,"column":0},"generated":{"line":4867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4866,"column":0},"generated":{"line":4868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4867,"column":0},"generated":{"line":4869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4868,"column":0},"generated":{"line":4870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4869,"column":0},"generated":{"line":4871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4870,"column":0},"generated":{"line":4872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4871,"column":0},"generated":{"line":4873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4872,"column":0},"generated":{"line":4874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4873,"column":0},"generated":{"line":4875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4874,"column":0},"generated":{"line":4876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4875,"column":0},"generated":{"line":4877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4876,"column":0},"generated":{"line":4878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4877,"column":0},"generated":{"line":4879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4878,"column":0},"generated":{"line":4880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4879,"column":0},"generated":{"line":4881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4880,"column":0},"generated":{"line":4882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4881,"column":0},"generated":{"line":4883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4882,"column":0},"generated":{"line":4884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4883,"column":0},"generated":{"line":4885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4884,"column":0},"generated":{"line":4886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4885,"column":0},"generated":{"line":4887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4886,"column":0},"generated":{"line":4888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4887,"column":0},"generated":{"line":4889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4888,"column":0},"generated":{"line":4890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4889,"column":0},"generated":{"line":4891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4890,"column":0},"generated":{"line":4892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4891,"column":0},"generated":{"line":4893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4892,"column":0},"generated":{"line":4894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4893,"column":0},"generated":{"line":4895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4894,"column":0},"generated":{"line":4896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4895,"column":0},"generated":{"line":4897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4896,"column":0},"generated":{"line":4898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4897,"column":0},"generated":{"line":4899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4898,"column":0},"generated":{"line":4900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4899,"column":0},"generated":{"line":4901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4900,"column":0},"generated":{"line":4902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4901,"column":0},"generated":{"line":4903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4902,"column":0},"generated":{"line":4904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4903,"column":0},"generated":{"line":4905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4904,"column":0},"generated":{"line":4906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4905,"column":0},"generated":{"line":4907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4906,"column":0},"generated":{"line":4908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4907,"column":0},"generated":{"line":4909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4908,"column":0},"generated":{"line":4910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4909,"column":0},"generated":{"line":4911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4910,"column":0},"generated":{"line":4912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4911,"column":0},"generated":{"line":4913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4912,"column":0},"generated":{"line":4914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4913,"column":0},"generated":{"line":4915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4914,"column":0},"generated":{"line":4916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4915,"column":0},"generated":{"line":4917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4916,"column":0},"generated":{"line":4918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4917,"column":0},"generated":{"line":4919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4918,"column":0},"generated":{"line":4920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4919,"column":0},"generated":{"line":4921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4920,"column":0},"generated":{"line":4922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4921,"column":0},"generated":{"line":4923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4922,"column":0},"generated":{"line":4924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4923,"column":0},"generated":{"line":4925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4924,"column":0},"generated":{"line":4926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4925,"column":0},"generated":{"line":4927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4926,"column":0},"generated":{"line":4928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4927,"column":0},"generated":{"line":4929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4928,"column":0},"generated":{"line":4930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4929,"column":0},"generated":{"line":4931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4930,"column":0},"generated":{"line":4932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4931,"column":0},"generated":{"line":4933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4932,"column":0},"generated":{"line":4934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4933,"column":0},"generated":{"line":4935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4934,"column":0},"generated":{"line":4936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4935,"column":0},"generated":{"line":4937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4936,"column":0},"generated":{"line":4938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4937,"column":0},"generated":{"line":4939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4938,"column":0},"generated":{"line":4940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4939,"column":0},"generated":{"line":4941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4940,"column":0},"generated":{"line":4942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4941,"column":0},"generated":{"line":4943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4942,"column":0},"generated":{"line":4944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4943,"column":0},"generated":{"line":4945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4944,"column":0},"generated":{"line":4946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4945,"column":0},"generated":{"line":4947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4946,"column":0},"generated":{"line":4948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4947,"column":0},"generated":{"line":4949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4948,"column":0},"generated":{"line":4950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4949,"column":0},"generated":{"line":4951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4950,"column":0},"generated":{"line":4952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4951,"column":0},"generated":{"line":4953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4952,"column":0},"generated":{"line":4954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4953,"column":0},"generated":{"line":4955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4954,"column":0},"generated":{"line":4956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4955,"column":0},"generated":{"line":4957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4956,"column":0},"generated":{"line":4958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4957,"column":0},"generated":{"line":4959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4958,"column":0},"generated":{"line":4960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4959,"column":0},"generated":{"line":4961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4960,"column":0},"generated":{"line":4962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4961,"column":0},"generated":{"line":4963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4962,"column":0},"generated":{"line":4964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4963,"column":0},"generated":{"line":4965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4964,"column":0},"generated":{"line":4966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4965,"column":0},"generated":{"line":4967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4966,"column":0},"generated":{"line":4968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4967,"column":0},"generated":{"line":4969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4968,"column":0},"generated":{"line":4970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4969,"column":0},"generated":{"line":4971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4970,"column":0},"generated":{"line":4972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4971,"column":0},"generated":{"line":4973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4972,"column":0},"generated":{"line":4974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4973,"column":0},"generated":{"line":4975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4974,"column":0},"generated":{"line":4976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4975,"column":0},"generated":{"line":4977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4976,"column":0},"generated":{"line":4978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4977,"column":0},"generated":{"line":4979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4978,"column":0},"generated":{"line":4980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4979,"column":0},"generated":{"line":4981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4980,"column":0},"generated":{"line":4982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4981,"column":0},"generated":{"line":4983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4982,"column":0},"generated":{"line":4984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4983,"column":0},"generated":{"line":4985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4984,"column":0},"generated":{"line":4986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4985,"column":0},"generated":{"line":4987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4986,"column":0},"generated":{"line":4988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4987,"column":0},"generated":{"line":4989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4988,"column":0},"generated":{"line":4990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4989,"column":0},"generated":{"line":4991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4990,"column":0},"generated":{"line":4992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4991,"column":0},"generated":{"line":4993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4992,"column":0},"generated":{"line":4994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4993,"column":0},"generated":{"line":4995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4994,"column":0},"generated":{"line":4996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4995,"column":0},"generated":{"line":4997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4996,"column":0},"generated":{"line":4998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4997,"column":0},"generated":{"line":4999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4998,"column":0},"generated":{"line":5000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":4999,"column":0},"generated":{"line":5001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5000,"column":0},"generated":{"line":5002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5001,"column":0},"generated":{"line":5003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5002,"column":0},"generated":{"line":5004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5003,"column":0},"generated":{"line":5005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5004,"column":0},"generated":{"line":5006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5005,"column":0},"generated":{"line":5007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5006,"column":0},"generated":{"line":5008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5007,"column":0},"generated":{"line":5009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5008,"column":0},"generated":{"line":5010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5009,"column":0},"generated":{"line":5011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5010,"column":0},"generated":{"line":5012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5011,"column":0},"generated":{"line":5013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5012,"column":0},"generated":{"line":5014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5013,"column":0},"generated":{"line":5015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5014,"column":0},"generated":{"line":5016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5015,"column":0},"generated":{"line":5017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5016,"column":0},"generated":{"line":5018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5017,"column":0},"generated":{"line":5019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5018,"column":0},"generated":{"line":5020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5019,"column":0},"generated":{"line":5021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5020,"column":0},"generated":{"line":5022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5021,"column":0},"generated":{"line":5023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5022,"column":0},"generated":{"line":5024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5023,"column":0},"generated":{"line":5025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5024,"column":0},"generated":{"line":5026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5025,"column":0},"generated":{"line":5027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5026,"column":0},"generated":{"line":5028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5027,"column":0},"generated":{"line":5029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5028,"column":0},"generated":{"line":5030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5029,"column":0},"generated":{"line":5031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5030,"column":0},"generated":{"line":5032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5031,"column":0},"generated":{"line":5033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5032,"column":0},"generated":{"line":5034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5033,"column":0},"generated":{"line":5035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5034,"column":0},"generated":{"line":5036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5035,"column":0},"generated":{"line":5037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5036,"column":0},"generated":{"line":5038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5037,"column":0},"generated":{"line":5039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5038,"column":0},"generated":{"line":5040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5039,"column":0},"generated":{"line":5041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5040,"column":0},"generated":{"line":5042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5041,"column":0},"generated":{"line":5043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5042,"column":0},"generated":{"line":5044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5043,"column":0},"generated":{"line":5045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5044,"column":0},"generated":{"line":5046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5045,"column":0},"generated":{"line":5047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5046,"column":0},"generated":{"line":5048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5047,"column":0},"generated":{"line":5049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5048,"column":0},"generated":{"line":5050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5049,"column":0},"generated":{"line":5051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5050,"column":0},"generated":{"line":5052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5051,"column":0},"generated":{"line":5053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5052,"column":0},"generated":{"line":5054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5053,"column":0},"generated":{"line":5055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5054,"column":0},"generated":{"line":5056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5055,"column":0},"generated":{"line":5057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5056,"column":0},"generated":{"line":5058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5057,"column":0},"generated":{"line":5059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5058,"column":0},"generated":{"line":5060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5059,"column":0},"generated":{"line":5061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5060,"column":0},"generated":{"line":5062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5061,"column":0},"generated":{"line":5063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5062,"column":0},"generated":{"line":5064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5063,"column":0},"generated":{"line":5065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5064,"column":0},"generated":{"line":5066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5065,"column":0},"generated":{"line":5067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5066,"column":0},"generated":{"line":5068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5067,"column":0},"generated":{"line":5069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5068,"column":0},"generated":{"line":5070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5069,"column":0},"generated":{"line":5071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5070,"column":0},"generated":{"line":5072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5071,"column":0},"generated":{"line":5073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5072,"column":0},"generated":{"line":5074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5073,"column":0},"generated":{"line":5075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5074,"column":0},"generated":{"line":5076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5075,"column":0},"generated":{"line":5077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5076,"column":0},"generated":{"line":5078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5077,"column":0},"generated":{"line":5079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5078,"column":0},"generated":{"line":5080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5079,"column":0},"generated":{"line":5081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5080,"column":0},"generated":{"line":5082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5081,"column":0},"generated":{"line":5083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5082,"column":0},"generated":{"line":5084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5083,"column":0},"generated":{"line":5085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5084,"column":0},"generated":{"line":5086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5085,"column":0},"generated":{"line":5087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5086,"column":0},"generated":{"line":5088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5087,"column":0},"generated":{"line":5089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5088,"column":0},"generated":{"line":5090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5089,"column":0},"generated":{"line":5091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5090,"column":0},"generated":{"line":5092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5091,"column":0},"generated":{"line":5093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5092,"column":0},"generated":{"line":5094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5093,"column":0},"generated":{"line":5095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5094,"column":0},"generated":{"line":5096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5095,"column":0},"generated":{"line":5097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5096,"column":0},"generated":{"line":5098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5097,"column":0},"generated":{"line":5099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5098,"column":0},"generated":{"line":5100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5099,"column":0},"generated":{"line":5101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5100,"column":0},"generated":{"line":5102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5101,"column":0},"generated":{"line":5103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5102,"column":0},"generated":{"line":5104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5103,"column":0},"generated":{"line":5105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5104,"column":0},"generated":{"line":5106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5105,"column":0},"generated":{"line":5107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5106,"column":0},"generated":{"line":5108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5107,"column":0},"generated":{"line":5109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5108,"column":0},"generated":{"line":5110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5109,"column":0},"generated":{"line":5111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5110,"column":0},"generated":{"line":5112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5111,"column":0},"generated":{"line":5113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5112,"column":0},"generated":{"line":5114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5113,"column":0},"generated":{"line":5115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5114,"column":0},"generated":{"line":5116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5115,"column":0},"generated":{"line":5117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5116,"column":0},"generated":{"line":5118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5117,"column":0},"generated":{"line":5119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5118,"column":0},"generated":{"line":5120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5119,"column":0},"generated":{"line":5121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5120,"column":0},"generated":{"line":5122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5121,"column":0},"generated":{"line":5123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5122,"column":0},"generated":{"line":5124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5123,"column":0},"generated":{"line":5125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5124,"column":0},"generated":{"line":5126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5125,"column":0},"generated":{"line":5127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5126,"column":0},"generated":{"line":5128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5127,"column":0},"generated":{"line":5129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5128,"column":0},"generated":{"line":5130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5129,"column":0},"generated":{"line":5131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5130,"column":0},"generated":{"line":5132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5131,"column":0},"generated":{"line":5133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5132,"column":0},"generated":{"line":5134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5133,"column":0},"generated":{"line":5135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5134,"column":0},"generated":{"line":5136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5135,"column":0},"generated":{"line":5137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5136,"column":0},"generated":{"line":5138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5137,"column":0},"generated":{"line":5139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5138,"column":0},"generated":{"line":5140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5139,"column":0},"generated":{"line":5141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5140,"column":0},"generated":{"line":5142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5141,"column":0},"generated":{"line":5143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5142,"column":0},"generated":{"line":5144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5143,"column":0},"generated":{"line":5145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5144,"column":0},"generated":{"line":5146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5145,"column":0},"generated":{"line":5147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5146,"column":0},"generated":{"line":5148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5147,"column":0},"generated":{"line":5149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5148,"column":0},"generated":{"line":5150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5149,"column":0},"generated":{"line":5151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5150,"column":0},"generated":{"line":5152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5151,"column":0},"generated":{"line":5153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5152,"column":0},"generated":{"line":5154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5153,"column":0},"generated":{"line":5155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5154,"column":0},"generated":{"line":5156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5155,"column":0},"generated":{"line":5157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5156,"column":0},"generated":{"line":5158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5157,"column":0},"generated":{"line":5159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5158,"column":0},"generated":{"line":5160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5159,"column":0},"generated":{"line":5161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5160,"column":0},"generated":{"line":5162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5161,"column":0},"generated":{"line":5163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5162,"column":0},"generated":{"line":5164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5163,"column":0},"generated":{"line":5165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5164,"column":0},"generated":{"line":5166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5165,"column":0},"generated":{"line":5167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5166,"column":0},"generated":{"line":5168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5167,"column":0},"generated":{"line":5169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5168,"column":0},"generated":{"line":5170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5169,"column":0},"generated":{"line":5171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5170,"column":0},"generated":{"line":5172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5171,"column":0},"generated":{"line":5173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5172,"column":0},"generated":{"line":5174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5173,"column":0},"generated":{"line":5175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5174,"column":0},"generated":{"line":5176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5175,"column":0},"generated":{"line":5177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5176,"column":0},"generated":{"line":5178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5177,"column":0},"generated":{"line":5179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5178,"column":0},"generated":{"line":5180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5179,"column":0},"generated":{"line":5181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5180,"column":0},"generated":{"line":5182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5181,"column":0},"generated":{"line":5183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5182,"column":0},"generated":{"line":5184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5183,"column":0},"generated":{"line":5185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5184,"column":0},"generated":{"line":5186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5185,"column":0},"generated":{"line":5187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5186,"column":0},"generated":{"line":5188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5187,"column":0},"generated":{"line":5189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5188,"column":0},"generated":{"line":5190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5189,"column":0},"generated":{"line":5191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5190,"column":0},"generated":{"line":5192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5191,"column":0},"generated":{"line":5193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5192,"column":0},"generated":{"line":5194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5193,"column":0},"generated":{"line":5195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5194,"column":0},"generated":{"line":5196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5195,"column":0},"generated":{"line":5197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5196,"column":0},"generated":{"line":5198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5197,"column":0},"generated":{"line":5199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5198,"column":0},"generated":{"line":5200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5199,"column":0},"generated":{"line":5201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5200,"column":0},"generated":{"line":5202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5201,"column":0},"generated":{"line":5203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5202,"column":0},"generated":{"line":5204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5203,"column":0},"generated":{"line":5205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5204,"column":0},"generated":{"line":5206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5205,"column":0},"generated":{"line":5207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5206,"column":0},"generated":{"line":5208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5207,"column":0},"generated":{"line":5209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5208,"column":0},"generated":{"line":5210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5209,"column":0},"generated":{"line":5211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5210,"column":0},"generated":{"line":5212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5211,"column":0},"generated":{"line":5213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5212,"column":0},"generated":{"line":5214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5213,"column":0},"generated":{"line":5215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5214,"column":0},"generated":{"line":5216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5215,"column":0},"generated":{"line":5217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5216,"column":0},"generated":{"line":5218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5217,"column":0},"generated":{"line":5219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5218,"column":0},"generated":{"line":5220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5219,"column":0},"generated":{"line":5221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5220,"column":0},"generated":{"line":5222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5221,"column":0},"generated":{"line":5223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5222,"column":0},"generated":{"line":5224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5223,"column":0},"generated":{"line":5225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5224,"column":0},"generated":{"line":5226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5225,"column":0},"generated":{"line":5227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5226,"column":0},"generated":{"line":5228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5227,"column":0},"generated":{"line":5229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5228,"column":0},"generated":{"line":5230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5229,"column":0},"generated":{"line":5231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5230,"column":0},"generated":{"line":5232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5231,"column":0},"generated":{"line":5233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5232,"column":0},"generated":{"line":5234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5233,"column":0},"generated":{"line":5235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5234,"column":0},"generated":{"line":5236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5235,"column":0},"generated":{"line":5237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5236,"column":0},"generated":{"line":5238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5237,"column":0},"generated":{"line":5239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5238,"column":0},"generated":{"line":5240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5239,"column":0},"generated":{"line":5241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5240,"column":0},"generated":{"line":5242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5241,"column":0},"generated":{"line":5243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5242,"column":0},"generated":{"line":5244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5243,"column":0},"generated":{"line":5245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5244,"column":0},"generated":{"line":5246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5245,"column":0},"generated":{"line":5247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5246,"column":0},"generated":{"line":5248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5247,"column":0},"generated":{"line":5249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5248,"column":0},"generated":{"line":5250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5249,"column":0},"generated":{"line":5251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5250,"column":0},"generated":{"line":5252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5251,"column":0},"generated":{"line":5253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5252,"column":0},"generated":{"line":5254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5253,"column":0},"generated":{"line":5255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5254,"column":0},"generated":{"line":5256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5255,"column":0},"generated":{"line":5257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5256,"column":0},"generated":{"line":5258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5257,"column":0},"generated":{"line":5259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5258,"column":0},"generated":{"line":5260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5259,"column":0},"generated":{"line":5261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5260,"column":0},"generated":{"line":5262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5261,"column":0},"generated":{"line":5263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5262,"column":0},"generated":{"line":5264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5263,"column":0},"generated":{"line":5265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5264,"column":0},"generated":{"line":5266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5265,"column":0},"generated":{"line":5267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5266,"column":0},"generated":{"line":5268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5267,"column":0},"generated":{"line":5269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5268,"column":0},"generated":{"line":5270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5269,"column":0},"generated":{"line":5271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5270,"column":0},"generated":{"line":5272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5271,"column":0},"generated":{"line":5273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5272,"column":0},"generated":{"line":5274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5273,"column":0},"generated":{"line":5275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5274,"column":0},"generated":{"line":5276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5275,"column":0},"generated":{"line":5277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5276,"column":0},"generated":{"line":5278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5277,"column":0},"generated":{"line":5279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5278,"column":0},"generated":{"line":5280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5279,"column":0},"generated":{"line":5281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5280,"column":0},"generated":{"line":5282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5281,"column":0},"generated":{"line":5283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5282,"column":0},"generated":{"line":5284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5283,"column":0},"generated":{"line":5285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5284,"column":0},"generated":{"line":5286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5285,"column":0},"generated":{"line":5287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5286,"column":0},"generated":{"line":5288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5287,"column":0},"generated":{"line":5289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5288,"column":0},"generated":{"line":5290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5289,"column":0},"generated":{"line":5291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5290,"column":0},"generated":{"line":5292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5291,"column":0},"generated":{"line":5293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5292,"column":0},"generated":{"line":5294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5293,"column":0},"generated":{"line":5295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5294,"column":0},"generated":{"line":5296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5295,"column":0},"generated":{"line":5297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5296,"column":0},"generated":{"line":5298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5297,"column":0},"generated":{"line":5299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5298,"column":0},"generated":{"line":5300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5299,"column":0},"generated":{"line":5301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5300,"column":0},"generated":{"line":5302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5301,"column":0},"generated":{"line":5303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5302,"column":0},"generated":{"line":5304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5303,"column":0},"generated":{"line":5305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5304,"column":0},"generated":{"line":5306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5305,"column":0},"generated":{"line":5307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5306,"column":0},"generated":{"line":5308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5307,"column":0},"generated":{"line":5309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5308,"column":0},"generated":{"line":5310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5309,"column":0},"generated":{"line":5311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5310,"column":0},"generated":{"line":5312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5311,"column":0},"generated":{"line":5313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5312,"column":0},"generated":{"line":5314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5313,"column":0},"generated":{"line":5315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5314,"column":0},"generated":{"line":5316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5315,"column":0},"generated":{"line":5317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5316,"column":0},"generated":{"line":5318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5317,"column":0},"generated":{"line":5319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5318,"column":0},"generated":{"line":5320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5319,"column":0},"generated":{"line":5321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5320,"column":0},"generated":{"line":5322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5321,"column":0},"generated":{"line":5323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5322,"column":0},"generated":{"line":5324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5323,"column":0},"generated":{"line":5325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5324,"column":0},"generated":{"line":5326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5325,"column":0},"generated":{"line":5327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5326,"column":0},"generated":{"line":5328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5327,"column":0},"generated":{"line":5329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5328,"column":0},"generated":{"line":5330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5329,"column":0},"generated":{"line":5331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5330,"column":0},"generated":{"line":5332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5331,"column":0},"generated":{"line":5333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5332,"column":0},"generated":{"line":5334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5333,"column":0},"generated":{"line":5335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5334,"column":0},"generated":{"line":5336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5335,"column":0},"generated":{"line":5337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5336,"column":0},"generated":{"line":5338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5337,"column":0},"generated":{"line":5339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5338,"column":0},"generated":{"line":5340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5339,"column":0},"generated":{"line":5341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5340,"column":0},"generated":{"line":5342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5341,"column":0},"generated":{"line":5343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5342,"column":0},"generated":{"line":5344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5343,"column":0},"generated":{"line":5345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5344,"column":0},"generated":{"line":5346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5345,"column":0},"generated":{"line":5347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5346,"column":0},"generated":{"line":5348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5347,"column":0},"generated":{"line":5349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5348,"column":0},"generated":{"line":5350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5349,"column":0},"generated":{"line":5351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5350,"column":0},"generated":{"line":5352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5351,"column":0},"generated":{"line":5353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5352,"column":0},"generated":{"line":5354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5353,"column":0},"generated":{"line":5355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5354,"column":0},"generated":{"line":5356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5355,"column":0},"generated":{"line":5357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5356,"column":0},"generated":{"line":5358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5357,"column":0},"generated":{"line":5359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5358,"column":0},"generated":{"line":5360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5359,"column":0},"generated":{"line":5361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5360,"column":0},"generated":{"line":5362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5361,"column":0},"generated":{"line":5363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5362,"column":0},"generated":{"line":5364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5363,"column":0},"generated":{"line":5365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5364,"column":0},"generated":{"line":5366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5365,"column":0},"generated":{"line":5367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5366,"column":0},"generated":{"line":5368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5367,"column":0},"generated":{"line":5369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5368,"column":0},"generated":{"line":5370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5369,"column":0},"generated":{"line":5371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5370,"column":0},"generated":{"line":5372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5371,"column":0},"generated":{"line":5373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5372,"column":0},"generated":{"line":5374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5373,"column":0},"generated":{"line":5375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5374,"column":0},"generated":{"line":5376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5375,"column":0},"generated":{"line":5377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5376,"column":0},"generated":{"line":5378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5377,"column":0},"generated":{"line":5379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5378,"column":0},"generated":{"line":5380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5379,"column":0},"generated":{"line":5381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5380,"column":0},"generated":{"line":5382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5381,"column":0},"generated":{"line":5383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5382,"column":0},"generated":{"line":5384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5383,"column":0},"generated":{"line":5385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5384,"column":0},"generated":{"line":5386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5385,"column":0},"generated":{"line":5387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5386,"column":0},"generated":{"line":5388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5387,"column":0},"generated":{"line":5389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5388,"column":0},"generated":{"line":5390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5389,"column":0},"generated":{"line":5391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5390,"column":0},"generated":{"line":5392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5391,"column":0},"generated":{"line":5393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5392,"column":0},"generated":{"line":5394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5393,"column":0},"generated":{"line":5395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5394,"column":0},"generated":{"line":5396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5395,"column":0},"generated":{"line":5397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5396,"column":0},"generated":{"line":5398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5397,"column":0},"generated":{"line":5399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5398,"column":0},"generated":{"line":5400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5399,"column":0},"generated":{"line":5401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5400,"column":0},"generated":{"line":5402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5401,"column":0},"generated":{"line":5403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5402,"column":0},"generated":{"line":5404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5403,"column":0},"generated":{"line":5405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5404,"column":0},"generated":{"line":5406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5405,"column":0},"generated":{"line":5407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5406,"column":0},"generated":{"line":5408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5407,"column":0},"generated":{"line":5409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5408,"column":0},"generated":{"line":5410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5409,"column":0},"generated":{"line":5411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5410,"column":0},"generated":{"line":5412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5411,"column":0},"generated":{"line":5413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5412,"column":0},"generated":{"line":5414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5413,"column":0},"generated":{"line":5415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5414,"column":0},"generated":{"line":5416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5415,"column":0},"generated":{"line":5417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5416,"column":0},"generated":{"line":5418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5417,"column":0},"generated":{"line":5419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5418,"column":0},"generated":{"line":5420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5419,"column":0},"generated":{"line":5421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5420,"column":0},"generated":{"line":5422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5421,"column":0},"generated":{"line":5423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5422,"column":0},"generated":{"line":5424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5423,"column":0},"generated":{"line":5425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5424,"column":0},"generated":{"line":5426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5425,"column":0},"generated":{"line":5427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5426,"column":0},"generated":{"line":5428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5427,"column":0},"generated":{"line":5429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5428,"column":0},"generated":{"line":5430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5429,"column":0},"generated":{"line":5431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5430,"column":0},"generated":{"line":5432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5431,"column":0},"generated":{"line":5433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5432,"column":0},"generated":{"line":5434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5433,"column":0},"generated":{"line":5435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5434,"column":0},"generated":{"line":5436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5435,"column":0},"generated":{"line":5437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5436,"column":0},"generated":{"line":5438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5437,"column":0},"generated":{"line":5439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5438,"column":0},"generated":{"line":5440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5439,"column":0},"generated":{"line":5441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5440,"column":0},"generated":{"line":5442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5441,"column":0},"generated":{"line":5443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5442,"column":0},"generated":{"line":5444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5443,"column":0},"generated":{"line":5445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5444,"column":0},"generated":{"line":5446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5445,"column":0},"generated":{"line":5447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5446,"column":0},"generated":{"line":5448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5447,"column":0},"generated":{"line":5449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5448,"column":0},"generated":{"line":5450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5449,"column":0},"generated":{"line":5451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5450,"column":0},"generated":{"line":5452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5451,"column":0},"generated":{"line":5453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5452,"column":0},"generated":{"line":5454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5453,"column":0},"generated":{"line":5455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5454,"column":0},"generated":{"line":5456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5455,"column":0},"generated":{"line":5457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5456,"column":0},"generated":{"line":5458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5457,"column":0},"generated":{"line":5459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5458,"column":0},"generated":{"line":5460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5459,"column":0},"generated":{"line":5461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5460,"column":0},"generated":{"line":5462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5461,"column":0},"generated":{"line":5463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5462,"column":0},"generated":{"line":5464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5463,"column":0},"generated":{"line":5465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5464,"column":0},"generated":{"line":5466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5465,"column":0},"generated":{"line":5467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5466,"column":0},"generated":{"line":5468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5467,"column":0},"generated":{"line":5469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5468,"column":0},"generated":{"line":5470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5469,"column":0},"generated":{"line":5471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5470,"column":0},"generated":{"line":5472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5471,"column":0},"generated":{"line":5473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5472,"column":0},"generated":{"line":5474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5473,"column":0},"generated":{"line":5475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5474,"column":0},"generated":{"line":5476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5475,"column":0},"generated":{"line":5477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5476,"column":0},"generated":{"line":5478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5477,"column":0},"generated":{"line":5479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5478,"column":0},"generated":{"line":5480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5479,"column":0},"generated":{"line":5481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5480,"column":0},"generated":{"line":5482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5481,"column":0},"generated":{"line":5483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5482,"column":0},"generated":{"line":5484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5483,"column":0},"generated":{"line":5485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5484,"column":0},"generated":{"line":5486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5485,"column":0},"generated":{"line":5487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5486,"column":0},"generated":{"line":5488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5487,"column":0},"generated":{"line":5489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5488,"column":0},"generated":{"line":5490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5489,"column":0},"generated":{"line":5491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5490,"column":0},"generated":{"line":5492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5491,"column":0},"generated":{"line":5493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5492,"column":0},"generated":{"line":5494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5493,"column":0},"generated":{"line":5495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5494,"column":0},"generated":{"line":5496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5495,"column":0},"generated":{"line":5497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5496,"column":0},"generated":{"line":5498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5497,"column":0},"generated":{"line":5499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5498,"column":0},"generated":{"line":5500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5499,"column":0},"generated":{"line":5501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5500,"column":0},"generated":{"line":5502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5501,"column":0},"generated":{"line":5503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5502,"column":0},"generated":{"line":5504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5503,"column":0},"generated":{"line":5505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5504,"column":0},"generated":{"line":5506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5505,"column":0},"generated":{"line":5507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5506,"column":0},"generated":{"line":5508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5507,"column":0},"generated":{"line":5509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5508,"column":0},"generated":{"line":5510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5509,"column":0},"generated":{"line":5511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5510,"column":0},"generated":{"line":5512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5511,"column":0},"generated":{"line":5513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5512,"column":0},"generated":{"line":5514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5513,"column":0},"generated":{"line":5515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5514,"column":0},"generated":{"line":5516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5515,"column":0},"generated":{"line":5517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5516,"column":0},"generated":{"line":5518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5517,"column":0},"generated":{"line":5519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5518,"column":0},"generated":{"line":5520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5519,"column":0},"generated":{"line":5521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5520,"column":0},"generated":{"line":5522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5521,"column":0},"generated":{"line":5523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5522,"column":0},"generated":{"line":5524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5523,"column":0},"generated":{"line":5525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5524,"column":0},"generated":{"line":5526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5525,"column":0},"generated":{"line":5527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5526,"column":0},"generated":{"line":5528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5527,"column":0},"generated":{"line":5529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5528,"column":0},"generated":{"line":5530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5529,"column":0},"generated":{"line":5531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5530,"column":0},"generated":{"line":5532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5531,"column":0},"generated":{"line":5533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5532,"column":0},"generated":{"line":5534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5533,"column":0},"generated":{"line":5535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5534,"column":0},"generated":{"line":5536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5535,"column":0},"generated":{"line":5537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5536,"column":0},"generated":{"line":5538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5537,"column":0},"generated":{"line":5539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5538,"column":0},"generated":{"line":5540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5539,"column":0},"generated":{"line":5541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5540,"column":0},"generated":{"line":5542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5541,"column":0},"generated":{"line":5543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5542,"column":0},"generated":{"line":5544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5543,"column":0},"generated":{"line":5545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5544,"column":0},"generated":{"line":5546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5545,"column":0},"generated":{"line":5547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5546,"column":0},"generated":{"line":5548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5547,"column":0},"generated":{"line":5549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5548,"column":0},"generated":{"line":5550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5549,"column":0},"generated":{"line":5551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5550,"column":0},"generated":{"line":5552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5551,"column":0},"generated":{"line":5553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5552,"column":0},"generated":{"line":5554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5553,"column":0},"generated":{"line":5555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5554,"column":0},"generated":{"line":5556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5555,"column":0},"generated":{"line":5557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5556,"column":0},"generated":{"line":5558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5557,"column":0},"generated":{"line":5559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5558,"column":0},"generated":{"line":5560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5559,"column":0},"generated":{"line":5561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5560,"column":0},"generated":{"line":5562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5561,"column":0},"generated":{"line":5563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5562,"column":0},"generated":{"line":5564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5563,"column":0},"generated":{"line":5565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5564,"column":0},"generated":{"line":5566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5565,"column":0},"generated":{"line":5567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5566,"column":0},"generated":{"line":5568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5567,"column":0},"generated":{"line":5569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5568,"column":0},"generated":{"line":5570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5569,"column":0},"generated":{"line":5571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5570,"column":0},"generated":{"line":5572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5571,"column":0},"generated":{"line":5573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5572,"column":0},"generated":{"line":5574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5573,"column":0},"generated":{"line":5575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5574,"column":0},"generated":{"line":5576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5575,"column":0},"generated":{"line":5577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5576,"column":0},"generated":{"line":5578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5577,"column":0},"generated":{"line":5579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5578,"column":0},"generated":{"line":5580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5579,"column":0},"generated":{"line":5581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5580,"column":0},"generated":{"line":5582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5581,"column":0},"generated":{"line":5583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5582,"column":0},"generated":{"line":5584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5583,"column":0},"generated":{"line":5585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5584,"column":0},"generated":{"line":5586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5585,"column":0},"generated":{"line":5587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5586,"column":0},"generated":{"line":5588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5587,"column":0},"generated":{"line":5589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5588,"column":0},"generated":{"line":5590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5589,"column":0},"generated":{"line":5591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5590,"column":0},"generated":{"line":5592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5591,"column":0},"generated":{"line":5593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5592,"column":0},"generated":{"line":5594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5593,"column":0},"generated":{"line":5595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5594,"column":0},"generated":{"line":5596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5595,"column":0},"generated":{"line":5597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5596,"column":0},"generated":{"line":5598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5597,"column":0},"generated":{"line":5599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5598,"column":0},"generated":{"line":5600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5599,"column":0},"generated":{"line":5601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5600,"column":0},"generated":{"line":5602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5601,"column":0},"generated":{"line":5603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5602,"column":0},"generated":{"line":5604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5603,"column":0},"generated":{"line":5605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5604,"column":0},"generated":{"line":5606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5605,"column":0},"generated":{"line":5607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5606,"column":0},"generated":{"line":5608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5607,"column":0},"generated":{"line":5609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5608,"column":0},"generated":{"line":5610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5609,"column":0},"generated":{"line":5611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5610,"column":0},"generated":{"line":5612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5611,"column":0},"generated":{"line":5613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5612,"column":0},"generated":{"line":5614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5613,"column":0},"generated":{"line":5615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5614,"column":0},"generated":{"line":5616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5615,"column":0},"generated":{"line":5617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5616,"column":0},"generated":{"line":5618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5617,"column":0},"generated":{"line":5619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5618,"column":0},"generated":{"line":5620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5619,"column":0},"generated":{"line":5621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5620,"column":0},"generated":{"line":5622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5621,"column":0},"generated":{"line":5623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5622,"column":0},"generated":{"line":5624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5623,"column":0},"generated":{"line":5625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5624,"column":0},"generated":{"line":5626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5625,"column":0},"generated":{"line":5627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5626,"column":0},"generated":{"line":5628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5627,"column":0},"generated":{"line":5629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5628,"column":0},"generated":{"line":5630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5629,"column":0},"generated":{"line":5631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5630,"column":0},"generated":{"line":5632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5631,"column":0},"generated":{"line":5633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5632,"column":0},"generated":{"line":5634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5633,"column":0},"generated":{"line":5635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5634,"column":0},"generated":{"line":5636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5635,"column":0},"generated":{"line":5637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5636,"column":0},"generated":{"line":5638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5637,"column":0},"generated":{"line":5639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5638,"column":0},"generated":{"line":5640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5639,"column":0},"generated":{"line":5641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5640,"column":0},"generated":{"line":5642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5641,"column":0},"generated":{"line":5643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5642,"column":0},"generated":{"line":5644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5643,"column":0},"generated":{"line":5645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5644,"column":0},"generated":{"line":5646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5645,"column":0},"generated":{"line":5647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5646,"column":0},"generated":{"line":5648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5647,"column":0},"generated":{"line":5649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5648,"column":0},"generated":{"line":5650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5649,"column":0},"generated":{"line":5651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5650,"column":0},"generated":{"line":5652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5651,"column":0},"generated":{"line":5653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5652,"column":0},"generated":{"line":5654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5653,"column":0},"generated":{"line":5655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5654,"column":0},"generated":{"line":5656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5655,"column":0},"generated":{"line":5657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5656,"column":0},"generated":{"line":5658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5657,"column":0},"generated":{"line":5659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5658,"column":0},"generated":{"line":5660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5659,"column":0},"generated":{"line":5661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5660,"column":0},"generated":{"line":5662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5661,"column":0},"generated":{"line":5663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5662,"column":0},"generated":{"line":5664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5663,"column":0},"generated":{"line":5665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5664,"column":0},"generated":{"line":5666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5665,"column":0},"generated":{"line":5667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5666,"column":0},"generated":{"line":5668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5667,"column":0},"generated":{"line":5669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5668,"column":0},"generated":{"line":5670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5669,"column":0},"generated":{"line":5671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5670,"column":0},"generated":{"line":5672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5671,"column":0},"generated":{"line":5673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5672,"column":0},"generated":{"line":5674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5673,"column":0},"generated":{"line":5675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5674,"column":0},"generated":{"line":5676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5675,"column":0},"generated":{"line":5677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5676,"column":0},"generated":{"line":5678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5677,"column":0},"generated":{"line":5679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5678,"column":0},"generated":{"line":5680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5679,"column":0},"generated":{"line":5681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5680,"column":0},"generated":{"line":5682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5681,"column":0},"generated":{"line":5683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5682,"column":0},"generated":{"line":5684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5683,"column":0},"generated":{"line":5685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5684,"column":0},"generated":{"line":5686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5685,"column":0},"generated":{"line":5687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5686,"column":0},"generated":{"line":5688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5687,"column":0},"generated":{"line":5689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5688,"column":0},"generated":{"line":5690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5689,"column":0},"generated":{"line":5691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5690,"column":0},"generated":{"line":5692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5691,"column":0},"generated":{"line":5693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5692,"column":0},"generated":{"line":5694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5693,"column":0},"generated":{"line":5695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5694,"column":0},"generated":{"line":5696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5695,"column":0},"generated":{"line":5697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5696,"column":0},"generated":{"line":5698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5697,"column":0},"generated":{"line":5699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5698,"column":0},"generated":{"line":5700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5699,"column":0},"generated":{"line":5701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5700,"column":0},"generated":{"line":5702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5701,"column":0},"generated":{"line":5703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5702,"column":0},"generated":{"line":5704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5703,"column":0},"generated":{"line":5705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5704,"column":0},"generated":{"line":5706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5705,"column":0},"generated":{"line":5707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5706,"column":0},"generated":{"line":5708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5707,"column":0},"generated":{"line":5709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5708,"column":0},"generated":{"line":5710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5709,"column":0},"generated":{"line":5711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5710,"column":0},"generated":{"line":5712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5711,"column":0},"generated":{"line":5713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5712,"column":0},"generated":{"line":5714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5713,"column":0},"generated":{"line":5715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5714,"column":0},"generated":{"line":5716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5715,"column":0},"generated":{"line":5717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5716,"column":0},"generated":{"line":5718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5717,"column":0},"generated":{"line":5719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5718,"column":0},"generated":{"line":5720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5719,"column":0},"generated":{"line":5721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5720,"column":0},"generated":{"line":5722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5721,"column":0},"generated":{"line":5723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5722,"column":0},"generated":{"line":5724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5723,"column":0},"generated":{"line":5725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5724,"column":0},"generated":{"line":5726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5725,"column":0},"generated":{"line":5727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5726,"column":0},"generated":{"line":5728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5727,"column":0},"generated":{"line":5729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5728,"column":0},"generated":{"line":5730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5729,"column":0},"generated":{"line":5731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5730,"column":0},"generated":{"line":5732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5731,"column":0},"generated":{"line":5733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5732,"column":0},"generated":{"line":5734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5733,"column":0},"generated":{"line":5735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5734,"column":0},"generated":{"line":5736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5735,"column":0},"generated":{"line":5737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5736,"column":0},"generated":{"line":5738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5737,"column":0},"generated":{"line":5739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5738,"column":0},"generated":{"line":5740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5739,"column":0},"generated":{"line":5741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5740,"column":0},"generated":{"line":5742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5741,"column":0},"generated":{"line":5743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5742,"column":0},"generated":{"line":5744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5743,"column":0},"generated":{"line":5745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5744,"column":0},"generated":{"line":5746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5745,"column":0},"generated":{"line":5747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5746,"column":0},"generated":{"line":5748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5747,"column":0},"generated":{"line":5749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5748,"column":0},"generated":{"line":5750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5749,"column":0},"generated":{"line":5751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5750,"column":0},"generated":{"line":5752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5751,"column":0},"generated":{"line":5753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5752,"column":0},"generated":{"line":5754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5753,"column":0},"generated":{"line":5755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5754,"column":0},"generated":{"line":5756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5755,"column":0},"generated":{"line":5757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5756,"column":0},"generated":{"line":5758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5757,"column":0},"generated":{"line":5759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5758,"column":0},"generated":{"line":5760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5759,"column":0},"generated":{"line":5761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5760,"column":0},"generated":{"line":5762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5761,"column":0},"generated":{"line":5763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5762,"column":0},"generated":{"line":5764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5763,"column":0},"generated":{"line":5765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5764,"column":0},"generated":{"line":5766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5765,"column":0},"generated":{"line":5767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5766,"column":0},"generated":{"line":5768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5767,"column":0},"generated":{"line":5769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5768,"column":0},"generated":{"line":5770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5769,"column":0},"generated":{"line":5771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5770,"column":0},"generated":{"line":5772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5771,"column":0},"generated":{"line":5773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5772,"column":0},"generated":{"line":5774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5773,"column":0},"generated":{"line":5775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5774,"column":0},"generated":{"line":5776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5775,"column":0},"generated":{"line":5777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5776,"column":0},"generated":{"line":5778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5777,"column":0},"generated":{"line":5779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5778,"column":0},"generated":{"line":5780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5779,"column":0},"generated":{"line":5781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5780,"column":0},"generated":{"line":5782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5781,"column":0},"generated":{"line":5783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5782,"column":0},"generated":{"line":5784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5783,"column":0},"generated":{"line":5785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5784,"column":0},"generated":{"line":5786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5785,"column":0},"generated":{"line":5787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5786,"column":0},"generated":{"line":5788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5787,"column":0},"generated":{"line":5789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5788,"column":0},"generated":{"line":5790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5789,"column":0},"generated":{"line":5791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5790,"column":0},"generated":{"line":5792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5791,"column":0},"generated":{"line":5793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5792,"column":0},"generated":{"line":5794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5793,"column":0},"generated":{"line":5795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5794,"column":0},"generated":{"line":5796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5795,"column":0},"generated":{"line":5797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5796,"column":0},"generated":{"line":5798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5797,"column":0},"generated":{"line":5799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5798,"column":0},"generated":{"line":5800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5799,"column":0},"generated":{"line":5801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5800,"column":0},"generated":{"line":5802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5801,"column":0},"generated":{"line":5803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5802,"column":0},"generated":{"line":5804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5803,"column":0},"generated":{"line":5805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5804,"column":0},"generated":{"line":5806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5805,"column":0},"generated":{"line":5807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5806,"column":0},"generated":{"line":5808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5807,"column":0},"generated":{"line":5809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5808,"column":0},"generated":{"line":5810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5809,"column":0},"generated":{"line":5811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5810,"column":0},"generated":{"line":5812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5811,"column":0},"generated":{"line":5813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5812,"column":0},"generated":{"line":5814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5813,"column":0},"generated":{"line":5815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5814,"column":0},"generated":{"line":5816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5815,"column":0},"generated":{"line":5817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5816,"column":0},"generated":{"line":5818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5817,"column":0},"generated":{"line":5819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5818,"column":0},"generated":{"line":5820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5819,"column":0},"generated":{"line":5821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5820,"column":0},"generated":{"line":5822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5821,"column":0},"generated":{"line":5823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5822,"column":0},"generated":{"line":5824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5823,"column":0},"generated":{"line":5825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5824,"column":0},"generated":{"line":5826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5825,"column":0},"generated":{"line":5827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5826,"column":0},"generated":{"line":5828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5827,"column":0},"generated":{"line":5829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5828,"column":0},"generated":{"line":5830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5829,"column":0},"generated":{"line":5831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5830,"column":0},"generated":{"line":5832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5831,"column":0},"generated":{"line":5833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5832,"column":0},"generated":{"line":5834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5833,"column":0},"generated":{"line":5835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5834,"column":0},"generated":{"line":5836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5835,"column":0},"generated":{"line":5837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5836,"column":0},"generated":{"line":5838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5837,"column":0},"generated":{"line":5839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5838,"column":0},"generated":{"line":5840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5839,"column":0},"generated":{"line":5841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5840,"column":0},"generated":{"line":5842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5841,"column":0},"generated":{"line":5843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5842,"column":0},"generated":{"line":5844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5843,"column":0},"generated":{"line":5845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5844,"column":0},"generated":{"line":5846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5845,"column":0},"generated":{"line":5847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5846,"column":0},"generated":{"line":5848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5847,"column":0},"generated":{"line":5849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5848,"column":0},"generated":{"line":5850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5849,"column":0},"generated":{"line":5851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5850,"column":0},"generated":{"line":5852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5851,"column":0},"generated":{"line":5853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5852,"column":0},"generated":{"line":5854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5853,"column":0},"generated":{"line":5855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5854,"column":0},"generated":{"line":5856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5855,"column":0},"generated":{"line":5857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5856,"column":0},"generated":{"line":5858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5857,"column":0},"generated":{"line":5859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5858,"column":0},"generated":{"line":5860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5859,"column":0},"generated":{"line":5861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5860,"column":0},"generated":{"line":5862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5861,"column":0},"generated":{"line":5863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5862,"column":0},"generated":{"line":5864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5863,"column":0},"generated":{"line":5865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5864,"column":0},"generated":{"line":5866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5865,"column":0},"generated":{"line":5867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5866,"column":0},"generated":{"line":5868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5867,"column":0},"generated":{"line":5869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5868,"column":0},"generated":{"line":5870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5869,"column":0},"generated":{"line":5871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5870,"column":0},"generated":{"line":5872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5871,"column":0},"generated":{"line":5873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5872,"column":0},"generated":{"line":5874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5873,"column":0},"generated":{"line":5875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5874,"column":0},"generated":{"line":5876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5875,"column":0},"generated":{"line":5877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5876,"column":0},"generated":{"line":5878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5877,"column":0},"generated":{"line":5879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5878,"column":0},"generated":{"line":5880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5879,"column":0},"generated":{"line":5881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5880,"column":0},"generated":{"line":5882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5881,"column":0},"generated":{"line":5883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5882,"column":0},"generated":{"line":5884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5883,"column":0},"generated":{"line":5885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5884,"column":0},"generated":{"line":5886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5885,"column":0},"generated":{"line":5887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5886,"column":0},"generated":{"line":5888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5887,"column":0},"generated":{"line":5889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5888,"column":0},"generated":{"line":5890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5889,"column":0},"generated":{"line":5891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5890,"column":0},"generated":{"line":5892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5891,"column":0},"generated":{"line":5893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5892,"column":0},"generated":{"line":5894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5893,"column":0},"generated":{"line":5895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5894,"column":0},"generated":{"line":5896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5895,"column":0},"generated":{"line":5897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5896,"column":0},"generated":{"line":5898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5897,"column":0},"generated":{"line":5899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5898,"column":0},"generated":{"line":5900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5899,"column":0},"generated":{"line":5901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5900,"column":0},"generated":{"line":5902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5901,"column":0},"generated":{"line":5903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5902,"column":0},"generated":{"line":5904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5903,"column":0},"generated":{"line":5905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5904,"column":0},"generated":{"line":5906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5905,"column":0},"generated":{"line":5907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5906,"column":0},"generated":{"line":5908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5907,"column":0},"generated":{"line":5909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5908,"column":0},"generated":{"line":5910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5909,"column":0},"generated":{"line":5911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5910,"column":0},"generated":{"line":5912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5911,"column":0},"generated":{"line":5913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5912,"column":0},"generated":{"line":5914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5913,"column":0},"generated":{"line":5915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5914,"column":0},"generated":{"line":5916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5915,"column":0},"generated":{"line":5917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5916,"column":0},"generated":{"line":5918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5917,"column":0},"generated":{"line":5919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5918,"column":0},"generated":{"line":5920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5919,"column":0},"generated":{"line":5921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5920,"column":0},"generated":{"line":5922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5921,"column":0},"generated":{"line":5923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5922,"column":0},"generated":{"line":5924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5923,"column":0},"generated":{"line":5925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5924,"column":0},"generated":{"line":5926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5925,"column":0},"generated":{"line":5927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5926,"column":0},"generated":{"line":5928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5927,"column":0},"generated":{"line":5929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5928,"column":0},"generated":{"line":5930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5929,"column":0},"generated":{"line":5931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5930,"column":0},"generated":{"line":5932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5931,"column":0},"generated":{"line":5933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5932,"column":0},"generated":{"line":5934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5933,"column":0},"generated":{"line":5935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5934,"column":0},"generated":{"line":5936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5935,"column":0},"generated":{"line":5937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5936,"column":0},"generated":{"line":5938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5937,"column":0},"generated":{"line":5939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5938,"column":0},"generated":{"line":5940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5939,"column":0},"generated":{"line":5941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5940,"column":0},"generated":{"line":5942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5941,"column":0},"generated":{"line":5943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5942,"column":0},"generated":{"line":5944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5943,"column":0},"generated":{"line":5945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5944,"column":0},"generated":{"line":5946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5945,"column":0},"generated":{"line":5947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5946,"column":0},"generated":{"line":5948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5947,"column":0},"generated":{"line":5949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5948,"column":0},"generated":{"line":5950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5949,"column":0},"generated":{"line":5951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5950,"column":0},"generated":{"line":5952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5951,"column":0},"generated":{"line":5953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5952,"column":0},"generated":{"line":5954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5953,"column":0},"generated":{"line":5955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5954,"column":0},"generated":{"line":5956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5955,"column":0},"generated":{"line":5957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5956,"column":0},"generated":{"line":5958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5957,"column":0},"generated":{"line":5959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5958,"column":0},"generated":{"line":5960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5959,"column":0},"generated":{"line":5961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5960,"column":0},"generated":{"line":5962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5961,"column":0},"generated":{"line":5963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5962,"column":0},"generated":{"line":5964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5963,"column":0},"generated":{"line":5965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5964,"column":0},"generated":{"line":5966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5965,"column":0},"generated":{"line":5967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5966,"column":0},"generated":{"line":5968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5967,"column":0},"generated":{"line":5969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5968,"column":0},"generated":{"line":5970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5969,"column":0},"generated":{"line":5971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5970,"column":0},"generated":{"line":5972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5971,"column":0},"generated":{"line":5973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5972,"column":0},"generated":{"line":5974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5973,"column":0},"generated":{"line":5975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5974,"column":0},"generated":{"line":5976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5975,"column":0},"generated":{"line":5977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5976,"column":0},"generated":{"line":5978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5977,"column":0},"generated":{"line":5979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5978,"column":0},"generated":{"line":5980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5979,"column":0},"generated":{"line":5981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5980,"column":0},"generated":{"line":5982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5981,"column":0},"generated":{"line":5983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5982,"column":0},"generated":{"line":5984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5983,"column":0},"generated":{"line":5985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5984,"column":0},"generated":{"line":5986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5985,"column":0},"generated":{"line":5987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5986,"column":0},"generated":{"line":5988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5987,"column":0},"generated":{"line":5989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5988,"column":0},"generated":{"line":5990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5989,"column":0},"generated":{"line":5991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5990,"column":0},"generated":{"line":5992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5991,"column":0},"generated":{"line":5993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5992,"column":0},"generated":{"line":5994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5993,"column":0},"generated":{"line":5995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5994,"column":0},"generated":{"line":5996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5995,"column":0},"generated":{"line":5997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5996,"column":0},"generated":{"line":5998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5997,"column":0},"generated":{"line":5999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5998,"column":0},"generated":{"line":6000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":5999,"column":0},"generated":{"line":6001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6000,"column":0},"generated":{"line":6002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6001,"column":0},"generated":{"line":6003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6002,"column":0},"generated":{"line":6004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6003,"column":0},"generated":{"line":6005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6004,"column":0},"generated":{"line":6006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6005,"column":0},"generated":{"line":6007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6006,"column":0},"generated":{"line":6008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6007,"column":0},"generated":{"line":6009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6008,"column":0},"generated":{"line":6010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6009,"column":0},"generated":{"line":6011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6010,"column":0},"generated":{"line":6012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6011,"column":0},"generated":{"line":6013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6012,"column":0},"generated":{"line":6014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6013,"column":0},"generated":{"line":6015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6014,"column":0},"generated":{"line":6016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6015,"column":0},"generated":{"line":6017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6016,"column":0},"generated":{"line":6018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6017,"column":0},"generated":{"line":6019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6018,"column":0},"generated":{"line":6020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6019,"column":0},"generated":{"line":6021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6020,"column":0},"generated":{"line":6022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6021,"column":0},"generated":{"line":6023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6022,"column":0},"generated":{"line":6024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6023,"column":0},"generated":{"line":6025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6024,"column":0},"generated":{"line":6026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6025,"column":0},"generated":{"line":6027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6026,"column":0},"generated":{"line":6028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6027,"column":0},"generated":{"line":6029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6028,"column":0},"generated":{"line":6030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6029,"column":0},"generated":{"line":6031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6030,"column":0},"generated":{"line":6032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6031,"column":0},"generated":{"line":6033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6032,"column":0},"generated":{"line":6034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6033,"column":0},"generated":{"line":6035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6034,"column":0},"generated":{"line":6036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6035,"column":0},"generated":{"line":6037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6036,"column":0},"generated":{"line":6038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6037,"column":0},"generated":{"line":6039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6038,"column":0},"generated":{"line":6040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6039,"column":0},"generated":{"line":6041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6040,"column":0},"generated":{"line":6042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6041,"column":0},"generated":{"line":6043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6042,"column":0},"generated":{"line":6044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6043,"column":0},"generated":{"line":6045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6044,"column":0},"generated":{"line":6046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6045,"column":0},"generated":{"line":6047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6046,"column":0},"generated":{"line":6048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6047,"column":0},"generated":{"line":6049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6048,"column":0},"generated":{"line":6050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6049,"column":0},"generated":{"line":6051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6050,"column":0},"generated":{"line":6052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6051,"column":0},"generated":{"line":6053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6052,"column":0},"generated":{"line":6054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6053,"column":0},"generated":{"line":6055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6054,"column":0},"generated":{"line":6056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6055,"column":0},"generated":{"line":6057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6056,"column":0},"generated":{"line":6058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6057,"column":0},"generated":{"line":6059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6058,"column":0},"generated":{"line":6060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6059,"column":0},"generated":{"line":6061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6060,"column":0},"generated":{"line":6062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6061,"column":0},"generated":{"line":6063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6062,"column":0},"generated":{"line":6064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6063,"column":0},"generated":{"line":6065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6064,"column":0},"generated":{"line":6066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6065,"column":0},"generated":{"line":6067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6066,"column":0},"generated":{"line":6068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6067,"column":0},"generated":{"line":6069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6068,"column":0},"generated":{"line":6070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6069,"column":0},"generated":{"line":6071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6070,"column":0},"generated":{"line":6072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6071,"column":0},"generated":{"line":6073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6072,"column":0},"generated":{"line":6074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6073,"column":0},"generated":{"line":6075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6074,"column":0},"generated":{"line":6076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6075,"column":0},"generated":{"line":6077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6076,"column":0},"generated":{"line":6078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6077,"column":0},"generated":{"line":6079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6078,"column":0},"generated":{"line":6080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6079,"column":0},"generated":{"line":6081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6080,"column":0},"generated":{"line":6082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6081,"column":0},"generated":{"line":6083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6082,"column":0},"generated":{"line":6084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6083,"column":0},"generated":{"line":6085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6084,"column":0},"generated":{"line":6086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6085,"column":0},"generated":{"line":6087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6086,"column":0},"generated":{"line":6088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6087,"column":0},"generated":{"line":6089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6088,"column":0},"generated":{"line":6090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6089,"column":0},"generated":{"line":6091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6090,"column":0},"generated":{"line":6092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6091,"column":0},"generated":{"line":6093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6092,"column":0},"generated":{"line":6094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6093,"column":0},"generated":{"line":6095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6094,"column":0},"generated":{"line":6096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6095,"column":0},"generated":{"line":6097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6096,"column":0},"generated":{"line":6098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6097,"column":0},"generated":{"line":6099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6098,"column":0},"generated":{"line":6100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6099,"column":0},"generated":{"line":6101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6100,"column":0},"generated":{"line":6102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6101,"column":0},"generated":{"line":6103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6102,"column":0},"generated":{"line":6104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6103,"column":0},"generated":{"line":6105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6104,"column":0},"generated":{"line":6106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6105,"column":0},"generated":{"line":6107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6106,"column":0},"generated":{"line":6108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6107,"column":0},"generated":{"line":6109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6108,"column":0},"generated":{"line":6110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6109,"column":0},"generated":{"line":6111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6110,"column":0},"generated":{"line":6112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6111,"column":0},"generated":{"line":6113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6112,"column":0},"generated":{"line":6114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6113,"column":0},"generated":{"line":6115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6114,"column":0},"generated":{"line":6116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6115,"column":0},"generated":{"line":6117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6116,"column":0},"generated":{"line":6118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6117,"column":0},"generated":{"line":6119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6118,"column":0},"generated":{"line":6120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6119,"column":0},"generated":{"line":6121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6120,"column":0},"generated":{"line":6122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6121,"column":0},"generated":{"line":6123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6122,"column":0},"generated":{"line":6124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6123,"column":0},"generated":{"line":6125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6124,"column":0},"generated":{"line":6126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6125,"column":0},"generated":{"line":6127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6126,"column":0},"generated":{"line":6128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6127,"column":0},"generated":{"line":6129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6128,"column":0},"generated":{"line":6130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6129,"column":0},"generated":{"line":6131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6130,"column":0},"generated":{"line":6132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6131,"column":0},"generated":{"line":6133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6132,"column":0},"generated":{"line":6134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6133,"column":0},"generated":{"line":6135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6134,"column":0},"generated":{"line":6136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6135,"column":0},"generated":{"line":6137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6136,"column":0},"generated":{"line":6138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6137,"column":0},"generated":{"line":6139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6138,"column":0},"generated":{"line":6140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6139,"column":0},"generated":{"line":6141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6140,"column":0},"generated":{"line":6142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6141,"column":0},"generated":{"line":6143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6142,"column":0},"generated":{"line":6144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6143,"column":0},"generated":{"line":6145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6144,"column":0},"generated":{"line":6146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6145,"column":0},"generated":{"line":6147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6146,"column":0},"generated":{"line":6148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6147,"column":0},"generated":{"line":6149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6148,"column":0},"generated":{"line":6150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6149,"column":0},"generated":{"line":6151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6150,"column":0},"generated":{"line":6152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6151,"column":0},"generated":{"line":6153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6152,"column":0},"generated":{"line":6154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6153,"column":0},"generated":{"line":6155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6154,"column":0},"generated":{"line":6156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6155,"column":0},"generated":{"line":6157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6156,"column":0},"generated":{"line":6158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6157,"column":0},"generated":{"line":6159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6158,"column":0},"generated":{"line":6160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6159,"column":0},"generated":{"line":6161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6160,"column":0},"generated":{"line":6162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6161,"column":0},"generated":{"line":6163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6162,"column":0},"generated":{"line":6164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6163,"column":0},"generated":{"line":6165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6164,"column":0},"generated":{"line":6166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6165,"column":0},"generated":{"line":6167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6166,"column":0},"generated":{"line":6168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6167,"column":0},"generated":{"line":6169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6168,"column":0},"generated":{"line":6170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6169,"column":0},"generated":{"line":6171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6170,"column":0},"generated":{"line":6172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6171,"column":0},"generated":{"line":6173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6172,"column":0},"generated":{"line":6174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6173,"column":0},"generated":{"line":6175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6174,"column":0},"generated":{"line":6176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6175,"column":0},"generated":{"line":6177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6176,"column":0},"generated":{"line":6178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6177,"column":0},"generated":{"line":6179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6178,"column":0},"generated":{"line":6180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6179,"column":0},"generated":{"line":6181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6180,"column":0},"generated":{"line":6182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6181,"column":0},"generated":{"line":6183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6182,"column":0},"generated":{"line":6184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6183,"column":0},"generated":{"line":6185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6184,"column":0},"generated":{"line":6186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6185,"column":0},"generated":{"line":6187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6186,"column":0},"generated":{"line":6188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6187,"column":0},"generated":{"line":6189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6188,"column":0},"generated":{"line":6190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6189,"column":0},"generated":{"line":6191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6190,"column":0},"generated":{"line":6192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6191,"column":0},"generated":{"line":6193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6192,"column":0},"generated":{"line":6194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6193,"column":0},"generated":{"line":6195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6194,"column":0},"generated":{"line":6196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6195,"column":0},"generated":{"line":6197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6196,"column":0},"generated":{"line":6198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6197,"column":0},"generated":{"line":6199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6198,"column":0},"generated":{"line":6200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6199,"column":0},"generated":{"line":6201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6200,"column":0},"generated":{"line":6202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6201,"column":0},"generated":{"line":6203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6202,"column":0},"generated":{"line":6204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6203,"column":0},"generated":{"line":6205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6204,"column":0},"generated":{"line":6206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6205,"column":0},"generated":{"line":6207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6206,"column":0},"generated":{"line":6208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6207,"column":0},"generated":{"line":6209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6208,"column":0},"generated":{"line":6210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6209,"column":0},"generated":{"line":6211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6210,"column":0},"generated":{"line":6212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6211,"column":0},"generated":{"line":6213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6212,"column":0},"generated":{"line":6214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6213,"column":0},"generated":{"line":6215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6214,"column":0},"generated":{"line":6216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6215,"column":0},"generated":{"line":6217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6216,"column":0},"generated":{"line":6218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6217,"column":0},"generated":{"line":6219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6218,"column":0},"generated":{"line":6220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6219,"column":0},"generated":{"line":6221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6220,"column":0},"generated":{"line":6222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6221,"column":0},"generated":{"line":6223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6222,"column":0},"generated":{"line":6224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6223,"column":0},"generated":{"line":6225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6224,"column":0},"generated":{"line":6226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6225,"column":0},"generated":{"line":6227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6226,"column":0},"generated":{"line":6228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6227,"column":0},"generated":{"line":6229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6228,"column":0},"generated":{"line":6230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6229,"column":0},"generated":{"line":6231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6230,"column":0},"generated":{"line":6232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6231,"column":0},"generated":{"line":6233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6232,"column":0},"generated":{"line":6234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6233,"column":0},"generated":{"line":6235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6234,"column":0},"generated":{"line":6236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6235,"column":0},"generated":{"line":6237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6236,"column":0},"generated":{"line":6238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6237,"column":0},"generated":{"line":6239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6238,"column":0},"generated":{"line":6240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6239,"column":0},"generated":{"line":6241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6240,"column":0},"generated":{"line":6242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6241,"column":0},"generated":{"line":6243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6242,"column":0},"generated":{"line":6244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6243,"column":0},"generated":{"line":6245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6244,"column":0},"generated":{"line":6246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6245,"column":0},"generated":{"line":6247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6246,"column":0},"generated":{"line":6248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6247,"column":0},"generated":{"line":6249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6248,"column":0},"generated":{"line":6250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6249,"column":0},"generated":{"line":6251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6250,"column":0},"generated":{"line":6252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6251,"column":0},"generated":{"line":6253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6252,"column":0},"generated":{"line":6254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6253,"column":0},"generated":{"line":6255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6254,"column":0},"generated":{"line":6256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6255,"column":0},"generated":{"line":6257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6256,"column":0},"generated":{"line":6258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6257,"column":0},"generated":{"line":6259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6258,"column":0},"generated":{"line":6260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6259,"column":0},"generated":{"line":6261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6260,"column":0},"generated":{"line":6262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6261,"column":0},"generated":{"line":6263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6262,"column":0},"generated":{"line":6264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6263,"column":0},"generated":{"line":6265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6264,"column":0},"generated":{"line":6266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6265,"column":0},"generated":{"line":6267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6266,"column":0},"generated":{"line":6268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6267,"column":0},"generated":{"line":6269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6268,"column":0},"generated":{"line":6270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6269,"column":0},"generated":{"line":6271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6270,"column":0},"generated":{"line":6272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6271,"column":0},"generated":{"line":6273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6272,"column":0},"generated":{"line":6274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6273,"column":0},"generated":{"line":6275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6274,"column":0},"generated":{"line":6276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6275,"column":0},"generated":{"line":6277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6276,"column":0},"generated":{"line":6278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6277,"column":0},"generated":{"line":6279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6278,"column":0},"generated":{"line":6280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6279,"column":0},"generated":{"line":6281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6280,"column":0},"generated":{"line":6282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6281,"column":0},"generated":{"line":6283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6282,"column":0},"generated":{"line":6284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6283,"column":0},"generated":{"line":6285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6284,"column":0},"generated":{"line":6286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6285,"column":0},"generated":{"line":6287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6286,"column":0},"generated":{"line":6288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6287,"column":0},"generated":{"line":6289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6288,"column":0},"generated":{"line":6290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6289,"column":0},"generated":{"line":6291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6290,"column":0},"generated":{"line":6292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6291,"column":0},"generated":{"line":6293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6292,"column":0},"generated":{"line":6294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6293,"column":0},"generated":{"line":6295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6294,"column":0},"generated":{"line":6296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6295,"column":0},"generated":{"line":6297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6296,"column":0},"generated":{"line":6298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6297,"column":0},"generated":{"line":6299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6298,"column":0},"generated":{"line":6300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6299,"column":0},"generated":{"line":6301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6300,"column":0},"generated":{"line":6302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6301,"column":0},"generated":{"line":6303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6302,"column":0},"generated":{"line":6304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6303,"column":0},"generated":{"line":6305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6304,"column":0},"generated":{"line":6306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6305,"column":0},"generated":{"line":6307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6306,"column":0},"generated":{"line":6308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6307,"column":0},"generated":{"line":6309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6308,"column":0},"generated":{"line":6310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6309,"column":0},"generated":{"line":6311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6310,"column":0},"generated":{"line":6312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6311,"column":0},"generated":{"line":6313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6312,"column":0},"generated":{"line":6314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6313,"column":0},"generated":{"line":6315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6314,"column":0},"generated":{"line":6316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6315,"column":0},"generated":{"line":6317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6316,"column":0},"generated":{"line":6318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6317,"column":0},"generated":{"line":6319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6318,"column":0},"generated":{"line":6320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6319,"column":0},"generated":{"line":6321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6320,"column":0},"generated":{"line":6322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6321,"column":0},"generated":{"line":6323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6322,"column":0},"generated":{"line":6324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6323,"column":0},"generated":{"line":6325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6324,"column":0},"generated":{"line":6326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6325,"column":0},"generated":{"line":6327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6326,"column":0},"generated":{"line":6328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6327,"column":0},"generated":{"line":6329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6328,"column":0},"generated":{"line":6330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6329,"column":0},"generated":{"line":6331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6330,"column":0},"generated":{"line":6332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6331,"column":0},"generated":{"line":6333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6332,"column":0},"generated":{"line":6334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6333,"column":0},"generated":{"line":6335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6334,"column":0},"generated":{"line":6336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6335,"column":0},"generated":{"line":6337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6336,"column":0},"generated":{"line":6338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6337,"column":0},"generated":{"line":6339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6338,"column":0},"generated":{"line":6340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6339,"column":0},"generated":{"line":6341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6340,"column":0},"generated":{"line":6342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6341,"column":0},"generated":{"line":6343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6342,"column":0},"generated":{"line":6344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6343,"column":0},"generated":{"line":6345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6344,"column":0},"generated":{"line":6346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6345,"column":0},"generated":{"line":6347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6346,"column":0},"generated":{"line":6348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6347,"column":0},"generated":{"line":6349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6348,"column":0},"generated":{"line":6350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6349,"column":0},"generated":{"line":6351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6350,"column":0},"generated":{"line":6352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6351,"column":0},"generated":{"line":6353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6352,"column":0},"generated":{"line":6354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6353,"column":0},"generated":{"line":6355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6354,"column":0},"generated":{"line":6356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6355,"column":0},"generated":{"line":6357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6356,"column":0},"generated":{"line":6358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6357,"column":0},"generated":{"line":6359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6358,"column":0},"generated":{"line":6360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6359,"column":0},"generated":{"line":6361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6360,"column":0},"generated":{"line":6362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6361,"column":0},"generated":{"line":6363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6362,"column":0},"generated":{"line":6364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6363,"column":0},"generated":{"line":6365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6364,"column":0},"generated":{"line":6366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6365,"column":0},"generated":{"line":6367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6366,"column":0},"generated":{"line":6368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6367,"column":0},"generated":{"line":6369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6368,"column":0},"generated":{"line":6370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6369,"column":0},"generated":{"line":6371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6370,"column":0},"generated":{"line":6372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6371,"column":0},"generated":{"line":6373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6372,"column":0},"generated":{"line":6374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6373,"column":0},"generated":{"line":6375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6374,"column":0},"generated":{"line":6376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6375,"column":0},"generated":{"line":6377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6376,"column":0},"generated":{"line":6378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6377,"column":0},"generated":{"line":6379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6378,"column":0},"generated":{"line":6380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6379,"column":0},"generated":{"line":6381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6380,"column":0},"generated":{"line":6382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6381,"column":0},"generated":{"line":6383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6382,"column":0},"generated":{"line":6384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6383,"column":0},"generated":{"line":6385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6384,"column":0},"generated":{"line":6386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6385,"column":0},"generated":{"line":6387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6386,"column":0},"generated":{"line":6388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6387,"column":0},"generated":{"line":6389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6388,"column":0},"generated":{"line":6390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6389,"column":0},"generated":{"line":6391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6390,"column":0},"generated":{"line":6392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6391,"column":0},"generated":{"line":6393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6392,"column":0},"generated":{"line":6394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6393,"column":0},"generated":{"line":6395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6394,"column":0},"generated":{"line":6396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6395,"column":0},"generated":{"line":6397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6396,"column":0},"generated":{"line":6398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6397,"column":0},"generated":{"line":6399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6398,"column":0},"generated":{"line":6400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6399,"column":0},"generated":{"line":6401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6400,"column":0},"generated":{"line":6402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6401,"column":0},"generated":{"line":6403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6402,"column":0},"generated":{"line":6404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6403,"column":0},"generated":{"line":6405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6404,"column":0},"generated":{"line":6406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6405,"column":0},"generated":{"line":6407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6406,"column":0},"generated":{"line":6408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6407,"column":0},"generated":{"line":6409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6408,"column":0},"generated":{"line":6410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6409,"column":0},"generated":{"line":6411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6410,"column":0},"generated":{"line":6412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6411,"column":0},"generated":{"line":6413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6412,"column":0},"generated":{"line":6414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6413,"column":0},"generated":{"line":6415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6414,"column":0},"generated":{"line":6416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6415,"column":0},"generated":{"line":6417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6416,"column":0},"generated":{"line":6418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6417,"column":0},"generated":{"line":6419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6418,"column":0},"generated":{"line":6420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6419,"column":0},"generated":{"line":6421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6420,"column":0},"generated":{"line":6422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6421,"column":0},"generated":{"line":6423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6422,"column":0},"generated":{"line":6424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6423,"column":0},"generated":{"line":6425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6424,"column":0},"generated":{"line":6426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6425,"column":0},"generated":{"line":6427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6426,"column":0},"generated":{"line":6428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6427,"column":0},"generated":{"line":6429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6428,"column":0},"generated":{"line":6430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6429,"column":0},"generated":{"line":6431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6430,"column":0},"generated":{"line":6432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6431,"column":0},"generated":{"line":6433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6432,"column":0},"generated":{"line":6434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6433,"column":0},"generated":{"line":6435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6434,"column":0},"generated":{"line":6436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6435,"column":0},"generated":{"line":6437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6436,"column":0},"generated":{"line":6438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6437,"column":0},"generated":{"line":6439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6438,"column":0},"generated":{"line":6440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6439,"column":0},"generated":{"line":6441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6440,"column":0},"generated":{"line":6442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6441,"column":0},"generated":{"line":6443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6442,"column":0},"generated":{"line":6444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6443,"column":0},"generated":{"line":6445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6444,"column":0},"generated":{"line":6446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6445,"column":0},"generated":{"line":6447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6446,"column":0},"generated":{"line":6448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6447,"column":0},"generated":{"line":6449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6448,"column":0},"generated":{"line":6450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6449,"column":0},"generated":{"line":6451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6450,"column":0},"generated":{"line":6452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6451,"column":0},"generated":{"line":6453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6452,"column":0},"generated":{"line":6454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6453,"column":0},"generated":{"line":6455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6454,"column":0},"generated":{"line":6456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6455,"column":0},"generated":{"line":6457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6456,"column":0},"generated":{"line":6458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6457,"column":0},"generated":{"line":6459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6458,"column":0},"generated":{"line":6460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6459,"column":0},"generated":{"line":6461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6460,"column":0},"generated":{"line":6462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6461,"column":0},"generated":{"line":6463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6462,"column":0},"generated":{"line":6464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6463,"column":0},"generated":{"line":6465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6464,"column":0},"generated":{"line":6466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6465,"column":0},"generated":{"line":6467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6466,"column":0},"generated":{"line":6468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6467,"column":0},"generated":{"line":6469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6468,"column":0},"generated":{"line":6470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6469,"column":0},"generated":{"line":6471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6470,"column":0},"generated":{"line":6472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6471,"column":0},"generated":{"line":6473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6472,"column":0},"generated":{"line":6474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6473,"column":0},"generated":{"line":6475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6474,"column":0},"generated":{"line":6476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6475,"column":0},"generated":{"line":6477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6476,"column":0},"generated":{"line":6478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6477,"column":0},"generated":{"line":6479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6478,"column":0},"generated":{"line":6480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6479,"column":0},"generated":{"line":6481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6480,"column":0},"generated":{"line":6482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6481,"column":0},"generated":{"line":6483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6482,"column":0},"generated":{"line":6484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6483,"column":0},"generated":{"line":6485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6484,"column":0},"generated":{"line":6486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6485,"column":0},"generated":{"line":6487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6486,"column":0},"generated":{"line":6488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6487,"column":0},"generated":{"line":6489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6488,"column":0},"generated":{"line":6490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6489,"column":0},"generated":{"line":6491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6490,"column":0},"generated":{"line":6492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6491,"column":0},"generated":{"line":6493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6492,"column":0},"generated":{"line":6494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6493,"column":0},"generated":{"line":6495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6494,"column":0},"generated":{"line":6496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6495,"column":0},"generated":{"line":6497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6496,"column":0},"generated":{"line":6498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6497,"column":0},"generated":{"line":6499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6498,"column":0},"generated":{"line":6500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6499,"column":0},"generated":{"line":6501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6500,"column":0},"generated":{"line":6502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6501,"column":0},"generated":{"line":6503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6502,"column":0},"generated":{"line":6504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6503,"column":0},"generated":{"line":6505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6504,"column":0},"generated":{"line":6506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6505,"column":0},"generated":{"line":6507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6506,"column":0},"generated":{"line":6508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6507,"column":0},"generated":{"line":6509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6508,"column":0},"generated":{"line":6510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6509,"column":0},"generated":{"line":6511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6510,"column":0},"generated":{"line":6512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6511,"column":0},"generated":{"line":6513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6512,"column":0},"generated":{"line":6514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6513,"column":0},"generated":{"line":6515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6514,"column":0},"generated":{"line":6516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6515,"column":0},"generated":{"line":6517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6516,"column":0},"generated":{"line":6518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6517,"column":0},"generated":{"line":6519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6518,"column":0},"generated":{"line":6520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6519,"column":0},"generated":{"line":6521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6520,"column":0},"generated":{"line":6522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6521,"column":0},"generated":{"line":6523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6522,"column":0},"generated":{"line":6524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6523,"column":0},"generated":{"line":6525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6524,"column":0},"generated":{"line":6526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6525,"column":0},"generated":{"line":6527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6526,"column":0},"generated":{"line":6528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6527,"column":0},"generated":{"line":6529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6528,"column":0},"generated":{"line":6530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6529,"column":0},"generated":{"line":6531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6530,"column":0},"generated":{"line":6532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6531,"column":0},"generated":{"line":6533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6532,"column":0},"generated":{"line":6534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6533,"column":0},"generated":{"line":6535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6534,"column":0},"generated":{"line":6536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6535,"column":0},"generated":{"line":6537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6536,"column":0},"generated":{"line":6538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6537,"column":0},"generated":{"line":6539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6538,"column":0},"generated":{"line":6540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6539,"column":0},"generated":{"line":6541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6540,"column":0},"generated":{"line":6542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6541,"column":0},"generated":{"line":6543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6542,"column":0},"generated":{"line":6544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6543,"column":0},"generated":{"line":6545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6544,"column":0},"generated":{"line":6546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6545,"column":0},"generated":{"line":6547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6546,"column":0},"generated":{"line":6548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6547,"column":0},"generated":{"line":6549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6548,"column":0},"generated":{"line":6550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6549,"column":0},"generated":{"line":6551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6550,"column":0},"generated":{"line":6552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6551,"column":0},"generated":{"line":6553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6552,"column":0},"generated":{"line":6554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6553,"column":0},"generated":{"line":6555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6554,"column":0},"generated":{"line":6556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6555,"column":0},"generated":{"line":6557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6556,"column":0},"generated":{"line":6558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6557,"column":0},"generated":{"line":6559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6558,"column":0},"generated":{"line":6560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6559,"column":0},"generated":{"line":6561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6560,"column":0},"generated":{"line":6562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6561,"column":0},"generated":{"line":6563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6562,"column":0},"generated":{"line":6564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6563,"column":0},"generated":{"line":6565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6564,"column":0},"generated":{"line":6566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6565,"column":0},"generated":{"line":6567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6566,"column":0},"generated":{"line":6568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6567,"column":0},"generated":{"line":6569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6568,"column":0},"generated":{"line":6570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6569,"column":0},"generated":{"line":6571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6570,"column":0},"generated":{"line":6572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6571,"column":0},"generated":{"line":6573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6572,"column":0},"generated":{"line":6574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6573,"column":0},"generated":{"line":6575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6574,"column":0},"generated":{"line":6576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6575,"column":0},"generated":{"line":6577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6576,"column":0},"generated":{"line":6578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6577,"column":0},"generated":{"line":6579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6578,"column":0},"generated":{"line":6580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6579,"column":0},"generated":{"line":6581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6580,"column":0},"generated":{"line":6582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6581,"column":0},"generated":{"line":6583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6582,"column":0},"generated":{"line":6584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6583,"column":0},"generated":{"line":6585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6584,"column":0},"generated":{"line":6586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6585,"column":0},"generated":{"line":6587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6586,"column":0},"generated":{"line":6588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6587,"column":0},"generated":{"line":6589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6588,"column":0},"generated":{"line":6590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6589,"column":0},"generated":{"line":6591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6590,"column":0},"generated":{"line":6592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6591,"column":0},"generated":{"line":6593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6592,"column":0},"generated":{"line":6594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6593,"column":0},"generated":{"line":6595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6594,"column":0},"generated":{"line":6596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6595,"column":0},"generated":{"line":6597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6596,"column":0},"generated":{"line":6598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6597,"column":0},"generated":{"line":6599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6598,"column":0},"generated":{"line":6600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6599,"column":0},"generated":{"line":6601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6600,"column":0},"generated":{"line":6602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6601,"column":0},"generated":{"line":6603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6602,"column":0},"generated":{"line":6604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6603,"column":0},"generated":{"line":6605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6604,"column":0},"generated":{"line":6606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6605,"column":0},"generated":{"line":6607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6606,"column":0},"generated":{"line":6608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6607,"column":0},"generated":{"line":6609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6608,"column":0},"generated":{"line":6610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6609,"column":0},"generated":{"line":6611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6610,"column":0},"generated":{"line":6612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6611,"column":0},"generated":{"line":6613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6612,"column":0},"generated":{"line":6614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6613,"column":0},"generated":{"line":6615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6614,"column":0},"generated":{"line":6616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6615,"column":0},"generated":{"line":6617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6616,"column":0},"generated":{"line":6618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6617,"column":0},"generated":{"line":6619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6618,"column":0},"generated":{"line":6620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6619,"column":0},"generated":{"line":6621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6620,"column":0},"generated":{"line":6622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6621,"column":0},"generated":{"line":6623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6622,"column":0},"generated":{"line":6624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6623,"column":0},"generated":{"line":6625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6624,"column":0},"generated":{"line":6626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6625,"column":0},"generated":{"line":6627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6626,"column":0},"generated":{"line":6628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6627,"column":0},"generated":{"line":6629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6628,"column":0},"generated":{"line":6630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6629,"column":0},"generated":{"line":6631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6630,"column":0},"generated":{"line":6632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6631,"column":0},"generated":{"line":6633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6632,"column":0},"generated":{"line":6634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6633,"column":0},"generated":{"line":6635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6634,"column":0},"generated":{"line":6636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6635,"column":0},"generated":{"line":6637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6636,"column":0},"generated":{"line":6638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6637,"column":0},"generated":{"line":6639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6638,"column":0},"generated":{"line":6640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6639,"column":0},"generated":{"line":6641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6640,"column":0},"generated":{"line":6642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6641,"column":0},"generated":{"line":6643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6642,"column":0},"generated":{"line":6644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6643,"column":0},"generated":{"line":6645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6644,"column":0},"generated":{"line":6646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6645,"column":0},"generated":{"line":6647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6646,"column":0},"generated":{"line":6648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6647,"column":0},"generated":{"line":6649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6648,"column":0},"generated":{"line":6650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6649,"column":0},"generated":{"line":6651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6650,"column":0},"generated":{"line":6652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6651,"column":0},"generated":{"line":6653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6652,"column":0},"generated":{"line":6654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6653,"column":0},"generated":{"line":6655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6654,"column":0},"generated":{"line":6656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6655,"column":0},"generated":{"line":6657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6656,"column":0},"generated":{"line":6658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6657,"column":0},"generated":{"line":6659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6658,"column":0},"generated":{"line":6660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6659,"column":0},"generated":{"line":6661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6660,"column":0},"generated":{"line":6662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6661,"column":0},"generated":{"line":6663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6662,"column":0},"generated":{"line":6664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6663,"column":0},"generated":{"line":6665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6664,"column":0},"generated":{"line":6666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6665,"column":0},"generated":{"line":6667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6666,"column":0},"generated":{"line":6668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6667,"column":0},"generated":{"line":6669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6668,"column":0},"generated":{"line":6670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6669,"column":0},"generated":{"line":6671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6670,"column":0},"generated":{"line":6672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6671,"column":0},"generated":{"line":6673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6672,"column":0},"generated":{"line":6674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6673,"column":0},"generated":{"line":6675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6674,"column":0},"generated":{"line":6676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6675,"column":0},"generated":{"line":6677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6676,"column":0},"generated":{"line":6678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6677,"column":0},"generated":{"line":6679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6678,"column":0},"generated":{"line":6680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6679,"column":0},"generated":{"line":6681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6680,"column":0},"generated":{"line":6682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6681,"column":0},"generated":{"line":6683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6682,"column":0},"generated":{"line":6684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6683,"column":0},"generated":{"line":6685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6684,"column":0},"generated":{"line":6686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6685,"column":0},"generated":{"line":6687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6686,"column":0},"generated":{"line":6688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6687,"column":0},"generated":{"line":6689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6688,"column":0},"generated":{"line":6690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6689,"column":0},"generated":{"line":6691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6690,"column":0},"generated":{"line":6692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6691,"column":0},"generated":{"line":6693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6692,"column":0},"generated":{"line":6694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6693,"column":0},"generated":{"line":6695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6694,"column":0},"generated":{"line":6696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6695,"column":0},"generated":{"line":6697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6696,"column":0},"generated":{"line":6698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6697,"column":0},"generated":{"line":6699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6698,"column":0},"generated":{"line":6700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6699,"column":0},"generated":{"line":6701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6700,"column":0},"generated":{"line":6702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6701,"column":0},"generated":{"line":6703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6702,"column":0},"generated":{"line":6704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6703,"column":0},"generated":{"line":6705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6704,"column":0},"generated":{"line":6706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6705,"column":0},"generated":{"line":6707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6706,"column":0},"generated":{"line":6708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6707,"column":0},"generated":{"line":6709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6708,"column":0},"generated":{"line":6710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6709,"column":0},"generated":{"line":6711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6710,"column":0},"generated":{"line":6712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6711,"column":0},"generated":{"line":6713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6712,"column":0},"generated":{"line":6714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6713,"column":0},"generated":{"line":6715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6714,"column":0},"generated":{"line":6716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6715,"column":0},"generated":{"line":6717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6716,"column":0},"generated":{"line":6718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6717,"column":0},"generated":{"line":6719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6718,"column":0},"generated":{"line":6720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6719,"column":0},"generated":{"line":6721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6720,"column":0},"generated":{"line":6722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6721,"column":0},"generated":{"line":6723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6722,"column":0},"generated":{"line":6724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6723,"column":0},"generated":{"line":6725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6724,"column":0},"generated":{"line":6726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6725,"column":0},"generated":{"line":6727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6726,"column":0},"generated":{"line":6728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6727,"column":0},"generated":{"line":6729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6728,"column":0},"generated":{"line":6730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6729,"column":0},"generated":{"line":6731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6730,"column":0},"generated":{"line":6732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6731,"column":0},"generated":{"line":6733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6732,"column":0},"generated":{"line":6734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6733,"column":0},"generated":{"line":6735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6734,"column":0},"generated":{"line":6736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6735,"column":0},"generated":{"line":6737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6736,"column":0},"generated":{"line":6738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6737,"column":0},"generated":{"line":6739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6738,"column":0},"generated":{"line":6740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6739,"column":0},"generated":{"line":6741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6740,"column":0},"generated":{"line":6742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6741,"column":0},"generated":{"line":6743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6742,"column":0},"generated":{"line":6744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6743,"column":0},"generated":{"line":6745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6744,"column":0},"generated":{"line":6746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6745,"column":0},"generated":{"line":6747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6746,"column":0},"generated":{"line":6748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6747,"column":0},"generated":{"line":6749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6748,"column":0},"generated":{"line":6750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6749,"column":0},"generated":{"line":6751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6750,"column":0},"generated":{"line":6752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6751,"column":0},"generated":{"line":6753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6752,"column":0},"generated":{"line":6754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6753,"column":0},"generated":{"line":6755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6754,"column":0},"generated":{"line":6756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6755,"column":0},"generated":{"line":6757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6756,"column":0},"generated":{"line":6758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6757,"column":0},"generated":{"line":6759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6758,"column":0},"generated":{"line":6760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6759,"column":0},"generated":{"line":6761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6760,"column":0},"generated":{"line":6762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6761,"column":0},"generated":{"line":6763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6762,"column":0},"generated":{"line":6764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6763,"column":0},"generated":{"line":6765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6764,"column":0},"generated":{"line":6766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6765,"column":0},"generated":{"line":6767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6766,"column":0},"generated":{"line":6768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6767,"column":0},"generated":{"line":6769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6768,"column":0},"generated":{"line":6770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6769,"column":0},"generated":{"line":6771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6770,"column":0},"generated":{"line":6772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6771,"column":0},"generated":{"line":6773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6772,"column":0},"generated":{"line":6774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6773,"column":0},"generated":{"line":6775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6774,"column":0},"generated":{"line":6776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6775,"column":0},"generated":{"line":6777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6776,"column":0},"generated":{"line":6778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6777,"column":0},"generated":{"line":6779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6778,"column":0},"generated":{"line":6780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6779,"column":0},"generated":{"line":6781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6780,"column":0},"generated":{"line":6782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6781,"column":0},"generated":{"line":6783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6782,"column":0},"generated":{"line":6784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6783,"column":0},"generated":{"line":6785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6784,"column":0},"generated":{"line":6786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6785,"column":0},"generated":{"line":6787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6786,"column":0},"generated":{"line":6788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6787,"column":0},"generated":{"line":6789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6788,"column":0},"generated":{"line":6790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6789,"column":0},"generated":{"line":6791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6790,"column":0},"generated":{"line":6792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6791,"column":0},"generated":{"line":6793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6792,"column":0},"generated":{"line":6794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6793,"column":0},"generated":{"line":6795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6794,"column":0},"generated":{"line":6796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6795,"column":0},"generated":{"line":6797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6796,"column":0},"generated":{"line":6798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6797,"column":0},"generated":{"line":6799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6798,"column":0},"generated":{"line":6800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6799,"column":0},"generated":{"line":6801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6800,"column":0},"generated":{"line":6802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6801,"column":0},"generated":{"line":6803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6802,"column":0},"generated":{"line":6804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6803,"column":0},"generated":{"line":6805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6804,"column":0},"generated":{"line":6806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6805,"column":0},"generated":{"line":6807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6806,"column":0},"generated":{"line":6808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6807,"column":0},"generated":{"line":6809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6808,"column":0},"generated":{"line":6810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6809,"column":0},"generated":{"line":6811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6810,"column":0},"generated":{"line":6812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6811,"column":0},"generated":{"line":6813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6812,"column":0},"generated":{"line":6814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6813,"column":0},"generated":{"line":6815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6814,"column":0},"generated":{"line":6816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6815,"column":0},"generated":{"line":6817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6816,"column":0},"generated":{"line":6818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6817,"column":0},"generated":{"line":6819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6818,"column":0},"generated":{"line":6820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6819,"column":0},"generated":{"line":6821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6820,"column":0},"generated":{"line":6822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6821,"column":0},"generated":{"line":6823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6822,"column":0},"generated":{"line":6824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6823,"column":0},"generated":{"line":6825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6824,"column":0},"generated":{"line":6826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6825,"column":0},"generated":{"line":6827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6826,"column":0},"generated":{"line":6828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6827,"column":0},"generated":{"line":6829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6828,"column":0},"generated":{"line":6830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6829,"column":0},"generated":{"line":6831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6830,"column":0},"generated":{"line":6832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6831,"column":0},"generated":{"line":6833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6832,"column":0},"generated":{"line":6834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6833,"column":0},"generated":{"line":6835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6834,"column":0},"generated":{"line":6836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6835,"column":0},"generated":{"line":6837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6836,"column":0},"generated":{"line":6838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6837,"column":0},"generated":{"line":6839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6838,"column":0},"generated":{"line":6840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6839,"column":0},"generated":{"line":6841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6840,"column":0},"generated":{"line":6842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6841,"column":0},"generated":{"line":6843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6842,"column":0},"generated":{"line":6844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6843,"column":0},"generated":{"line":6845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6844,"column":0},"generated":{"line":6846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6845,"column":0},"generated":{"line":6847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6846,"column":0},"generated":{"line":6848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6847,"column":0},"generated":{"line":6849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6848,"column":0},"generated":{"line":6850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6849,"column":0},"generated":{"line":6851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6850,"column":0},"generated":{"line":6852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6851,"column":0},"generated":{"line":6853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6852,"column":0},"generated":{"line":6854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6853,"column":0},"generated":{"line":6855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6854,"column":0},"generated":{"line":6856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6855,"column":0},"generated":{"line":6857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6856,"column":0},"generated":{"line":6858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6857,"column":0},"generated":{"line":6859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6858,"column":0},"generated":{"line":6860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6859,"column":0},"generated":{"line":6861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6860,"column":0},"generated":{"line":6862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6861,"column":0},"generated":{"line":6863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6862,"column":0},"generated":{"line":6864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6863,"column":0},"generated":{"line":6865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6864,"column":0},"generated":{"line":6866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6865,"column":0},"generated":{"line":6867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6866,"column":0},"generated":{"line":6868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6867,"column":0},"generated":{"line":6869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6868,"column":0},"generated":{"line":6870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6869,"column":0},"generated":{"line":6871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6870,"column":0},"generated":{"line":6872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6871,"column":0},"generated":{"line":6873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6872,"column":0},"generated":{"line":6874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6873,"column":0},"generated":{"line":6875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6874,"column":0},"generated":{"line":6876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6875,"column":0},"generated":{"line":6877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6876,"column":0},"generated":{"line":6878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6877,"column":0},"generated":{"line":6879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6878,"column":0},"generated":{"line":6880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6879,"column":0},"generated":{"line":6881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6880,"column":0},"generated":{"line":6882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6881,"column":0},"generated":{"line":6883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6882,"column":0},"generated":{"line":6884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6883,"column":0},"generated":{"line":6885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6884,"column":0},"generated":{"line":6886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6885,"column":0},"generated":{"line":6887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6886,"column":0},"generated":{"line":6888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6887,"column":0},"generated":{"line":6889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6888,"column":0},"generated":{"line":6890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6889,"column":0},"generated":{"line":6891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6890,"column":0},"generated":{"line":6892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6891,"column":0},"generated":{"line":6893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6892,"column":0},"generated":{"line":6894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6893,"column":0},"generated":{"line":6895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6894,"column":0},"generated":{"line":6896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6895,"column":0},"generated":{"line":6897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6896,"column":0},"generated":{"line":6898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6897,"column":0},"generated":{"line":6899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6898,"column":0},"generated":{"line":6900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6899,"column":0},"generated":{"line":6901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6900,"column":0},"generated":{"line":6902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6901,"column":0},"generated":{"line":6903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6902,"column":0},"generated":{"line":6904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6903,"column":0},"generated":{"line":6905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6904,"column":0},"generated":{"line":6906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6905,"column":0},"generated":{"line":6907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6906,"column":0},"generated":{"line":6908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6907,"column":0},"generated":{"line":6909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6908,"column":0},"generated":{"line":6910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6909,"column":0},"generated":{"line":6911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6910,"column":0},"generated":{"line":6912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6911,"column":0},"generated":{"line":6913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6912,"column":0},"generated":{"line":6914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6913,"column":0},"generated":{"line":6915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6914,"column":0},"generated":{"line":6916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6915,"column":0},"generated":{"line":6917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6916,"column":0},"generated":{"line":6918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6917,"column":0},"generated":{"line":6919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6918,"column":0},"generated":{"line":6920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6919,"column":0},"generated":{"line":6921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6920,"column":0},"generated":{"line":6922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6921,"column":0},"generated":{"line":6923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6922,"column":0},"generated":{"line":6924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6923,"column":0},"generated":{"line":6925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6924,"column":0},"generated":{"line":6926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6925,"column":0},"generated":{"line":6927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6926,"column":0},"generated":{"line":6928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6927,"column":0},"generated":{"line":6929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6928,"column":0},"generated":{"line":6930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6929,"column":0},"generated":{"line":6931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6930,"column":0},"generated":{"line":6932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6931,"column":0},"generated":{"line":6933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6932,"column":0},"generated":{"line":6934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6933,"column":0},"generated":{"line":6935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6934,"column":0},"generated":{"line":6936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6935,"column":0},"generated":{"line":6937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6936,"column":0},"generated":{"line":6938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6937,"column":0},"generated":{"line":6939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6938,"column":0},"generated":{"line":6940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6939,"column":0},"generated":{"line":6941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6940,"column":0},"generated":{"line":6942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6941,"column":0},"generated":{"line":6943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6942,"column":0},"generated":{"line":6944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6943,"column":0},"generated":{"line":6945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6944,"column":0},"generated":{"line":6946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6945,"column":0},"generated":{"line":6947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6946,"column":0},"generated":{"line":6948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6947,"column":0},"generated":{"line":6949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6948,"column":0},"generated":{"line":6950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6949,"column":0},"generated":{"line":6951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6950,"column":0},"generated":{"line":6952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6951,"column":0},"generated":{"line":6953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6952,"column":0},"generated":{"line":6954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6953,"column":0},"generated":{"line":6955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6954,"column":0},"generated":{"line":6956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6955,"column":0},"generated":{"line":6957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6956,"column":0},"generated":{"line":6958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6957,"column":0},"generated":{"line":6959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6958,"column":0},"generated":{"line":6960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6959,"column":0},"generated":{"line":6961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6960,"column":0},"generated":{"line":6962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6961,"column":0},"generated":{"line":6963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6962,"column":0},"generated":{"line":6964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6963,"column":0},"generated":{"line":6965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6964,"column":0},"generated":{"line":6966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6965,"column":0},"generated":{"line":6967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6966,"column":0},"generated":{"line":6968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6967,"column":0},"generated":{"line":6969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6968,"column":0},"generated":{"line":6970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6969,"column":0},"generated":{"line":6971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6970,"column":0},"generated":{"line":6972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6971,"column":0},"generated":{"line":6973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6972,"column":0},"generated":{"line":6974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6973,"column":0},"generated":{"line":6975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6974,"column":0},"generated":{"line":6976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6975,"column":0},"generated":{"line":6977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6976,"column":0},"generated":{"line":6978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6977,"column":0},"generated":{"line":6979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6978,"column":0},"generated":{"line":6980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6979,"column":0},"generated":{"line":6981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6980,"column":0},"generated":{"line":6982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6981,"column":0},"generated":{"line":6983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6982,"column":0},"generated":{"line":6984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6983,"column":0},"generated":{"line":6985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6984,"column":0},"generated":{"line":6986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6985,"column":0},"generated":{"line":6987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6986,"column":0},"generated":{"line":6988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6987,"column":0},"generated":{"line":6989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6988,"column":0},"generated":{"line":6990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6989,"column":0},"generated":{"line":6991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6990,"column":0},"generated":{"line":6992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6991,"column":0},"generated":{"line":6993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6992,"column":0},"generated":{"line":6994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6993,"column":0},"generated":{"line":6995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6994,"column":0},"generated":{"line":6996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6995,"column":0},"generated":{"line":6997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6996,"column":0},"generated":{"line":6998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6997,"column":0},"generated":{"line":6999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6998,"column":0},"generated":{"line":7000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":6999,"column":0},"generated":{"line":7001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7000,"column":0},"generated":{"line":7002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7001,"column":0},"generated":{"line":7003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7002,"column":0},"generated":{"line":7004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7003,"column":0},"generated":{"line":7005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7004,"column":0},"generated":{"line":7006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7005,"column":0},"generated":{"line":7007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7006,"column":0},"generated":{"line":7008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7007,"column":0},"generated":{"line":7009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7008,"column":0},"generated":{"line":7010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7009,"column":0},"generated":{"line":7011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7010,"column":0},"generated":{"line":7012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7011,"column":0},"generated":{"line":7013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7012,"column":0},"generated":{"line":7014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7013,"column":0},"generated":{"line":7015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7014,"column":0},"generated":{"line":7016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7015,"column":0},"generated":{"line":7017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7016,"column":0},"generated":{"line":7018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7017,"column":0},"generated":{"line":7019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7018,"column":0},"generated":{"line":7020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7019,"column":0},"generated":{"line":7021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7020,"column":0},"generated":{"line":7022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7021,"column":0},"generated":{"line":7023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7022,"column":0},"generated":{"line":7024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7023,"column":0},"generated":{"line":7025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7024,"column":0},"generated":{"line":7026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7025,"column":0},"generated":{"line":7027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7026,"column":0},"generated":{"line":7028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7027,"column":0},"generated":{"line":7029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7028,"column":0},"generated":{"line":7030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7029,"column":0},"generated":{"line":7031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7030,"column":0},"generated":{"line":7032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7031,"column":0},"generated":{"line":7033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7032,"column":0},"generated":{"line":7034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7033,"column":0},"generated":{"line":7035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7034,"column":0},"generated":{"line":7036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7035,"column":0},"generated":{"line":7037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7036,"column":0},"generated":{"line":7038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7037,"column":0},"generated":{"line":7039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7038,"column":0},"generated":{"line":7040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7039,"column":0},"generated":{"line":7041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7040,"column":0},"generated":{"line":7042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7041,"column":0},"generated":{"line":7043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7042,"column":0},"generated":{"line":7044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7043,"column":0},"generated":{"line":7045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7044,"column":0},"generated":{"line":7046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7045,"column":0},"generated":{"line":7047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7046,"column":0},"generated":{"line":7048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7047,"column":0},"generated":{"line":7049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7048,"column":0},"generated":{"line":7050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7049,"column":0},"generated":{"line":7051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7050,"column":0},"generated":{"line":7052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7051,"column":0},"generated":{"line":7053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7052,"column":0},"generated":{"line":7054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7053,"column":0},"generated":{"line":7055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7054,"column":0},"generated":{"line":7056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7055,"column":0},"generated":{"line":7057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7056,"column":0},"generated":{"line":7058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7057,"column":0},"generated":{"line":7059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7058,"column":0},"generated":{"line":7060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7059,"column":0},"generated":{"line":7061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7060,"column":0},"generated":{"line":7062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7061,"column":0},"generated":{"line":7063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7062,"column":0},"generated":{"line":7064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7063,"column":0},"generated":{"line":7065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7064,"column":0},"generated":{"line":7066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7065,"column":0},"generated":{"line":7067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7066,"column":0},"generated":{"line":7068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7067,"column":0},"generated":{"line":7069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7068,"column":0},"generated":{"line":7070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7069,"column":0},"generated":{"line":7071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7070,"column":0},"generated":{"line":7072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7071,"column":0},"generated":{"line":7073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7072,"column":0},"generated":{"line":7074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7073,"column":0},"generated":{"line":7075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7074,"column":0},"generated":{"line":7076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7075,"column":0},"generated":{"line":7077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7076,"column":0},"generated":{"line":7078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7077,"column":0},"generated":{"line":7079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7078,"column":0},"generated":{"line":7080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7079,"column":0},"generated":{"line":7081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7080,"column":0},"generated":{"line":7082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7081,"column":0},"generated":{"line":7083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7082,"column":0},"generated":{"line":7084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7083,"column":0},"generated":{"line":7085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7084,"column":0},"generated":{"line":7086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7085,"column":0},"generated":{"line":7087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7086,"column":0},"generated":{"line":7088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7087,"column":0},"generated":{"line":7089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7088,"column":0},"generated":{"line":7090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7089,"column":0},"generated":{"line":7091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7090,"column":0},"generated":{"line":7092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7091,"column":0},"generated":{"line":7093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7092,"column":0},"generated":{"line":7094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7093,"column":0},"generated":{"line":7095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7094,"column":0},"generated":{"line":7096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7095,"column":0},"generated":{"line":7097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7096,"column":0},"generated":{"line":7098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7097,"column":0},"generated":{"line":7099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7098,"column":0},"generated":{"line":7100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7099,"column":0},"generated":{"line":7101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7100,"column":0},"generated":{"line":7102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7101,"column":0},"generated":{"line":7103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7102,"column":0},"generated":{"line":7104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7103,"column":0},"generated":{"line":7105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7104,"column":0},"generated":{"line":7106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7105,"column":0},"generated":{"line":7107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7106,"column":0},"generated":{"line":7108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7107,"column":0},"generated":{"line":7109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7108,"column":0},"generated":{"line":7110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7109,"column":0},"generated":{"line":7111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7110,"column":0},"generated":{"line":7112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7111,"column":0},"generated":{"line":7113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7112,"column":0},"generated":{"line":7114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7113,"column":0},"generated":{"line":7115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7114,"column":0},"generated":{"line":7116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7115,"column":0},"generated":{"line":7117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7116,"column":0},"generated":{"line":7118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7117,"column":0},"generated":{"line":7119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7118,"column":0},"generated":{"line":7120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7119,"column":0},"generated":{"line":7121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7120,"column":0},"generated":{"line":7122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7121,"column":0},"generated":{"line":7123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7122,"column":0},"generated":{"line":7124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7123,"column":0},"generated":{"line":7125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7124,"column":0},"generated":{"line":7126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7125,"column":0},"generated":{"line":7127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7126,"column":0},"generated":{"line":7128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7127,"column":0},"generated":{"line":7129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7128,"column":0},"generated":{"line":7130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7129,"column":0},"generated":{"line":7131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7130,"column":0},"generated":{"line":7132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7131,"column":0},"generated":{"line":7133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7132,"column":0},"generated":{"line":7134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7133,"column":0},"generated":{"line":7135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7134,"column":0},"generated":{"line":7136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7135,"column":0},"generated":{"line":7137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7136,"column":0},"generated":{"line":7138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7137,"column":0},"generated":{"line":7139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7138,"column":0},"generated":{"line":7140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7139,"column":0},"generated":{"line":7141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7140,"column":0},"generated":{"line":7142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7141,"column":0},"generated":{"line":7143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7142,"column":0},"generated":{"line":7144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7143,"column":0},"generated":{"line":7145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7144,"column":0},"generated":{"line":7146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7145,"column":0},"generated":{"line":7147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7146,"column":0},"generated":{"line":7148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7147,"column":0},"generated":{"line":7149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7148,"column":0},"generated":{"line":7150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7149,"column":0},"generated":{"line":7151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7150,"column":0},"generated":{"line":7152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7151,"column":0},"generated":{"line":7153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7152,"column":0},"generated":{"line":7154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7153,"column":0},"generated":{"line":7155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7154,"column":0},"generated":{"line":7156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7155,"column":0},"generated":{"line":7157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7156,"column":0},"generated":{"line":7158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7157,"column":0},"generated":{"line":7159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7158,"column":0},"generated":{"line":7160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7159,"column":0},"generated":{"line":7161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7160,"column":0},"generated":{"line":7162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7161,"column":0},"generated":{"line":7163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7162,"column":0},"generated":{"line":7164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7163,"column":0},"generated":{"line":7165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7164,"column":0},"generated":{"line":7166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7165,"column":0},"generated":{"line":7167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7166,"column":0},"generated":{"line":7168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7167,"column":0},"generated":{"line":7169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7168,"column":0},"generated":{"line":7170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7169,"column":0},"generated":{"line":7171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7170,"column":0},"generated":{"line":7172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7171,"column":0},"generated":{"line":7173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7172,"column":0},"generated":{"line":7174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7173,"column":0},"generated":{"line":7175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7174,"column":0},"generated":{"line":7176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7175,"column":0},"generated":{"line":7177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7176,"column":0},"generated":{"line":7178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7177,"column":0},"generated":{"line":7179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7178,"column":0},"generated":{"line":7180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7179,"column":0},"generated":{"line":7181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7180,"column":0},"generated":{"line":7182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7181,"column":0},"generated":{"line":7183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7182,"column":0},"generated":{"line":7184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7183,"column":0},"generated":{"line":7185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7184,"column":0},"generated":{"line":7186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7185,"column":0},"generated":{"line":7187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7186,"column":0},"generated":{"line":7188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7187,"column":0},"generated":{"line":7189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7188,"column":0},"generated":{"line":7190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7189,"column":0},"generated":{"line":7191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7190,"column":0},"generated":{"line":7192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7191,"column":0},"generated":{"line":7193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7192,"column":0},"generated":{"line":7194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7193,"column":0},"generated":{"line":7195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7194,"column":0},"generated":{"line":7196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7195,"column":0},"generated":{"line":7197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7196,"column":0},"generated":{"line":7198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7197,"column":0},"generated":{"line":7199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7198,"column":0},"generated":{"line":7200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7199,"column":0},"generated":{"line":7201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7200,"column":0},"generated":{"line":7202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7201,"column":0},"generated":{"line":7203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7202,"column":0},"generated":{"line":7204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7203,"column":0},"generated":{"line":7205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7204,"column":0},"generated":{"line":7206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7205,"column":0},"generated":{"line":7207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7206,"column":0},"generated":{"line":7208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7207,"column":0},"generated":{"line":7209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7208,"column":0},"generated":{"line":7210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7209,"column":0},"generated":{"line":7211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7210,"column":0},"generated":{"line":7212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7211,"column":0},"generated":{"line":7213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7212,"column":0},"generated":{"line":7214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7213,"column":0},"generated":{"line":7215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7214,"column":0},"generated":{"line":7216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7215,"column":0},"generated":{"line":7217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7216,"column":0},"generated":{"line":7218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7217,"column":0},"generated":{"line":7219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7218,"column":0},"generated":{"line":7220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7219,"column":0},"generated":{"line":7221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7220,"column":0},"generated":{"line":7222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7221,"column":0},"generated":{"line":7223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7222,"column":0},"generated":{"line":7224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7223,"column":0},"generated":{"line":7225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7224,"column":0},"generated":{"line":7226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7225,"column":0},"generated":{"line":7227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7226,"column":0},"generated":{"line":7228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7227,"column":0},"generated":{"line":7229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7228,"column":0},"generated":{"line":7230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7229,"column":0},"generated":{"line":7231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7230,"column":0},"generated":{"line":7232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7231,"column":0},"generated":{"line":7233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7232,"column":0},"generated":{"line":7234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7233,"column":0},"generated":{"line":7235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7234,"column":0},"generated":{"line":7236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7235,"column":0},"generated":{"line":7237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7236,"column":0},"generated":{"line":7238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7237,"column":0},"generated":{"line":7239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7238,"column":0},"generated":{"line":7240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7239,"column":0},"generated":{"line":7241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7240,"column":0},"generated":{"line":7242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7241,"column":0},"generated":{"line":7243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7242,"column":0},"generated":{"line":7244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7243,"column":0},"generated":{"line":7245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7244,"column":0},"generated":{"line":7246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7245,"column":0},"generated":{"line":7247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7246,"column":0},"generated":{"line":7248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7247,"column":0},"generated":{"line":7249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7248,"column":0},"generated":{"line":7250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7249,"column":0},"generated":{"line":7251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7250,"column":0},"generated":{"line":7252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7251,"column":0},"generated":{"line":7253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7252,"column":0},"generated":{"line":7254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7253,"column":0},"generated":{"line":7255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7254,"column":0},"generated":{"line":7256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7255,"column":0},"generated":{"line":7257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7256,"column":0},"generated":{"line":7258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7257,"column":0},"generated":{"line":7259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7258,"column":0},"generated":{"line":7260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7259,"column":0},"generated":{"line":7261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7260,"column":0},"generated":{"line":7262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7261,"column":0},"generated":{"line":7263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7262,"column":0},"generated":{"line":7264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7263,"column":0},"generated":{"line":7265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7264,"column":0},"generated":{"line":7266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7265,"column":0},"generated":{"line":7267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7266,"column":0},"generated":{"line":7268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7267,"column":0},"generated":{"line":7269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7268,"column":0},"generated":{"line":7270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7269,"column":0},"generated":{"line":7271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7270,"column":0},"generated":{"line":7272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7271,"column":0},"generated":{"line":7273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7272,"column":0},"generated":{"line":7274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7273,"column":0},"generated":{"line":7275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7274,"column":0},"generated":{"line":7276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7275,"column":0},"generated":{"line":7277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7276,"column":0},"generated":{"line":7278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7277,"column":0},"generated":{"line":7279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7278,"column":0},"generated":{"line":7280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7279,"column":0},"generated":{"line":7281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7280,"column":0},"generated":{"line":7282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7281,"column":0},"generated":{"line":7283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7282,"column":0},"generated":{"line":7284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7283,"column":0},"generated":{"line":7285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7284,"column":0},"generated":{"line":7286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7285,"column":0},"generated":{"line":7287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7286,"column":0},"generated":{"line":7288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7287,"column":0},"generated":{"line":7289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7288,"column":0},"generated":{"line":7290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7289,"column":0},"generated":{"line":7291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7290,"column":0},"generated":{"line":7292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7291,"column":0},"generated":{"line":7293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7292,"column":0},"generated":{"line":7294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7293,"column":0},"generated":{"line":7295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7294,"column":0},"generated":{"line":7296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7295,"column":0},"generated":{"line":7297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7296,"column":0},"generated":{"line":7298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7297,"column":0},"generated":{"line":7299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7298,"column":0},"generated":{"line":7300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7299,"column":0},"generated":{"line":7301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7300,"column":0},"generated":{"line":7302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7301,"column":0},"generated":{"line":7303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7302,"column":0},"generated":{"line":7304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7303,"column":0},"generated":{"line":7305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7304,"column":0},"generated":{"line":7306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7305,"column":0},"generated":{"line":7307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7306,"column":0},"generated":{"line":7308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7307,"column":0},"generated":{"line":7309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7308,"column":0},"generated":{"line":7310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7309,"column":0},"generated":{"line":7311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7310,"column":0},"generated":{"line":7312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7311,"column":0},"generated":{"line":7313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7312,"column":0},"generated":{"line":7314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7313,"column":0},"generated":{"line":7315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7314,"column":0},"generated":{"line":7316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7315,"column":0},"generated":{"line":7317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7316,"column":0},"generated":{"line":7318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7317,"column":0},"generated":{"line":7319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7318,"column":0},"generated":{"line":7320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7319,"column":0},"generated":{"line":7321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7320,"column":0},"generated":{"line":7322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7321,"column":0},"generated":{"line":7323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7322,"column":0},"generated":{"line":7324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7323,"column":0},"generated":{"line":7325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7324,"column":0},"generated":{"line":7326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7325,"column":0},"generated":{"line":7327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7326,"column":0},"generated":{"line":7328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7327,"column":0},"generated":{"line":7329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7328,"column":0},"generated":{"line":7330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7329,"column":0},"generated":{"line":7331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7330,"column":0},"generated":{"line":7332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7331,"column":0},"generated":{"line":7333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7332,"column":0},"generated":{"line":7334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7333,"column":0},"generated":{"line":7335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7334,"column":0},"generated":{"line":7336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7335,"column":0},"generated":{"line":7337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7336,"column":0},"generated":{"line":7338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7337,"column":0},"generated":{"line":7339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7338,"column":0},"generated":{"line":7340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7339,"column":0},"generated":{"line":7341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7340,"column":0},"generated":{"line":7342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7341,"column":0},"generated":{"line":7343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7342,"column":0},"generated":{"line":7344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7343,"column":0},"generated":{"line":7345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7344,"column":0},"generated":{"line":7346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7345,"column":0},"generated":{"line":7347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7346,"column":0},"generated":{"line":7348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7347,"column":0},"generated":{"line":7349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7348,"column":0},"generated":{"line":7350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7349,"column":0},"generated":{"line":7351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7350,"column":0},"generated":{"line":7352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7351,"column":0},"generated":{"line":7353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7352,"column":0},"generated":{"line":7354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7353,"column":0},"generated":{"line":7355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7354,"column":0},"generated":{"line":7356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7355,"column":0},"generated":{"line":7357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7356,"column":0},"generated":{"line":7358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7357,"column":0},"generated":{"line":7359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7358,"column":0},"generated":{"line":7360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7359,"column":0},"generated":{"line":7361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7360,"column":0},"generated":{"line":7362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7361,"column":0},"generated":{"line":7363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7362,"column":0},"generated":{"line":7364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7363,"column":0},"generated":{"line":7365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7364,"column":0},"generated":{"line":7366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7365,"column":0},"generated":{"line":7367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7366,"column":0},"generated":{"line":7368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7367,"column":0},"generated":{"line":7369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7368,"column":0},"generated":{"line":7370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7369,"column":0},"generated":{"line":7371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7370,"column":0},"generated":{"line":7372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7371,"column":0},"generated":{"line":7373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7372,"column":0},"generated":{"line":7374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7373,"column":0},"generated":{"line":7375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7374,"column":0},"generated":{"line":7376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7375,"column":0},"generated":{"line":7377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7376,"column":0},"generated":{"line":7378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7377,"column":0},"generated":{"line":7379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7378,"column":0},"generated":{"line":7380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7379,"column":0},"generated":{"line":7381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7380,"column":0},"generated":{"line":7382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7381,"column":0},"generated":{"line":7383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7382,"column":0},"generated":{"line":7384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7383,"column":0},"generated":{"line":7385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7384,"column":0},"generated":{"line":7386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7385,"column":0},"generated":{"line":7387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7386,"column":0},"generated":{"line":7388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7387,"column":0},"generated":{"line":7389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7388,"column":0},"generated":{"line":7390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7389,"column":0},"generated":{"line":7391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7390,"column":0},"generated":{"line":7392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7391,"column":0},"generated":{"line":7393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7392,"column":0},"generated":{"line":7394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7393,"column":0},"generated":{"line":7395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7394,"column":0},"generated":{"line":7396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7395,"column":0},"generated":{"line":7397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7396,"column":0},"generated":{"line":7398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7397,"column":0},"generated":{"line":7399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7398,"column":0},"generated":{"line":7400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7399,"column":0},"generated":{"line":7401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7400,"column":0},"generated":{"line":7402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7401,"column":0},"generated":{"line":7403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7402,"column":0},"generated":{"line":7404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7403,"column":0},"generated":{"line":7405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7404,"column":0},"generated":{"line":7406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7405,"column":0},"generated":{"line":7407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7406,"column":0},"generated":{"line":7408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7407,"column":0},"generated":{"line":7409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7408,"column":0},"generated":{"line":7410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7409,"column":0},"generated":{"line":7411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7410,"column":0},"generated":{"line":7412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7411,"column":0},"generated":{"line":7413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7412,"column":0},"generated":{"line":7414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7413,"column":0},"generated":{"line":7415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7414,"column":0},"generated":{"line":7416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7415,"column":0},"generated":{"line":7417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7416,"column":0},"generated":{"line":7418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7417,"column":0},"generated":{"line":7419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7418,"column":0},"generated":{"line":7420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7419,"column":0},"generated":{"line":7421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7420,"column":0},"generated":{"line":7422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7421,"column":0},"generated":{"line":7423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7422,"column":0},"generated":{"line":7424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7423,"column":0},"generated":{"line":7425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7424,"column":0},"generated":{"line":7426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7425,"column":0},"generated":{"line":7427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7426,"column":0},"generated":{"line":7428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7427,"column":0},"generated":{"line":7429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7428,"column":0},"generated":{"line":7430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7429,"column":0},"generated":{"line":7431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7430,"column":0},"generated":{"line":7432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7431,"column":0},"generated":{"line":7433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7432,"column":0},"generated":{"line":7434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7433,"column":0},"generated":{"line":7435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7434,"column":0},"generated":{"line":7436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7435,"column":0},"generated":{"line":7437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7436,"column":0},"generated":{"line":7438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7437,"column":0},"generated":{"line":7439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7438,"column":0},"generated":{"line":7440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7439,"column":0},"generated":{"line":7441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7440,"column":0},"generated":{"line":7442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7441,"column":0},"generated":{"line":7443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7442,"column":0},"generated":{"line":7444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7443,"column":0},"generated":{"line":7445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7444,"column":0},"generated":{"line":7446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7445,"column":0},"generated":{"line":7447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7446,"column":0},"generated":{"line":7448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7447,"column":0},"generated":{"line":7449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7448,"column":0},"generated":{"line":7450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7449,"column":0},"generated":{"line":7451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7450,"column":0},"generated":{"line":7452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7451,"column":0},"generated":{"line":7453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7452,"column":0},"generated":{"line":7454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7453,"column":0},"generated":{"line":7455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7454,"column":0},"generated":{"line":7456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7455,"column":0},"generated":{"line":7457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7456,"column":0},"generated":{"line":7458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7457,"column":0},"generated":{"line":7459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7458,"column":0},"generated":{"line":7460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7459,"column":0},"generated":{"line":7461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7460,"column":0},"generated":{"line":7462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7461,"column":0},"generated":{"line":7463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7462,"column":0},"generated":{"line":7464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7463,"column":0},"generated":{"line":7465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7464,"column":0},"generated":{"line":7466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7465,"column":0},"generated":{"line":7467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7466,"column":0},"generated":{"line":7468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7467,"column":0},"generated":{"line":7469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7468,"column":0},"generated":{"line":7470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7469,"column":0},"generated":{"line":7471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7470,"column":0},"generated":{"line":7472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7471,"column":0},"generated":{"line":7473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7472,"column":0},"generated":{"line":7474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7473,"column":0},"generated":{"line":7475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7474,"column":0},"generated":{"line":7476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7475,"column":0},"generated":{"line":7477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7476,"column":0},"generated":{"line":7478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7477,"column":0},"generated":{"line":7479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7478,"column":0},"generated":{"line":7480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7479,"column":0},"generated":{"line":7481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7480,"column":0},"generated":{"line":7482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7481,"column":0},"generated":{"line":7483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7482,"column":0},"generated":{"line":7484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7483,"column":0},"generated":{"line":7485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7484,"column":0},"generated":{"line":7486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7485,"column":0},"generated":{"line":7487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7486,"column":0},"generated":{"line":7488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7487,"column":0},"generated":{"line":7489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7488,"column":0},"generated":{"line":7490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7489,"column":0},"generated":{"line":7491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7490,"column":0},"generated":{"line":7492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7491,"column":0},"generated":{"line":7493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7492,"column":0},"generated":{"line":7494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7493,"column":0},"generated":{"line":7495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7494,"column":0},"generated":{"line":7496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7495,"column":0},"generated":{"line":7497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7496,"column":0},"generated":{"line":7498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7497,"column":0},"generated":{"line":7499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7498,"column":0},"generated":{"line":7500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7499,"column":0},"generated":{"line":7501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7500,"column":0},"generated":{"line":7502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7501,"column":0},"generated":{"line":7503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7502,"column":0},"generated":{"line":7504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7503,"column":0},"generated":{"line":7505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7504,"column":0},"generated":{"line":7506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7505,"column":0},"generated":{"line":7507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7506,"column":0},"generated":{"line":7508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7507,"column":0},"generated":{"line":7509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7508,"column":0},"generated":{"line":7510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7509,"column":0},"generated":{"line":7511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7510,"column":0},"generated":{"line":7512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7511,"column":0},"generated":{"line":7513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7512,"column":0},"generated":{"line":7514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7513,"column":0},"generated":{"line":7515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7514,"column":0},"generated":{"line":7516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7515,"column":0},"generated":{"line":7517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7516,"column":0},"generated":{"line":7518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7517,"column":0},"generated":{"line":7519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7518,"column":0},"generated":{"line":7520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7519,"column":0},"generated":{"line":7521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7520,"column":0},"generated":{"line":7522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7521,"column":0},"generated":{"line":7523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7522,"column":0},"generated":{"line":7524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7523,"column":0},"generated":{"line":7525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7524,"column":0},"generated":{"line":7526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7525,"column":0},"generated":{"line":7527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7526,"column":0},"generated":{"line":7528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7527,"column":0},"generated":{"line":7529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7528,"column":0},"generated":{"line":7530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7529,"column":0},"generated":{"line":7531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7530,"column":0},"generated":{"line":7532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7531,"column":0},"generated":{"line":7533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7532,"column":0},"generated":{"line":7534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7533,"column":0},"generated":{"line":7535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7534,"column":0},"generated":{"line":7536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7535,"column":0},"generated":{"line":7537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7536,"column":0},"generated":{"line":7538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7537,"column":0},"generated":{"line":7539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7538,"column":0},"generated":{"line":7540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7539,"column":0},"generated":{"line":7541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7540,"column":0},"generated":{"line":7542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7541,"column":0},"generated":{"line":7543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7542,"column":0},"generated":{"line":7544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7543,"column":0},"generated":{"line":7545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7544,"column":0},"generated":{"line":7546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7545,"column":0},"generated":{"line":7547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7546,"column":0},"generated":{"line":7548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7547,"column":0},"generated":{"line":7549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7548,"column":0},"generated":{"line":7550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7549,"column":0},"generated":{"line":7551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7550,"column":0},"generated":{"line":7552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7551,"column":0},"generated":{"line":7553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7552,"column":0},"generated":{"line":7554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7553,"column":0},"generated":{"line":7555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7554,"column":0},"generated":{"line":7556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7555,"column":0},"generated":{"line":7557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7556,"column":0},"generated":{"line":7558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7557,"column":0},"generated":{"line":7559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7558,"column":0},"generated":{"line":7560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7559,"column":0},"generated":{"line":7561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7560,"column":0},"generated":{"line":7562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7561,"column":0},"generated":{"line":7563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7562,"column":0},"generated":{"line":7564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7563,"column":0},"generated":{"line":7565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7564,"column":0},"generated":{"line":7566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7565,"column":0},"generated":{"line":7567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7566,"column":0},"generated":{"line":7568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7567,"column":0},"generated":{"line":7569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7568,"column":0},"generated":{"line":7570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7569,"column":0},"generated":{"line":7571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7570,"column":0},"generated":{"line":7572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7571,"column":0},"generated":{"line":7573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7572,"column":0},"generated":{"line":7574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7573,"column":0},"generated":{"line":7575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7574,"column":0},"generated":{"line":7576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7575,"column":0},"generated":{"line":7577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7576,"column":0},"generated":{"line":7578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7577,"column":0},"generated":{"line":7579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7578,"column":0},"generated":{"line":7580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7579,"column":0},"generated":{"line":7581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7580,"column":0},"generated":{"line":7582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7581,"column":0},"generated":{"line":7583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7582,"column":0},"generated":{"line":7584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7583,"column":0},"generated":{"line":7585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7584,"column":0},"generated":{"line":7586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7585,"column":0},"generated":{"line":7587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7586,"column":0},"generated":{"line":7588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7587,"column":0},"generated":{"line":7589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7588,"column":0},"generated":{"line":7590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7589,"column":0},"generated":{"line":7591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7590,"column":0},"generated":{"line":7592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7591,"column":0},"generated":{"line":7593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7592,"column":0},"generated":{"line":7594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7593,"column":0},"generated":{"line":7595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7594,"column":0},"generated":{"line":7596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7595,"column":0},"generated":{"line":7597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7596,"column":0},"generated":{"line":7598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7597,"column":0},"generated":{"line":7599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7598,"column":0},"generated":{"line":7600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7599,"column":0},"generated":{"line":7601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7600,"column":0},"generated":{"line":7602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7601,"column":0},"generated":{"line":7603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7602,"column":0},"generated":{"line":7604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7603,"column":0},"generated":{"line":7605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7604,"column":0},"generated":{"line":7606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7605,"column":0},"generated":{"line":7607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7606,"column":0},"generated":{"line":7608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7607,"column":0},"generated":{"line":7609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7608,"column":0},"generated":{"line":7610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7609,"column":0},"generated":{"line":7611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7610,"column":0},"generated":{"line":7612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7611,"column":0},"generated":{"line":7613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7612,"column":0},"generated":{"line":7614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7613,"column":0},"generated":{"line":7615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7614,"column":0},"generated":{"line":7616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7615,"column":0},"generated":{"line":7617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7616,"column":0},"generated":{"line":7618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7617,"column":0},"generated":{"line":7619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7618,"column":0},"generated":{"line":7620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7619,"column":0},"generated":{"line":7621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7620,"column":0},"generated":{"line":7622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7621,"column":0},"generated":{"line":7623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7622,"column":0},"generated":{"line":7624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7623,"column":0},"generated":{"line":7625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7624,"column":0},"generated":{"line":7626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7625,"column":0},"generated":{"line":7627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7626,"column":0},"generated":{"line":7628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7627,"column":0},"generated":{"line":7629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7628,"column":0},"generated":{"line":7630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7629,"column":0},"generated":{"line":7631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7630,"column":0},"generated":{"line":7632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7631,"column":0},"generated":{"line":7633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7632,"column":0},"generated":{"line":7634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7633,"column":0},"generated":{"line":7635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7634,"column":0},"generated":{"line":7636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7635,"column":0},"generated":{"line":7637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7636,"column":0},"generated":{"line":7638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7637,"column":0},"generated":{"line":7639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7638,"column":0},"generated":{"line":7640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7639,"column":0},"generated":{"line":7641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7640,"column":0},"generated":{"line":7642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7641,"column":0},"generated":{"line":7643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7642,"column":0},"generated":{"line":7644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7643,"column":0},"generated":{"line":7645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7644,"column":0},"generated":{"line":7646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7645,"column":0},"generated":{"line":7647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7646,"column":0},"generated":{"line":7648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7647,"column":0},"generated":{"line":7649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7648,"column":0},"generated":{"line":7650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7649,"column":0},"generated":{"line":7651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7650,"column":0},"generated":{"line":7652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7651,"column":0},"generated":{"line":7653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7652,"column":0},"generated":{"line":7654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7653,"column":0},"generated":{"line":7655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7654,"column":0},"generated":{"line":7656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7655,"column":0},"generated":{"line":7657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7656,"column":0},"generated":{"line":7658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7657,"column":0},"generated":{"line":7659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7658,"column":0},"generated":{"line":7660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7659,"column":0},"generated":{"line":7661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7660,"column":0},"generated":{"line":7662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7661,"column":0},"generated":{"line":7663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7662,"column":0},"generated":{"line":7664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7663,"column":0},"generated":{"line":7665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7664,"column":0},"generated":{"line":7666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7665,"column":0},"generated":{"line":7667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7666,"column":0},"generated":{"line":7668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7667,"column":0},"generated":{"line":7669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7668,"column":0},"generated":{"line":7670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7669,"column":0},"generated":{"line":7671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7670,"column":0},"generated":{"line":7672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7671,"column":0},"generated":{"line":7673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7672,"column":0},"generated":{"line":7674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7673,"column":0},"generated":{"line":7675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7674,"column":0},"generated":{"line":7676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7675,"column":0},"generated":{"line":7677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7676,"column":0},"generated":{"line":7678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7677,"column":0},"generated":{"line":7679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7678,"column":0},"generated":{"line":7680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7679,"column":0},"generated":{"line":7681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7680,"column":0},"generated":{"line":7682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7681,"column":0},"generated":{"line":7683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7682,"column":0},"generated":{"line":7684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7683,"column":0},"generated":{"line":7685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7684,"column":0},"generated":{"line":7686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7685,"column":0},"generated":{"line":7687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7686,"column":0},"generated":{"line":7688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7687,"column":0},"generated":{"line":7689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7688,"column":0},"generated":{"line":7690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7689,"column":0},"generated":{"line":7691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7690,"column":0},"generated":{"line":7692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7691,"column":0},"generated":{"line":7693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7692,"column":0},"generated":{"line":7694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7693,"column":0},"generated":{"line":7695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7694,"column":0},"generated":{"line":7696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7695,"column":0},"generated":{"line":7697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7696,"column":0},"generated":{"line":7698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7697,"column":0},"generated":{"line":7699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7698,"column":0},"generated":{"line":7700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7699,"column":0},"generated":{"line":7701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7700,"column":0},"generated":{"line":7702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7701,"column":0},"generated":{"line":7703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7702,"column":0},"generated":{"line":7704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7703,"column":0},"generated":{"line":7705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7704,"column":0},"generated":{"line":7706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7705,"column":0},"generated":{"line":7707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7706,"column":0},"generated":{"line":7708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7707,"column":0},"generated":{"line":7709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7708,"column":0},"generated":{"line":7710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7709,"column":0},"generated":{"line":7711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7710,"column":0},"generated":{"line":7712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7711,"column":0},"generated":{"line":7713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7712,"column":0},"generated":{"line":7714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7713,"column":0},"generated":{"line":7715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7714,"column":0},"generated":{"line":7716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7715,"column":0},"generated":{"line":7717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7716,"column":0},"generated":{"line":7718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7717,"column":0},"generated":{"line":7719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7718,"column":0},"generated":{"line":7720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7719,"column":0},"generated":{"line":7721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7720,"column":0},"generated":{"line":7722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7721,"column":0},"generated":{"line":7723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7722,"column":0},"generated":{"line":7724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7723,"column":0},"generated":{"line":7725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7724,"column":0},"generated":{"line":7726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7725,"column":0},"generated":{"line":7727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7726,"column":0},"generated":{"line":7728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7727,"column":0},"generated":{"line":7729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7728,"column":0},"generated":{"line":7730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7729,"column":0},"generated":{"line":7731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7730,"column":0},"generated":{"line":7732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7731,"column":0},"generated":{"line":7733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7732,"column":0},"generated":{"line":7734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7733,"column":0},"generated":{"line":7735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7734,"column":0},"generated":{"line":7736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7735,"column":0},"generated":{"line":7737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7736,"column":0},"generated":{"line":7738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7737,"column":0},"generated":{"line":7739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7738,"column":0},"generated":{"line":7740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7739,"column":0},"generated":{"line":7741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7740,"column":0},"generated":{"line":7742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7741,"column":0},"generated":{"line":7743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7742,"column":0},"generated":{"line":7744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7743,"column":0},"generated":{"line":7745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7744,"column":0},"generated":{"line":7746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7745,"column":0},"generated":{"line":7747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7746,"column":0},"generated":{"line":7748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7747,"column":0},"generated":{"line":7749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7748,"column":0},"generated":{"line":7750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7749,"column":0},"generated":{"line":7751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7750,"column":0},"generated":{"line":7752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7751,"column":0},"generated":{"line":7753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7752,"column":0},"generated":{"line":7754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7753,"column":0},"generated":{"line":7755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7754,"column":0},"generated":{"line":7756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7755,"column":0},"generated":{"line":7757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7756,"column":0},"generated":{"line":7758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7757,"column":0},"generated":{"line":7759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7758,"column":0},"generated":{"line":7760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7759,"column":0},"generated":{"line":7761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7760,"column":0},"generated":{"line":7762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7761,"column":0},"generated":{"line":7763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7762,"column":0},"generated":{"line":7764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7763,"column":0},"generated":{"line":7765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7764,"column":0},"generated":{"line":7766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7765,"column":0},"generated":{"line":7767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7766,"column":0},"generated":{"line":7768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7767,"column":0},"generated":{"line":7769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7768,"column":0},"generated":{"line":7770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7769,"column":0},"generated":{"line":7771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7770,"column":0},"generated":{"line":7772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7771,"column":0},"generated":{"line":7773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7772,"column":0},"generated":{"line":7774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7773,"column":0},"generated":{"line":7775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7774,"column":0},"generated":{"line":7776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7775,"column":0},"generated":{"line":7777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7776,"column":0},"generated":{"line":7778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7777,"column":0},"generated":{"line":7779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7778,"column":0},"generated":{"line":7780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7779,"column":0},"generated":{"line":7781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7780,"column":0},"generated":{"line":7782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7781,"column":0},"generated":{"line":7783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7782,"column":0},"generated":{"line":7784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7783,"column":0},"generated":{"line":7785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7784,"column":0},"generated":{"line":7786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7785,"column":0},"generated":{"line":7787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7786,"column":0},"generated":{"line":7788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7787,"column":0},"generated":{"line":7789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7788,"column":0},"generated":{"line":7790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7789,"column":0},"generated":{"line":7791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7790,"column":0},"generated":{"line":7792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7791,"column":0},"generated":{"line":7793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7792,"column":0},"generated":{"line":7794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7793,"column":0},"generated":{"line":7795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7794,"column":0},"generated":{"line":7796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7795,"column":0},"generated":{"line":7797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7796,"column":0},"generated":{"line":7798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7797,"column":0},"generated":{"line":7799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7798,"column":0},"generated":{"line":7800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7799,"column":0},"generated":{"line":7801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7800,"column":0},"generated":{"line":7802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7801,"column":0},"generated":{"line":7803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7802,"column":0},"generated":{"line":7804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7803,"column":0},"generated":{"line":7805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7804,"column":0},"generated":{"line":7806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7805,"column":0},"generated":{"line":7807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7806,"column":0},"generated":{"line":7808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7807,"column":0},"generated":{"line":7809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7808,"column":0},"generated":{"line":7810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7809,"column":0},"generated":{"line":7811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7810,"column":0},"generated":{"line":7812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7811,"column":0},"generated":{"line":7813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7812,"column":0},"generated":{"line":7814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7813,"column":0},"generated":{"line":7815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7814,"column":0},"generated":{"line":7816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7815,"column":0},"generated":{"line":7817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7816,"column":0},"generated":{"line":7818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7817,"column":0},"generated":{"line":7819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7818,"column":0},"generated":{"line":7820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7819,"column":0},"generated":{"line":7821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7820,"column":0},"generated":{"line":7822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7821,"column":0},"generated":{"line":7823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7822,"column":0},"generated":{"line":7824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7823,"column":0},"generated":{"line":7825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7824,"column":0},"generated":{"line":7826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7825,"column":0},"generated":{"line":7827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7826,"column":0},"generated":{"line":7828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7827,"column":0},"generated":{"line":7829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7828,"column":0},"generated":{"line":7830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7829,"column":0},"generated":{"line":7831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7830,"column":0},"generated":{"line":7832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7831,"column":0},"generated":{"line":7833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7832,"column":0},"generated":{"line":7834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7833,"column":0},"generated":{"line":7835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7834,"column":0},"generated":{"line":7836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7835,"column":0},"generated":{"line":7837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7836,"column":0},"generated":{"line":7838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7837,"column":0},"generated":{"line":7839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7838,"column":0},"generated":{"line":7840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7839,"column":0},"generated":{"line":7841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7840,"column":0},"generated":{"line":7842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7841,"column":0},"generated":{"line":7843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7842,"column":0},"generated":{"line":7844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7843,"column":0},"generated":{"line":7845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7844,"column":0},"generated":{"line":7846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7845,"column":0},"generated":{"line":7847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7846,"column":0},"generated":{"line":7848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7847,"column":0},"generated":{"line":7849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7848,"column":0},"generated":{"line":7850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7849,"column":0},"generated":{"line":7851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7850,"column":0},"generated":{"line":7852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7851,"column":0},"generated":{"line":7853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7852,"column":0},"generated":{"line":7854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7853,"column":0},"generated":{"line":7855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7854,"column":0},"generated":{"line":7856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7855,"column":0},"generated":{"line":7857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7856,"column":0},"generated":{"line":7858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7857,"column":0},"generated":{"line":7859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7858,"column":0},"generated":{"line":7860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7859,"column":0},"generated":{"line":7861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7860,"column":0},"generated":{"line":7862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7861,"column":0},"generated":{"line":7863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7862,"column":0},"generated":{"line":7864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7863,"column":0},"generated":{"line":7865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7864,"column":0},"generated":{"line":7866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7865,"column":0},"generated":{"line":7867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7866,"column":0},"generated":{"line":7868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7867,"column":0},"generated":{"line":7869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7868,"column":0},"generated":{"line":7870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7869,"column":0},"generated":{"line":7871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7870,"column":0},"generated":{"line":7872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7871,"column":0},"generated":{"line":7873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7872,"column":0},"generated":{"line":7874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7873,"column":0},"generated":{"line":7875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7874,"column":0},"generated":{"line":7876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7875,"column":0},"generated":{"line":7877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7876,"column":0},"generated":{"line":7878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7877,"column":0},"generated":{"line":7879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7878,"column":0},"generated":{"line":7880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7879,"column":0},"generated":{"line":7881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7880,"column":0},"generated":{"line":7882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7881,"column":0},"generated":{"line":7883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7882,"column":0},"generated":{"line":7884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7883,"column":0},"generated":{"line":7885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7884,"column":0},"generated":{"line":7886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7885,"column":0},"generated":{"line":7887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7886,"column":0},"generated":{"line":7888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7887,"column":0},"generated":{"line":7889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7888,"column":0},"generated":{"line":7890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7889,"column":0},"generated":{"line":7891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7890,"column":0},"generated":{"line":7892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7891,"column":0},"generated":{"line":7893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7892,"column":0},"generated":{"line":7894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7893,"column":0},"generated":{"line":7895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7894,"column":0},"generated":{"line":7896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7895,"column":0},"generated":{"line":7897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7896,"column":0},"generated":{"line":7898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7897,"column":0},"generated":{"line":7899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7898,"column":0},"generated":{"line":7900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7899,"column":0},"generated":{"line":7901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7900,"column":0},"generated":{"line":7902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7901,"column":0},"generated":{"line":7903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7902,"column":0},"generated":{"line":7904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7903,"column":0},"generated":{"line":7905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7904,"column":0},"generated":{"line":7906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7905,"column":0},"generated":{"line":7907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7906,"column":0},"generated":{"line":7908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7907,"column":0},"generated":{"line":7909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7908,"column":0},"generated":{"line":7910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7909,"column":0},"generated":{"line":7911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7910,"column":0},"generated":{"line":7912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7911,"column":0},"generated":{"line":7913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7912,"column":0},"generated":{"line":7914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7913,"column":0},"generated":{"line":7915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7914,"column":0},"generated":{"line":7916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7915,"column":0},"generated":{"line":7917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7916,"column":0},"generated":{"line":7918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7917,"column":0},"generated":{"line":7919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7918,"column":0},"generated":{"line":7920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7919,"column":0},"generated":{"line":7921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7920,"column":0},"generated":{"line":7922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7921,"column":0},"generated":{"line":7923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7922,"column":0},"generated":{"line":7924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7923,"column":0},"generated":{"line":7925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7924,"column":0},"generated":{"line":7926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7925,"column":0},"generated":{"line":7927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7926,"column":0},"generated":{"line":7928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7927,"column":0},"generated":{"line":7929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7928,"column":0},"generated":{"line":7930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7929,"column":0},"generated":{"line":7931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7930,"column":0},"generated":{"line":7932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7931,"column":0},"generated":{"line":7933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7932,"column":0},"generated":{"line":7934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7933,"column":0},"generated":{"line":7935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7934,"column":0},"generated":{"line":7936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7935,"column":0},"generated":{"line":7937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7936,"column":0},"generated":{"line":7938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7937,"column":0},"generated":{"line":7939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7938,"column":0},"generated":{"line":7940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7939,"column":0},"generated":{"line":7941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7940,"column":0},"generated":{"line":7942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7941,"column":0},"generated":{"line":7943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7942,"column":0},"generated":{"line":7944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7943,"column":0},"generated":{"line":7945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7944,"column":0},"generated":{"line":7946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7945,"column":0},"generated":{"line":7947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7946,"column":0},"generated":{"line":7948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7947,"column":0},"generated":{"line":7949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7948,"column":0},"generated":{"line":7950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7949,"column":0},"generated":{"line":7951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7950,"column":0},"generated":{"line":7952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7951,"column":0},"generated":{"line":7953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7952,"column":0},"generated":{"line":7954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7953,"column":0},"generated":{"line":7955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7954,"column":0},"generated":{"line":7956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7955,"column":0},"generated":{"line":7957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7956,"column":0},"generated":{"line":7958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7957,"column":0},"generated":{"line":7959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7958,"column":0},"generated":{"line":7960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7959,"column":0},"generated":{"line":7961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7960,"column":0},"generated":{"line":7962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7961,"column":0},"generated":{"line":7963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7962,"column":0},"generated":{"line":7964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7963,"column":0},"generated":{"line":7965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7964,"column":0},"generated":{"line":7966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7965,"column":0},"generated":{"line":7967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7966,"column":0},"generated":{"line":7968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7967,"column":0},"generated":{"line":7969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7968,"column":0},"generated":{"line":7970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7969,"column":0},"generated":{"line":7971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7970,"column":0},"generated":{"line":7972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7971,"column":0},"generated":{"line":7973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7972,"column":0},"generated":{"line":7974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7973,"column":0},"generated":{"line":7975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7974,"column":0},"generated":{"line":7976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7975,"column":0},"generated":{"line":7977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7976,"column":0},"generated":{"line":7978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7977,"column":0},"generated":{"line":7979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7978,"column":0},"generated":{"line":7980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7979,"column":0},"generated":{"line":7981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7980,"column":0},"generated":{"line":7982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7981,"column":0},"generated":{"line":7983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7982,"column":0},"generated":{"line":7984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7983,"column":0},"generated":{"line":7985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7984,"column":0},"generated":{"line":7986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7985,"column":0},"generated":{"line":7987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7986,"column":0},"generated":{"line":7988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7987,"column":0},"generated":{"line":7989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7988,"column":0},"generated":{"line":7990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7989,"column":0},"generated":{"line":7991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7990,"column":0},"generated":{"line":7992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7991,"column":0},"generated":{"line":7993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7992,"column":0},"generated":{"line":7994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7993,"column":0},"generated":{"line":7995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7994,"column":0},"generated":{"line":7996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7995,"column":0},"generated":{"line":7997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7996,"column":0},"generated":{"line":7998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7997,"column":0},"generated":{"line":7999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7998,"column":0},"generated":{"line":8000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":7999,"column":0},"generated":{"line":8001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8000,"column":0},"generated":{"line":8002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8001,"column":0},"generated":{"line":8003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8002,"column":0},"generated":{"line":8004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8003,"column":0},"generated":{"line":8005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8004,"column":0},"generated":{"line":8006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8005,"column":0},"generated":{"line":8007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8006,"column":0},"generated":{"line":8008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8007,"column":0},"generated":{"line":8009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8008,"column":0},"generated":{"line":8010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8009,"column":0},"generated":{"line":8011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8010,"column":0},"generated":{"line":8012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8011,"column":0},"generated":{"line":8013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8012,"column":0},"generated":{"line":8014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8013,"column":0},"generated":{"line":8015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8014,"column":0},"generated":{"line":8016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8015,"column":0},"generated":{"line":8017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8016,"column":0},"generated":{"line":8018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8017,"column":0},"generated":{"line":8019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8018,"column":0},"generated":{"line":8020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8019,"column":0},"generated":{"line":8021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8020,"column":0},"generated":{"line":8022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8021,"column":0},"generated":{"line":8023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8022,"column":0},"generated":{"line":8024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8023,"column":0},"generated":{"line":8025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8024,"column":0},"generated":{"line":8026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8025,"column":0},"generated":{"line":8027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8026,"column":0},"generated":{"line":8028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8027,"column":0},"generated":{"line":8029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8028,"column":0},"generated":{"line":8030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8029,"column":0},"generated":{"line":8031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8030,"column":0},"generated":{"line":8032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8031,"column":0},"generated":{"line":8033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8032,"column":0},"generated":{"line":8034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8033,"column":0},"generated":{"line":8035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8034,"column":0},"generated":{"line":8036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8035,"column":0},"generated":{"line":8037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8036,"column":0},"generated":{"line":8038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8037,"column":0},"generated":{"line":8039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8038,"column":0},"generated":{"line":8040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8039,"column":0},"generated":{"line":8041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8040,"column":0},"generated":{"line":8042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8041,"column":0},"generated":{"line":8043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8042,"column":0},"generated":{"line":8044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8043,"column":0},"generated":{"line":8045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8044,"column":0},"generated":{"line":8046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8045,"column":0},"generated":{"line":8047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8046,"column":0},"generated":{"line":8048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8047,"column":0},"generated":{"line":8049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8048,"column":0},"generated":{"line":8050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8049,"column":0},"generated":{"line":8051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8050,"column":0},"generated":{"line":8052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8051,"column":0},"generated":{"line":8053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8052,"column":0},"generated":{"line":8054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8053,"column":0},"generated":{"line":8055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8054,"column":0},"generated":{"line":8056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8055,"column":0},"generated":{"line":8057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8056,"column":0},"generated":{"line":8058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8057,"column":0},"generated":{"line":8059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8058,"column":0},"generated":{"line":8060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8059,"column":0},"generated":{"line":8061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8060,"column":0},"generated":{"line":8062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8061,"column":0},"generated":{"line":8063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8062,"column":0},"generated":{"line":8064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8063,"column":0},"generated":{"line":8065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8064,"column":0},"generated":{"line":8066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8065,"column":0},"generated":{"line":8067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8066,"column":0},"generated":{"line":8068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8067,"column":0},"generated":{"line":8069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8068,"column":0},"generated":{"line":8070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8069,"column":0},"generated":{"line":8071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8070,"column":0},"generated":{"line":8072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8071,"column":0},"generated":{"line":8073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8072,"column":0},"generated":{"line":8074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8073,"column":0},"generated":{"line":8075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8074,"column":0},"generated":{"line":8076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8075,"column":0},"generated":{"line":8077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8076,"column":0},"generated":{"line":8078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8077,"column":0},"generated":{"line":8079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8078,"column":0},"generated":{"line":8080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8079,"column":0},"generated":{"line":8081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8080,"column":0},"generated":{"line":8082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8081,"column":0},"generated":{"line":8083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8082,"column":0},"generated":{"line":8084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8083,"column":0},"generated":{"line":8085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8084,"column":0},"generated":{"line":8086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8085,"column":0},"generated":{"line":8087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8086,"column":0},"generated":{"line":8088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8087,"column":0},"generated":{"line":8089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8088,"column":0},"generated":{"line":8090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8089,"column":0},"generated":{"line":8091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8090,"column":0},"generated":{"line":8092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8091,"column":0},"generated":{"line":8093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8092,"column":0},"generated":{"line":8094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8093,"column":0},"generated":{"line":8095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8094,"column":0},"generated":{"line":8096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8095,"column":0},"generated":{"line":8097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8096,"column":0},"generated":{"line":8098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8097,"column":0},"generated":{"line":8099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8098,"column":0},"generated":{"line":8100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8099,"column":0},"generated":{"line":8101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8100,"column":0},"generated":{"line":8102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8101,"column":0},"generated":{"line":8103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8102,"column":0},"generated":{"line":8104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8103,"column":0},"generated":{"line":8105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8104,"column":0},"generated":{"line":8106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8105,"column":0},"generated":{"line":8107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8106,"column":0},"generated":{"line":8108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8107,"column":0},"generated":{"line":8109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8108,"column":0},"generated":{"line":8110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8109,"column":0},"generated":{"line":8111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8110,"column":0},"generated":{"line":8112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8111,"column":0},"generated":{"line":8113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8112,"column":0},"generated":{"line":8114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8113,"column":0},"generated":{"line":8115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8114,"column":0},"generated":{"line":8116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8115,"column":0},"generated":{"line":8117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8116,"column":0},"generated":{"line":8118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8117,"column":0},"generated":{"line":8119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8118,"column":0},"generated":{"line":8120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8119,"column":0},"generated":{"line":8121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8120,"column":0},"generated":{"line":8122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8121,"column":0},"generated":{"line":8123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8122,"column":0},"generated":{"line":8124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8123,"column":0},"generated":{"line":8125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8124,"column":0},"generated":{"line":8126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8125,"column":0},"generated":{"line":8127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8126,"column":0},"generated":{"line":8128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8127,"column":0},"generated":{"line":8129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8128,"column":0},"generated":{"line":8130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8129,"column":0},"generated":{"line":8131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8130,"column":0},"generated":{"line":8132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8131,"column":0},"generated":{"line":8133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8132,"column":0},"generated":{"line":8134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8133,"column":0},"generated":{"line":8135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8134,"column":0},"generated":{"line":8136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8135,"column":0},"generated":{"line":8137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8136,"column":0},"generated":{"line":8138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8137,"column":0},"generated":{"line":8139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8138,"column":0},"generated":{"line":8140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8139,"column":0},"generated":{"line":8141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8140,"column":0},"generated":{"line":8142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8141,"column":0},"generated":{"line":8143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8142,"column":0},"generated":{"line":8144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8143,"column":0},"generated":{"line":8145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8144,"column":0},"generated":{"line":8146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8145,"column":0},"generated":{"line":8147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8146,"column":0},"generated":{"line":8148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8147,"column":0},"generated":{"line":8149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8148,"column":0},"generated":{"line":8150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8149,"column":0},"generated":{"line":8151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8150,"column":0},"generated":{"line":8152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8151,"column":0},"generated":{"line":8153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8152,"column":0},"generated":{"line":8154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8153,"column":0},"generated":{"line":8155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8154,"column":0},"generated":{"line":8156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8155,"column":0},"generated":{"line":8157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8156,"column":0},"generated":{"line":8158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8157,"column":0},"generated":{"line":8159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8158,"column":0},"generated":{"line":8160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8159,"column":0},"generated":{"line":8161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8160,"column":0},"generated":{"line":8162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8161,"column":0},"generated":{"line":8163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8162,"column":0},"generated":{"line":8164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8163,"column":0},"generated":{"line":8165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8164,"column":0},"generated":{"line":8166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8165,"column":0},"generated":{"line":8167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8166,"column":0},"generated":{"line":8168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8167,"column":0},"generated":{"line":8169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8168,"column":0},"generated":{"line":8170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8169,"column":0},"generated":{"line":8171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8170,"column":0},"generated":{"line":8172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8171,"column":0},"generated":{"line":8173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8172,"column":0},"generated":{"line":8174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8173,"column":0},"generated":{"line":8175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8174,"column":0},"generated":{"line":8176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8175,"column":0},"generated":{"line":8177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8176,"column":0},"generated":{"line":8178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8177,"column":0},"generated":{"line":8179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8178,"column":0},"generated":{"line":8180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8179,"column":0},"generated":{"line":8181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8180,"column":0},"generated":{"line":8182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8181,"column":0},"generated":{"line":8183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8182,"column":0},"generated":{"line":8184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8183,"column":0},"generated":{"line":8185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8184,"column":0},"generated":{"line":8186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8185,"column":0},"generated":{"line":8187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8186,"column":0},"generated":{"line":8188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8187,"column":0},"generated":{"line":8189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8188,"column":0},"generated":{"line":8190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8189,"column":0},"generated":{"line":8191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8190,"column":0},"generated":{"line":8192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8191,"column":0},"generated":{"line":8193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8192,"column":0},"generated":{"line":8194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8193,"column":0},"generated":{"line":8195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8194,"column":0},"generated":{"line":8196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8195,"column":0},"generated":{"line":8197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8196,"column":0},"generated":{"line":8198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8197,"column":0},"generated":{"line":8199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8198,"column":0},"generated":{"line":8200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8199,"column":0},"generated":{"line":8201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8200,"column":0},"generated":{"line":8202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8201,"column":0},"generated":{"line":8203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8202,"column":0},"generated":{"line":8204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8203,"column":0},"generated":{"line":8205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8204,"column":0},"generated":{"line":8206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8205,"column":0},"generated":{"line":8207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8206,"column":0},"generated":{"line":8208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8207,"column":0},"generated":{"line":8209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8208,"column":0},"generated":{"line":8210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8209,"column":0},"generated":{"line":8211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8210,"column":0},"generated":{"line":8212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8211,"column":0},"generated":{"line":8213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8212,"column":0},"generated":{"line":8214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8213,"column":0},"generated":{"line":8215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8214,"column":0},"generated":{"line":8216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8215,"column":0},"generated":{"line":8217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8216,"column":0},"generated":{"line":8218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8217,"column":0},"generated":{"line":8219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8218,"column":0},"generated":{"line":8220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8219,"column":0},"generated":{"line":8221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8220,"column":0},"generated":{"line":8222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8221,"column":0},"generated":{"line":8223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8222,"column":0},"generated":{"line":8224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8223,"column":0},"generated":{"line":8225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8224,"column":0},"generated":{"line":8226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8225,"column":0},"generated":{"line":8227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8226,"column":0},"generated":{"line":8228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8227,"column":0},"generated":{"line":8229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8228,"column":0},"generated":{"line":8230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8229,"column":0},"generated":{"line":8231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8230,"column":0},"generated":{"line":8232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8231,"column":0},"generated":{"line":8233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8232,"column":0},"generated":{"line":8234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8233,"column":0},"generated":{"line":8235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8234,"column":0},"generated":{"line":8236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8235,"column":0},"generated":{"line":8237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8236,"column":0},"generated":{"line":8238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8237,"column":0},"generated":{"line":8239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8238,"column":0},"generated":{"line":8240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8239,"column":0},"generated":{"line":8241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8240,"column":0},"generated":{"line":8242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8241,"column":0},"generated":{"line":8243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8242,"column":0},"generated":{"line":8244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8243,"column":0},"generated":{"line":8245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8244,"column":0},"generated":{"line":8246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8245,"column":0},"generated":{"line":8247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8246,"column":0},"generated":{"line":8248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8247,"column":0},"generated":{"line":8249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8248,"column":0},"generated":{"line":8250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8249,"column":0},"generated":{"line":8251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8250,"column":0},"generated":{"line":8252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8251,"column":0},"generated":{"line":8253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8252,"column":0},"generated":{"line":8254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8253,"column":0},"generated":{"line":8255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8254,"column":0},"generated":{"line":8256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8255,"column":0},"generated":{"line":8257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8256,"column":0},"generated":{"line":8258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8257,"column":0},"generated":{"line":8259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8258,"column":0},"generated":{"line":8260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8259,"column":0},"generated":{"line":8261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8260,"column":0},"generated":{"line":8262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8261,"column":0},"generated":{"line":8263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8262,"column":0},"generated":{"line":8264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8263,"column":0},"generated":{"line":8265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8264,"column":0},"generated":{"line":8266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8265,"column":0},"generated":{"line":8267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8266,"column":0},"generated":{"line":8268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8267,"column":0},"generated":{"line":8269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8268,"column":0},"generated":{"line":8270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8269,"column":0},"generated":{"line":8271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8270,"column":0},"generated":{"line":8272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8271,"column":0},"generated":{"line":8273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8272,"column":0},"generated":{"line":8274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8273,"column":0},"generated":{"line":8275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8274,"column":0},"generated":{"line":8276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8275,"column":0},"generated":{"line":8277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8276,"column":0},"generated":{"line":8278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8277,"column":0},"generated":{"line":8279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8278,"column":0},"generated":{"line":8280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8279,"column":0},"generated":{"line":8281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8280,"column":0},"generated":{"line":8282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8281,"column":0},"generated":{"line":8283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8282,"column":0},"generated":{"line":8284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8283,"column":0},"generated":{"line":8285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8284,"column":0},"generated":{"line":8286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8285,"column":0},"generated":{"line":8287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8286,"column":0},"generated":{"line":8288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8287,"column":0},"generated":{"line":8289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8288,"column":0},"generated":{"line":8290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8289,"column":0},"generated":{"line":8291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8290,"column":0},"generated":{"line":8292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8291,"column":0},"generated":{"line":8293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8292,"column":0},"generated":{"line":8294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8293,"column":0},"generated":{"line":8295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8294,"column":0},"generated":{"line":8296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8295,"column":0},"generated":{"line":8297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8296,"column":0},"generated":{"line":8298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8297,"column":0},"generated":{"line":8299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8298,"column":0},"generated":{"line":8300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8299,"column":0},"generated":{"line":8301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8300,"column":0},"generated":{"line":8302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8301,"column":0},"generated":{"line":8303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8302,"column":0},"generated":{"line":8304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8303,"column":0},"generated":{"line":8305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8304,"column":0},"generated":{"line":8306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8305,"column":0},"generated":{"line":8307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8306,"column":0},"generated":{"line":8308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8307,"column":0},"generated":{"line":8309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8308,"column":0},"generated":{"line":8310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8309,"column":0},"generated":{"line":8311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8310,"column":0},"generated":{"line":8312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8311,"column":0},"generated":{"line":8313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8312,"column":0},"generated":{"line":8314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8313,"column":0},"generated":{"line":8315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8314,"column":0},"generated":{"line":8316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8315,"column":0},"generated":{"line":8317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8316,"column":0},"generated":{"line":8318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8317,"column":0},"generated":{"line":8319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8318,"column":0},"generated":{"line":8320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8319,"column":0},"generated":{"line":8321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8320,"column":0},"generated":{"line":8322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8321,"column":0},"generated":{"line":8323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8322,"column":0},"generated":{"line":8324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8323,"column":0},"generated":{"line":8325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8324,"column":0},"generated":{"line":8326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8325,"column":0},"generated":{"line":8327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8326,"column":0},"generated":{"line":8328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8327,"column":0},"generated":{"line":8329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8328,"column":0},"generated":{"line":8330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8329,"column":0},"generated":{"line":8331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8330,"column":0},"generated":{"line":8332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8331,"column":0},"generated":{"line":8333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8332,"column":0},"generated":{"line":8334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8333,"column":0},"generated":{"line":8335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8334,"column":0},"generated":{"line":8336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8335,"column":0},"generated":{"line":8337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8336,"column":0},"generated":{"line":8338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8337,"column":0},"generated":{"line":8339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8338,"column":0},"generated":{"line":8340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8339,"column":0},"generated":{"line":8341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8340,"column":0},"generated":{"line":8342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8341,"column":0},"generated":{"line":8343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8342,"column":0},"generated":{"line":8344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8343,"column":0},"generated":{"line":8345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8344,"column":0},"generated":{"line":8346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8345,"column":0},"generated":{"line":8347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8346,"column":0},"generated":{"line":8348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8347,"column":0},"generated":{"line":8349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8348,"column":0},"generated":{"line":8350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8349,"column":0},"generated":{"line":8351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8350,"column":0},"generated":{"line":8352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8351,"column":0},"generated":{"line":8353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8352,"column":0},"generated":{"line":8354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8353,"column":0},"generated":{"line":8355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8354,"column":0},"generated":{"line":8356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8355,"column":0},"generated":{"line":8357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8356,"column":0},"generated":{"line":8358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8357,"column":0},"generated":{"line":8359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8358,"column":0},"generated":{"line":8360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8359,"column":0},"generated":{"line":8361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8360,"column":0},"generated":{"line":8362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8361,"column":0},"generated":{"line":8363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8362,"column":0},"generated":{"line":8364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8363,"column":0},"generated":{"line":8365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8364,"column":0},"generated":{"line":8366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8365,"column":0},"generated":{"line":8367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8366,"column":0},"generated":{"line":8368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8367,"column":0},"generated":{"line":8369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8368,"column":0},"generated":{"line":8370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8369,"column":0},"generated":{"line":8371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8370,"column":0},"generated":{"line":8372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8371,"column":0},"generated":{"line":8373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8372,"column":0},"generated":{"line":8374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8373,"column":0},"generated":{"line":8375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8374,"column":0},"generated":{"line":8376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8375,"column":0},"generated":{"line":8377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8376,"column":0},"generated":{"line":8378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8377,"column":0},"generated":{"line":8379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8378,"column":0},"generated":{"line":8380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8379,"column":0},"generated":{"line":8381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8380,"column":0},"generated":{"line":8382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8381,"column":0},"generated":{"line":8383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8382,"column":0},"generated":{"line":8384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8383,"column":0},"generated":{"line":8385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8384,"column":0},"generated":{"line":8386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8385,"column":0},"generated":{"line":8387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8386,"column":0},"generated":{"line":8388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8387,"column":0},"generated":{"line":8389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8388,"column":0},"generated":{"line":8390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8389,"column":0},"generated":{"line":8391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8390,"column":0},"generated":{"line":8392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8391,"column":0},"generated":{"line":8393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8392,"column":0},"generated":{"line":8394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8393,"column":0},"generated":{"line":8395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8394,"column":0},"generated":{"line":8396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8395,"column":0},"generated":{"line":8397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8396,"column":0},"generated":{"line":8398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8397,"column":0},"generated":{"line":8399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8398,"column":0},"generated":{"line":8400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8399,"column":0},"generated":{"line":8401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8400,"column":0},"generated":{"line":8402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8401,"column":0},"generated":{"line":8403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8402,"column":0},"generated":{"line":8404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8403,"column":0},"generated":{"line":8405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8404,"column":0},"generated":{"line":8406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8405,"column":0},"generated":{"line":8407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8406,"column":0},"generated":{"line":8408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8407,"column":0},"generated":{"line":8409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8408,"column":0},"generated":{"line":8410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8409,"column":0},"generated":{"line":8411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8410,"column":0},"generated":{"line":8412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8411,"column":0},"generated":{"line":8413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8412,"column":0},"generated":{"line":8414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8413,"column":0},"generated":{"line":8415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8414,"column":0},"generated":{"line":8416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8415,"column":0},"generated":{"line":8417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8416,"column":0},"generated":{"line":8418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8417,"column":0},"generated":{"line":8419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8418,"column":0},"generated":{"line":8420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8419,"column":0},"generated":{"line":8421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8420,"column":0},"generated":{"line":8422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8421,"column":0},"generated":{"line":8423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8422,"column":0},"generated":{"line":8424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8423,"column":0},"generated":{"line":8425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8424,"column":0},"generated":{"line":8426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8425,"column":0},"generated":{"line":8427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8426,"column":0},"generated":{"line":8428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8427,"column":0},"generated":{"line":8429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8428,"column":0},"generated":{"line":8430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8429,"column":0},"generated":{"line":8431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8430,"column":0},"generated":{"line":8432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8431,"column":0},"generated":{"line":8433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8432,"column":0},"generated":{"line":8434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8433,"column":0},"generated":{"line":8435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8434,"column":0},"generated":{"line":8436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8435,"column":0},"generated":{"line":8437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8436,"column":0},"generated":{"line":8438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8437,"column":0},"generated":{"line":8439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8438,"column":0},"generated":{"line":8440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8439,"column":0},"generated":{"line":8441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8440,"column":0},"generated":{"line":8442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8441,"column":0},"generated":{"line":8443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8442,"column":0},"generated":{"line":8444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8443,"column":0},"generated":{"line":8445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8444,"column":0},"generated":{"line":8446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8445,"column":0},"generated":{"line":8447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8446,"column":0},"generated":{"line":8448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8447,"column":0},"generated":{"line":8449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8448,"column":0},"generated":{"line":8450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8449,"column":0},"generated":{"line":8451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8450,"column":0},"generated":{"line":8452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8451,"column":0},"generated":{"line":8453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8452,"column":0},"generated":{"line":8454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8453,"column":0},"generated":{"line":8455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8454,"column":0},"generated":{"line":8456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8455,"column":0},"generated":{"line":8457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8456,"column":0},"generated":{"line":8458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8457,"column":0},"generated":{"line":8459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8458,"column":0},"generated":{"line":8460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8459,"column":0},"generated":{"line":8461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8460,"column":0},"generated":{"line":8462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8461,"column":0},"generated":{"line":8463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8462,"column":0},"generated":{"line":8464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8463,"column":0},"generated":{"line":8465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8464,"column":0},"generated":{"line":8466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8465,"column":0},"generated":{"line":8467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8466,"column":0},"generated":{"line":8468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8467,"column":0},"generated":{"line":8469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8468,"column":0},"generated":{"line":8470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8469,"column":0},"generated":{"line":8471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8470,"column":0},"generated":{"line":8472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8471,"column":0},"generated":{"line":8473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8472,"column":0},"generated":{"line":8474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8473,"column":0},"generated":{"line":8475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8474,"column":0},"generated":{"line":8476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8475,"column":0},"generated":{"line":8477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8476,"column":0},"generated":{"line":8478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8477,"column":0},"generated":{"line":8479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8478,"column":0},"generated":{"line":8480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8479,"column":0},"generated":{"line":8481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8480,"column":0},"generated":{"line":8482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8481,"column":0},"generated":{"line":8483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8482,"column":0},"generated":{"line":8484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8483,"column":0},"generated":{"line":8485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8484,"column":0},"generated":{"line":8486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8485,"column":0},"generated":{"line":8487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8486,"column":0},"generated":{"line":8488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8487,"column":0},"generated":{"line":8489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8488,"column":0},"generated":{"line":8490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8489,"column":0},"generated":{"line":8491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8490,"column":0},"generated":{"line":8492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8491,"column":0},"generated":{"line":8493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8492,"column":0},"generated":{"line":8494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8493,"column":0},"generated":{"line":8495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8494,"column":0},"generated":{"line":8496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8495,"column":0},"generated":{"line":8497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8496,"column":0},"generated":{"line":8498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8497,"column":0},"generated":{"line":8499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8498,"column":0},"generated":{"line":8500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8499,"column":0},"generated":{"line":8501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8500,"column":0},"generated":{"line":8502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8501,"column":0},"generated":{"line":8503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8502,"column":0},"generated":{"line":8504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8503,"column":0},"generated":{"line":8505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8504,"column":0},"generated":{"line":8506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8505,"column":0},"generated":{"line":8507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8506,"column":0},"generated":{"line":8508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8507,"column":0},"generated":{"line":8509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8508,"column":0},"generated":{"line":8510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8509,"column":0},"generated":{"line":8511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8510,"column":0},"generated":{"line":8512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8511,"column":0},"generated":{"line":8513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8512,"column":0},"generated":{"line":8514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8513,"column":0},"generated":{"line":8515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8514,"column":0},"generated":{"line":8516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8515,"column":0},"generated":{"line":8517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8516,"column":0},"generated":{"line":8518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8517,"column":0},"generated":{"line":8519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8518,"column":0},"generated":{"line":8520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8519,"column":0},"generated":{"line":8521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8520,"column":0},"generated":{"line":8522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8521,"column":0},"generated":{"line":8523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8522,"column":0},"generated":{"line":8524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8523,"column":0},"generated":{"line":8525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8524,"column":0},"generated":{"line":8526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8525,"column":0},"generated":{"line":8527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8526,"column":0},"generated":{"line":8528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8527,"column":0},"generated":{"line":8529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8528,"column":0},"generated":{"line":8530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8529,"column":0},"generated":{"line":8531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8530,"column":0},"generated":{"line":8532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8531,"column":0},"generated":{"line":8533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8532,"column":0},"generated":{"line":8534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8533,"column":0},"generated":{"line":8535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8534,"column":0},"generated":{"line":8536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8535,"column":0},"generated":{"line":8537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8536,"column":0},"generated":{"line":8538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8537,"column":0},"generated":{"line":8539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8538,"column":0},"generated":{"line":8540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8539,"column":0},"generated":{"line":8541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8540,"column":0},"generated":{"line":8542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8541,"column":0},"generated":{"line":8543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8542,"column":0},"generated":{"line":8544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8543,"column":0},"generated":{"line":8545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8544,"column":0},"generated":{"line":8546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8545,"column":0},"generated":{"line":8547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8546,"column":0},"generated":{"line":8548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8547,"column":0},"generated":{"line":8549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8548,"column":0},"generated":{"line":8550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8549,"column":0},"generated":{"line":8551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8550,"column":0},"generated":{"line":8552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8551,"column":0},"generated":{"line":8553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8552,"column":0},"generated":{"line":8554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8553,"column":0},"generated":{"line":8555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8554,"column":0},"generated":{"line":8556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8555,"column":0},"generated":{"line":8557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8556,"column":0},"generated":{"line":8558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8557,"column":0},"generated":{"line":8559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8558,"column":0},"generated":{"line":8560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8559,"column":0},"generated":{"line":8561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8560,"column":0},"generated":{"line":8562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8561,"column":0},"generated":{"line":8563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8562,"column":0},"generated":{"line":8564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8563,"column":0},"generated":{"line":8565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8564,"column":0},"generated":{"line":8566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8565,"column":0},"generated":{"line":8567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8566,"column":0},"generated":{"line":8568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8567,"column":0},"generated":{"line":8569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8568,"column":0},"generated":{"line":8570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8569,"column":0},"generated":{"line":8571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8570,"column":0},"generated":{"line":8572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8571,"column":0},"generated":{"line":8573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8572,"column":0},"generated":{"line":8574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8573,"column":0},"generated":{"line":8575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8574,"column":0},"generated":{"line":8576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8575,"column":0},"generated":{"line":8577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8576,"column":0},"generated":{"line":8578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8577,"column":0},"generated":{"line":8579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8578,"column":0},"generated":{"line":8580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8579,"column":0},"generated":{"line":8581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8580,"column":0},"generated":{"line":8582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8581,"column":0},"generated":{"line":8583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8582,"column":0},"generated":{"line":8584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8583,"column":0},"generated":{"line":8585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8584,"column":0},"generated":{"line":8586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8585,"column":0},"generated":{"line":8587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8586,"column":0},"generated":{"line":8588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8587,"column":0},"generated":{"line":8589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8588,"column":0},"generated":{"line":8590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8589,"column":0},"generated":{"line":8591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8590,"column":0},"generated":{"line":8592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8591,"column":0},"generated":{"line":8593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8592,"column":0},"generated":{"line":8594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8593,"column":0},"generated":{"line":8595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8594,"column":0},"generated":{"line":8596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8595,"column":0},"generated":{"line":8597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8596,"column":0},"generated":{"line":8598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8597,"column":0},"generated":{"line":8599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8598,"column":0},"generated":{"line":8600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8599,"column":0},"generated":{"line":8601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8600,"column":0},"generated":{"line":8602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8601,"column":0},"generated":{"line":8603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8602,"column":0},"generated":{"line":8604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8603,"column":0},"generated":{"line":8605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8604,"column":0},"generated":{"line":8606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8605,"column":0},"generated":{"line":8607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8606,"column":0},"generated":{"line":8608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8607,"column":0},"generated":{"line":8609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8608,"column":0},"generated":{"line":8610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8609,"column":0},"generated":{"line":8611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8610,"column":0},"generated":{"line":8612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8611,"column":0},"generated":{"line":8613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8612,"column":0},"generated":{"line":8614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8613,"column":0},"generated":{"line":8615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8614,"column":0},"generated":{"line":8616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8615,"column":0},"generated":{"line":8617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8616,"column":0},"generated":{"line":8618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8617,"column":0},"generated":{"line":8619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8618,"column":0},"generated":{"line":8620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8619,"column":0},"generated":{"line":8621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8620,"column":0},"generated":{"line":8622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8621,"column":0},"generated":{"line":8623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8622,"column":0},"generated":{"line":8624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8623,"column":0},"generated":{"line":8625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8624,"column":0},"generated":{"line":8626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8625,"column":0},"generated":{"line":8627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8626,"column":0},"generated":{"line":8628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8627,"column":0},"generated":{"line":8629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8628,"column":0},"generated":{"line":8630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8629,"column":0},"generated":{"line":8631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8630,"column":0},"generated":{"line":8632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8631,"column":0},"generated":{"line":8633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8632,"column":0},"generated":{"line":8634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8633,"column":0},"generated":{"line":8635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8634,"column":0},"generated":{"line":8636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8635,"column":0},"generated":{"line":8637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8636,"column":0},"generated":{"line":8638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8637,"column":0},"generated":{"line":8639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8638,"column":0},"generated":{"line":8640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8639,"column":0},"generated":{"line":8641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8640,"column":0},"generated":{"line":8642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8641,"column":0},"generated":{"line":8643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8642,"column":0},"generated":{"line":8644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8643,"column":0},"generated":{"line":8645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8644,"column":0},"generated":{"line":8646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8645,"column":0},"generated":{"line":8647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8646,"column":0},"generated":{"line":8648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8647,"column":0},"generated":{"line":8649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8648,"column":0},"generated":{"line":8650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8649,"column":0},"generated":{"line":8651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8650,"column":0},"generated":{"line":8652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8651,"column":0},"generated":{"line":8653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8652,"column":0},"generated":{"line":8654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8653,"column":0},"generated":{"line":8655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8654,"column":0},"generated":{"line":8656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8655,"column":0},"generated":{"line":8657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8656,"column":0},"generated":{"line":8658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8657,"column":0},"generated":{"line":8659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8658,"column":0},"generated":{"line":8660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8659,"column":0},"generated":{"line":8661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8660,"column":0},"generated":{"line":8662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8661,"column":0},"generated":{"line":8663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8662,"column":0},"generated":{"line":8664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8663,"column":0},"generated":{"line":8665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8664,"column":0},"generated":{"line":8666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8665,"column":0},"generated":{"line":8667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8666,"column":0},"generated":{"line":8668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8667,"column":0},"generated":{"line":8669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8668,"column":0},"generated":{"line":8670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8669,"column":0},"generated":{"line":8671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8670,"column":0},"generated":{"line":8672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8671,"column":0},"generated":{"line":8673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8672,"column":0},"generated":{"line":8674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8673,"column":0},"generated":{"line":8675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8674,"column":0},"generated":{"line":8676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8675,"column":0},"generated":{"line":8677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8676,"column":0},"generated":{"line":8678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8677,"column":0},"generated":{"line":8679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8678,"column":0},"generated":{"line":8680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8679,"column":0},"generated":{"line":8681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8680,"column":0},"generated":{"line":8682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8681,"column":0},"generated":{"line":8683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8682,"column":0},"generated":{"line":8684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8683,"column":0},"generated":{"line":8685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8684,"column":0},"generated":{"line":8686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8685,"column":0},"generated":{"line":8687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8686,"column":0},"generated":{"line":8688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8687,"column":0},"generated":{"line":8689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8688,"column":0},"generated":{"line":8690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8689,"column":0},"generated":{"line":8691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8690,"column":0},"generated":{"line":8692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8691,"column":0},"generated":{"line":8693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8692,"column":0},"generated":{"line":8694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8693,"column":0},"generated":{"line":8695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8694,"column":0},"generated":{"line":8696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8695,"column":0},"generated":{"line":8697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8696,"column":0},"generated":{"line":8698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8697,"column":0},"generated":{"line":8699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8698,"column":0},"generated":{"line":8700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8699,"column":0},"generated":{"line":8701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8700,"column":0},"generated":{"line":8702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8701,"column":0},"generated":{"line":8703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8702,"column":0},"generated":{"line":8704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8703,"column":0},"generated":{"line":8705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8704,"column":0},"generated":{"line":8706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8705,"column":0},"generated":{"line":8707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8706,"column":0},"generated":{"line":8708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8707,"column":0},"generated":{"line":8709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8708,"column":0},"generated":{"line":8710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8709,"column":0},"generated":{"line":8711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8710,"column":0},"generated":{"line":8712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8711,"column":0},"generated":{"line":8713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8712,"column":0},"generated":{"line":8714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8713,"column":0},"generated":{"line":8715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8714,"column":0},"generated":{"line":8716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8715,"column":0},"generated":{"line":8717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8716,"column":0},"generated":{"line":8718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8717,"column":0},"generated":{"line":8719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8718,"column":0},"generated":{"line":8720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8719,"column":0},"generated":{"line":8721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8720,"column":0},"generated":{"line":8722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8721,"column":0},"generated":{"line":8723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8722,"column":0},"generated":{"line":8724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8723,"column":0},"generated":{"line":8725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8724,"column":0},"generated":{"line":8726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8725,"column":0},"generated":{"line":8727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8726,"column":0},"generated":{"line":8728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8727,"column":0},"generated":{"line":8729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8728,"column":0},"generated":{"line":8730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8729,"column":0},"generated":{"line":8731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8730,"column":0},"generated":{"line":8732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8731,"column":0},"generated":{"line":8733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8732,"column":0},"generated":{"line":8734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8733,"column":0},"generated":{"line":8735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8734,"column":0},"generated":{"line":8736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8735,"column":0},"generated":{"line":8737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8736,"column":0},"generated":{"line":8738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8737,"column":0},"generated":{"line":8739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8738,"column":0},"generated":{"line":8740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8739,"column":0},"generated":{"line":8741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8740,"column":0},"generated":{"line":8742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8741,"column":0},"generated":{"line":8743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8742,"column":0},"generated":{"line":8744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8743,"column":0},"generated":{"line":8745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8744,"column":0},"generated":{"line":8746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8745,"column":0},"generated":{"line":8747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8746,"column":0},"generated":{"line":8748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8747,"column":0},"generated":{"line":8749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8748,"column":0},"generated":{"line":8750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8749,"column":0},"generated":{"line":8751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8750,"column":0},"generated":{"line":8752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8751,"column":0},"generated":{"line":8753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8752,"column":0},"generated":{"line":8754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8753,"column":0},"generated":{"line":8755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8754,"column":0},"generated":{"line":8756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8755,"column":0},"generated":{"line":8757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8756,"column":0},"generated":{"line":8758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8757,"column":0},"generated":{"line":8759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8758,"column":0},"generated":{"line":8760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8759,"column":0},"generated":{"line":8761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8760,"column":0},"generated":{"line":8762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8761,"column":0},"generated":{"line":8763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8762,"column":0},"generated":{"line":8764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8763,"column":0},"generated":{"line":8765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8764,"column":0},"generated":{"line":8766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8765,"column":0},"generated":{"line":8767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8766,"column":0},"generated":{"line":8768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8767,"column":0},"generated":{"line":8769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8768,"column":0},"generated":{"line":8770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8769,"column":0},"generated":{"line":8771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8770,"column":0},"generated":{"line":8772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8771,"column":0},"generated":{"line":8773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8772,"column":0},"generated":{"line":8774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8773,"column":0},"generated":{"line":8775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8774,"column":0},"generated":{"line":8776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8775,"column":0},"generated":{"line":8777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8776,"column":0},"generated":{"line":8778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8777,"column":0},"generated":{"line":8779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8778,"column":0},"generated":{"line":8780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8779,"column":0},"generated":{"line":8781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8780,"column":0},"generated":{"line":8782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8781,"column":0},"generated":{"line":8783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8782,"column":0},"generated":{"line":8784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8783,"column":0},"generated":{"line":8785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8784,"column":0},"generated":{"line":8786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8785,"column":0},"generated":{"line":8787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8786,"column":0},"generated":{"line":8788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8787,"column":0},"generated":{"line":8789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8788,"column":0},"generated":{"line":8790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8789,"column":0},"generated":{"line":8791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8790,"column":0},"generated":{"line":8792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8791,"column":0},"generated":{"line":8793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8792,"column":0},"generated":{"line":8794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8793,"column":0},"generated":{"line":8795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8794,"column":0},"generated":{"line":8796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8795,"column":0},"generated":{"line":8797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8796,"column":0},"generated":{"line":8798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8797,"column":0},"generated":{"line":8799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8798,"column":0},"generated":{"line":8800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8799,"column":0},"generated":{"line":8801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8800,"column":0},"generated":{"line":8802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8801,"column":0},"generated":{"line":8803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8802,"column":0},"generated":{"line":8804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8803,"column":0},"generated":{"line":8805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8804,"column":0},"generated":{"line":8806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8805,"column":0},"generated":{"line":8807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8806,"column":0},"generated":{"line":8808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8807,"column":0},"generated":{"line":8809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8808,"column":0},"generated":{"line":8810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8809,"column":0},"generated":{"line":8811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8810,"column":0},"generated":{"line":8812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8811,"column":0},"generated":{"line":8813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8812,"column":0},"generated":{"line":8814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8813,"column":0},"generated":{"line":8815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8814,"column":0},"generated":{"line":8816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8815,"column":0},"generated":{"line":8817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8816,"column":0},"generated":{"line":8818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8817,"column":0},"generated":{"line":8819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8818,"column":0},"generated":{"line":8820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8819,"column":0},"generated":{"line":8821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8820,"column":0},"generated":{"line":8822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8821,"column":0},"generated":{"line":8823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8822,"column":0},"generated":{"line":8824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8823,"column":0},"generated":{"line":8825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8824,"column":0},"generated":{"line":8826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8825,"column":0},"generated":{"line":8827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8826,"column":0},"generated":{"line":8828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8827,"column":0},"generated":{"line":8829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8828,"column":0},"generated":{"line":8830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8829,"column":0},"generated":{"line":8831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8830,"column":0},"generated":{"line":8832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8831,"column":0},"generated":{"line":8833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8832,"column":0},"generated":{"line":8834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8833,"column":0},"generated":{"line":8835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8834,"column":0},"generated":{"line":8836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8835,"column":0},"generated":{"line":8837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8836,"column":0},"generated":{"line":8838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8837,"column":0},"generated":{"line":8839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8838,"column":0},"generated":{"line":8840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8839,"column":0},"generated":{"line":8841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8840,"column":0},"generated":{"line":8842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8841,"column":0},"generated":{"line":8843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8842,"column":0},"generated":{"line":8844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8843,"column":0},"generated":{"line":8845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8844,"column":0},"generated":{"line":8846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8845,"column":0},"generated":{"line":8847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8846,"column":0},"generated":{"line":8848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8847,"column":0},"generated":{"line":8849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8848,"column":0},"generated":{"line":8850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8849,"column":0},"generated":{"line":8851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8850,"column":0},"generated":{"line":8852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8851,"column":0},"generated":{"line":8853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8852,"column":0},"generated":{"line":8854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8853,"column":0},"generated":{"line":8855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8854,"column":0},"generated":{"line":8856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8855,"column":0},"generated":{"line":8857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8856,"column":0},"generated":{"line":8858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8857,"column":0},"generated":{"line":8859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8858,"column":0},"generated":{"line":8860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8859,"column":0},"generated":{"line":8861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8860,"column":0},"generated":{"line":8862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8861,"column":0},"generated":{"line":8863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8862,"column":0},"generated":{"line":8864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8863,"column":0},"generated":{"line":8865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8864,"column":0},"generated":{"line":8866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8865,"column":0},"generated":{"line":8867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8866,"column":0},"generated":{"line":8868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8867,"column":0},"generated":{"line":8869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8868,"column":0},"generated":{"line":8870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8869,"column":0},"generated":{"line":8871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8870,"column":0},"generated":{"line":8872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8871,"column":0},"generated":{"line":8873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8872,"column":0},"generated":{"line":8874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8873,"column":0},"generated":{"line":8875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8874,"column":0},"generated":{"line":8876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8875,"column":0},"generated":{"line":8877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8876,"column":0},"generated":{"line":8878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8877,"column":0},"generated":{"line":8879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8878,"column":0},"generated":{"line":8880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8879,"column":0},"generated":{"line":8881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8880,"column":0},"generated":{"line":8882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8881,"column":0},"generated":{"line":8883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8882,"column":0},"generated":{"line":8884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8883,"column":0},"generated":{"line":8885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8884,"column":0},"generated":{"line":8886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8885,"column":0},"generated":{"line":8887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8886,"column":0},"generated":{"line":8888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8887,"column":0},"generated":{"line":8889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8888,"column":0},"generated":{"line":8890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8889,"column":0},"generated":{"line":8891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8890,"column":0},"generated":{"line":8892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8891,"column":0},"generated":{"line":8893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8892,"column":0},"generated":{"line":8894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8893,"column":0},"generated":{"line":8895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8894,"column":0},"generated":{"line":8896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8895,"column":0},"generated":{"line":8897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8896,"column":0},"generated":{"line":8898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8897,"column":0},"generated":{"line":8899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8898,"column":0},"generated":{"line":8900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8899,"column":0},"generated":{"line":8901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8900,"column":0},"generated":{"line":8902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8901,"column":0},"generated":{"line":8903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8902,"column":0},"generated":{"line":8904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8903,"column":0},"generated":{"line":8905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8904,"column":0},"generated":{"line":8906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8905,"column":0},"generated":{"line":8907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8906,"column":0},"generated":{"line":8908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8907,"column":0},"generated":{"line":8909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8908,"column":0},"generated":{"line":8910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8909,"column":0},"generated":{"line":8911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8910,"column":0},"generated":{"line":8912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8911,"column":0},"generated":{"line":8913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8912,"column":0},"generated":{"line":8914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8913,"column":0},"generated":{"line":8915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8914,"column":0},"generated":{"line":8916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8915,"column":0},"generated":{"line":8917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8916,"column":0},"generated":{"line":8918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8917,"column":0},"generated":{"line":8919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8918,"column":0},"generated":{"line":8920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8919,"column":0},"generated":{"line":8921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8920,"column":0},"generated":{"line":8922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8921,"column":0},"generated":{"line":8923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8922,"column":0},"generated":{"line":8924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8923,"column":0},"generated":{"line":8925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8924,"column":0},"generated":{"line":8926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8925,"column":0},"generated":{"line":8927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8926,"column":0},"generated":{"line":8928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8927,"column":0},"generated":{"line":8929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8928,"column":0},"generated":{"line":8930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8929,"column":0},"generated":{"line":8931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8930,"column":0},"generated":{"line":8932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8931,"column":0},"generated":{"line":8933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8932,"column":0},"generated":{"line":8934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8933,"column":0},"generated":{"line":8935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8934,"column":0},"generated":{"line":8936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8935,"column":0},"generated":{"line":8937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8936,"column":0},"generated":{"line":8938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8937,"column":0},"generated":{"line":8939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8938,"column":0},"generated":{"line":8940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8939,"column":0},"generated":{"line":8941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8940,"column":0},"generated":{"line":8942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8941,"column":0},"generated":{"line":8943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8942,"column":0},"generated":{"line":8944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8943,"column":0},"generated":{"line":8945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8944,"column":0},"generated":{"line":8946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8945,"column":0},"generated":{"line":8947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8946,"column":0},"generated":{"line":8948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8947,"column":0},"generated":{"line":8949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8948,"column":0},"generated":{"line":8950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8949,"column":0},"generated":{"line":8951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8950,"column":0},"generated":{"line":8952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8951,"column":0},"generated":{"line":8953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8952,"column":0},"generated":{"line":8954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8953,"column":0},"generated":{"line":8955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8954,"column":0},"generated":{"line":8956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8955,"column":0},"generated":{"line":8957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8956,"column":0},"generated":{"line":8958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8957,"column":0},"generated":{"line":8959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8958,"column":0},"generated":{"line":8960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8959,"column":0},"generated":{"line":8961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8960,"column":0},"generated":{"line":8962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8961,"column":0},"generated":{"line":8963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8962,"column":0},"generated":{"line":8964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8963,"column":0},"generated":{"line":8965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8964,"column":0},"generated":{"line":8966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8965,"column":0},"generated":{"line":8967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8966,"column":0},"generated":{"line":8968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8967,"column":0},"generated":{"line":8969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8968,"column":0},"generated":{"line":8970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8969,"column":0},"generated":{"line":8971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8970,"column":0},"generated":{"line":8972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8971,"column":0},"generated":{"line":8973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8972,"column":0},"generated":{"line":8974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8973,"column":0},"generated":{"line":8975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8974,"column":0},"generated":{"line":8976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8975,"column":0},"generated":{"line":8977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8976,"column":0},"generated":{"line":8978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8977,"column":0},"generated":{"line":8979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8978,"column":0},"generated":{"line":8980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8979,"column":0},"generated":{"line":8981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8980,"column":0},"generated":{"line":8982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8981,"column":0},"generated":{"line":8983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8982,"column":0},"generated":{"line":8984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8983,"column":0},"generated":{"line":8985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8984,"column":0},"generated":{"line":8986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8985,"column":0},"generated":{"line":8987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8986,"column":0},"generated":{"line":8988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8987,"column":0},"generated":{"line":8989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8988,"column":0},"generated":{"line":8990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8989,"column":0},"generated":{"line":8991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8990,"column":0},"generated":{"line":8992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8991,"column":0},"generated":{"line":8993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8992,"column":0},"generated":{"line":8994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8993,"column":0},"generated":{"line":8995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8994,"column":0},"generated":{"line":8996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8995,"column":0},"generated":{"line":8997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8996,"column":0},"generated":{"line":8998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8997,"column":0},"generated":{"line":8999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8998,"column":0},"generated":{"line":9000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":8999,"column":0},"generated":{"line":9001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9000,"column":0},"generated":{"line":9002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9001,"column":0},"generated":{"line":9003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9002,"column":0},"generated":{"line":9004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9003,"column":0},"generated":{"line":9005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9004,"column":0},"generated":{"line":9006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9005,"column":0},"generated":{"line":9007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9006,"column":0},"generated":{"line":9008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9007,"column":0},"generated":{"line":9009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9008,"column":0},"generated":{"line":9010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9009,"column":0},"generated":{"line":9011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9010,"column":0},"generated":{"line":9012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9011,"column":0},"generated":{"line":9013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9012,"column":0},"generated":{"line":9014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9013,"column":0},"generated":{"line":9015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9014,"column":0},"generated":{"line":9016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9015,"column":0},"generated":{"line":9017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9016,"column":0},"generated":{"line":9018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9017,"column":0},"generated":{"line":9019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9018,"column":0},"generated":{"line":9020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9019,"column":0},"generated":{"line":9021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9020,"column":0},"generated":{"line":9022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9021,"column":0},"generated":{"line":9023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9022,"column":0},"generated":{"line":9024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9023,"column":0},"generated":{"line":9025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9024,"column":0},"generated":{"line":9026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9025,"column":0},"generated":{"line":9027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9026,"column":0},"generated":{"line":9028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9027,"column":0},"generated":{"line":9029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9028,"column":0},"generated":{"line":9030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9029,"column":0},"generated":{"line":9031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9030,"column":0},"generated":{"line":9032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9031,"column":0},"generated":{"line":9033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9032,"column":0},"generated":{"line":9034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9033,"column":0},"generated":{"line":9035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9034,"column":0},"generated":{"line":9036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9035,"column":0},"generated":{"line":9037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9036,"column":0},"generated":{"line":9038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9037,"column":0},"generated":{"line":9039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9038,"column":0},"generated":{"line":9040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9039,"column":0},"generated":{"line":9041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9040,"column":0},"generated":{"line":9042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9041,"column":0},"generated":{"line":9043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9042,"column":0},"generated":{"line":9044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9043,"column":0},"generated":{"line":9045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9044,"column":0},"generated":{"line":9046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9045,"column":0},"generated":{"line":9047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9046,"column":0},"generated":{"line":9048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9047,"column":0},"generated":{"line":9049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9048,"column":0},"generated":{"line":9050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9049,"column":0},"generated":{"line":9051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9050,"column":0},"generated":{"line":9052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9051,"column":0},"generated":{"line":9053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9052,"column":0},"generated":{"line":9054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9053,"column":0},"generated":{"line":9055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9054,"column":0},"generated":{"line":9056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9055,"column":0},"generated":{"line":9057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9056,"column":0},"generated":{"line":9058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9057,"column":0},"generated":{"line":9059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9058,"column":0},"generated":{"line":9060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9059,"column":0},"generated":{"line":9061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9060,"column":0},"generated":{"line":9062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9061,"column":0},"generated":{"line":9063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9062,"column":0},"generated":{"line":9064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9063,"column":0},"generated":{"line":9065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9064,"column":0},"generated":{"line":9066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9065,"column":0},"generated":{"line":9067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9066,"column":0},"generated":{"line":9068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9067,"column":0},"generated":{"line":9069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9068,"column":0},"generated":{"line":9070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9069,"column":0},"generated":{"line":9071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9070,"column":0},"generated":{"line":9072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9071,"column":0},"generated":{"line":9073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9072,"column":0},"generated":{"line":9074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9073,"column":0},"generated":{"line":9075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9074,"column":0},"generated":{"line":9076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9075,"column":0},"generated":{"line":9077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9076,"column":0},"generated":{"line":9078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9077,"column":0},"generated":{"line":9079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9078,"column":0},"generated":{"line":9080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9079,"column":0},"generated":{"line":9081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9080,"column":0},"generated":{"line":9082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9081,"column":0},"generated":{"line":9083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9082,"column":0},"generated":{"line":9084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9083,"column":0},"generated":{"line":9085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9084,"column":0},"generated":{"line":9086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9085,"column":0},"generated":{"line":9087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9086,"column":0},"generated":{"line":9088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9087,"column":0},"generated":{"line":9089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9088,"column":0},"generated":{"line":9090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9089,"column":0},"generated":{"line":9091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9090,"column":0},"generated":{"line":9092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9091,"column":0},"generated":{"line":9093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9092,"column":0},"generated":{"line":9094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9093,"column":0},"generated":{"line":9095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9094,"column":0},"generated":{"line":9096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9095,"column":0},"generated":{"line":9097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9096,"column":0},"generated":{"line":9098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9097,"column":0},"generated":{"line":9099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9098,"column":0},"generated":{"line":9100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9099,"column":0},"generated":{"line":9101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9100,"column":0},"generated":{"line":9102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9101,"column":0},"generated":{"line":9103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9102,"column":0},"generated":{"line":9104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9103,"column":0},"generated":{"line":9105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9104,"column":0},"generated":{"line":9106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9105,"column":0},"generated":{"line":9107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9106,"column":0},"generated":{"line":9108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9107,"column":0},"generated":{"line":9109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9108,"column":0},"generated":{"line":9110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9109,"column":0},"generated":{"line":9111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9110,"column":0},"generated":{"line":9112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9111,"column":0},"generated":{"line":9113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9112,"column":0},"generated":{"line":9114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9113,"column":0},"generated":{"line":9115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9114,"column":0},"generated":{"line":9116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9115,"column":0},"generated":{"line":9117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9116,"column":0},"generated":{"line":9118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9117,"column":0},"generated":{"line":9119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9118,"column":0},"generated":{"line":9120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9119,"column":0},"generated":{"line":9121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9120,"column":0},"generated":{"line":9122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9121,"column":0},"generated":{"line":9123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9122,"column":0},"generated":{"line":9124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9123,"column":0},"generated":{"line":9125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9124,"column":0},"generated":{"line":9126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9125,"column":0},"generated":{"line":9127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9126,"column":0},"generated":{"line":9128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9127,"column":0},"generated":{"line":9129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9128,"column":0},"generated":{"line":9130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9129,"column":0},"generated":{"line":9131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9130,"column":0},"generated":{"line":9132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9131,"column":0},"generated":{"line":9133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9132,"column":0},"generated":{"line":9134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9133,"column":0},"generated":{"line":9135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9134,"column":0},"generated":{"line":9136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9135,"column":0},"generated":{"line":9137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9136,"column":0},"generated":{"line":9138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9137,"column":0},"generated":{"line":9139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9138,"column":0},"generated":{"line":9140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9139,"column":0},"generated":{"line":9141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9140,"column":0},"generated":{"line":9142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9141,"column":0},"generated":{"line":9143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9142,"column":0},"generated":{"line":9144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9143,"column":0},"generated":{"line":9145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9144,"column":0},"generated":{"line":9146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9145,"column":0},"generated":{"line":9147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9146,"column":0},"generated":{"line":9148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9147,"column":0},"generated":{"line":9149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9148,"column":0},"generated":{"line":9150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9149,"column":0},"generated":{"line":9151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9150,"column":0},"generated":{"line":9152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9151,"column":0},"generated":{"line":9153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9152,"column":0},"generated":{"line":9154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9153,"column":0},"generated":{"line":9155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9154,"column":0},"generated":{"line":9156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9155,"column":0},"generated":{"line":9157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9156,"column":0},"generated":{"line":9158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9157,"column":0},"generated":{"line":9159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9158,"column":0},"generated":{"line":9160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9159,"column":0},"generated":{"line":9161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9160,"column":0},"generated":{"line":9162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9161,"column":0},"generated":{"line":9163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9162,"column":0},"generated":{"line":9164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9163,"column":0},"generated":{"line":9165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9164,"column":0},"generated":{"line":9166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9165,"column":0},"generated":{"line":9167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9166,"column":0},"generated":{"line":9168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9167,"column":0},"generated":{"line":9169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9168,"column":0},"generated":{"line":9170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9169,"column":0},"generated":{"line":9171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9170,"column":0},"generated":{"line":9172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9171,"column":0},"generated":{"line":9173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9172,"column":0},"generated":{"line":9174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9173,"column":0},"generated":{"line":9175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9174,"column":0},"generated":{"line":9176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9175,"column":0},"generated":{"line":9177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9176,"column":0},"generated":{"line":9178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9177,"column":0},"generated":{"line":9179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9178,"column":0},"generated":{"line":9180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9179,"column":0},"generated":{"line":9181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9180,"column":0},"generated":{"line":9182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9181,"column":0},"generated":{"line":9183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9182,"column":0},"generated":{"line":9184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9183,"column":0},"generated":{"line":9185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9184,"column":0},"generated":{"line":9186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9185,"column":0},"generated":{"line":9187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9186,"column":0},"generated":{"line":9188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9187,"column":0},"generated":{"line":9189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9188,"column":0},"generated":{"line":9190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9189,"column":0},"generated":{"line":9191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9190,"column":0},"generated":{"line":9192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9191,"column":0},"generated":{"line":9193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9192,"column":0},"generated":{"line":9194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9193,"column":0},"generated":{"line":9195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9194,"column":0},"generated":{"line":9196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9195,"column":0},"generated":{"line":9197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9196,"column":0},"generated":{"line":9198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9197,"column":0},"generated":{"line":9199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9198,"column":0},"generated":{"line":9200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9199,"column":0},"generated":{"line":9201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9200,"column":0},"generated":{"line":9202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9201,"column":0},"generated":{"line":9203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9202,"column":0},"generated":{"line":9204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9203,"column":0},"generated":{"line":9205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9204,"column":0},"generated":{"line":9206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9205,"column":0},"generated":{"line":9207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9206,"column":0},"generated":{"line":9208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9207,"column":0},"generated":{"line":9209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9208,"column":0},"generated":{"line":9210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9209,"column":0},"generated":{"line":9211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9210,"column":0},"generated":{"line":9212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9211,"column":0},"generated":{"line":9213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9212,"column":0},"generated":{"line":9214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9213,"column":0},"generated":{"line":9215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9214,"column":0},"generated":{"line":9216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9215,"column":0},"generated":{"line":9217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9216,"column":0},"generated":{"line":9218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9217,"column":0},"generated":{"line":9219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9218,"column":0},"generated":{"line":9220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9219,"column":0},"generated":{"line":9221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9220,"column":0},"generated":{"line":9222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9221,"column":0},"generated":{"line":9223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9222,"column":0},"generated":{"line":9224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9223,"column":0},"generated":{"line":9225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9224,"column":0},"generated":{"line":9226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9225,"column":0},"generated":{"line":9227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9226,"column":0},"generated":{"line":9228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9227,"column":0},"generated":{"line":9229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9228,"column":0},"generated":{"line":9230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9229,"column":0},"generated":{"line":9231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9230,"column":0},"generated":{"line":9232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9231,"column":0},"generated":{"line":9233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9232,"column":0},"generated":{"line":9234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9233,"column":0},"generated":{"line":9235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9234,"column":0},"generated":{"line":9236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9235,"column":0},"generated":{"line":9237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9236,"column":0},"generated":{"line":9238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9237,"column":0},"generated":{"line":9239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9238,"column":0},"generated":{"line":9240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9239,"column":0},"generated":{"line":9241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9240,"column":0},"generated":{"line":9242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9241,"column":0},"generated":{"line":9243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9242,"column":0},"generated":{"line":9244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9243,"column":0},"generated":{"line":9245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9244,"column":0},"generated":{"line":9246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9245,"column":0},"generated":{"line":9247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9246,"column":0},"generated":{"line":9248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9247,"column":0},"generated":{"line":9249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9248,"column":0},"generated":{"line":9250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9249,"column":0},"generated":{"line":9251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9250,"column":0},"generated":{"line":9252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9251,"column":0},"generated":{"line":9253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9252,"column":0},"generated":{"line":9254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9253,"column":0},"generated":{"line":9255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9254,"column":0},"generated":{"line":9256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9255,"column":0},"generated":{"line":9257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9256,"column":0},"generated":{"line":9258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9257,"column":0},"generated":{"line":9259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9258,"column":0},"generated":{"line":9260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9259,"column":0},"generated":{"line":9261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9260,"column":0},"generated":{"line":9262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9261,"column":0},"generated":{"line":9263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9262,"column":0},"generated":{"line":9264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9263,"column":0},"generated":{"line":9265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9264,"column":0},"generated":{"line":9266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9265,"column":0},"generated":{"line":9267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9266,"column":0},"generated":{"line":9268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9267,"column":0},"generated":{"line":9269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9268,"column":0},"generated":{"line":9270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9269,"column":0},"generated":{"line":9271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9270,"column":0},"generated":{"line":9272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9271,"column":0},"generated":{"line":9273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9272,"column":0},"generated":{"line":9274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9273,"column":0},"generated":{"line":9275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9274,"column":0},"generated":{"line":9276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9275,"column":0},"generated":{"line":9277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9276,"column":0},"generated":{"line":9278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9277,"column":0},"generated":{"line":9279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9278,"column":0},"generated":{"line":9280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9279,"column":0},"generated":{"line":9281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9280,"column":0},"generated":{"line":9282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9281,"column":0},"generated":{"line":9283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9282,"column":0},"generated":{"line":9284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9283,"column":0},"generated":{"line":9285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9284,"column":0},"generated":{"line":9286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9285,"column":0},"generated":{"line":9287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9286,"column":0},"generated":{"line":9288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9287,"column":0},"generated":{"line":9289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9288,"column":0},"generated":{"line":9290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9289,"column":0},"generated":{"line":9291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9290,"column":0},"generated":{"line":9292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9291,"column":0},"generated":{"line":9293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9292,"column":0},"generated":{"line":9294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9293,"column":0},"generated":{"line":9295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9294,"column":0},"generated":{"line":9296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9295,"column":0},"generated":{"line":9297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9296,"column":0},"generated":{"line":9298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9297,"column":0},"generated":{"line":9299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9298,"column":0},"generated":{"line":9300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9299,"column":0},"generated":{"line":9301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9300,"column":0},"generated":{"line":9302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9301,"column":0},"generated":{"line":9303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9302,"column":0},"generated":{"line":9304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9303,"column":0},"generated":{"line":9305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9304,"column":0},"generated":{"line":9306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9305,"column":0},"generated":{"line":9307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9306,"column":0},"generated":{"line":9308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9307,"column":0},"generated":{"line":9309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9308,"column":0},"generated":{"line":9310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9309,"column":0},"generated":{"line":9311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9310,"column":0},"generated":{"line":9312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9311,"column":0},"generated":{"line":9313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9312,"column":0},"generated":{"line":9314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9313,"column":0},"generated":{"line":9315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9314,"column":0},"generated":{"line":9316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9315,"column":0},"generated":{"line":9317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9316,"column":0},"generated":{"line":9318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9317,"column":0},"generated":{"line":9319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9318,"column":0},"generated":{"line":9320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9319,"column":0},"generated":{"line":9321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9320,"column":0},"generated":{"line":9322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9321,"column":0},"generated":{"line":9323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9322,"column":0},"generated":{"line":9324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9323,"column":0},"generated":{"line":9325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9324,"column":0},"generated":{"line":9326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9325,"column":0},"generated":{"line":9327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9326,"column":0},"generated":{"line":9328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9327,"column":0},"generated":{"line":9329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9328,"column":0},"generated":{"line":9330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9329,"column":0},"generated":{"line":9331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9330,"column":0},"generated":{"line":9332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9331,"column":0},"generated":{"line":9333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9332,"column":0},"generated":{"line":9334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9333,"column":0},"generated":{"line":9335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9334,"column":0},"generated":{"line":9336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9335,"column":0},"generated":{"line":9337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9336,"column":0},"generated":{"line":9338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9337,"column":0},"generated":{"line":9339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9338,"column":0},"generated":{"line":9340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9339,"column":0},"generated":{"line":9341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9340,"column":0},"generated":{"line":9342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9341,"column":0},"generated":{"line":9343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9342,"column":0},"generated":{"line":9344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9343,"column":0},"generated":{"line":9345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9344,"column":0},"generated":{"line":9346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9345,"column":0},"generated":{"line":9347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9346,"column":0},"generated":{"line":9348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9347,"column":0},"generated":{"line":9349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9348,"column":0},"generated":{"line":9350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9349,"column":0},"generated":{"line":9351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9350,"column":0},"generated":{"line":9352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9351,"column":0},"generated":{"line":9353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9352,"column":0},"generated":{"line":9354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9353,"column":0},"generated":{"line":9355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9354,"column":0},"generated":{"line":9356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9355,"column":0},"generated":{"line":9357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9356,"column":0},"generated":{"line":9358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9357,"column":0},"generated":{"line":9359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9358,"column":0},"generated":{"line":9360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9359,"column":0},"generated":{"line":9361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9360,"column":0},"generated":{"line":9362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9361,"column":0},"generated":{"line":9363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9362,"column":0},"generated":{"line":9364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9363,"column":0},"generated":{"line":9365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9364,"column":0},"generated":{"line":9366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9365,"column":0},"generated":{"line":9367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9366,"column":0},"generated":{"line":9368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9367,"column":0},"generated":{"line":9369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9368,"column":0},"generated":{"line":9370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9369,"column":0},"generated":{"line":9371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9370,"column":0},"generated":{"line":9372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9371,"column":0},"generated":{"line":9373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9372,"column":0},"generated":{"line":9374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9373,"column":0},"generated":{"line":9375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9374,"column":0},"generated":{"line":9376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9375,"column":0},"generated":{"line":9377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9376,"column":0},"generated":{"line":9378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9377,"column":0},"generated":{"line":9379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9378,"column":0},"generated":{"line":9380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9379,"column":0},"generated":{"line":9381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9380,"column":0},"generated":{"line":9382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9381,"column":0},"generated":{"line":9383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9382,"column":0},"generated":{"line":9384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9383,"column":0},"generated":{"line":9385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9384,"column":0},"generated":{"line":9386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9385,"column":0},"generated":{"line":9387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9386,"column":0},"generated":{"line":9388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9387,"column":0},"generated":{"line":9389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9388,"column":0},"generated":{"line":9390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9389,"column":0},"generated":{"line":9391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9390,"column":0},"generated":{"line":9392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9391,"column":0},"generated":{"line":9393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9392,"column":0},"generated":{"line":9394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9393,"column":0},"generated":{"line":9395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9394,"column":0},"generated":{"line":9396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9395,"column":0},"generated":{"line":9397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9396,"column":0},"generated":{"line":9398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9397,"column":0},"generated":{"line":9399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9398,"column":0},"generated":{"line":9400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9399,"column":0},"generated":{"line":9401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9400,"column":0},"generated":{"line":9402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9401,"column":0},"generated":{"line":9403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9402,"column":0},"generated":{"line":9404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9403,"column":0},"generated":{"line":9405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9404,"column":0},"generated":{"line":9406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9405,"column":0},"generated":{"line":9407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9406,"column":0},"generated":{"line":9408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9407,"column":0},"generated":{"line":9409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9408,"column":0},"generated":{"line":9410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9409,"column":0},"generated":{"line":9411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9410,"column":0},"generated":{"line":9412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9411,"column":0},"generated":{"line":9413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9412,"column":0},"generated":{"line":9414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9413,"column":0},"generated":{"line":9415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9414,"column":0},"generated":{"line":9416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9415,"column":0},"generated":{"line":9417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9416,"column":0},"generated":{"line":9418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9417,"column":0},"generated":{"line":9419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9418,"column":0},"generated":{"line":9420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9419,"column":0},"generated":{"line":9421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9420,"column":0},"generated":{"line":9422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9421,"column":0},"generated":{"line":9423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9422,"column":0},"generated":{"line":9424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9423,"column":0},"generated":{"line":9425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9424,"column":0},"generated":{"line":9426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9425,"column":0},"generated":{"line":9427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9426,"column":0},"generated":{"line":9428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9427,"column":0},"generated":{"line":9429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9428,"column":0},"generated":{"line":9430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9429,"column":0},"generated":{"line":9431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9430,"column":0},"generated":{"line":9432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9431,"column":0},"generated":{"line":9433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9432,"column":0},"generated":{"line":9434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9433,"column":0},"generated":{"line":9435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9434,"column":0},"generated":{"line":9436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9435,"column":0},"generated":{"line":9437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9436,"column":0},"generated":{"line":9438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9437,"column":0},"generated":{"line":9439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9438,"column":0},"generated":{"line":9440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9439,"column":0},"generated":{"line":9441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9440,"column":0},"generated":{"line":9442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9441,"column":0},"generated":{"line":9443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9442,"column":0},"generated":{"line":9444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9443,"column":0},"generated":{"line":9445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9444,"column":0},"generated":{"line":9446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9445,"column":0},"generated":{"line":9447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9446,"column":0},"generated":{"line":9448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9447,"column":0},"generated":{"line":9449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9448,"column":0},"generated":{"line":9450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9449,"column":0},"generated":{"line":9451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9450,"column":0},"generated":{"line":9452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9451,"column":0},"generated":{"line":9453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9452,"column":0},"generated":{"line":9454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9453,"column":0},"generated":{"line":9455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9454,"column":0},"generated":{"line":9456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9455,"column":0},"generated":{"line":9457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9456,"column":0},"generated":{"line":9458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9457,"column":0},"generated":{"line":9459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9458,"column":0},"generated":{"line":9460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9459,"column":0},"generated":{"line":9461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9460,"column":0},"generated":{"line":9462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9461,"column":0},"generated":{"line":9463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9462,"column":0},"generated":{"line":9464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9463,"column":0},"generated":{"line":9465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9464,"column":0},"generated":{"line":9466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9465,"column":0},"generated":{"line":9467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9466,"column":0},"generated":{"line":9468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9467,"column":0},"generated":{"line":9469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9468,"column":0},"generated":{"line":9470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9469,"column":0},"generated":{"line":9471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9470,"column":0},"generated":{"line":9472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9471,"column":0},"generated":{"line":9473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9472,"column":0},"generated":{"line":9474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9473,"column":0},"generated":{"line":9475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9474,"column":0},"generated":{"line":9476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9475,"column":0},"generated":{"line":9477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9476,"column":0},"generated":{"line":9478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9477,"column":0},"generated":{"line":9479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9478,"column":0},"generated":{"line":9480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9479,"column":0},"generated":{"line":9481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9480,"column":0},"generated":{"line":9482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9481,"column":0},"generated":{"line":9483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9482,"column":0},"generated":{"line":9484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9483,"column":0},"generated":{"line":9485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9484,"column":0},"generated":{"line":9486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9485,"column":0},"generated":{"line":9487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9486,"column":0},"generated":{"line":9488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9487,"column":0},"generated":{"line":9489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9488,"column":0},"generated":{"line":9490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9489,"column":0},"generated":{"line":9491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9490,"column":0},"generated":{"line":9492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9491,"column":0},"generated":{"line":9493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9492,"column":0},"generated":{"line":9494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9493,"column":0},"generated":{"line":9495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9494,"column":0},"generated":{"line":9496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9495,"column":0},"generated":{"line":9497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9496,"column":0},"generated":{"line":9498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9497,"column":0},"generated":{"line":9499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9498,"column":0},"generated":{"line":9500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9499,"column":0},"generated":{"line":9501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9500,"column":0},"generated":{"line":9502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9501,"column":0},"generated":{"line":9503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9502,"column":0},"generated":{"line":9504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9503,"column":0},"generated":{"line":9505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9504,"column":0},"generated":{"line":9506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9505,"column":0},"generated":{"line":9507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9506,"column":0},"generated":{"line":9508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9507,"column":0},"generated":{"line":9509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9508,"column":0},"generated":{"line":9510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9509,"column":0},"generated":{"line":9511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9510,"column":0},"generated":{"line":9512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9511,"column":0},"generated":{"line":9513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9512,"column":0},"generated":{"line":9514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9513,"column":0},"generated":{"line":9515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9514,"column":0},"generated":{"line":9516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9515,"column":0},"generated":{"line":9517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9516,"column":0},"generated":{"line":9518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9517,"column":0},"generated":{"line":9519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9518,"column":0},"generated":{"line":9520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9519,"column":0},"generated":{"line":9521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9520,"column":0},"generated":{"line":9522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9521,"column":0},"generated":{"line":9523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9522,"column":0},"generated":{"line":9524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9523,"column":0},"generated":{"line":9525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9524,"column":0},"generated":{"line":9526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9525,"column":0},"generated":{"line":9527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9526,"column":0},"generated":{"line":9528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9527,"column":0},"generated":{"line":9529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9528,"column":0},"generated":{"line":9530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9529,"column":0},"generated":{"line":9531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9530,"column":0},"generated":{"line":9532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9531,"column":0},"generated":{"line":9533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9532,"column":0},"generated":{"line":9534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9533,"column":0},"generated":{"line":9535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9534,"column":0},"generated":{"line":9536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9535,"column":0},"generated":{"line":9537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9536,"column":0},"generated":{"line":9538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9537,"column":0},"generated":{"line":9539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9538,"column":0},"generated":{"line":9540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9539,"column":0},"generated":{"line":9541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9540,"column":0},"generated":{"line":9542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9541,"column":0},"generated":{"line":9543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9542,"column":0},"generated":{"line":9544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9543,"column":0},"generated":{"line":9545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9544,"column":0},"generated":{"line":9546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9545,"column":0},"generated":{"line":9547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9546,"column":0},"generated":{"line":9548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9547,"column":0},"generated":{"line":9549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9548,"column":0},"generated":{"line":9550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9549,"column":0},"generated":{"line":9551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9550,"column":0},"generated":{"line":9552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9551,"column":0},"generated":{"line":9553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9552,"column":0},"generated":{"line":9554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9553,"column":0},"generated":{"line":9555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9554,"column":0},"generated":{"line":9556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9555,"column":0},"generated":{"line":9557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9556,"column":0},"generated":{"line":9558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9557,"column":0},"generated":{"line":9559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9558,"column":0},"generated":{"line":9560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9559,"column":0},"generated":{"line":9561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9560,"column":0},"generated":{"line":9562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9561,"column":0},"generated":{"line":9563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9562,"column":0},"generated":{"line":9564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9563,"column":0},"generated":{"line":9565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9564,"column":0},"generated":{"line":9566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9565,"column":0},"generated":{"line":9567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9566,"column":0},"generated":{"line":9568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9567,"column":0},"generated":{"line":9569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9568,"column":0},"generated":{"line":9570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9569,"column":0},"generated":{"line":9571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9570,"column":0},"generated":{"line":9572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9571,"column":0},"generated":{"line":9573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9572,"column":0},"generated":{"line":9574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9573,"column":0},"generated":{"line":9575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9574,"column":0},"generated":{"line":9576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9575,"column":0},"generated":{"line":9577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9576,"column":0},"generated":{"line":9578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9577,"column":0},"generated":{"line":9579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9578,"column":0},"generated":{"line":9580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9579,"column":0},"generated":{"line":9581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9580,"column":0},"generated":{"line":9582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9581,"column":0},"generated":{"line":9583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9582,"column":0},"generated":{"line":9584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9583,"column":0},"generated":{"line":9585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9584,"column":0},"generated":{"line":9586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9585,"column":0},"generated":{"line":9587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9586,"column":0},"generated":{"line":9588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9587,"column":0},"generated":{"line":9589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9588,"column":0},"generated":{"line":9590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9589,"column":0},"generated":{"line":9591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9590,"column":0},"generated":{"line":9592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9591,"column":0},"generated":{"line":9593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9592,"column":0},"generated":{"line":9594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9593,"column":0},"generated":{"line":9595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9594,"column":0},"generated":{"line":9596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9595,"column":0},"generated":{"line":9597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9596,"column":0},"generated":{"line":9598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9597,"column":0},"generated":{"line":9599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9598,"column":0},"generated":{"line":9600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9599,"column":0},"generated":{"line":9601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9600,"column":0},"generated":{"line":9602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9601,"column":0},"generated":{"line":9603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9602,"column":0},"generated":{"line":9604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9603,"column":0},"generated":{"line":9605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9604,"column":0},"generated":{"line":9606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9605,"column":0},"generated":{"line":9607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9606,"column":0},"generated":{"line":9608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9607,"column":0},"generated":{"line":9609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9608,"column":0},"generated":{"line":9610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9609,"column":0},"generated":{"line":9611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9610,"column":0},"generated":{"line":9612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9611,"column":0},"generated":{"line":9613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9612,"column":0},"generated":{"line":9614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9613,"column":0},"generated":{"line":9615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9614,"column":0},"generated":{"line":9616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9615,"column":0},"generated":{"line":9617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9616,"column":0},"generated":{"line":9618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9617,"column":0},"generated":{"line":9619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9618,"column":0},"generated":{"line":9620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9619,"column":0},"generated":{"line":9621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9620,"column":0},"generated":{"line":9622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9621,"column":0},"generated":{"line":9623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9622,"column":0},"generated":{"line":9624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9623,"column":0},"generated":{"line":9625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9624,"column":0},"generated":{"line":9626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9625,"column":0},"generated":{"line":9627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9626,"column":0},"generated":{"line":9628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9627,"column":0},"generated":{"line":9629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9628,"column":0},"generated":{"line":9630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9629,"column":0},"generated":{"line":9631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9630,"column":0},"generated":{"line":9632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9631,"column":0},"generated":{"line":9633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9632,"column":0},"generated":{"line":9634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9633,"column":0},"generated":{"line":9635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9634,"column":0},"generated":{"line":9636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9635,"column":0},"generated":{"line":9637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9636,"column":0},"generated":{"line":9638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9637,"column":0},"generated":{"line":9639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9638,"column":0},"generated":{"line":9640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9639,"column":0},"generated":{"line":9641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9640,"column":0},"generated":{"line":9642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9641,"column":0},"generated":{"line":9643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9642,"column":0},"generated":{"line":9644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9643,"column":0},"generated":{"line":9645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9644,"column":0},"generated":{"line":9646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9645,"column":0},"generated":{"line":9647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9646,"column":0},"generated":{"line":9648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9647,"column":0},"generated":{"line":9649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9648,"column":0},"generated":{"line":9650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9649,"column":0},"generated":{"line":9651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9650,"column":0},"generated":{"line":9652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9651,"column":0},"generated":{"line":9653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9652,"column":0},"generated":{"line":9654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9653,"column":0},"generated":{"line":9655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9654,"column":0},"generated":{"line":9656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9655,"column":0},"generated":{"line":9657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9656,"column":0},"generated":{"line":9658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9657,"column":0},"generated":{"line":9659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9658,"column":0},"generated":{"line":9660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9659,"column":0},"generated":{"line":9661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9660,"column":0},"generated":{"line":9662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9661,"column":0},"generated":{"line":9663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9662,"column":0},"generated":{"line":9664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9663,"column":0},"generated":{"line":9665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9664,"column":0},"generated":{"line":9666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9665,"column":0},"generated":{"line":9667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9666,"column":0},"generated":{"line":9668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9667,"column":0},"generated":{"line":9669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9668,"column":0},"generated":{"line":9670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9669,"column":0},"generated":{"line":9671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9670,"column":0},"generated":{"line":9672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9671,"column":0},"generated":{"line":9673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9672,"column":0},"generated":{"line":9674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9673,"column":0},"generated":{"line":9675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9674,"column":0},"generated":{"line":9676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9675,"column":0},"generated":{"line":9677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9676,"column":0},"generated":{"line":9678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9677,"column":0},"generated":{"line":9679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9678,"column":0},"generated":{"line":9680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9679,"column":0},"generated":{"line":9681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9680,"column":0},"generated":{"line":9682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9681,"column":0},"generated":{"line":9683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9682,"column":0},"generated":{"line":9684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9683,"column":0},"generated":{"line":9685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9684,"column":0},"generated":{"line":9686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9685,"column":0},"generated":{"line":9687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9686,"column":0},"generated":{"line":9688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9687,"column":0},"generated":{"line":9689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9688,"column":0},"generated":{"line":9690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9689,"column":0},"generated":{"line":9691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9690,"column":0},"generated":{"line":9692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9691,"column":0},"generated":{"line":9693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9692,"column":0},"generated":{"line":9694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9693,"column":0},"generated":{"line":9695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9694,"column":0},"generated":{"line":9696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9695,"column":0},"generated":{"line":9697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9696,"column":0},"generated":{"line":9698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9697,"column":0},"generated":{"line":9699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9698,"column":0},"generated":{"line":9700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9699,"column":0},"generated":{"line":9701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9700,"column":0},"generated":{"line":9702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9701,"column":0},"generated":{"line":9703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9702,"column":0},"generated":{"line":9704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9703,"column":0},"generated":{"line":9705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9704,"column":0},"generated":{"line":9706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9705,"column":0},"generated":{"line":9707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9706,"column":0},"generated":{"line":9708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9707,"column":0},"generated":{"line":9709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9708,"column":0},"generated":{"line":9710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9709,"column":0},"generated":{"line":9711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9710,"column":0},"generated":{"line":9712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9711,"column":0},"generated":{"line":9713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9712,"column":0},"generated":{"line":9714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9713,"column":0},"generated":{"line":9715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9714,"column":0},"generated":{"line":9716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9715,"column":0},"generated":{"line":9717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9716,"column":0},"generated":{"line":9718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9717,"column":0},"generated":{"line":9719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9718,"column":0},"generated":{"line":9720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9719,"column":0},"generated":{"line":9721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9720,"column":0},"generated":{"line":9722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9721,"column":0},"generated":{"line":9723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9722,"column":0},"generated":{"line":9724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9723,"column":0},"generated":{"line":9725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9724,"column":0},"generated":{"line":9726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9725,"column":0},"generated":{"line":9727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9726,"column":0},"generated":{"line":9728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9727,"column":0},"generated":{"line":9729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9728,"column":0},"generated":{"line":9730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9729,"column":0},"generated":{"line":9731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9730,"column":0},"generated":{"line":9732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9731,"column":0},"generated":{"line":9733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9732,"column":0},"generated":{"line":9734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9733,"column":0},"generated":{"line":9735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9734,"column":0},"generated":{"line":9736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9735,"column":0},"generated":{"line":9737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9736,"column":0},"generated":{"line":9738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9737,"column":0},"generated":{"line":9739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9738,"column":0},"generated":{"line":9740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9739,"column":0},"generated":{"line":9741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9740,"column":0},"generated":{"line":9742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9741,"column":0},"generated":{"line":9743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9742,"column":0},"generated":{"line":9744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9743,"column":0},"generated":{"line":9745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9744,"column":0},"generated":{"line":9746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9745,"column":0},"generated":{"line":9747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9746,"column":0},"generated":{"line":9748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9747,"column":0},"generated":{"line":9749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9748,"column":0},"generated":{"line":9750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9749,"column":0},"generated":{"line":9751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9750,"column":0},"generated":{"line":9752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9751,"column":0},"generated":{"line":9753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9752,"column":0},"generated":{"line":9754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9753,"column":0},"generated":{"line":9755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9754,"column":0},"generated":{"line":9756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9755,"column":0},"generated":{"line":9757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9756,"column":0},"generated":{"line":9758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9757,"column":0},"generated":{"line":9759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9758,"column":0},"generated":{"line":9760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9759,"column":0},"generated":{"line":9761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9760,"column":0},"generated":{"line":9762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9761,"column":0},"generated":{"line":9763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9762,"column":0},"generated":{"line":9764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9763,"column":0},"generated":{"line":9765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9764,"column":0},"generated":{"line":9766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9765,"column":0},"generated":{"line":9767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9766,"column":0},"generated":{"line":9768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9767,"column":0},"generated":{"line":9769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9768,"column":0},"generated":{"line":9770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9769,"column":0},"generated":{"line":9771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9770,"column":0},"generated":{"line":9772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9771,"column":0},"generated":{"line":9773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9772,"column":0},"generated":{"line":9774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9773,"column":0},"generated":{"line":9775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9774,"column":0},"generated":{"line":9776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9775,"column":0},"generated":{"line":9777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9776,"column":0},"generated":{"line":9778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9777,"column":0},"generated":{"line":9779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9778,"column":0},"generated":{"line":9780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9779,"column":0},"generated":{"line":9781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9780,"column":0},"generated":{"line":9782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9781,"column":0},"generated":{"line":9783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9782,"column":0},"generated":{"line":9784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9783,"column":0},"generated":{"line":9785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9784,"column":0},"generated":{"line":9786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9785,"column":0},"generated":{"line":9787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9786,"column":0},"generated":{"line":9788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9787,"column":0},"generated":{"line":9789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9788,"column":0},"generated":{"line":9790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9789,"column":0},"generated":{"line":9791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9790,"column":0},"generated":{"line":9792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9791,"column":0},"generated":{"line":9793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9792,"column":0},"generated":{"line":9794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9793,"column":0},"generated":{"line":9795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9794,"column":0},"generated":{"line":9796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9795,"column":0},"generated":{"line":9797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9796,"column":0},"generated":{"line":9798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9797,"column":0},"generated":{"line":9799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9798,"column":0},"generated":{"line":9800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9799,"column":0},"generated":{"line":9801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9800,"column":0},"generated":{"line":9802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9801,"column":0},"generated":{"line":9803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9802,"column":0},"generated":{"line":9804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9803,"column":0},"generated":{"line":9805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9804,"column":0},"generated":{"line":9806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9805,"column":0},"generated":{"line":9807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9806,"column":0},"generated":{"line":9808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9807,"column":0},"generated":{"line":9809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9808,"column":0},"generated":{"line":9810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9809,"column":0},"generated":{"line":9811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9810,"column":0},"generated":{"line":9812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9811,"column":0},"generated":{"line":9813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9812,"column":0},"generated":{"line":9814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9813,"column":0},"generated":{"line":9815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9814,"column":0},"generated":{"line":9816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9815,"column":0},"generated":{"line":9817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9816,"column":0},"generated":{"line":9818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9817,"column":0},"generated":{"line":9819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9818,"column":0},"generated":{"line":9820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9819,"column":0},"generated":{"line":9821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9820,"column":0},"generated":{"line":9822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9821,"column":0},"generated":{"line":9823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9822,"column":0},"generated":{"line":9824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9823,"column":0},"generated":{"line":9825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9824,"column":0},"generated":{"line":9826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9825,"column":0},"generated":{"line":9827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9826,"column":0},"generated":{"line":9828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9827,"column":0},"generated":{"line":9829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9828,"column":0},"generated":{"line":9830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9829,"column":0},"generated":{"line":9831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9830,"column":0},"generated":{"line":9832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9831,"column":0},"generated":{"line":9833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9832,"column":0},"generated":{"line":9834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9833,"column":0},"generated":{"line":9835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9834,"column":0},"generated":{"line":9836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9835,"column":0},"generated":{"line":9837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9836,"column":0},"generated":{"line":9838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9837,"column":0},"generated":{"line":9839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9838,"column":0},"generated":{"line":9840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9839,"column":0},"generated":{"line":9841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9840,"column":0},"generated":{"line":9842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9841,"column":0},"generated":{"line":9843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9842,"column":0},"generated":{"line":9844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9843,"column":0},"generated":{"line":9845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9844,"column":0},"generated":{"line":9846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9845,"column":0},"generated":{"line":9847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9846,"column":0},"generated":{"line":9848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9847,"column":0},"generated":{"line":9849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9848,"column":0},"generated":{"line":9850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9849,"column":0},"generated":{"line":9851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9850,"column":0},"generated":{"line":9852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9851,"column":0},"generated":{"line":9853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9852,"column":0},"generated":{"line":9854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9853,"column":0},"generated":{"line":9855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9854,"column":0},"generated":{"line":9856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9855,"column":0},"generated":{"line":9857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9856,"column":0},"generated":{"line":9858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9857,"column":0},"generated":{"line":9859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9858,"column":0},"generated":{"line":9860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9859,"column":0},"generated":{"line":9861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9860,"column":0},"generated":{"line":9862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9861,"column":0},"generated":{"line":9863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9862,"column":0},"generated":{"line":9864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9863,"column":0},"generated":{"line":9865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9864,"column":0},"generated":{"line":9866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9865,"column":0},"generated":{"line":9867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9866,"column":0},"generated":{"line":9868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9867,"column":0},"generated":{"line":9869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9868,"column":0},"generated":{"line":9870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9869,"column":0},"generated":{"line":9871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9870,"column":0},"generated":{"line":9872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9871,"column":0},"generated":{"line":9873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9872,"column":0},"generated":{"line":9874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9873,"column":0},"generated":{"line":9875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9874,"column":0},"generated":{"line":9876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9875,"column":0},"generated":{"line":9877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9876,"column":0},"generated":{"line":9878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9877,"column":0},"generated":{"line":9879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9878,"column":0},"generated":{"line":9880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9879,"column":0},"generated":{"line":9881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9880,"column":0},"generated":{"line":9882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9881,"column":0},"generated":{"line":9883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9882,"column":0},"generated":{"line":9884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9883,"column":0},"generated":{"line":9885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9884,"column":0},"generated":{"line":9886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9885,"column":0},"generated":{"line":9887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9886,"column":0},"generated":{"line":9888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9887,"column":0},"generated":{"line":9889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9888,"column":0},"generated":{"line":9890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9889,"column":0},"generated":{"line":9891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9890,"column":0},"generated":{"line":9892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9891,"column":0},"generated":{"line":9893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9892,"column":0},"generated":{"line":9894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9893,"column":0},"generated":{"line":9895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9894,"column":0},"generated":{"line":9896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9895,"column":0},"generated":{"line":9897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9896,"column":0},"generated":{"line":9898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9897,"column":0},"generated":{"line":9899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9898,"column":0},"generated":{"line":9900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9899,"column":0},"generated":{"line":9901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9900,"column":0},"generated":{"line":9902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9901,"column":0},"generated":{"line":9903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9902,"column":0},"generated":{"line":9904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9903,"column":0},"generated":{"line":9905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9904,"column":0},"generated":{"line":9906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9905,"column":0},"generated":{"line":9907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9906,"column":0},"generated":{"line":9908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9907,"column":0},"generated":{"line":9909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9908,"column":0},"generated":{"line":9910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9909,"column":0},"generated":{"line":9911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9910,"column":0},"generated":{"line":9912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9911,"column":0},"generated":{"line":9913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9912,"column":0},"generated":{"line":9914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9913,"column":0},"generated":{"line":9915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9914,"column":0},"generated":{"line":9916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9915,"column":0},"generated":{"line":9917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9916,"column":0},"generated":{"line":9918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9917,"column":0},"generated":{"line":9919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9918,"column":0},"generated":{"line":9920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9919,"column":0},"generated":{"line":9921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9920,"column":0},"generated":{"line":9922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9921,"column":0},"generated":{"line":9923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9922,"column":0},"generated":{"line":9924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9923,"column":0},"generated":{"line":9925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9924,"column":0},"generated":{"line":9926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9925,"column":0},"generated":{"line":9927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9926,"column":0},"generated":{"line":9928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9927,"column":0},"generated":{"line":9929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9928,"column":0},"generated":{"line":9930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9929,"column":0},"generated":{"line":9931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9930,"column":0},"generated":{"line":9932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9931,"column":0},"generated":{"line":9933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9932,"column":0},"generated":{"line":9934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9933,"column":0},"generated":{"line":9935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9934,"column":0},"generated":{"line":9936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9935,"column":0},"generated":{"line":9937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9936,"column":0},"generated":{"line":9938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9937,"column":0},"generated":{"line":9939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9938,"column":0},"generated":{"line":9940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9939,"column":0},"generated":{"line":9941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9940,"column":0},"generated":{"line":9942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9941,"column":0},"generated":{"line":9943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9942,"column":0},"generated":{"line":9944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9943,"column":0},"generated":{"line":9945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9944,"column":0},"generated":{"line":9946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9945,"column":0},"generated":{"line":9947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9946,"column":0},"generated":{"line":9948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9947,"column":0},"generated":{"line":9949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9948,"column":0},"generated":{"line":9950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9949,"column":0},"generated":{"line":9951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9950,"column":0},"generated":{"line":9952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9951,"column":0},"generated":{"line":9953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9952,"column":0},"generated":{"line":9954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9953,"column":0},"generated":{"line":9955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9954,"column":0},"generated":{"line":9956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9955,"column":0},"generated":{"line":9957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9956,"column":0},"generated":{"line":9958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9957,"column":0},"generated":{"line":9959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9958,"column":0},"generated":{"line":9960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9959,"column":0},"generated":{"line":9961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9960,"column":0},"generated":{"line":9962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9961,"column":0},"generated":{"line":9963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9962,"column":0},"generated":{"line":9964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9963,"column":0},"generated":{"line":9965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9964,"column":0},"generated":{"line":9966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9965,"column":0},"generated":{"line":9967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9966,"column":0},"generated":{"line":9968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9967,"column":0},"generated":{"line":9969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9968,"column":0},"generated":{"line":9970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9969,"column":0},"generated":{"line":9971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9970,"column":0},"generated":{"line":9972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9971,"column":0},"generated":{"line":9973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9972,"column":0},"generated":{"line":9974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9973,"column":0},"generated":{"line":9975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9974,"column":0},"generated":{"line":9976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9975,"column":0},"generated":{"line":9977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9976,"column":0},"generated":{"line":9978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9977,"column":0},"generated":{"line":9979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9978,"column":0},"generated":{"line":9980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9979,"column":0},"generated":{"line":9981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9980,"column":0},"generated":{"line":9982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9981,"column":0},"generated":{"line":9983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9982,"column":0},"generated":{"line":9984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9983,"column":0},"generated":{"line":9985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9984,"column":0},"generated":{"line":9986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9985,"column":0},"generated":{"line":9987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9986,"column":0},"generated":{"line":9988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9987,"column":0},"generated":{"line":9989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9988,"column":0},"generated":{"line":9990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9989,"column":0},"generated":{"line":9991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9990,"column":0},"generated":{"line":9992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9991,"column":0},"generated":{"line":9993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9992,"column":0},"generated":{"line":9994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9993,"column":0},"generated":{"line":9995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9994,"column":0},"generated":{"line":9996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9995,"column":0},"generated":{"line":9997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9996,"column":0},"generated":{"line":9998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9997,"column":0},"generated":{"line":9999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9998,"column":0},"generated":{"line":10000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":9999,"column":0},"generated":{"line":10001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10000,"column":0},"generated":{"line":10002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10001,"column":0},"generated":{"line":10003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10002,"column":0},"generated":{"line":10004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10003,"column":0},"generated":{"line":10005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10004,"column":0},"generated":{"line":10006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10005,"column":0},"generated":{"line":10007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10006,"column":0},"generated":{"line":10008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10007,"column":0},"generated":{"line":10009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10008,"column":0},"generated":{"line":10010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10009,"column":0},"generated":{"line":10011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10010,"column":0},"generated":{"line":10012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10011,"column":0},"generated":{"line":10013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10012,"column":0},"generated":{"line":10014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10013,"column":0},"generated":{"line":10015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10014,"column":0},"generated":{"line":10016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10015,"column":0},"generated":{"line":10017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10016,"column":0},"generated":{"line":10018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10017,"column":0},"generated":{"line":10019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10018,"column":0},"generated":{"line":10020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10019,"column":0},"generated":{"line":10021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10020,"column":0},"generated":{"line":10022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10021,"column":0},"generated":{"line":10023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10022,"column":0},"generated":{"line":10024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10023,"column":0},"generated":{"line":10025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10024,"column":0},"generated":{"line":10026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10025,"column":0},"generated":{"line":10027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10026,"column":0},"generated":{"line":10028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10027,"column":0},"generated":{"line":10029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10028,"column":0},"generated":{"line":10030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10029,"column":0},"generated":{"line":10031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10030,"column":0},"generated":{"line":10032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10031,"column":0},"generated":{"line":10033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10032,"column":0},"generated":{"line":10034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10033,"column":0},"generated":{"line":10035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10034,"column":0},"generated":{"line":10036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10035,"column":0},"generated":{"line":10037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10036,"column":0},"generated":{"line":10038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10037,"column":0},"generated":{"line":10039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10038,"column":0},"generated":{"line":10040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10039,"column":0},"generated":{"line":10041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10040,"column":0},"generated":{"line":10042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10041,"column":0},"generated":{"line":10043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10042,"column":0},"generated":{"line":10044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10043,"column":0},"generated":{"line":10045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10044,"column":0},"generated":{"line":10046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10045,"column":0},"generated":{"line":10047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10046,"column":0},"generated":{"line":10048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10047,"column":0},"generated":{"line":10049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10048,"column":0},"generated":{"line":10050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10049,"column":0},"generated":{"line":10051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10050,"column":0},"generated":{"line":10052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10051,"column":0},"generated":{"line":10053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10052,"column":0},"generated":{"line":10054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10053,"column":0},"generated":{"line":10055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10054,"column":0},"generated":{"line":10056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10055,"column":0},"generated":{"line":10057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10056,"column":0},"generated":{"line":10058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10057,"column":0},"generated":{"line":10059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10058,"column":0},"generated":{"line":10060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10059,"column":0},"generated":{"line":10061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10060,"column":0},"generated":{"line":10062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10061,"column":0},"generated":{"line":10063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10062,"column":0},"generated":{"line":10064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10063,"column":0},"generated":{"line":10065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10064,"column":0},"generated":{"line":10066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10065,"column":0},"generated":{"line":10067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10066,"column":0},"generated":{"line":10068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10067,"column":0},"generated":{"line":10069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10068,"column":0},"generated":{"line":10070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10069,"column":0},"generated":{"line":10071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10070,"column":0},"generated":{"line":10072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10071,"column":0},"generated":{"line":10073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10072,"column":0},"generated":{"line":10074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10073,"column":0},"generated":{"line":10075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10074,"column":0},"generated":{"line":10076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10075,"column":0},"generated":{"line":10077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10076,"column":0},"generated":{"line":10078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10077,"column":0},"generated":{"line":10079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10078,"column":0},"generated":{"line":10080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10079,"column":0},"generated":{"line":10081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10080,"column":0},"generated":{"line":10082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10081,"column":0},"generated":{"line":10083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10082,"column":0},"generated":{"line":10084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10083,"column":0},"generated":{"line":10085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10084,"column":0},"generated":{"line":10086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10085,"column":0},"generated":{"line":10087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10086,"column":0},"generated":{"line":10088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10087,"column":0},"generated":{"line":10089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10088,"column":0},"generated":{"line":10090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10089,"column":0},"generated":{"line":10091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10090,"column":0},"generated":{"line":10092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10091,"column":0},"generated":{"line":10093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10092,"column":0},"generated":{"line":10094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10093,"column":0},"generated":{"line":10095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10094,"column":0},"generated":{"line":10096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10095,"column":0},"generated":{"line":10097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10096,"column":0},"generated":{"line":10098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10097,"column":0},"generated":{"line":10099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10098,"column":0},"generated":{"line":10100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10099,"column":0},"generated":{"line":10101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10100,"column":0},"generated":{"line":10102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10101,"column":0},"generated":{"line":10103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10102,"column":0},"generated":{"line":10104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10103,"column":0},"generated":{"line":10105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10104,"column":0},"generated":{"line":10106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10105,"column":0},"generated":{"line":10107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10106,"column":0},"generated":{"line":10108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10107,"column":0},"generated":{"line":10109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10108,"column":0},"generated":{"line":10110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10109,"column":0},"generated":{"line":10111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10110,"column":0},"generated":{"line":10112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10111,"column":0},"generated":{"line":10113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10112,"column":0},"generated":{"line":10114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10113,"column":0},"generated":{"line":10115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10114,"column":0},"generated":{"line":10116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10115,"column":0},"generated":{"line":10117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10116,"column":0},"generated":{"line":10118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10117,"column":0},"generated":{"line":10119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10118,"column":0},"generated":{"line":10120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10119,"column":0},"generated":{"line":10121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10120,"column":0},"generated":{"line":10122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10121,"column":0},"generated":{"line":10123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10122,"column":0},"generated":{"line":10124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10123,"column":0},"generated":{"line":10125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10124,"column":0},"generated":{"line":10126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10125,"column":0},"generated":{"line":10127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10126,"column":0},"generated":{"line":10128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10127,"column":0},"generated":{"line":10129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10128,"column":0},"generated":{"line":10130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10129,"column":0},"generated":{"line":10131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10130,"column":0},"generated":{"line":10132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10131,"column":0},"generated":{"line":10133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10132,"column":0},"generated":{"line":10134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10133,"column":0},"generated":{"line":10135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10134,"column":0},"generated":{"line":10136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10135,"column":0},"generated":{"line":10137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10136,"column":0},"generated":{"line":10138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10137,"column":0},"generated":{"line":10139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10138,"column":0},"generated":{"line":10140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10139,"column":0},"generated":{"line":10141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10140,"column":0},"generated":{"line":10142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10141,"column":0},"generated":{"line":10143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10142,"column":0},"generated":{"line":10144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10143,"column":0},"generated":{"line":10145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10144,"column":0},"generated":{"line":10146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10145,"column":0},"generated":{"line":10147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10146,"column":0},"generated":{"line":10148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10147,"column":0},"generated":{"line":10149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10148,"column":0},"generated":{"line":10150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10149,"column":0},"generated":{"line":10151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10150,"column":0},"generated":{"line":10152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10151,"column":0},"generated":{"line":10153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10152,"column":0},"generated":{"line":10154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10153,"column":0},"generated":{"line":10155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10154,"column":0},"generated":{"line":10156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10155,"column":0},"generated":{"line":10157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10156,"column":0},"generated":{"line":10158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10157,"column":0},"generated":{"line":10159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10158,"column":0},"generated":{"line":10160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10159,"column":0},"generated":{"line":10161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10160,"column":0},"generated":{"line":10162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10161,"column":0},"generated":{"line":10163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10162,"column":0},"generated":{"line":10164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10163,"column":0},"generated":{"line":10165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10164,"column":0},"generated":{"line":10166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10165,"column":0},"generated":{"line":10167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10166,"column":0},"generated":{"line":10168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10167,"column":0},"generated":{"line":10169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10168,"column":0},"generated":{"line":10170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10169,"column":0},"generated":{"line":10171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10170,"column":0},"generated":{"line":10172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10171,"column":0},"generated":{"line":10173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10172,"column":0},"generated":{"line":10174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10173,"column":0},"generated":{"line":10175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10174,"column":0},"generated":{"line":10176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10175,"column":0},"generated":{"line":10177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10176,"column":0},"generated":{"line":10178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10177,"column":0},"generated":{"line":10179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10178,"column":0},"generated":{"line":10180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10179,"column":0},"generated":{"line":10181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10180,"column":0},"generated":{"line":10182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10181,"column":0},"generated":{"line":10183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10182,"column":0},"generated":{"line":10184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10183,"column":0},"generated":{"line":10185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10184,"column":0},"generated":{"line":10186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10185,"column":0},"generated":{"line":10187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10186,"column":0},"generated":{"line":10188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10187,"column":0},"generated":{"line":10189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10188,"column":0},"generated":{"line":10190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10189,"column":0},"generated":{"line":10191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10190,"column":0},"generated":{"line":10192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10191,"column":0},"generated":{"line":10193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10192,"column":0},"generated":{"line":10194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10193,"column":0},"generated":{"line":10195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10194,"column":0},"generated":{"line":10196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10195,"column":0},"generated":{"line":10197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10196,"column":0},"generated":{"line":10198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10197,"column":0},"generated":{"line":10199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10198,"column":0},"generated":{"line":10200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10199,"column":0},"generated":{"line":10201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10200,"column":0},"generated":{"line":10202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10201,"column":0},"generated":{"line":10203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10202,"column":0},"generated":{"line":10204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10203,"column":0},"generated":{"line":10205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10204,"column":0},"generated":{"line":10206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10205,"column":0},"generated":{"line":10207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10206,"column":0},"generated":{"line":10208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10207,"column":0},"generated":{"line":10209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10208,"column":0},"generated":{"line":10210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10209,"column":0},"generated":{"line":10211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10210,"column":0},"generated":{"line":10212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10211,"column":0},"generated":{"line":10213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10212,"column":0},"generated":{"line":10214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10213,"column":0},"generated":{"line":10215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10214,"column":0},"generated":{"line":10216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10215,"column":0},"generated":{"line":10217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10216,"column":0},"generated":{"line":10218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10217,"column":0},"generated":{"line":10219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10218,"column":0},"generated":{"line":10220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10219,"column":0},"generated":{"line":10221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10220,"column":0},"generated":{"line":10222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10221,"column":0},"generated":{"line":10223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10222,"column":0},"generated":{"line":10224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10223,"column":0},"generated":{"line":10225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10224,"column":0},"generated":{"line":10226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10225,"column":0},"generated":{"line":10227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10226,"column":0},"generated":{"line":10228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10227,"column":0},"generated":{"line":10229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10228,"column":0},"generated":{"line":10230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10229,"column":0},"generated":{"line":10231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10230,"column":0},"generated":{"line":10232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10231,"column":0},"generated":{"line":10233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10232,"column":0},"generated":{"line":10234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10233,"column":0},"generated":{"line":10235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10234,"column":0},"generated":{"line":10236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10235,"column":0},"generated":{"line":10237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10236,"column":0},"generated":{"line":10238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10237,"column":0},"generated":{"line":10239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10238,"column":0},"generated":{"line":10240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10239,"column":0},"generated":{"line":10241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10240,"column":0},"generated":{"line":10242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10241,"column":0},"generated":{"line":10243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10242,"column":0},"generated":{"line":10244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10243,"column":0},"generated":{"line":10245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10244,"column":0},"generated":{"line":10246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10245,"column":0},"generated":{"line":10247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10246,"column":0},"generated":{"line":10248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10247,"column":0},"generated":{"line":10249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10248,"column":0},"generated":{"line":10250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10249,"column":0},"generated":{"line":10251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10250,"column":0},"generated":{"line":10252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10251,"column":0},"generated":{"line":10253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10252,"column":0},"generated":{"line":10254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10253,"column":0},"generated":{"line":10255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10254,"column":0},"generated":{"line":10256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10255,"column":0},"generated":{"line":10257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10256,"column":0},"generated":{"line":10258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10257,"column":0},"generated":{"line":10259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10258,"column":0},"generated":{"line":10260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10259,"column":0},"generated":{"line":10261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10260,"column":0},"generated":{"line":10262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10261,"column":0},"generated":{"line":10263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10262,"column":0},"generated":{"line":10264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10263,"column":0},"generated":{"line":10265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10264,"column":0},"generated":{"line":10266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10265,"column":0},"generated":{"line":10267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10266,"column":0},"generated":{"line":10268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10267,"column":0},"generated":{"line":10269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10268,"column":0},"generated":{"line":10270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10269,"column":0},"generated":{"line":10271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10270,"column":0},"generated":{"line":10272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10271,"column":0},"generated":{"line":10273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10272,"column":0},"generated":{"line":10274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10273,"column":0},"generated":{"line":10275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10274,"column":0},"generated":{"line":10276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10275,"column":0},"generated":{"line":10277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10276,"column":0},"generated":{"line":10278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10277,"column":0},"generated":{"line":10279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10278,"column":0},"generated":{"line":10280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10279,"column":0},"generated":{"line":10281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10280,"column":0},"generated":{"line":10282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10281,"column":0},"generated":{"line":10283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10282,"column":0},"generated":{"line":10284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10283,"column":0},"generated":{"line":10285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10284,"column":0},"generated":{"line":10286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10285,"column":0},"generated":{"line":10287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10286,"column":0},"generated":{"line":10288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10287,"column":0},"generated":{"line":10289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10288,"column":0},"generated":{"line":10290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10289,"column":0},"generated":{"line":10291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10290,"column":0},"generated":{"line":10292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10291,"column":0},"generated":{"line":10293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10292,"column":0},"generated":{"line":10294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10293,"column":0},"generated":{"line":10295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10294,"column":0},"generated":{"line":10296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10295,"column":0},"generated":{"line":10297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10296,"column":0},"generated":{"line":10298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10297,"column":0},"generated":{"line":10299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10298,"column":0},"generated":{"line":10300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10299,"column":0},"generated":{"line":10301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10300,"column":0},"generated":{"line":10302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10301,"column":0},"generated":{"line":10303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10302,"column":0},"generated":{"line":10304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10303,"column":0},"generated":{"line":10305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10304,"column":0},"generated":{"line":10306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10305,"column":0},"generated":{"line":10307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10306,"column":0},"generated":{"line":10308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10307,"column":0},"generated":{"line":10309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10308,"column":0},"generated":{"line":10310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10309,"column":0},"generated":{"line":10311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10310,"column":0},"generated":{"line":10312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10311,"column":0},"generated":{"line":10313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10312,"column":0},"generated":{"line":10314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10313,"column":0},"generated":{"line":10315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10314,"column":0},"generated":{"line":10316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10315,"column":0},"generated":{"line":10317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10316,"column":0},"generated":{"line":10318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10317,"column":0},"generated":{"line":10319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10318,"column":0},"generated":{"line":10320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10319,"column":0},"generated":{"line":10321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10320,"column":0},"generated":{"line":10322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10321,"column":0},"generated":{"line":10323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10322,"column":0},"generated":{"line":10324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10323,"column":0},"generated":{"line":10325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10324,"column":0},"generated":{"line":10326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10325,"column":0},"generated":{"line":10327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10326,"column":0},"generated":{"line":10328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10327,"column":0},"generated":{"line":10329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10328,"column":0},"generated":{"line":10330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10329,"column":0},"generated":{"line":10331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10330,"column":0},"generated":{"line":10332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10331,"column":0},"generated":{"line":10333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10332,"column":0},"generated":{"line":10334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10333,"column":0},"generated":{"line":10335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10334,"column":0},"generated":{"line":10336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10335,"column":0},"generated":{"line":10337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10336,"column":0},"generated":{"line":10338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10337,"column":0},"generated":{"line":10339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10338,"column":0},"generated":{"line":10340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10339,"column":0},"generated":{"line":10341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10340,"column":0},"generated":{"line":10342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10341,"column":0},"generated":{"line":10343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10342,"column":0},"generated":{"line":10344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10343,"column":0},"generated":{"line":10345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10344,"column":0},"generated":{"line":10346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10345,"column":0},"generated":{"line":10347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10346,"column":0},"generated":{"line":10348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10347,"column":0},"generated":{"line":10349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10348,"column":0},"generated":{"line":10350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10349,"column":0},"generated":{"line":10351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10350,"column":0},"generated":{"line":10352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10351,"column":0},"generated":{"line":10353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10352,"column":0},"generated":{"line":10354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10353,"column":0},"generated":{"line":10355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10354,"column":0},"generated":{"line":10356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10355,"column":0},"generated":{"line":10357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10356,"column":0},"generated":{"line":10358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10357,"column":0},"generated":{"line":10359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10358,"column":0},"generated":{"line":10360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10359,"column":0},"generated":{"line":10361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10360,"column":0},"generated":{"line":10362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10361,"column":0},"generated":{"line":10363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10362,"column":0},"generated":{"line":10364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10363,"column":0},"generated":{"line":10365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10364,"column":0},"generated":{"line":10366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10365,"column":0},"generated":{"line":10367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10366,"column":0},"generated":{"line":10368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10367,"column":0},"generated":{"line":10369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10368,"column":0},"generated":{"line":10370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10369,"column":0},"generated":{"line":10371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10370,"column":0},"generated":{"line":10372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10371,"column":0},"generated":{"line":10373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10372,"column":0},"generated":{"line":10374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10373,"column":0},"generated":{"line":10375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10374,"column":0},"generated":{"line":10376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10375,"column":0},"generated":{"line":10377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10376,"column":0},"generated":{"line":10378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10377,"column":0},"generated":{"line":10379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10378,"column":0},"generated":{"line":10380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10379,"column":0},"generated":{"line":10381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10380,"column":0},"generated":{"line":10382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10381,"column":0},"generated":{"line":10383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10382,"column":0},"generated":{"line":10384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10383,"column":0},"generated":{"line":10385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10384,"column":0},"generated":{"line":10386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10385,"column":0},"generated":{"line":10387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10386,"column":0},"generated":{"line":10388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10387,"column":0},"generated":{"line":10389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10388,"column":0},"generated":{"line":10390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10389,"column":0},"generated":{"line":10391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10390,"column":0},"generated":{"line":10392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10391,"column":0},"generated":{"line":10393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10392,"column":0},"generated":{"line":10394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10393,"column":0},"generated":{"line":10395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10394,"column":0},"generated":{"line":10396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10395,"column":0},"generated":{"line":10397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10396,"column":0},"generated":{"line":10398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10397,"column":0},"generated":{"line":10399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10398,"column":0},"generated":{"line":10400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10399,"column":0},"generated":{"line":10401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10400,"column":0},"generated":{"line":10402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10401,"column":0},"generated":{"line":10403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10402,"column":0},"generated":{"line":10404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10403,"column":0},"generated":{"line":10405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10404,"column":0},"generated":{"line":10406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10405,"column":0},"generated":{"line":10407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10406,"column":0},"generated":{"line":10408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10407,"column":0},"generated":{"line":10409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10408,"column":0},"generated":{"line":10410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10409,"column":0},"generated":{"line":10411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10410,"column":0},"generated":{"line":10412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10411,"column":0},"generated":{"line":10413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10412,"column":0},"generated":{"line":10414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10413,"column":0},"generated":{"line":10415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10414,"column":0},"generated":{"line":10416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10415,"column":0},"generated":{"line":10417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10416,"column":0},"generated":{"line":10418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10417,"column":0},"generated":{"line":10419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10418,"column":0},"generated":{"line":10420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10419,"column":0},"generated":{"line":10421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10420,"column":0},"generated":{"line":10422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10421,"column":0},"generated":{"line":10423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10422,"column":0},"generated":{"line":10424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10423,"column":0},"generated":{"line":10425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10424,"column":0},"generated":{"line":10426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10425,"column":0},"generated":{"line":10427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10426,"column":0},"generated":{"line":10428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10427,"column":0},"generated":{"line":10429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10428,"column":0},"generated":{"line":10430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10429,"column":0},"generated":{"line":10431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10430,"column":0},"generated":{"line":10432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10431,"column":0},"generated":{"line":10433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10432,"column":0},"generated":{"line":10434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10433,"column":0},"generated":{"line":10435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10434,"column":0},"generated":{"line":10436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10435,"column":0},"generated":{"line":10437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10436,"column":0},"generated":{"line":10438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10437,"column":0},"generated":{"line":10439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10438,"column":0},"generated":{"line":10440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10439,"column":0},"generated":{"line":10441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10440,"column":0},"generated":{"line":10442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10441,"column":0},"generated":{"line":10443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10442,"column":0},"generated":{"line":10444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10443,"column":0},"generated":{"line":10445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10444,"column":0},"generated":{"line":10446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10445,"column":0},"generated":{"line":10447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10446,"column":0},"generated":{"line":10448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10447,"column":0},"generated":{"line":10449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10448,"column":0},"generated":{"line":10450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10449,"column":0},"generated":{"line":10451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10450,"column":0},"generated":{"line":10452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10451,"column":0},"generated":{"line":10453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10452,"column":0},"generated":{"line":10454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10453,"column":0},"generated":{"line":10455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10454,"column":0},"generated":{"line":10456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10455,"column":0},"generated":{"line":10457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10456,"column":0},"generated":{"line":10458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10457,"column":0},"generated":{"line":10459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10458,"column":0},"generated":{"line":10460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10459,"column":0},"generated":{"line":10461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10460,"column":0},"generated":{"line":10462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10461,"column":0},"generated":{"line":10463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10462,"column":0},"generated":{"line":10464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10463,"column":0},"generated":{"line":10465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10464,"column":0},"generated":{"line":10466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10465,"column":0},"generated":{"line":10467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10466,"column":0},"generated":{"line":10468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10467,"column":0},"generated":{"line":10469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10468,"column":0},"generated":{"line":10470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10469,"column":0},"generated":{"line":10471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10470,"column":0},"generated":{"line":10472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10471,"column":0},"generated":{"line":10473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10472,"column":0},"generated":{"line":10474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10473,"column":0},"generated":{"line":10475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10474,"column":0},"generated":{"line":10476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10475,"column":0},"generated":{"line":10477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10476,"column":0},"generated":{"line":10478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10477,"column":0},"generated":{"line":10479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10478,"column":0},"generated":{"line":10480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10479,"column":0},"generated":{"line":10481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10480,"column":0},"generated":{"line":10482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10481,"column":0},"generated":{"line":10483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10482,"column":0},"generated":{"line":10484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10483,"column":0},"generated":{"line":10485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10484,"column":0},"generated":{"line":10486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10485,"column":0},"generated":{"line":10487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10486,"column":0},"generated":{"line":10488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10487,"column":0},"generated":{"line":10489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10488,"column":0},"generated":{"line":10490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10489,"column":0},"generated":{"line":10491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10490,"column":0},"generated":{"line":10492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10491,"column":0},"generated":{"line":10493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10492,"column":0},"generated":{"line":10494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10493,"column":0},"generated":{"line":10495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10494,"column":0},"generated":{"line":10496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10495,"column":0},"generated":{"line":10497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10496,"column":0},"generated":{"line":10498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10497,"column":0},"generated":{"line":10499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10498,"column":0},"generated":{"line":10500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10499,"column":0},"generated":{"line":10501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10500,"column":0},"generated":{"line":10502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10501,"column":0},"generated":{"line":10503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10502,"column":0},"generated":{"line":10504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10503,"column":0},"generated":{"line":10505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10504,"column":0},"generated":{"line":10506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10505,"column":0},"generated":{"line":10507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10506,"column":0},"generated":{"line":10508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10507,"column":0},"generated":{"line":10509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10508,"column":0},"generated":{"line":10510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10509,"column":0},"generated":{"line":10511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10510,"column":0},"generated":{"line":10512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10511,"column":0},"generated":{"line":10513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10512,"column":0},"generated":{"line":10514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10513,"column":0},"generated":{"line":10515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10514,"column":0},"generated":{"line":10516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10515,"column":0},"generated":{"line":10517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10516,"column":0},"generated":{"line":10518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10517,"column":0},"generated":{"line":10519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10518,"column":0},"generated":{"line":10520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10519,"column":0},"generated":{"line":10521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10520,"column":0},"generated":{"line":10522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10521,"column":0},"generated":{"line":10523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10522,"column":0},"generated":{"line":10524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10523,"column":0},"generated":{"line":10525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10524,"column":0},"generated":{"line":10526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10525,"column":0},"generated":{"line":10527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10526,"column":0},"generated":{"line":10528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10527,"column":0},"generated":{"line":10529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10528,"column":0},"generated":{"line":10530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10529,"column":0},"generated":{"line":10531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10530,"column":0},"generated":{"line":10532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10531,"column":0},"generated":{"line":10533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10532,"column":0},"generated":{"line":10534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10533,"column":0},"generated":{"line":10535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10534,"column":0},"generated":{"line":10536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10535,"column":0},"generated":{"line":10537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10536,"column":0},"generated":{"line":10538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10537,"column":0},"generated":{"line":10539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10538,"column":0},"generated":{"line":10540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10539,"column":0},"generated":{"line":10541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10540,"column":0},"generated":{"line":10542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10541,"column":0},"generated":{"line":10543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10542,"column":0},"generated":{"line":10544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10543,"column":0},"generated":{"line":10545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10544,"column":0},"generated":{"line":10546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10545,"column":0},"generated":{"line":10547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10546,"column":0},"generated":{"line":10548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10547,"column":0},"generated":{"line":10549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10548,"column":0},"generated":{"line":10550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10549,"column":0},"generated":{"line":10551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10550,"column":0},"generated":{"line":10552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10551,"column":0},"generated":{"line":10553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10552,"column":0},"generated":{"line":10554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10553,"column":0},"generated":{"line":10555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10554,"column":0},"generated":{"line":10556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10555,"column":0},"generated":{"line":10557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10556,"column":0},"generated":{"line":10558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10557,"column":0},"generated":{"line":10559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10558,"column":0},"generated":{"line":10560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10559,"column":0},"generated":{"line":10561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10560,"column":0},"generated":{"line":10562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10561,"column":0},"generated":{"line":10563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10562,"column":0},"generated":{"line":10564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10563,"column":0},"generated":{"line":10565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10564,"column":0},"generated":{"line":10566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10565,"column":0},"generated":{"line":10567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10566,"column":0},"generated":{"line":10568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10567,"column":0},"generated":{"line":10569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10568,"column":0},"generated":{"line":10570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10569,"column":0},"generated":{"line":10571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10570,"column":0},"generated":{"line":10572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10571,"column":0},"generated":{"line":10573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10572,"column":0},"generated":{"line":10574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10573,"column":0},"generated":{"line":10575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10574,"column":0},"generated":{"line":10576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10575,"column":0},"generated":{"line":10577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10576,"column":0},"generated":{"line":10578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10577,"column":0},"generated":{"line":10579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10578,"column":0},"generated":{"line":10580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10579,"column":0},"generated":{"line":10581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10580,"column":0},"generated":{"line":10582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10581,"column":0},"generated":{"line":10583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10582,"column":0},"generated":{"line":10584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10583,"column":0},"generated":{"line":10585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10584,"column":0},"generated":{"line":10586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10585,"column":0},"generated":{"line":10587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10586,"column":0},"generated":{"line":10588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10587,"column":0},"generated":{"line":10589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10588,"column":0},"generated":{"line":10590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10589,"column":0},"generated":{"line":10591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10590,"column":0},"generated":{"line":10592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10591,"column":0},"generated":{"line":10593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10592,"column":0},"generated":{"line":10594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10593,"column":0},"generated":{"line":10595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10594,"column":0},"generated":{"line":10596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10595,"column":0},"generated":{"line":10597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10596,"column":0},"generated":{"line":10598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10597,"column":0},"generated":{"line":10599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10598,"column":0},"generated":{"line":10600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10599,"column":0},"generated":{"line":10601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10600,"column":0},"generated":{"line":10602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10601,"column":0},"generated":{"line":10603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10602,"column":0},"generated":{"line":10604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10603,"column":0},"generated":{"line":10605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10604,"column":0},"generated":{"line":10606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10605,"column":0},"generated":{"line":10607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10606,"column":0},"generated":{"line":10608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10607,"column":0},"generated":{"line":10609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10608,"column":0},"generated":{"line":10610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10609,"column":0},"generated":{"line":10611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10610,"column":0},"generated":{"line":10612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10611,"column":0},"generated":{"line":10613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10612,"column":0},"generated":{"line":10614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10613,"column":0},"generated":{"line":10615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10614,"column":0},"generated":{"line":10616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10615,"column":0},"generated":{"line":10617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10616,"column":0},"generated":{"line":10618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10617,"column":0},"generated":{"line":10619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10618,"column":0},"generated":{"line":10620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10619,"column":0},"generated":{"line":10621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10620,"column":0},"generated":{"line":10622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10621,"column":0},"generated":{"line":10623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10622,"column":0},"generated":{"line":10624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10623,"column":0},"generated":{"line":10625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10624,"column":0},"generated":{"line":10626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10625,"column":0},"generated":{"line":10627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10626,"column":0},"generated":{"line":10628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10627,"column":0},"generated":{"line":10629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10628,"column":0},"generated":{"line":10630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10629,"column":0},"generated":{"line":10631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10630,"column":0},"generated":{"line":10632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10631,"column":0},"generated":{"line":10633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10632,"column":0},"generated":{"line":10634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10633,"column":0},"generated":{"line":10635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10634,"column":0},"generated":{"line":10636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10635,"column":0},"generated":{"line":10637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10636,"column":0},"generated":{"line":10638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10637,"column":0},"generated":{"line":10639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10638,"column":0},"generated":{"line":10640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10639,"column":0},"generated":{"line":10641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10640,"column":0},"generated":{"line":10642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10641,"column":0},"generated":{"line":10643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10642,"column":0},"generated":{"line":10644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10643,"column":0},"generated":{"line":10645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10644,"column":0},"generated":{"line":10646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10645,"column":0},"generated":{"line":10647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10646,"column":0},"generated":{"line":10648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10647,"column":0},"generated":{"line":10649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10648,"column":0},"generated":{"line":10650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10649,"column":0},"generated":{"line":10651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10650,"column":0},"generated":{"line":10652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10651,"column":0},"generated":{"line":10653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10652,"column":0},"generated":{"line":10654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10653,"column":0},"generated":{"line":10655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10654,"column":0},"generated":{"line":10656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10655,"column":0},"generated":{"line":10657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10656,"column":0},"generated":{"line":10658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10657,"column":0},"generated":{"line":10659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10658,"column":0},"generated":{"line":10660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10659,"column":0},"generated":{"line":10661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10660,"column":0},"generated":{"line":10662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10661,"column":0},"generated":{"line":10663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10662,"column":0},"generated":{"line":10664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10663,"column":0},"generated":{"line":10665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10664,"column":0},"generated":{"line":10666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10665,"column":0},"generated":{"line":10667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10666,"column":0},"generated":{"line":10668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10667,"column":0},"generated":{"line":10669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10668,"column":0},"generated":{"line":10670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10669,"column":0},"generated":{"line":10671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10670,"column":0},"generated":{"line":10672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10671,"column":0},"generated":{"line":10673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10672,"column":0},"generated":{"line":10674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10673,"column":0},"generated":{"line":10675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10674,"column":0},"generated":{"line":10676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10675,"column":0},"generated":{"line":10677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10676,"column":0},"generated":{"line":10678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10677,"column":0},"generated":{"line":10679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10678,"column":0},"generated":{"line":10680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10679,"column":0},"generated":{"line":10681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10680,"column":0},"generated":{"line":10682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10681,"column":0},"generated":{"line":10683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10682,"column":0},"generated":{"line":10684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10683,"column":0},"generated":{"line":10685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10684,"column":0},"generated":{"line":10686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10685,"column":0},"generated":{"line":10687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10686,"column":0},"generated":{"line":10688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10687,"column":0},"generated":{"line":10689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10688,"column":0},"generated":{"line":10690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10689,"column":0},"generated":{"line":10691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10690,"column":0},"generated":{"line":10692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10691,"column":0},"generated":{"line":10693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10692,"column":0},"generated":{"line":10694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10693,"column":0},"generated":{"line":10695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10694,"column":0},"generated":{"line":10696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10695,"column":0},"generated":{"line":10697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10696,"column":0},"generated":{"line":10698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10697,"column":0},"generated":{"line":10699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10698,"column":0},"generated":{"line":10700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10699,"column":0},"generated":{"line":10701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10700,"column":0},"generated":{"line":10702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10701,"column":0},"generated":{"line":10703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10702,"column":0},"generated":{"line":10704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10703,"column":0},"generated":{"line":10705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10704,"column":0},"generated":{"line":10706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10705,"column":0},"generated":{"line":10707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10706,"column":0},"generated":{"line":10708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10707,"column":0},"generated":{"line":10709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10708,"column":0},"generated":{"line":10710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10709,"column":0},"generated":{"line":10711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10710,"column":0},"generated":{"line":10712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10711,"column":0},"generated":{"line":10713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10712,"column":0},"generated":{"line":10714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10713,"column":0},"generated":{"line":10715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10714,"column":0},"generated":{"line":10716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10715,"column":0},"generated":{"line":10717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10716,"column":0},"generated":{"line":10718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10717,"column":0},"generated":{"line":10719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10718,"column":0},"generated":{"line":10720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10719,"column":0},"generated":{"line":10721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10720,"column":0},"generated":{"line":10722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10721,"column":0},"generated":{"line":10723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10722,"column":0},"generated":{"line":10724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10723,"column":0},"generated":{"line":10725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10724,"column":0},"generated":{"line":10726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10725,"column":0},"generated":{"line":10727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10726,"column":0},"generated":{"line":10728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10727,"column":0},"generated":{"line":10729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10728,"column":0},"generated":{"line":10730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10729,"column":0},"generated":{"line":10731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10730,"column":0},"generated":{"line":10732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10731,"column":0},"generated":{"line":10733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10732,"column":0},"generated":{"line":10734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10733,"column":0},"generated":{"line":10735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10734,"column":0},"generated":{"line":10736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10735,"column":0},"generated":{"line":10737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10736,"column":0},"generated":{"line":10738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10737,"column":0},"generated":{"line":10739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10738,"column":0},"generated":{"line":10740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10739,"column":0},"generated":{"line":10741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10740,"column":0},"generated":{"line":10742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10741,"column":0},"generated":{"line":10743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10742,"column":0},"generated":{"line":10744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10743,"column":0},"generated":{"line":10745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10744,"column":0},"generated":{"line":10746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10745,"column":0},"generated":{"line":10747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10746,"column":0},"generated":{"line":10748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10747,"column":0},"generated":{"line":10749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10748,"column":0},"generated":{"line":10750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10749,"column":0},"generated":{"line":10751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10750,"column":0},"generated":{"line":10752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10751,"column":0},"generated":{"line":10753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10752,"column":0},"generated":{"line":10754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10753,"column":0},"generated":{"line":10755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10754,"column":0},"generated":{"line":10756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10755,"column":0},"generated":{"line":10757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10756,"column":0},"generated":{"line":10758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10757,"column":0},"generated":{"line":10759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10758,"column":0},"generated":{"line":10760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10759,"column":0},"generated":{"line":10761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10760,"column":0},"generated":{"line":10762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10761,"column":0},"generated":{"line":10763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10762,"column":0},"generated":{"line":10764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10763,"column":0},"generated":{"line":10765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10764,"column":0},"generated":{"line":10766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10765,"column":0},"generated":{"line":10767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10766,"column":0},"generated":{"line":10768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10767,"column":0},"generated":{"line":10769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10768,"column":0},"generated":{"line":10770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10769,"column":0},"generated":{"line":10771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10770,"column":0},"generated":{"line":10772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10771,"column":0},"generated":{"line":10773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10772,"column":0},"generated":{"line":10774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10773,"column":0},"generated":{"line":10775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10774,"column":0},"generated":{"line":10776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10775,"column":0},"generated":{"line":10777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10776,"column":0},"generated":{"line":10778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10777,"column":0},"generated":{"line":10779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10778,"column":0},"generated":{"line":10780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10779,"column":0},"generated":{"line":10781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10780,"column":0},"generated":{"line":10782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10781,"column":0},"generated":{"line":10783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10782,"column":0},"generated":{"line":10784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10783,"column":0},"generated":{"line":10785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10784,"column":0},"generated":{"line":10786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10785,"column":0},"generated":{"line":10787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10786,"column":0},"generated":{"line":10788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10787,"column":0},"generated":{"line":10789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10788,"column":0},"generated":{"line":10790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10789,"column":0},"generated":{"line":10791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10790,"column":0},"generated":{"line":10792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10791,"column":0},"generated":{"line":10793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10792,"column":0},"generated":{"line":10794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10793,"column":0},"generated":{"line":10795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10794,"column":0},"generated":{"line":10796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10795,"column":0},"generated":{"line":10797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10796,"column":0},"generated":{"line":10798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10797,"column":0},"generated":{"line":10799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10798,"column":0},"generated":{"line":10800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10799,"column":0},"generated":{"line":10801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10800,"column":0},"generated":{"line":10802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10801,"column":0},"generated":{"line":10803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10802,"column":0},"generated":{"line":10804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10803,"column":0},"generated":{"line":10805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10804,"column":0},"generated":{"line":10806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10805,"column":0},"generated":{"line":10807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10806,"column":0},"generated":{"line":10808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10807,"column":0},"generated":{"line":10809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10808,"column":0},"generated":{"line":10810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10809,"column":0},"generated":{"line":10811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10810,"column":0},"generated":{"line":10812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10811,"column":0},"generated":{"line":10813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10812,"column":0},"generated":{"line":10814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10813,"column":0},"generated":{"line":10815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10814,"column":0},"generated":{"line":10816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10815,"column":0},"generated":{"line":10817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10816,"column":0},"generated":{"line":10818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10817,"column":0},"generated":{"line":10819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10818,"column":0},"generated":{"line":10820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10819,"column":0},"generated":{"line":10821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10820,"column":0},"generated":{"line":10822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10821,"column":0},"generated":{"line":10823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10822,"column":0},"generated":{"line":10824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10823,"column":0},"generated":{"line":10825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10824,"column":0},"generated":{"line":10826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10825,"column":0},"generated":{"line":10827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10826,"column":0},"generated":{"line":10828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10827,"column":0},"generated":{"line":10829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10828,"column":0},"generated":{"line":10830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10829,"column":0},"generated":{"line":10831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10830,"column":0},"generated":{"line":10832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10831,"column":0},"generated":{"line":10833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10832,"column":0},"generated":{"line":10834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10833,"column":0},"generated":{"line":10835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10834,"column":0},"generated":{"line":10836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10835,"column":0},"generated":{"line":10837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10836,"column":0},"generated":{"line":10838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10837,"column":0},"generated":{"line":10839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10838,"column":0},"generated":{"line":10840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10839,"column":0},"generated":{"line":10841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10840,"column":0},"generated":{"line":10842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10841,"column":0},"generated":{"line":10843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10842,"column":0},"generated":{"line":10844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10843,"column":0},"generated":{"line":10845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10844,"column":0},"generated":{"line":10846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10845,"column":0},"generated":{"line":10847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10846,"column":0},"generated":{"line":10848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10847,"column":0},"generated":{"line":10849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10848,"column":0},"generated":{"line":10850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10849,"column":0},"generated":{"line":10851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10850,"column":0},"generated":{"line":10852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10851,"column":0},"generated":{"line":10853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10852,"column":0},"generated":{"line":10854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10853,"column":0},"generated":{"line":10855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10854,"column":0},"generated":{"line":10856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10855,"column":0},"generated":{"line":10857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10856,"column":0},"generated":{"line":10858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10857,"column":0},"generated":{"line":10859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10858,"column":0},"generated":{"line":10860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10859,"column":0},"generated":{"line":10861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10860,"column":0},"generated":{"line":10862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10861,"column":0},"generated":{"line":10863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10862,"column":0},"generated":{"line":10864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10863,"column":0},"generated":{"line":10865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10864,"column":0},"generated":{"line":10866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10865,"column":0},"generated":{"line":10867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10866,"column":0},"generated":{"line":10868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10867,"column":0},"generated":{"line":10869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10868,"column":0},"generated":{"line":10870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10869,"column":0},"generated":{"line":10871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10870,"column":0},"generated":{"line":10872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10871,"column":0},"generated":{"line":10873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10872,"column":0},"generated":{"line":10874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10873,"column":0},"generated":{"line":10875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10874,"column":0},"generated":{"line":10876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10875,"column":0},"generated":{"line":10877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10876,"column":0},"generated":{"line":10878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10877,"column":0},"generated":{"line":10879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10878,"column":0},"generated":{"line":10880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10879,"column":0},"generated":{"line":10881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10880,"column":0},"generated":{"line":10882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10881,"column":0},"generated":{"line":10883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10882,"column":0},"generated":{"line":10884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10883,"column":0},"generated":{"line":10885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10884,"column":0},"generated":{"line":10886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10885,"column":0},"generated":{"line":10887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10886,"column":0},"generated":{"line":10888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10887,"column":0},"generated":{"line":10889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10888,"column":0},"generated":{"line":10890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10889,"column":0},"generated":{"line":10891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10890,"column":0},"generated":{"line":10892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10891,"column":0},"generated":{"line":10893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10892,"column":0},"generated":{"line":10894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10893,"column":0},"generated":{"line":10895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10894,"column":0},"generated":{"line":10896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10895,"column":0},"generated":{"line":10897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10896,"column":0},"generated":{"line":10898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10897,"column":0},"generated":{"line":10899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10898,"column":0},"generated":{"line":10900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10899,"column":0},"generated":{"line":10901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10900,"column":0},"generated":{"line":10902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10901,"column":0},"generated":{"line":10903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10902,"column":0},"generated":{"line":10904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10903,"column":0},"generated":{"line":10905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10904,"column":0},"generated":{"line":10906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10905,"column":0},"generated":{"line":10907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10906,"column":0},"generated":{"line":10908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10907,"column":0},"generated":{"line":10909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10908,"column":0},"generated":{"line":10910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10909,"column":0},"generated":{"line":10911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10910,"column":0},"generated":{"line":10912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10911,"column":0},"generated":{"line":10913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10912,"column":0},"generated":{"line":10914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10913,"column":0},"generated":{"line":10915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10914,"column":0},"generated":{"line":10916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10915,"column":0},"generated":{"line":10917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10916,"column":0},"generated":{"line":10918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10917,"column":0},"generated":{"line":10919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10918,"column":0},"generated":{"line":10920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10919,"column":0},"generated":{"line":10921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10920,"column":0},"generated":{"line":10922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10921,"column":0},"generated":{"line":10923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10922,"column":0},"generated":{"line":10924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10923,"column":0},"generated":{"line":10925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10924,"column":0},"generated":{"line":10926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10925,"column":0},"generated":{"line":10927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10926,"column":0},"generated":{"line":10928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10927,"column":0},"generated":{"line":10929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10928,"column":0},"generated":{"line":10930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10929,"column":0},"generated":{"line":10931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10930,"column":0},"generated":{"line":10932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10931,"column":0},"generated":{"line":10933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10932,"column":0},"generated":{"line":10934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10933,"column":0},"generated":{"line":10935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10934,"column":0},"generated":{"line":10936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10935,"column":0},"generated":{"line":10937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10936,"column":0},"generated":{"line":10938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10937,"column":0},"generated":{"line":10939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10938,"column":0},"generated":{"line":10940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10939,"column":0},"generated":{"line":10941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10940,"column":0},"generated":{"line":10942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10941,"column":0},"generated":{"line":10943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10942,"column":0},"generated":{"line":10944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10943,"column":0},"generated":{"line":10945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10944,"column":0},"generated":{"line":10946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10945,"column":0},"generated":{"line":10947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10946,"column":0},"generated":{"line":10948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10947,"column":0},"generated":{"line":10949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10948,"column":0},"generated":{"line":10950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10949,"column":0},"generated":{"line":10951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10950,"column":0},"generated":{"line":10952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10951,"column":0},"generated":{"line":10953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10952,"column":0},"generated":{"line":10954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10953,"column":0},"generated":{"line":10955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10954,"column":0},"generated":{"line":10956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10955,"column":0},"generated":{"line":10957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10956,"column":0},"generated":{"line":10958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10957,"column":0},"generated":{"line":10959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10958,"column":0},"generated":{"line":10960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10959,"column":0},"generated":{"line":10961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10960,"column":0},"generated":{"line":10962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10961,"column":0},"generated":{"line":10963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10962,"column":0},"generated":{"line":10964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10963,"column":0},"generated":{"line":10965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10964,"column":0},"generated":{"line":10966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10965,"column":0},"generated":{"line":10967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10966,"column":0},"generated":{"line":10968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10967,"column":0},"generated":{"line":10969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10968,"column":0},"generated":{"line":10970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10969,"column":0},"generated":{"line":10971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10970,"column":0},"generated":{"line":10972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10971,"column":0},"generated":{"line":10973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10972,"column":0},"generated":{"line":10974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10973,"column":0},"generated":{"line":10975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10974,"column":0},"generated":{"line":10976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10975,"column":0},"generated":{"line":10977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10976,"column":0},"generated":{"line":10978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10977,"column":0},"generated":{"line":10979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10978,"column":0},"generated":{"line":10980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10979,"column":0},"generated":{"line":10981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10980,"column":0},"generated":{"line":10982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10981,"column":0},"generated":{"line":10983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10982,"column":0},"generated":{"line":10984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10983,"column":0},"generated":{"line":10985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10984,"column":0},"generated":{"line":10986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10985,"column":0},"generated":{"line":10987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10986,"column":0},"generated":{"line":10988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10987,"column":0},"generated":{"line":10989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10988,"column":0},"generated":{"line":10990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10989,"column":0},"generated":{"line":10991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10990,"column":0},"generated":{"line":10992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10991,"column":0},"generated":{"line":10993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10992,"column":0},"generated":{"line":10994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10993,"column":0},"generated":{"line":10995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10994,"column":0},"generated":{"line":10996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10995,"column":0},"generated":{"line":10997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10996,"column":0},"generated":{"line":10998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10997,"column":0},"generated":{"line":10999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10998,"column":0},"generated":{"line":11000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":10999,"column":0},"generated":{"line":11001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11000,"column":0},"generated":{"line":11002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11001,"column":0},"generated":{"line":11003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11002,"column":0},"generated":{"line":11004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11003,"column":0},"generated":{"line":11005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11004,"column":0},"generated":{"line":11006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11005,"column":0},"generated":{"line":11007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11006,"column":0},"generated":{"line":11008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11007,"column":0},"generated":{"line":11009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11008,"column":0},"generated":{"line":11010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11009,"column":0},"generated":{"line":11011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11010,"column":0},"generated":{"line":11012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11011,"column":0},"generated":{"line":11013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11012,"column":0},"generated":{"line":11014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11013,"column":0},"generated":{"line":11015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11014,"column":0},"generated":{"line":11016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11015,"column":0},"generated":{"line":11017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11016,"column":0},"generated":{"line":11018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11017,"column":0},"generated":{"line":11019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11018,"column":0},"generated":{"line":11020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11019,"column":0},"generated":{"line":11021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11020,"column":0},"generated":{"line":11022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11021,"column":0},"generated":{"line":11023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11022,"column":0},"generated":{"line":11024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11023,"column":0},"generated":{"line":11025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11024,"column":0},"generated":{"line":11026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11025,"column":0},"generated":{"line":11027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11026,"column":0},"generated":{"line":11028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11027,"column":0},"generated":{"line":11029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11028,"column":0},"generated":{"line":11030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11029,"column":0},"generated":{"line":11031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11030,"column":0},"generated":{"line":11032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11031,"column":0},"generated":{"line":11033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11032,"column":0},"generated":{"line":11034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11033,"column":0},"generated":{"line":11035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11034,"column":0},"generated":{"line":11036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11035,"column":0},"generated":{"line":11037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11036,"column":0},"generated":{"line":11038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11037,"column":0},"generated":{"line":11039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11038,"column":0},"generated":{"line":11040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11039,"column":0},"generated":{"line":11041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11040,"column":0},"generated":{"line":11042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11041,"column":0},"generated":{"line":11043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11042,"column":0},"generated":{"line":11044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11043,"column":0},"generated":{"line":11045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11044,"column":0},"generated":{"line":11046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11045,"column":0},"generated":{"line":11047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11046,"column":0},"generated":{"line":11048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11047,"column":0},"generated":{"line":11049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11048,"column":0},"generated":{"line":11050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11049,"column":0},"generated":{"line":11051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11050,"column":0},"generated":{"line":11052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11051,"column":0},"generated":{"line":11053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11052,"column":0},"generated":{"line":11054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11053,"column":0},"generated":{"line":11055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11054,"column":0},"generated":{"line":11056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11055,"column":0},"generated":{"line":11057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11056,"column":0},"generated":{"line":11058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11057,"column":0},"generated":{"line":11059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11058,"column":0},"generated":{"line":11060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11059,"column":0},"generated":{"line":11061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11060,"column":0},"generated":{"line":11062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11061,"column":0},"generated":{"line":11063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11062,"column":0},"generated":{"line":11064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11063,"column":0},"generated":{"line":11065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11064,"column":0},"generated":{"line":11066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11065,"column":0},"generated":{"line":11067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11066,"column":0},"generated":{"line":11068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11067,"column":0},"generated":{"line":11069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11068,"column":0},"generated":{"line":11070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11069,"column":0},"generated":{"line":11071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11070,"column":0},"generated":{"line":11072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11071,"column":0},"generated":{"line":11073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11072,"column":0},"generated":{"line":11074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11073,"column":0},"generated":{"line":11075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11074,"column":0},"generated":{"line":11076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11075,"column":0},"generated":{"line":11077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11076,"column":0},"generated":{"line":11078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11077,"column":0},"generated":{"line":11079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11078,"column":0},"generated":{"line":11080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11079,"column":0},"generated":{"line":11081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11080,"column":0},"generated":{"line":11082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11081,"column":0},"generated":{"line":11083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11082,"column":0},"generated":{"line":11084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11083,"column":0},"generated":{"line":11085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11084,"column":0},"generated":{"line":11086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11085,"column":0},"generated":{"line":11087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11086,"column":0},"generated":{"line":11088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11087,"column":0},"generated":{"line":11089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11088,"column":0},"generated":{"line":11090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11089,"column":0},"generated":{"line":11091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11090,"column":0},"generated":{"line":11092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11091,"column":0},"generated":{"line":11093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11092,"column":0},"generated":{"line":11094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11093,"column":0},"generated":{"line":11095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11094,"column":0},"generated":{"line":11096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11095,"column":0},"generated":{"line":11097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11096,"column":0},"generated":{"line":11098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11097,"column":0},"generated":{"line":11099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11098,"column":0},"generated":{"line":11100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11099,"column":0},"generated":{"line":11101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11100,"column":0},"generated":{"line":11102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11101,"column":0},"generated":{"line":11103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11102,"column":0},"generated":{"line":11104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11103,"column":0},"generated":{"line":11105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11104,"column":0},"generated":{"line":11106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11105,"column":0},"generated":{"line":11107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11106,"column":0},"generated":{"line":11108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11107,"column":0},"generated":{"line":11109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11108,"column":0},"generated":{"line":11110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11109,"column":0},"generated":{"line":11111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11110,"column":0},"generated":{"line":11112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11111,"column":0},"generated":{"line":11113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11112,"column":0},"generated":{"line":11114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11113,"column":0},"generated":{"line":11115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11114,"column":0},"generated":{"line":11116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11115,"column":0},"generated":{"line":11117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11116,"column":0},"generated":{"line":11118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11117,"column":0},"generated":{"line":11119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11118,"column":0},"generated":{"line":11120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11119,"column":0},"generated":{"line":11121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11120,"column":0},"generated":{"line":11122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11121,"column":0},"generated":{"line":11123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11122,"column":0},"generated":{"line":11124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11123,"column":0},"generated":{"line":11125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11124,"column":0},"generated":{"line":11126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11125,"column":0},"generated":{"line":11127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11126,"column":0},"generated":{"line":11128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11127,"column":0},"generated":{"line":11129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11128,"column":0},"generated":{"line":11130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11129,"column":0},"generated":{"line":11131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11130,"column":0},"generated":{"line":11132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11131,"column":0},"generated":{"line":11133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11132,"column":0},"generated":{"line":11134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11133,"column":0},"generated":{"line":11135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11134,"column":0},"generated":{"line":11136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11135,"column":0},"generated":{"line":11137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11136,"column":0},"generated":{"line":11138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11137,"column":0},"generated":{"line":11139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11138,"column":0},"generated":{"line":11140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11139,"column":0},"generated":{"line":11141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11140,"column":0},"generated":{"line":11142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11141,"column":0},"generated":{"line":11143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11142,"column":0},"generated":{"line":11144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11143,"column":0},"generated":{"line":11145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11144,"column":0},"generated":{"line":11146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11145,"column":0},"generated":{"line":11147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11146,"column":0},"generated":{"line":11148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11147,"column":0},"generated":{"line":11149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11148,"column":0},"generated":{"line":11150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11149,"column":0},"generated":{"line":11151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11150,"column":0},"generated":{"line":11152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11151,"column":0},"generated":{"line":11153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11152,"column":0},"generated":{"line":11154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11153,"column":0},"generated":{"line":11155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11154,"column":0},"generated":{"line":11156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11155,"column":0},"generated":{"line":11157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11156,"column":0},"generated":{"line":11158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11157,"column":0},"generated":{"line":11159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11158,"column":0},"generated":{"line":11160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11159,"column":0},"generated":{"line":11161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11160,"column":0},"generated":{"line":11162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11161,"column":0},"generated":{"line":11163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11162,"column":0},"generated":{"line":11164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11163,"column":0},"generated":{"line":11165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11164,"column":0},"generated":{"line":11166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11165,"column":0},"generated":{"line":11167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11166,"column":0},"generated":{"line":11168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11167,"column":0},"generated":{"line":11169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11168,"column":0},"generated":{"line":11170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11169,"column":0},"generated":{"line":11171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11170,"column":0},"generated":{"line":11172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11171,"column":0},"generated":{"line":11173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11172,"column":0},"generated":{"line":11174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11173,"column":0},"generated":{"line":11175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11174,"column":0},"generated":{"line":11176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11175,"column":0},"generated":{"line":11177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11176,"column":0},"generated":{"line":11178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11177,"column":0},"generated":{"line":11179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11178,"column":0},"generated":{"line":11180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11179,"column":0},"generated":{"line":11181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11180,"column":0},"generated":{"line":11182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11181,"column":0},"generated":{"line":11183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11182,"column":0},"generated":{"line":11184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11183,"column":0},"generated":{"line":11185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11184,"column":0},"generated":{"line":11186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11185,"column":0},"generated":{"line":11187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11186,"column":0},"generated":{"line":11188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11187,"column":0},"generated":{"line":11189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11188,"column":0},"generated":{"line":11190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11189,"column":0},"generated":{"line":11191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11190,"column":0},"generated":{"line":11192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11191,"column":0},"generated":{"line":11193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11192,"column":0},"generated":{"line":11194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11193,"column":0},"generated":{"line":11195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11194,"column":0},"generated":{"line":11196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11195,"column":0},"generated":{"line":11197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11196,"column":0},"generated":{"line":11198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11197,"column":0},"generated":{"line":11199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11198,"column":0},"generated":{"line":11200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11199,"column":0},"generated":{"line":11201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11200,"column":0},"generated":{"line":11202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11201,"column":0},"generated":{"line":11203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11202,"column":0},"generated":{"line":11204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11203,"column":0},"generated":{"line":11205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11204,"column":0},"generated":{"line":11206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11205,"column":0},"generated":{"line":11207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11206,"column":0},"generated":{"line":11208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11207,"column":0},"generated":{"line":11209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11208,"column":0},"generated":{"line":11210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11209,"column":0},"generated":{"line":11211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11210,"column":0},"generated":{"line":11212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11211,"column":0},"generated":{"line":11213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11212,"column":0},"generated":{"line":11214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11213,"column":0},"generated":{"line":11215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11214,"column":0},"generated":{"line":11216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11215,"column":0},"generated":{"line":11217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11216,"column":0},"generated":{"line":11218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11217,"column":0},"generated":{"line":11219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11218,"column":0},"generated":{"line":11220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11219,"column":0},"generated":{"line":11221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11220,"column":0},"generated":{"line":11222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11221,"column":0},"generated":{"line":11223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11222,"column":0},"generated":{"line":11224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11223,"column":0},"generated":{"line":11225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11224,"column":0},"generated":{"line":11226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11225,"column":0},"generated":{"line":11227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11226,"column":0},"generated":{"line":11228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11227,"column":0},"generated":{"line":11229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11228,"column":0},"generated":{"line":11230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11229,"column":0},"generated":{"line":11231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11230,"column":0},"generated":{"line":11232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11231,"column":0},"generated":{"line":11233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11232,"column":0},"generated":{"line":11234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11233,"column":0},"generated":{"line":11235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11234,"column":0},"generated":{"line":11236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11235,"column":0},"generated":{"line":11237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11236,"column":0},"generated":{"line":11238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11237,"column":0},"generated":{"line":11239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11238,"column":0},"generated":{"line":11240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11239,"column":0},"generated":{"line":11241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11240,"column":0},"generated":{"line":11242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11241,"column":0},"generated":{"line":11243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11242,"column":0},"generated":{"line":11244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11243,"column":0},"generated":{"line":11245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11244,"column":0},"generated":{"line":11246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11245,"column":0},"generated":{"line":11247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11246,"column":0},"generated":{"line":11248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11247,"column":0},"generated":{"line":11249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11248,"column":0},"generated":{"line":11250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11249,"column":0},"generated":{"line":11251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11250,"column":0},"generated":{"line":11252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11251,"column":0},"generated":{"line":11253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11252,"column":0},"generated":{"line":11254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11253,"column":0},"generated":{"line":11255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11254,"column":0},"generated":{"line":11256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11255,"column":0},"generated":{"line":11257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11256,"column":0},"generated":{"line":11258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11257,"column":0},"generated":{"line":11259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11258,"column":0},"generated":{"line":11260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11259,"column":0},"generated":{"line":11261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11260,"column":0},"generated":{"line":11262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11261,"column":0},"generated":{"line":11263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11262,"column":0},"generated":{"line":11264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11263,"column":0},"generated":{"line":11265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11264,"column":0},"generated":{"line":11266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11265,"column":0},"generated":{"line":11267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11266,"column":0},"generated":{"line":11268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11267,"column":0},"generated":{"line":11269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11268,"column":0},"generated":{"line":11270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11269,"column":0},"generated":{"line":11271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11270,"column":0},"generated":{"line":11272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11271,"column":0},"generated":{"line":11273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11272,"column":0},"generated":{"line":11274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11273,"column":0},"generated":{"line":11275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11274,"column":0},"generated":{"line":11276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11275,"column":0},"generated":{"line":11277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11276,"column":0},"generated":{"line":11278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11277,"column":0},"generated":{"line":11279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11278,"column":0},"generated":{"line":11280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11279,"column":0},"generated":{"line":11281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11280,"column":0},"generated":{"line":11282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11281,"column":0},"generated":{"line":11283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11282,"column":0},"generated":{"line":11284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11283,"column":0},"generated":{"line":11285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11284,"column":0},"generated":{"line":11286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11285,"column":0},"generated":{"line":11287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11286,"column":0},"generated":{"line":11288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11287,"column":0},"generated":{"line":11289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11288,"column":0},"generated":{"line":11290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11289,"column":0},"generated":{"line":11291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11290,"column":0},"generated":{"line":11292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11291,"column":0},"generated":{"line":11293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11292,"column":0},"generated":{"line":11294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11293,"column":0},"generated":{"line":11295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11294,"column":0},"generated":{"line":11296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11295,"column":0},"generated":{"line":11297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11296,"column":0},"generated":{"line":11298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11297,"column":0},"generated":{"line":11299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11298,"column":0},"generated":{"line":11300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11299,"column":0},"generated":{"line":11301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11300,"column":0},"generated":{"line":11302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11301,"column":0},"generated":{"line":11303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11302,"column":0},"generated":{"line":11304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11303,"column":0},"generated":{"line":11305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11304,"column":0},"generated":{"line":11306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11305,"column":0},"generated":{"line":11307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11306,"column":0},"generated":{"line":11308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11307,"column":0},"generated":{"line":11309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11308,"column":0},"generated":{"line":11310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11309,"column":0},"generated":{"line":11311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11310,"column":0},"generated":{"line":11312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11311,"column":0},"generated":{"line":11313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11312,"column":0},"generated":{"line":11314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11313,"column":0},"generated":{"line":11315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11314,"column":0},"generated":{"line":11316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11315,"column":0},"generated":{"line":11317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11316,"column":0},"generated":{"line":11318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11317,"column":0},"generated":{"line":11319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11318,"column":0},"generated":{"line":11320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11319,"column":0},"generated":{"line":11321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11320,"column":0},"generated":{"line":11322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11321,"column":0},"generated":{"line":11323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11322,"column":0},"generated":{"line":11324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11323,"column":0},"generated":{"line":11325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11324,"column":0},"generated":{"line":11326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11325,"column":0},"generated":{"line":11327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11326,"column":0},"generated":{"line":11328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11327,"column":0},"generated":{"line":11329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11328,"column":0},"generated":{"line":11330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11329,"column":0},"generated":{"line":11331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11330,"column":0},"generated":{"line":11332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11331,"column":0},"generated":{"line":11333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11332,"column":0},"generated":{"line":11334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11333,"column":0},"generated":{"line":11335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11334,"column":0},"generated":{"line":11336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11335,"column":0},"generated":{"line":11337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11336,"column":0},"generated":{"line":11338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11337,"column":0},"generated":{"line":11339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11338,"column":0},"generated":{"line":11340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11339,"column":0},"generated":{"line":11341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11340,"column":0},"generated":{"line":11342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11341,"column":0},"generated":{"line":11343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11342,"column":0},"generated":{"line":11344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11343,"column":0},"generated":{"line":11345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11344,"column":0},"generated":{"line":11346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11345,"column":0},"generated":{"line":11347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11346,"column":0},"generated":{"line":11348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11347,"column":0},"generated":{"line":11349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11348,"column":0},"generated":{"line":11350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11349,"column":0},"generated":{"line":11351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11350,"column":0},"generated":{"line":11352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11351,"column":0},"generated":{"line":11353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11352,"column":0},"generated":{"line":11354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11353,"column":0},"generated":{"line":11355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11354,"column":0},"generated":{"line":11356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11355,"column":0},"generated":{"line":11357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11356,"column":0},"generated":{"line":11358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11357,"column":0},"generated":{"line":11359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11358,"column":0},"generated":{"line":11360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11359,"column":0},"generated":{"line":11361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11360,"column":0},"generated":{"line":11362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11361,"column":0},"generated":{"line":11363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11362,"column":0},"generated":{"line":11364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11363,"column":0},"generated":{"line":11365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11364,"column":0},"generated":{"line":11366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11365,"column":0},"generated":{"line":11367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11366,"column":0},"generated":{"line":11368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11367,"column":0},"generated":{"line":11369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11368,"column":0},"generated":{"line":11370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11369,"column":0},"generated":{"line":11371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11370,"column":0},"generated":{"line":11372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11371,"column":0},"generated":{"line":11373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11372,"column":0},"generated":{"line":11374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11373,"column":0},"generated":{"line":11375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11374,"column":0},"generated":{"line":11376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11375,"column":0},"generated":{"line":11377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11376,"column":0},"generated":{"line":11378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11377,"column":0},"generated":{"line":11379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11378,"column":0},"generated":{"line":11380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11379,"column":0},"generated":{"line":11381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11380,"column":0},"generated":{"line":11382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11381,"column":0},"generated":{"line":11383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11382,"column":0},"generated":{"line":11384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11383,"column":0},"generated":{"line":11385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11384,"column":0},"generated":{"line":11386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11385,"column":0},"generated":{"line":11387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11386,"column":0},"generated":{"line":11388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11387,"column":0},"generated":{"line":11389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11388,"column":0},"generated":{"line":11390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11389,"column":0},"generated":{"line":11391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11390,"column":0},"generated":{"line":11392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11391,"column":0},"generated":{"line":11393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11392,"column":0},"generated":{"line":11394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11393,"column":0},"generated":{"line":11395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11394,"column":0},"generated":{"line":11396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11395,"column":0},"generated":{"line":11397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11396,"column":0},"generated":{"line":11398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11397,"column":0},"generated":{"line":11399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11398,"column":0},"generated":{"line":11400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11399,"column":0},"generated":{"line":11401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11400,"column":0},"generated":{"line":11402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11401,"column":0},"generated":{"line":11403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11402,"column":0},"generated":{"line":11404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11403,"column":0},"generated":{"line":11405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11404,"column":0},"generated":{"line":11406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11405,"column":0},"generated":{"line":11407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11406,"column":0},"generated":{"line":11408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11407,"column":0},"generated":{"line":11409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11408,"column":0},"generated":{"line":11410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11409,"column":0},"generated":{"line":11411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11410,"column":0},"generated":{"line":11412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11411,"column":0},"generated":{"line":11413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11412,"column":0},"generated":{"line":11414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11413,"column":0},"generated":{"line":11415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11414,"column":0},"generated":{"line":11416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11415,"column":0},"generated":{"line":11417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11416,"column":0},"generated":{"line":11418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11417,"column":0},"generated":{"line":11419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11418,"column":0},"generated":{"line":11420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11419,"column":0},"generated":{"line":11421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11420,"column":0},"generated":{"line":11422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11421,"column":0},"generated":{"line":11423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11422,"column":0},"generated":{"line":11424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11423,"column":0},"generated":{"line":11425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11424,"column":0},"generated":{"line":11426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11425,"column":0},"generated":{"line":11427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11426,"column":0},"generated":{"line":11428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11427,"column":0},"generated":{"line":11429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11428,"column":0},"generated":{"line":11430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11429,"column":0},"generated":{"line":11431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11430,"column":0},"generated":{"line":11432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11431,"column":0},"generated":{"line":11433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11432,"column":0},"generated":{"line":11434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11433,"column":0},"generated":{"line":11435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11434,"column":0},"generated":{"line":11436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11435,"column":0},"generated":{"line":11437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11436,"column":0},"generated":{"line":11438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11437,"column":0},"generated":{"line":11439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11438,"column":0},"generated":{"line":11440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11439,"column":0},"generated":{"line":11441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11440,"column":0},"generated":{"line":11442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11441,"column":0},"generated":{"line":11443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11442,"column":0},"generated":{"line":11444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11443,"column":0},"generated":{"line":11445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11444,"column":0},"generated":{"line":11446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11445,"column":0},"generated":{"line":11447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11446,"column":0},"generated":{"line":11448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11447,"column":0},"generated":{"line":11449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11448,"column":0},"generated":{"line":11450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11449,"column":0},"generated":{"line":11451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11450,"column":0},"generated":{"line":11452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11451,"column":0},"generated":{"line":11453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11452,"column":0},"generated":{"line":11454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11453,"column":0},"generated":{"line":11455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11454,"column":0},"generated":{"line":11456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11455,"column":0},"generated":{"line":11457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11456,"column":0},"generated":{"line":11458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11457,"column":0},"generated":{"line":11459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11458,"column":0},"generated":{"line":11460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11459,"column":0},"generated":{"line":11461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11460,"column":0},"generated":{"line":11462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11461,"column":0},"generated":{"line":11463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11462,"column":0},"generated":{"line":11464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11463,"column":0},"generated":{"line":11465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11464,"column":0},"generated":{"line":11466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11465,"column":0},"generated":{"line":11467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11466,"column":0},"generated":{"line":11468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11467,"column":0},"generated":{"line":11469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11468,"column":0},"generated":{"line":11470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11469,"column":0},"generated":{"line":11471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11470,"column":0},"generated":{"line":11472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11471,"column":0},"generated":{"line":11473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11472,"column":0},"generated":{"line":11474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11473,"column":0},"generated":{"line":11475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11474,"column":0},"generated":{"line":11476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11475,"column":0},"generated":{"line":11477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11476,"column":0},"generated":{"line":11478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11477,"column":0},"generated":{"line":11479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11478,"column":0},"generated":{"line":11480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11479,"column":0},"generated":{"line":11481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11480,"column":0},"generated":{"line":11482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11481,"column":0},"generated":{"line":11483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11482,"column":0},"generated":{"line":11484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11483,"column":0},"generated":{"line":11485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11484,"column":0},"generated":{"line":11486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11485,"column":0},"generated":{"line":11487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11486,"column":0},"generated":{"line":11488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11487,"column":0},"generated":{"line":11489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11488,"column":0},"generated":{"line":11490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11489,"column":0},"generated":{"line":11491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11490,"column":0},"generated":{"line":11492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11491,"column":0},"generated":{"line":11493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11492,"column":0},"generated":{"line":11494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11493,"column":0},"generated":{"line":11495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11494,"column":0},"generated":{"line":11496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11495,"column":0},"generated":{"line":11497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11496,"column":0},"generated":{"line":11498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11497,"column":0},"generated":{"line":11499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11498,"column":0},"generated":{"line":11500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11499,"column":0},"generated":{"line":11501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11500,"column":0},"generated":{"line":11502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11501,"column":0},"generated":{"line":11503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11502,"column":0},"generated":{"line":11504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11503,"column":0},"generated":{"line":11505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11504,"column":0},"generated":{"line":11506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11505,"column":0},"generated":{"line":11507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11506,"column":0},"generated":{"line":11508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11507,"column":0},"generated":{"line":11509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11508,"column":0},"generated":{"line":11510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11509,"column":0},"generated":{"line":11511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11510,"column":0},"generated":{"line":11512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11511,"column":0},"generated":{"line":11513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11512,"column":0},"generated":{"line":11514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11513,"column":0},"generated":{"line":11515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11514,"column":0},"generated":{"line":11516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11515,"column":0},"generated":{"line":11517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11516,"column":0},"generated":{"line":11518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11517,"column":0},"generated":{"line":11519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11518,"column":0},"generated":{"line":11520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11519,"column":0},"generated":{"line":11521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11520,"column":0},"generated":{"line":11522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11521,"column":0},"generated":{"line":11523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11522,"column":0},"generated":{"line":11524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11523,"column":0},"generated":{"line":11525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11524,"column":0},"generated":{"line":11526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11525,"column":0},"generated":{"line":11527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11526,"column":0},"generated":{"line":11528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11527,"column":0},"generated":{"line":11529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11528,"column":0},"generated":{"line":11530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11529,"column":0},"generated":{"line":11531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11530,"column":0},"generated":{"line":11532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11531,"column":0},"generated":{"line":11533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11532,"column":0},"generated":{"line":11534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11533,"column":0},"generated":{"line":11535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11534,"column":0},"generated":{"line":11536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11535,"column":0},"generated":{"line":11537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11536,"column":0},"generated":{"line":11538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11537,"column":0},"generated":{"line":11539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11538,"column":0},"generated":{"line":11540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11539,"column":0},"generated":{"line":11541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11540,"column":0},"generated":{"line":11542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11541,"column":0},"generated":{"line":11543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11542,"column":0},"generated":{"line":11544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11543,"column":0},"generated":{"line":11545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11544,"column":0},"generated":{"line":11546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11545,"column":0},"generated":{"line":11547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11546,"column":0},"generated":{"line":11548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11547,"column":0},"generated":{"line":11549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11548,"column":0},"generated":{"line":11550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11549,"column":0},"generated":{"line":11551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11550,"column":0},"generated":{"line":11552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11551,"column":0},"generated":{"line":11553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11552,"column":0},"generated":{"line":11554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11553,"column":0},"generated":{"line":11555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11554,"column":0},"generated":{"line":11556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11555,"column":0},"generated":{"line":11557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11556,"column":0},"generated":{"line":11558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11557,"column":0},"generated":{"line":11559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11558,"column":0},"generated":{"line":11560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11559,"column":0},"generated":{"line":11561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11560,"column":0},"generated":{"line":11562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11561,"column":0},"generated":{"line":11563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11562,"column":0},"generated":{"line":11564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11563,"column":0},"generated":{"line":11565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11564,"column":0},"generated":{"line":11566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11565,"column":0},"generated":{"line":11567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11566,"column":0},"generated":{"line":11568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11567,"column":0},"generated":{"line":11569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11568,"column":0},"generated":{"line":11570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11569,"column":0},"generated":{"line":11571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11570,"column":0},"generated":{"line":11572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11571,"column":0},"generated":{"line":11573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11572,"column":0},"generated":{"line":11574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11573,"column":0},"generated":{"line":11575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11574,"column":0},"generated":{"line":11576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11575,"column":0},"generated":{"line":11577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11576,"column":0},"generated":{"line":11578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11577,"column":0},"generated":{"line":11579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11578,"column":0},"generated":{"line":11580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11579,"column":0},"generated":{"line":11581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11580,"column":0},"generated":{"line":11582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11581,"column":0},"generated":{"line":11583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11582,"column":0},"generated":{"line":11584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11583,"column":0},"generated":{"line":11585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11584,"column":0},"generated":{"line":11586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11585,"column":0},"generated":{"line":11587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11586,"column":0},"generated":{"line":11588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11587,"column":0},"generated":{"line":11589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11588,"column":0},"generated":{"line":11590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11589,"column":0},"generated":{"line":11591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11590,"column":0},"generated":{"line":11592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11591,"column":0},"generated":{"line":11593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11592,"column":0},"generated":{"line":11594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11593,"column":0},"generated":{"line":11595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11594,"column":0},"generated":{"line":11596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11595,"column":0},"generated":{"line":11597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11596,"column":0},"generated":{"line":11598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11597,"column":0},"generated":{"line":11599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11598,"column":0},"generated":{"line":11600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11599,"column":0},"generated":{"line":11601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11600,"column":0},"generated":{"line":11602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11601,"column":0},"generated":{"line":11603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11602,"column":0},"generated":{"line":11604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11603,"column":0},"generated":{"line":11605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11604,"column":0},"generated":{"line":11606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11605,"column":0},"generated":{"line":11607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11606,"column":0},"generated":{"line":11608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11607,"column":0},"generated":{"line":11609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11608,"column":0},"generated":{"line":11610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11609,"column":0},"generated":{"line":11611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11610,"column":0},"generated":{"line":11612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11611,"column":0},"generated":{"line":11613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11612,"column":0},"generated":{"line":11614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11613,"column":0},"generated":{"line":11615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11614,"column":0},"generated":{"line":11616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11615,"column":0},"generated":{"line":11617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11616,"column":0},"generated":{"line":11618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11617,"column":0},"generated":{"line":11619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11618,"column":0},"generated":{"line":11620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11619,"column":0},"generated":{"line":11621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11620,"column":0},"generated":{"line":11622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11621,"column":0},"generated":{"line":11623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11622,"column":0},"generated":{"line":11624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11623,"column":0},"generated":{"line":11625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11624,"column":0},"generated":{"line":11626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11625,"column":0},"generated":{"line":11627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11626,"column":0},"generated":{"line":11628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11627,"column":0},"generated":{"line":11629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11628,"column":0},"generated":{"line":11630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11629,"column":0},"generated":{"line":11631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11630,"column":0},"generated":{"line":11632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11631,"column":0},"generated":{"line":11633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11632,"column":0},"generated":{"line":11634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11633,"column":0},"generated":{"line":11635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11634,"column":0},"generated":{"line":11636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11635,"column":0},"generated":{"line":11637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11636,"column":0},"generated":{"line":11638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11637,"column":0},"generated":{"line":11639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11638,"column":0},"generated":{"line":11640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11639,"column":0},"generated":{"line":11641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11640,"column":0},"generated":{"line":11642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11641,"column":0},"generated":{"line":11643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11642,"column":0},"generated":{"line":11644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11643,"column":0},"generated":{"line":11645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11644,"column":0},"generated":{"line":11646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11645,"column":0},"generated":{"line":11647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11646,"column":0},"generated":{"line":11648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11647,"column":0},"generated":{"line":11649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11648,"column":0},"generated":{"line":11650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11649,"column":0},"generated":{"line":11651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11650,"column":0},"generated":{"line":11652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11651,"column":0},"generated":{"line":11653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11652,"column":0},"generated":{"line":11654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11653,"column":0},"generated":{"line":11655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11654,"column":0},"generated":{"line":11656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11655,"column":0},"generated":{"line":11657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11656,"column":0},"generated":{"line":11658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11657,"column":0},"generated":{"line":11659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11658,"column":0},"generated":{"line":11660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11659,"column":0},"generated":{"line":11661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11660,"column":0},"generated":{"line":11662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11661,"column":0},"generated":{"line":11663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11662,"column":0},"generated":{"line":11664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11663,"column":0},"generated":{"line":11665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11664,"column":0},"generated":{"line":11666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11665,"column":0},"generated":{"line":11667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11666,"column":0},"generated":{"line":11668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11667,"column":0},"generated":{"line":11669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11668,"column":0},"generated":{"line":11670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11669,"column":0},"generated":{"line":11671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11670,"column":0},"generated":{"line":11672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11671,"column":0},"generated":{"line":11673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11672,"column":0},"generated":{"line":11674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11673,"column":0},"generated":{"line":11675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11674,"column":0},"generated":{"line":11676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11675,"column":0},"generated":{"line":11677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11676,"column":0},"generated":{"line":11678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11677,"column":0},"generated":{"line":11679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11678,"column":0},"generated":{"line":11680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11679,"column":0},"generated":{"line":11681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11680,"column":0},"generated":{"line":11682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11681,"column":0},"generated":{"line":11683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11682,"column":0},"generated":{"line":11684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11683,"column":0},"generated":{"line":11685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11684,"column":0},"generated":{"line":11686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11685,"column":0},"generated":{"line":11687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11686,"column":0},"generated":{"line":11688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11687,"column":0},"generated":{"line":11689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11688,"column":0},"generated":{"line":11690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11689,"column":0},"generated":{"line":11691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11690,"column":0},"generated":{"line":11692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11691,"column":0},"generated":{"line":11693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11692,"column":0},"generated":{"line":11694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11693,"column":0},"generated":{"line":11695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11694,"column":0},"generated":{"line":11696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11695,"column":0},"generated":{"line":11697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11696,"column":0},"generated":{"line":11698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11697,"column":0},"generated":{"line":11699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11698,"column":0},"generated":{"line":11700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11699,"column":0},"generated":{"line":11701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11700,"column":0},"generated":{"line":11702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11701,"column":0},"generated":{"line":11703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11702,"column":0},"generated":{"line":11704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11703,"column":0},"generated":{"line":11705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11704,"column":0},"generated":{"line":11706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11705,"column":0},"generated":{"line":11707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11706,"column":0},"generated":{"line":11708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11707,"column":0},"generated":{"line":11709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11708,"column":0},"generated":{"line":11710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11709,"column":0},"generated":{"line":11711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11710,"column":0},"generated":{"line":11712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11711,"column":0},"generated":{"line":11713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11712,"column":0},"generated":{"line":11714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11713,"column":0},"generated":{"line":11715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11714,"column":0},"generated":{"line":11716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11715,"column":0},"generated":{"line":11717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11716,"column":0},"generated":{"line":11718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11717,"column":0},"generated":{"line":11719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11718,"column":0},"generated":{"line":11720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11719,"column":0},"generated":{"line":11721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11720,"column":0},"generated":{"line":11722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11721,"column":0},"generated":{"line":11723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11722,"column":0},"generated":{"line":11724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11723,"column":0},"generated":{"line":11725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11724,"column":0},"generated":{"line":11726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11725,"column":0},"generated":{"line":11727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11726,"column":0},"generated":{"line":11728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11727,"column":0},"generated":{"line":11729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11728,"column":0},"generated":{"line":11730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11729,"column":0},"generated":{"line":11731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11730,"column":0},"generated":{"line":11732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11731,"column":0},"generated":{"line":11733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11732,"column":0},"generated":{"line":11734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11733,"column":0},"generated":{"line":11735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11734,"column":0},"generated":{"line":11736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11735,"column":0},"generated":{"line":11737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11736,"column":0},"generated":{"line":11738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11737,"column":0},"generated":{"line":11739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11738,"column":0},"generated":{"line":11740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11739,"column":0},"generated":{"line":11741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11740,"column":0},"generated":{"line":11742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11741,"column":0},"generated":{"line":11743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11742,"column":0},"generated":{"line":11744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11743,"column":0},"generated":{"line":11745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11744,"column":0},"generated":{"line":11746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11745,"column":0},"generated":{"line":11747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11746,"column":0},"generated":{"line":11748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11747,"column":0},"generated":{"line":11749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11748,"column":0},"generated":{"line":11750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11749,"column":0},"generated":{"line":11751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11750,"column":0},"generated":{"line":11752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11751,"column":0},"generated":{"line":11753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11752,"column":0},"generated":{"line":11754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11753,"column":0},"generated":{"line":11755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11754,"column":0},"generated":{"line":11756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11755,"column":0},"generated":{"line":11757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11756,"column":0},"generated":{"line":11758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11757,"column":0},"generated":{"line":11759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11758,"column":0},"generated":{"line":11760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11759,"column":0},"generated":{"line":11761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11760,"column":0},"generated":{"line":11762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11761,"column":0},"generated":{"line":11763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11762,"column":0},"generated":{"line":11764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11763,"column":0},"generated":{"line":11765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11764,"column":0},"generated":{"line":11766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11765,"column":0},"generated":{"line":11767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11766,"column":0},"generated":{"line":11768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11767,"column":0},"generated":{"line":11769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11768,"column":0},"generated":{"line":11770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11769,"column":0},"generated":{"line":11771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11770,"column":0},"generated":{"line":11772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11771,"column":0},"generated":{"line":11773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11772,"column":0},"generated":{"line":11774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11773,"column":0},"generated":{"line":11775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11774,"column":0},"generated":{"line":11776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11775,"column":0},"generated":{"line":11777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11776,"column":0},"generated":{"line":11778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11777,"column":0},"generated":{"line":11779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11778,"column":0},"generated":{"line":11780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11779,"column":0},"generated":{"line":11781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11780,"column":0},"generated":{"line":11782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11781,"column":0},"generated":{"line":11783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11782,"column":0},"generated":{"line":11784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11783,"column":0},"generated":{"line":11785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11784,"column":0},"generated":{"line":11786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11785,"column":0},"generated":{"line":11787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11786,"column":0},"generated":{"line":11788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11787,"column":0},"generated":{"line":11789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11788,"column":0},"generated":{"line":11790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11789,"column":0},"generated":{"line":11791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11790,"column":0},"generated":{"line":11792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11791,"column":0},"generated":{"line":11793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11792,"column":0},"generated":{"line":11794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11793,"column":0},"generated":{"line":11795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11794,"column":0},"generated":{"line":11796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11795,"column":0},"generated":{"line":11797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11796,"column":0},"generated":{"line":11798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11797,"column":0},"generated":{"line":11799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11798,"column":0},"generated":{"line":11800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11799,"column":0},"generated":{"line":11801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11800,"column":0},"generated":{"line":11802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11801,"column":0},"generated":{"line":11803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11802,"column":0},"generated":{"line":11804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11803,"column":0},"generated":{"line":11805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11804,"column":0},"generated":{"line":11806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11805,"column":0},"generated":{"line":11807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11806,"column":0},"generated":{"line":11808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11807,"column":0},"generated":{"line":11809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11808,"column":0},"generated":{"line":11810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11809,"column":0},"generated":{"line":11811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11810,"column":0},"generated":{"line":11812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11811,"column":0},"generated":{"line":11813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11812,"column":0},"generated":{"line":11814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11813,"column":0},"generated":{"line":11815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11814,"column":0},"generated":{"line":11816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11815,"column":0},"generated":{"line":11817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11816,"column":0},"generated":{"line":11818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11817,"column":0},"generated":{"line":11819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11818,"column":0},"generated":{"line":11820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11819,"column":0},"generated":{"line":11821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11820,"column":0},"generated":{"line":11822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11821,"column":0},"generated":{"line":11823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11822,"column":0},"generated":{"line":11824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11823,"column":0},"generated":{"line":11825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11824,"column":0},"generated":{"line":11826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11825,"column":0},"generated":{"line":11827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11826,"column":0},"generated":{"line":11828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11827,"column":0},"generated":{"line":11829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11828,"column":0},"generated":{"line":11830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11829,"column":0},"generated":{"line":11831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11830,"column":0},"generated":{"line":11832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11831,"column":0},"generated":{"line":11833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11832,"column":0},"generated":{"line":11834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11833,"column":0},"generated":{"line":11835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11834,"column":0},"generated":{"line":11836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11835,"column":0},"generated":{"line":11837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11836,"column":0},"generated":{"line":11838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11837,"column":0},"generated":{"line":11839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11838,"column":0},"generated":{"line":11840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11839,"column":0},"generated":{"line":11841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11840,"column":0},"generated":{"line":11842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11841,"column":0},"generated":{"line":11843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11842,"column":0},"generated":{"line":11844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11843,"column":0},"generated":{"line":11845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11844,"column":0},"generated":{"line":11846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11845,"column":0},"generated":{"line":11847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11846,"column":0},"generated":{"line":11848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11847,"column":0},"generated":{"line":11849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11848,"column":0},"generated":{"line":11850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11849,"column":0},"generated":{"line":11851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11850,"column":0},"generated":{"line":11852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11851,"column":0},"generated":{"line":11853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11852,"column":0},"generated":{"line":11854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11853,"column":0},"generated":{"line":11855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11854,"column":0},"generated":{"line":11856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11855,"column":0},"generated":{"line":11857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11856,"column":0},"generated":{"line":11858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11857,"column":0},"generated":{"line":11859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11858,"column":0},"generated":{"line":11860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11859,"column":0},"generated":{"line":11861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11860,"column":0},"generated":{"line":11862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11861,"column":0},"generated":{"line":11863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11862,"column":0},"generated":{"line":11864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11863,"column":0},"generated":{"line":11865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11864,"column":0},"generated":{"line":11866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11865,"column":0},"generated":{"line":11867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11866,"column":0},"generated":{"line":11868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11867,"column":0},"generated":{"line":11869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11868,"column":0},"generated":{"line":11870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11869,"column":0},"generated":{"line":11871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11870,"column":0},"generated":{"line":11872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11871,"column":0},"generated":{"line":11873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11872,"column":0},"generated":{"line":11874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11873,"column":0},"generated":{"line":11875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11874,"column":0},"generated":{"line":11876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11875,"column":0},"generated":{"line":11877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11876,"column":0},"generated":{"line":11878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11877,"column":0},"generated":{"line":11879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11878,"column":0},"generated":{"line":11880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11879,"column":0},"generated":{"line":11881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11880,"column":0},"generated":{"line":11882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11881,"column":0},"generated":{"line":11883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11882,"column":0},"generated":{"line":11884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11883,"column":0},"generated":{"line":11885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11884,"column":0},"generated":{"line":11886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11885,"column":0},"generated":{"line":11887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11886,"column":0},"generated":{"line":11888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11887,"column":0},"generated":{"line":11889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11888,"column":0},"generated":{"line":11890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11889,"column":0},"generated":{"line":11891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11890,"column":0},"generated":{"line":11892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11891,"column":0},"generated":{"line":11893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11892,"column":0},"generated":{"line":11894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11893,"column":0},"generated":{"line":11895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11894,"column":0},"generated":{"line":11896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11895,"column":0},"generated":{"line":11897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11896,"column":0},"generated":{"line":11898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11897,"column":0},"generated":{"line":11899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11898,"column":0},"generated":{"line":11900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11899,"column":0},"generated":{"line":11901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11900,"column":0},"generated":{"line":11902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11901,"column":0},"generated":{"line":11903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11902,"column":0},"generated":{"line":11904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11903,"column":0},"generated":{"line":11905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11904,"column":0},"generated":{"line":11906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11905,"column":0},"generated":{"line":11907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11906,"column":0},"generated":{"line":11908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11907,"column":0},"generated":{"line":11909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11908,"column":0},"generated":{"line":11910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11909,"column":0},"generated":{"line":11911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11910,"column":0},"generated":{"line":11912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11911,"column":0},"generated":{"line":11913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11912,"column":0},"generated":{"line":11914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11913,"column":0},"generated":{"line":11915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11914,"column":0},"generated":{"line":11916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11915,"column":0},"generated":{"line":11917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11916,"column":0},"generated":{"line":11918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11917,"column":0},"generated":{"line":11919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11918,"column":0},"generated":{"line":11920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11919,"column":0},"generated":{"line":11921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11920,"column":0},"generated":{"line":11922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11921,"column":0},"generated":{"line":11923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11922,"column":0},"generated":{"line":11924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11923,"column":0},"generated":{"line":11925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11924,"column":0},"generated":{"line":11926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11925,"column":0},"generated":{"line":11927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11926,"column":0},"generated":{"line":11928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11927,"column":0},"generated":{"line":11929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11928,"column":0},"generated":{"line":11930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11929,"column":0},"generated":{"line":11931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11930,"column":0},"generated":{"line":11932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11931,"column":0},"generated":{"line":11933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11932,"column":0},"generated":{"line":11934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11933,"column":0},"generated":{"line":11935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11934,"column":0},"generated":{"line":11936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11935,"column":0},"generated":{"line":11937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11936,"column":0},"generated":{"line":11938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11937,"column":0},"generated":{"line":11939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11938,"column":0},"generated":{"line":11940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11939,"column":0},"generated":{"line":11941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11940,"column":0},"generated":{"line":11942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11941,"column":0},"generated":{"line":11943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11942,"column":0},"generated":{"line":11944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11943,"column":0},"generated":{"line":11945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11944,"column":0},"generated":{"line":11946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11945,"column":0},"generated":{"line":11947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11946,"column":0},"generated":{"line":11948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11947,"column":0},"generated":{"line":11949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11948,"column":0},"generated":{"line":11950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11949,"column":0},"generated":{"line":11951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11950,"column":0},"generated":{"line":11952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11951,"column":0},"generated":{"line":11953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11952,"column":0},"generated":{"line":11954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11953,"column":0},"generated":{"line":11955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11954,"column":0},"generated":{"line":11956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11955,"column":0},"generated":{"line":11957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11956,"column":0},"generated":{"line":11958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11957,"column":0},"generated":{"line":11959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11958,"column":0},"generated":{"line":11960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11959,"column":0},"generated":{"line":11961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11960,"column":0},"generated":{"line":11962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11961,"column":0},"generated":{"line":11963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11962,"column":0},"generated":{"line":11964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11963,"column":0},"generated":{"line":11965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11964,"column":0},"generated":{"line":11966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11965,"column":0},"generated":{"line":11967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11966,"column":0},"generated":{"line":11968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11967,"column":0},"generated":{"line":11969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11968,"column":0},"generated":{"line":11970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11969,"column":0},"generated":{"line":11971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11970,"column":0},"generated":{"line":11972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11971,"column":0},"generated":{"line":11973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11972,"column":0},"generated":{"line":11974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11973,"column":0},"generated":{"line":11975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11974,"column":0},"generated":{"line":11976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11975,"column":0},"generated":{"line":11977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11976,"column":0},"generated":{"line":11978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11977,"column":0},"generated":{"line":11979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11978,"column":0},"generated":{"line":11980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11979,"column":0},"generated":{"line":11981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11980,"column":0},"generated":{"line":11982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11981,"column":0},"generated":{"line":11983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11982,"column":0},"generated":{"line":11984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11983,"column":0},"generated":{"line":11985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11984,"column":0},"generated":{"line":11986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11985,"column":0},"generated":{"line":11987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11986,"column":0},"generated":{"line":11988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11987,"column":0},"generated":{"line":11989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11988,"column":0},"generated":{"line":11990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11989,"column":0},"generated":{"line":11991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11990,"column":0},"generated":{"line":11992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11991,"column":0},"generated":{"line":11993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11992,"column":0},"generated":{"line":11994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11993,"column":0},"generated":{"line":11995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11994,"column":0},"generated":{"line":11996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11995,"column":0},"generated":{"line":11997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11996,"column":0},"generated":{"line":11998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11997,"column":0},"generated":{"line":11999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11998,"column":0},"generated":{"line":12000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":11999,"column":0},"generated":{"line":12001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12000,"column":0},"generated":{"line":12002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12001,"column":0},"generated":{"line":12003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12002,"column":0},"generated":{"line":12004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12003,"column":0},"generated":{"line":12005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12004,"column":0},"generated":{"line":12006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12005,"column":0},"generated":{"line":12007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12006,"column":0},"generated":{"line":12008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12007,"column":0},"generated":{"line":12009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12008,"column":0},"generated":{"line":12010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12009,"column":0},"generated":{"line":12011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12010,"column":0},"generated":{"line":12012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12011,"column":0},"generated":{"line":12013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12012,"column":0},"generated":{"line":12014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12013,"column":0},"generated":{"line":12015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12014,"column":0},"generated":{"line":12016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12015,"column":0},"generated":{"line":12017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12016,"column":0},"generated":{"line":12018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12017,"column":0},"generated":{"line":12019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12018,"column":0},"generated":{"line":12020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12019,"column":0},"generated":{"line":12021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12020,"column":0},"generated":{"line":12022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12021,"column":0},"generated":{"line":12023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12022,"column":0},"generated":{"line":12024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12023,"column":0},"generated":{"line":12025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12024,"column":0},"generated":{"line":12026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12025,"column":0},"generated":{"line":12027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12026,"column":0},"generated":{"line":12028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12027,"column":0},"generated":{"line":12029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12028,"column":0},"generated":{"line":12030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12029,"column":0},"generated":{"line":12031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12030,"column":0},"generated":{"line":12032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12031,"column":0},"generated":{"line":12033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12032,"column":0},"generated":{"line":12034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12033,"column":0},"generated":{"line":12035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12034,"column":0},"generated":{"line":12036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12035,"column":0},"generated":{"line":12037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12036,"column":0},"generated":{"line":12038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12037,"column":0},"generated":{"line":12039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12038,"column":0},"generated":{"line":12040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12039,"column":0},"generated":{"line":12041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12040,"column":0},"generated":{"line":12042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12041,"column":0},"generated":{"line":12043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12042,"column":0},"generated":{"line":12044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12043,"column":0},"generated":{"line":12045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12044,"column":0},"generated":{"line":12046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12045,"column":0},"generated":{"line":12047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12046,"column":0},"generated":{"line":12048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12047,"column":0},"generated":{"line":12049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12048,"column":0},"generated":{"line":12050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12049,"column":0},"generated":{"line":12051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12050,"column":0},"generated":{"line":12052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12051,"column":0},"generated":{"line":12053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12052,"column":0},"generated":{"line":12054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12053,"column":0},"generated":{"line":12055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12054,"column":0},"generated":{"line":12056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12055,"column":0},"generated":{"line":12057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12056,"column":0},"generated":{"line":12058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12057,"column":0},"generated":{"line":12059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12058,"column":0},"generated":{"line":12060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12059,"column":0},"generated":{"line":12061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12060,"column":0},"generated":{"line":12062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12061,"column":0},"generated":{"line":12063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12062,"column":0},"generated":{"line":12064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12063,"column":0},"generated":{"line":12065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12064,"column":0},"generated":{"line":12066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12065,"column":0},"generated":{"line":12067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12066,"column":0},"generated":{"line":12068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12067,"column":0},"generated":{"line":12069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12068,"column":0},"generated":{"line":12070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12069,"column":0},"generated":{"line":12071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12070,"column":0},"generated":{"line":12072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12071,"column":0},"generated":{"line":12073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12072,"column":0},"generated":{"line":12074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12073,"column":0},"generated":{"line":12075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12074,"column":0},"generated":{"line":12076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12075,"column":0},"generated":{"line":12077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12076,"column":0},"generated":{"line":12078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12077,"column":0},"generated":{"line":12079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12078,"column":0},"generated":{"line":12080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12079,"column":0},"generated":{"line":12081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12080,"column":0},"generated":{"line":12082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12081,"column":0},"generated":{"line":12083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12082,"column":0},"generated":{"line":12084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12083,"column":0},"generated":{"line":12085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12084,"column":0},"generated":{"line":12086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12085,"column":0},"generated":{"line":12087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12086,"column":0},"generated":{"line":12088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12087,"column":0},"generated":{"line":12089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12088,"column":0},"generated":{"line":12090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12089,"column":0},"generated":{"line":12091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12090,"column":0},"generated":{"line":12092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12091,"column":0},"generated":{"line":12093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12092,"column":0},"generated":{"line":12094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12093,"column":0},"generated":{"line":12095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12094,"column":0},"generated":{"line":12096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12095,"column":0},"generated":{"line":12097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12096,"column":0},"generated":{"line":12098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12097,"column":0},"generated":{"line":12099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12098,"column":0},"generated":{"line":12100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12099,"column":0},"generated":{"line":12101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12100,"column":0},"generated":{"line":12102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12101,"column":0},"generated":{"line":12103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12102,"column":0},"generated":{"line":12104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12103,"column":0},"generated":{"line":12105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12104,"column":0},"generated":{"line":12106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12105,"column":0},"generated":{"line":12107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12106,"column":0},"generated":{"line":12108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12107,"column":0},"generated":{"line":12109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12108,"column":0},"generated":{"line":12110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12109,"column":0},"generated":{"line":12111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12110,"column":0},"generated":{"line":12112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12111,"column":0},"generated":{"line":12113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12112,"column":0},"generated":{"line":12114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12113,"column":0},"generated":{"line":12115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12114,"column":0},"generated":{"line":12116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12115,"column":0},"generated":{"line":12117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12116,"column":0},"generated":{"line":12118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12117,"column":0},"generated":{"line":12119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12118,"column":0},"generated":{"line":12120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12119,"column":0},"generated":{"line":12121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12120,"column":0},"generated":{"line":12122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12121,"column":0},"generated":{"line":12123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12122,"column":0},"generated":{"line":12124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12123,"column":0},"generated":{"line":12125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12124,"column":0},"generated":{"line":12126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12125,"column":0},"generated":{"line":12127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12126,"column":0},"generated":{"line":12128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12127,"column":0},"generated":{"line":12129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12128,"column":0},"generated":{"line":12130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12129,"column":0},"generated":{"line":12131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12130,"column":0},"generated":{"line":12132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12131,"column":0},"generated":{"line":12133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12132,"column":0},"generated":{"line":12134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12133,"column":0},"generated":{"line":12135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12134,"column":0},"generated":{"line":12136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12135,"column":0},"generated":{"line":12137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12136,"column":0},"generated":{"line":12138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12137,"column":0},"generated":{"line":12139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12138,"column":0},"generated":{"line":12140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12139,"column":0},"generated":{"line":12141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12140,"column":0},"generated":{"line":12142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12141,"column":0},"generated":{"line":12143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12142,"column":0},"generated":{"line":12144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12143,"column":0},"generated":{"line":12145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12144,"column":0},"generated":{"line":12146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12145,"column":0},"generated":{"line":12147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12146,"column":0},"generated":{"line":12148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12147,"column":0},"generated":{"line":12149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12148,"column":0},"generated":{"line":12150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12149,"column":0},"generated":{"line":12151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12150,"column":0},"generated":{"line":12152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12151,"column":0},"generated":{"line":12153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12152,"column":0},"generated":{"line":12154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12153,"column":0},"generated":{"line":12155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12154,"column":0},"generated":{"line":12156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12155,"column":0},"generated":{"line":12157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12156,"column":0},"generated":{"line":12158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12157,"column":0},"generated":{"line":12159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12158,"column":0},"generated":{"line":12160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12159,"column":0},"generated":{"line":12161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12160,"column":0},"generated":{"line":12162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12161,"column":0},"generated":{"line":12163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12162,"column":0},"generated":{"line":12164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12163,"column":0},"generated":{"line":12165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12164,"column":0},"generated":{"line":12166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12165,"column":0},"generated":{"line":12167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12166,"column":0},"generated":{"line":12168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12167,"column":0},"generated":{"line":12169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12168,"column":0},"generated":{"line":12170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12169,"column":0},"generated":{"line":12171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12170,"column":0},"generated":{"line":12172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12171,"column":0},"generated":{"line":12173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12172,"column":0},"generated":{"line":12174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12173,"column":0},"generated":{"line":12175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12174,"column":0},"generated":{"line":12176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12175,"column":0},"generated":{"line":12177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12176,"column":0},"generated":{"line":12178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12177,"column":0},"generated":{"line":12179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12178,"column":0},"generated":{"line":12180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12179,"column":0},"generated":{"line":12181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12180,"column":0},"generated":{"line":12182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12181,"column":0},"generated":{"line":12183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12182,"column":0},"generated":{"line":12184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12183,"column":0},"generated":{"line":12185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12184,"column":0},"generated":{"line":12186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12185,"column":0},"generated":{"line":12187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12186,"column":0},"generated":{"line":12188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12187,"column":0},"generated":{"line":12189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12188,"column":0},"generated":{"line":12190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12189,"column":0},"generated":{"line":12191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12190,"column":0},"generated":{"line":12192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12191,"column":0},"generated":{"line":12193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12192,"column":0},"generated":{"line":12194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12193,"column":0},"generated":{"line":12195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12194,"column":0},"generated":{"line":12196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12195,"column":0},"generated":{"line":12197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12196,"column":0},"generated":{"line":12198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12197,"column":0},"generated":{"line":12199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12198,"column":0},"generated":{"line":12200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12199,"column":0},"generated":{"line":12201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12200,"column":0},"generated":{"line":12202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12201,"column":0},"generated":{"line":12203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12202,"column":0},"generated":{"line":12204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12203,"column":0},"generated":{"line":12205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12204,"column":0},"generated":{"line":12206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12205,"column":0},"generated":{"line":12207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12206,"column":0},"generated":{"line":12208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12207,"column":0},"generated":{"line":12209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12208,"column":0},"generated":{"line":12210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12209,"column":0},"generated":{"line":12211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12210,"column":0},"generated":{"line":12212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12211,"column":0},"generated":{"line":12213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12212,"column":0},"generated":{"line":12214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12213,"column":0},"generated":{"line":12215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12214,"column":0},"generated":{"line":12216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12215,"column":0},"generated":{"line":12217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12216,"column":0},"generated":{"line":12218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12217,"column":0},"generated":{"line":12219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12218,"column":0},"generated":{"line":12220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12219,"column":0},"generated":{"line":12221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12220,"column":0},"generated":{"line":12222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12221,"column":0},"generated":{"line":12223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12222,"column":0},"generated":{"line":12224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12223,"column":0},"generated":{"line":12225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12224,"column":0},"generated":{"line":12226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12225,"column":0},"generated":{"line":12227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12226,"column":0},"generated":{"line":12228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12227,"column":0},"generated":{"line":12229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12228,"column":0},"generated":{"line":12230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12229,"column":0},"generated":{"line":12231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12230,"column":0},"generated":{"line":12232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12231,"column":0},"generated":{"line":12233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12232,"column":0},"generated":{"line":12234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12233,"column":0},"generated":{"line":12235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12234,"column":0},"generated":{"line":12236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12235,"column":0},"generated":{"line":12237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12236,"column":0},"generated":{"line":12238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12237,"column":0},"generated":{"line":12239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12238,"column":0},"generated":{"line":12240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12239,"column":0},"generated":{"line":12241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12240,"column":0},"generated":{"line":12242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12241,"column":0},"generated":{"line":12243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12242,"column":0},"generated":{"line":12244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12243,"column":0},"generated":{"line":12245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12244,"column":0},"generated":{"line":12246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12245,"column":0},"generated":{"line":12247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12246,"column":0},"generated":{"line":12248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12247,"column":0},"generated":{"line":12249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12248,"column":0},"generated":{"line":12250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12249,"column":0},"generated":{"line":12251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12250,"column":0},"generated":{"line":12252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12251,"column":0},"generated":{"line":12253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12252,"column":0},"generated":{"line":12254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12253,"column":0},"generated":{"line":12255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12254,"column":0},"generated":{"line":12256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12255,"column":0},"generated":{"line":12257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12256,"column":0},"generated":{"line":12258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12257,"column":0},"generated":{"line":12259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12258,"column":0},"generated":{"line":12260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12259,"column":0},"generated":{"line":12261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12260,"column":0},"generated":{"line":12262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12261,"column":0},"generated":{"line":12263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12262,"column":0},"generated":{"line":12264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12263,"column":0},"generated":{"line":12265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12264,"column":0},"generated":{"line":12266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12265,"column":0},"generated":{"line":12267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12266,"column":0},"generated":{"line":12268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12267,"column":0},"generated":{"line":12269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12268,"column":0},"generated":{"line":12270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12269,"column":0},"generated":{"line":12271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12270,"column":0},"generated":{"line":12272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12271,"column":0},"generated":{"line":12273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12272,"column":0},"generated":{"line":12274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12273,"column":0},"generated":{"line":12275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12274,"column":0},"generated":{"line":12276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12275,"column":0},"generated":{"line":12277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12276,"column":0},"generated":{"line":12278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12277,"column":0},"generated":{"line":12279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12278,"column":0},"generated":{"line":12280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12279,"column":0},"generated":{"line":12281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12280,"column":0},"generated":{"line":12282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12281,"column":0},"generated":{"line":12283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12282,"column":0},"generated":{"line":12284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12283,"column":0},"generated":{"line":12285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12284,"column":0},"generated":{"line":12286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12285,"column":0},"generated":{"line":12287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12286,"column":0},"generated":{"line":12288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12287,"column":0},"generated":{"line":12289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12288,"column":0},"generated":{"line":12290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12289,"column":0},"generated":{"line":12291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12290,"column":0},"generated":{"line":12292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12291,"column":0},"generated":{"line":12293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12292,"column":0},"generated":{"line":12294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12293,"column":0},"generated":{"line":12295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12294,"column":0},"generated":{"line":12296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12295,"column":0},"generated":{"line":12297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12296,"column":0},"generated":{"line":12298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12297,"column":0},"generated":{"line":12299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12298,"column":0},"generated":{"line":12300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12299,"column":0},"generated":{"line":12301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12300,"column":0},"generated":{"line":12302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12301,"column":0},"generated":{"line":12303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12302,"column":0},"generated":{"line":12304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12303,"column":0},"generated":{"line":12305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12304,"column":0},"generated":{"line":12306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12305,"column":0},"generated":{"line":12307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12306,"column":0},"generated":{"line":12308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12307,"column":0},"generated":{"line":12309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12308,"column":0},"generated":{"line":12310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12309,"column":0},"generated":{"line":12311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12310,"column":0},"generated":{"line":12312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12311,"column":0},"generated":{"line":12313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12312,"column":0},"generated":{"line":12314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12313,"column":0},"generated":{"line":12315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12314,"column":0},"generated":{"line":12316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12315,"column":0},"generated":{"line":12317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12316,"column":0},"generated":{"line":12318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12317,"column":0},"generated":{"line":12319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12318,"column":0},"generated":{"line":12320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12319,"column":0},"generated":{"line":12321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12320,"column":0},"generated":{"line":12322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12321,"column":0},"generated":{"line":12323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12322,"column":0},"generated":{"line":12324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12323,"column":0},"generated":{"line":12325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12324,"column":0},"generated":{"line":12326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12325,"column":0},"generated":{"line":12327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12326,"column":0},"generated":{"line":12328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12327,"column":0},"generated":{"line":12329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12328,"column":0},"generated":{"line":12330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12329,"column":0},"generated":{"line":12331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12330,"column":0},"generated":{"line":12332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12331,"column":0},"generated":{"line":12333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12332,"column":0},"generated":{"line":12334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12333,"column":0},"generated":{"line":12335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12334,"column":0},"generated":{"line":12336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12335,"column":0},"generated":{"line":12337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12336,"column":0},"generated":{"line":12338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12337,"column":0},"generated":{"line":12339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12338,"column":0},"generated":{"line":12340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12339,"column":0},"generated":{"line":12341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12340,"column":0},"generated":{"line":12342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12341,"column":0},"generated":{"line":12343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12342,"column":0},"generated":{"line":12344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12343,"column":0},"generated":{"line":12345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12344,"column":0},"generated":{"line":12346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12345,"column":0},"generated":{"line":12347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12346,"column":0},"generated":{"line":12348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12347,"column":0},"generated":{"line":12349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12348,"column":0},"generated":{"line":12350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12349,"column":0},"generated":{"line":12351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12350,"column":0},"generated":{"line":12352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12351,"column":0},"generated":{"line":12353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12352,"column":0},"generated":{"line":12354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12353,"column":0},"generated":{"line":12355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12354,"column":0},"generated":{"line":12356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12355,"column":0},"generated":{"line":12357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12356,"column":0},"generated":{"line":12358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12357,"column":0},"generated":{"line":12359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12358,"column":0},"generated":{"line":12360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12359,"column":0},"generated":{"line":12361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12360,"column":0},"generated":{"line":12362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12361,"column":0},"generated":{"line":12363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12362,"column":0},"generated":{"line":12364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12363,"column":0},"generated":{"line":12365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12364,"column":0},"generated":{"line":12366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12365,"column":0},"generated":{"line":12367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12366,"column":0},"generated":{"line":12368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12367,"column":0},"generated":{"line":12369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12368,"column":0},"generated":{"line":12370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12369,"column":0},"generated":{"line":12371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12370,"column":0},"generated":{"line":12372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12371,"column":0},"generated":{"line":12373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12372,"column":0},"generated":{"line":12374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12373,"column":0},"generated":{"line":12375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12374,"column":0},"generated":{"line":12376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12375,"column":0},"generated":{"line":12377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12376,"column":0},"generated":{"line":12378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12377,"column":0},"generated":{"line":12379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12378,"column":0},"generated":{"line":12380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12379,"column":0},"generated":{"line":12381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12380,"column":0},"generated":{"line":12382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12381,"column":0},"generated":{"line":12383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12382,"column":0},"generated":{"line":12384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12383,"column":0},"generated":{"line":12385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12384,"column":0},"generated":{"line":12386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12385,"column":0},"generated":{"line":12387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12386,"column":0},"generated":{"line":12388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12387,"column":0},"generated":{"line":12389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12388,"column":0},"generated":{"line":12390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12389,"column":0},"generated":{"line":12391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12390,"column":0},"generated":{"line":12392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12391,"column":0},"generated":{"line":12393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12392,"column":0},"generated":{"line":12394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12393,"column":0},"generated":{"line":12395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12394,"column":0},"generated":{"line":12396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12395,"column":0},"generated":{"line":12397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12396,"column":0},"generated":{"line":12398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12397,"column":0},"generated":{"line":12399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12398,"column":0},"generated":{"line":12400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12399,"column":0},"generated":{"line":12401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12400,"column":0},"generated":{"line":12402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12401,"column":0},"generated":{"line":12403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12402,"column":0},"generated":{"line":12404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12403,"column":0},"generated":{"line":12405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12404,"column":0},"generated":{"line":12406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12405,"column":0},"generated":{"line":12407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12406,"column":0},"generated":{"line":12408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12407,"column":0},"generated":{"line":12409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12408,"column":0},"generated":{"line":12410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12409,"column":0},"generated":{"line":12411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12410,"column":0},"generated":{"line":12412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12411,"column":0},"generated":{"line":12413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12412,"column":0},"generated":{"line":12414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12413,"column":0},"generated":{"line":12415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12414,"column":0},"generated":{"line":12416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12415,"column":0},"generated":{"line":12417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12416,"column":0},"generated":{"line":12418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12417,"column":0},"generated":{"line":12419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12418,"column":0},"generated":{"line":12420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12419,"column":0},"generated":{"line":12421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12420,"column":0},"generated":{"line":12422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12421,"column":0},"generated":{"line":12423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12422,"column":0},"generated":{"line":12424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12423,"column":0},"generated":{"line":12425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12424,"column":0},"generated":{"line":12426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12425,"column":0},"generated":{"line":12427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12426,"column":0},"generated":{"line":12428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12427,"column":0},"generated":{"line":12429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12428,"column":0},"generated":{"line":12430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12429,"column":0},"generated":{"line":12431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12430,"column":0},"generated":{"line":12432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12431,"column":0},"generated":{"line":12433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12432,"column":0},"generated":{"line":12434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12433,"column":0},"generated":{"line":12435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12434,"column":0},"generated":{"line":12436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12435,"column":0},"generated":{"line":12437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12436,"column":0},"generated":{"line":12438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12437,"column":0},"generated":{"line":12439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12438,"column":0},"generated":{"line":12440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12439,"column":0},"generated":{"line":12441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12440,"column":0},"generated":{"line":12442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12441,"column":0},"generated":{"line":12443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12442,"column":0},"generated":{"line":12444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12443,"column":0},"generated":{"line":12445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12444,"column":0},"generated":{"line":12446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12445,"column":0},"generated":{"line":12447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12446,"column":0},"generated":{"line":12448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12447,"column":0},"generated":{"line":12449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12448,"column":0},"generated":{"line":12450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12449,"column":0},"generated":{"line":12451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12450,"column":0},"generated":{"line":12452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12451,"column":0},"generated":{"line":12453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12452,"column":0},"generated":{"line":12454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12453,"column":0},"generated":{"line":12455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12454,"column":0},"generated":{"line":12456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12455,"column":0},"generated":{"line":12457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12456,"column":0},"generated":{"line":12458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12457,"column":0},"generated":{"line":12459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12458,"column":0},"generated":{"line":12460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12459,"column":0},"generated":{"line":12461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12460,"column":0},"generated":{"line":12462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12461,"column":0},"generated":{"line":12463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12462,"column":0},"generated":{"line":12464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12463,"column":0},"generated":{"line":12465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12464,"column":0},"generated":{"line":12466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12465,"column":0},"generated":{"line":12467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12466,"column":0},"generated":{"line":12468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12467,"column":0},"generated":{"line":12469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12468,"column":0},"generated":{"line":12470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12469,"column":0},"generated":{"line":12471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12470,"column":0},"generated":{"line":12472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12471,"column":0},"generated":{"line":12473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12472,"column":0},"generated":{"line":12474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12473,"column":0},"generated":{"line":12475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12474,"column":0},"generated":{"line":12476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12475,"column":0},"generated":{"line":12477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12476,"column":0},"generated":{"line":12478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12477,"column":0},"generated":{"line":12479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12478,"column":0},"generated":{"line":12480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12479,"column":0},"generated":{"line":12481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12480,"column":0},"generated":{"line":12482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12481,"column":0},"generated":{"line":12483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12482,"column":0},"generated":{"line":12484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12483,"column":0},"generated":{"line":12485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12484,"column":0},"generated":{"line":12486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12485,"column":0},"generated":{"line":12487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12486,"column":0},"generated":{"line":12488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12487,"column":0},"generated":{"line":12489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12488,"column":0},"generated":{"line":12490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12489,"column":0},"generated":{"line":12491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12490,"column":0},"generated":{"line":12492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12491,"column":0},"generated":{"line":12493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12492,"column":0},"generated":{"line":12494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12493,"column":0},"generated":{"line":12495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12494,"column":0},"generated":{"line":12496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12495,"column":0},"generated":{"line":12497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12496,"column":0},"generated":{"line":12498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12497,"column":0},"generated":{"line":12499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12498,"column":0},"generated":{"line":12500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12499,"column":0},"generated":{"line":12501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12500,"column":0},"generated":{"line":12502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12501,"column":0},"generated":{"line":12503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12502,"column":0},"generated":{"line":12504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12503,"column":0},"generated":{"line":12505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12504,"column":0},"generated":{"line":12506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12505,"column":0},"generated":{"line":12507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12506,"column":0},"generated":{"line":12508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12507,"column":0},"generated":{"line":12509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12508,"column":0},"generated":{"line":12510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12509,"column":0},"generated":{"line":12511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12510,"column":0},"generated":{"line":12512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12511,"column":0},"generated":{"line":12513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12512,"column":0},"generated":{"line":12514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12513,"column":0},"generated":{"line":12515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12514,"column":0},"generated":{"line":12516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12515,"column":0},"generated":{"line":12517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12516,"column":0},"generated":{"line":12518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12517,"column":0},"generated":{"line":12519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12518,"column":0},"generated":{"line":12520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12519,"column":0},"generated":{"line":12521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12520,"column":0},"generated":{"line":12522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12521,"column":0},"generated":{"line":12523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12522,"column":0},"generated":{"line":12524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12523,"column":0},"generated":{"line":12525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12524,"column":0},"generated":{"line":12526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12525,"column":0},"generated":{"line":12527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12526,"column":0},"generated":{"line":12528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12527,"column":0},"generated":{"line":12529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12528,"column":0},"generated":{"line":12530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12529,"column":0},"generated":{"line":12531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12530,"column":0},"generated":{"line":12532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12531,"column":0},"generated":{"line":12533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12532,"column":0},"generated":{"line":12534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12533,"column":0},"generated":{"line":12535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12534,"column":0},"generated":{"line":12536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12535,"column":0},"generated":{"line":12537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12536,"column":0},"generated":{"line":12538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12537,"column":0},"generated":{"line":12539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12538,"column":0},"generated":{"line":12540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12539,"column":0},"generated":{"line":12541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12540,"column":0},"generated":{"line":12542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12541,"column":0},"generated":{"line":12543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12542,"column":0},"generated":{"line":12544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12543,"column":0},"generated":{"line":12545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12544,"column":0},"generated":{"line":12546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12545,"column":0},"generated":{"line":12547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12546,"column":0},"generated":{"line":12548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12547,"column":0},"generated":{"line":12549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12548,"column":0},"generated":{"line":12550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12549,"column":0},"generated":{"line":12551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12550,"column":0},"generated":{"line":12552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12551,"column":0},"generated":{"line":12553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12552,"column":0},"generated":{"line":12554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12553,"column":0},"generated":{"line":12555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12554,"column":0},"generated":{"line":12556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12555,"column":0},"generated":{"line":12557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12556,"column":0},"generated":{"line":12558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12557,"column":0},"generated":{"line":12559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12558,"column":0},"generated":{"line":12560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12559,"column":0},"generated":{"line":12561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12560,"column":0},"generated":{"line":12562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12561,"column":0},"generated":{"line":12563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12562,"column":0},"generated":{"line":12564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12563,"column":0},"generated":{"line":12565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12564,"column":0},"generated":{"line":12566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12565,"column":0},"generated":{"line":12567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12566,"column":0},"generated":{"line":12568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12567,"column":0},"generated":{"line":12569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12568,"column":0},"generated":{"line":12570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12569,"column":0},"generated":{"line":12571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12570,"column":0},"generated":{"line":12572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12571,"column":0},"generated":{"line":12573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12572,"column":0},"generated":{"line":12574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12573,"column":0},"generated":{"line":12575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12574,"column":0},"generated":{"line":12576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12575,"column":0},"generated":{"line":12577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12576,"column":0},"generated":{"line":12578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12577,"column":0},"generated":{"line":12579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12578,"column":0},"generated":{"line":12580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12579,"column":0},"generated":{"line":12581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12580,"column":0},"generated":{"line":12582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12581,"column":0},"generated":{"line":12583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12582,"column":0},"generated":{"line":12584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12583,"column":0},"generated":{"line":12585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12584,"column":0},"generated":{"line":12586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12585,"column":0},"generated":{"line":12587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12586,"column":0},"generated":{"line":12588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12587,"column":0},"generated":{"line":12589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12588,"column":0},"generated":{"line":12590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12589,"column":0},"generated":{"line":12591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12590,"column":0},"generated":{"line":12592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12591,"column":0},"generated":{"line":12593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12592,"column":0},"generated":{"line":12594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12593,"column":0},"generated":{"line":12595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12594,"column":0},"generated":{"line":12596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12595,"column":0},"generated":{"line":12597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12596,"column":0},"generated":{"line":12598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12597,"column":0},"generated":{"line":12599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12598,"column":0},"generated":{"line":12600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12599,"column":0},"generated":{"line":12601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12600,"column":0},"generated":{"line":12602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12601,"column":0},"generated":{"line":12603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12602,"column":0},"generated":{"line":12604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12603,"column":0},"generated":{"line":12605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12604,"column":0},"generated":{"line":12606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12605,"column":0},"generated":{"line":12607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12606,"column":0},"generated":{"line":12608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12607,"column":0},"generated":{"line":12609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12608,"column":0},"generated":{"line":12610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12609,"column":0},"generated":{"line":12611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12610,"column":0},"generated":{"line":12612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12611,"column":0},"generated":{"line":12613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12612,"column":0},"generated":{"line":12614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12613,"column":0},"generated":{"line":12615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12614,"column":0},"generated":{"line":12616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12615,"column":0},"generated":{"line":12617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12616,"column":0},"generated":{"line":12618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12617,"column":0},"generated":{"line":12619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12618,"column":0},"generated":{"line":12620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12619,"column":0},"generated":{"line":12621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12620,"column":0},"generated":{"line":12622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12621,"column":0},"generated":{"line":12623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12622,"column":0},"generated":{"line":12624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12623,"column":0},"generated":{"line":12625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12624,"column":0},"generated":{"line":12626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12625,"column":0},"generated":{"line":12627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12626,"column":0},"generated":{"line":12628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12627,"column":0},"generated":{"line":12629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12628,"column":0},"generated":{"line":12630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12629,"column":0},"generated":{"line":12631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12630,"column":0},"generated":{"line":12632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12631,"column":0},"generated":{"line":12633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12632,"column":0},"generated":{"line":12634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12633,"column":0},"generated":{"line":12635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12634,"column":0},"generated":{"line":12636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12635,"column":0},"generated":{"line":12637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12636,"column":0},"generated":{"line":12638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12637,"column":0},"generated":{"line":12639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12638,"column":0},"generated":{"line":12640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12639,"column":0},"generated":{"line":12641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12640,"column":0},"generated":{"line":12642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12641,"column":0},"generated":{"line":12643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12642,"column":0},"generated":{"line":12644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12643,"column":0},"generated":{"line":12645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12644,"column":0},"generated":{"line":12646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12645,"column":0},"generated":{"line":12647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12646,"column":0},"generated":{"line":12648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12647,"column":0},"generated":{"line":12649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12648,"column":0},"generated":{"line":12650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12649,"column":0},"generated":{"line":12651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12650,"column":0},"generated":{"line":12652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12651,"column":0},"generated":{"line":12653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12652,"column":0},"generated":{"line":12654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12653,"column":0},"generated":{"line":12655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12654,"column":0},"generated":{"line":12656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12655,"column":0},"generated":{"line":12657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12656,"column":0},"generated":{"line":12658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12657,"column":0},"generated":{"line":12659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12658,"column":0},"generated":{"line":12660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12659,"column":0},"generated":{"line":12661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12660,"column":0},"generated":{"line":12662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12661,"column":0},"generated":{"line":12663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12662,"column":0},"generated":{"line":12664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12663,"column":0},"generated":{"line":12665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12664,"column":0},"generated":{"line":12666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12665,"column":0},"generated":{"line":12667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12666,"column":0},"generated":{"line":12668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12667,"column":0},"generated":{"line":12669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12668,"column":0},"generated":{"line":12670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12669,"column":0},"generated":{"line":12671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12670,"column":0},"generated":{"line":12672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12671,"column":0},"generated":{"line":12673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12672,"column":0},"generated":{"line":12674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12673,"column":0},"generated":{"line":12675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12674,"column":0},"generated":{"line":12676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12675,"column":0},"generated":{"line":12677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12676,"column":0},"generated":{"line":12678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12677,"column":0},"generated":{"line":12679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12678,"column":0},"generated":{"line":12680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12679,"column":0},"generated":{"line":12681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12680,"column":0},"generated":{"line":12682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12681,"column":0},"generated":{"line":12683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12682,"column":0},"generated":{"line":12684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12683,"column":0},"generated":{"line":12685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12684,"column":0},"generated":{"line":12686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12685,"column":0},"generated":{"line":12687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12686,"column":0},"generated":{"line":12688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12687,"column":0},"generated":{"line":12689,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12688,"column":0},"generated":{"line":12690,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12689,"column":0},"generated":{"line":12691,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12690,"column":0},"generated":{"line":12692,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12691,"column":0},"generated":{"line":12693,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12692,"column":0},"generated":{"line":12694,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12693,"column":0},"generated":{"line":12695,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12694,"column":0},"generated":{"line":12696,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12695,"column":0},"generated":{"line":12697,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12696,"column":0},"generated":{"line":12698,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12697,"column":0},"generated":{"line":12699,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12698,"column":0},"generated":{"line":12700,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12699,"column":0},"generated":{"line":12701,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12700,"column":0},"generated":{"line":12702,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12701,"column":0},"generated":{"line":12703,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12702,"column":0},"generated":{"line":12704,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12703,"column":0},"generated":{"line":12705,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12704,"column":0},"generated":{"line":12706,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12705,"column":0},"generated":{"line":12707,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12706,"column":0},"generated":{"line":12708,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12707,"column":0},"generated":{"line":12709,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12708,"column":0},"generated":{"line":12710,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12709,"column":0},"generated":{"line":12711,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12710,"column":0},"generated":{"line":12712,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12711,"column":0},"generated":{"line":12713,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12712,"column":0},"generated":{"line":12714,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12713,"column":0},"generated":{"line":12715,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12714,"column":0},"generated":{"line":12716,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12715,"column":0},"generated":{"line":12717,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12716,"column":0},"generated":{"line":12718,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12717,"column":0},"generated":{"line":12719,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12718,"column":0},"generated":{"line":12720,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12719,"column":0},"generated":{"line":12721,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12720,"column":0},"generated":{"line":12722,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12721,"column":0},"generated":{"line":12723,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12722,"column":0},"generated":{"line":12724,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12723,"column":0},"generated":{"line":12725,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12724,"column":0},"generated":{"line":12726,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12725,"column":0},"generated":{"line":12727,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12726,"column":0},"generated":{"line":12728,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12727,"column":0},"generated":{"line":12729,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12728,"column":0},"generated":{"line":12730,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12729,"column":0},"generated":{"line":12731,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12730,"column":0},"generated":{"line":12732,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12731,"column":0},"generated":{"line":12733,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12732,"column":0},"generated":{"line":12734,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12733,"column":0},"generated":{"line":12735,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12734,"column":0},"generated":{"line":12736,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12735,"column":0},"generated":{"line":12737,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12736,"column":0},"generated":{"line":12738,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12737,"column":0},"generated":{"line":12739,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12738,"column":0},"generated":{"line":12740,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12739,"column":0},"generated":{"line":12741,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12740,"column":0},"generated":{"line":12742,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12741,"column":0},"generated":{"line":12743,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12742,"column":0},"generated":{"line":12744,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12743,"column":0},"generated":{"line":12745,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12744,"column":0},"generated":{"line":12746,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12745,"column":0},"generated":{"line":12747,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12746,"column":0},"generated":{"line":12748,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12747,"column":0},"generated":{"line":12749,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12748,"column":0},"generated":{"line":12750,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12749,"column":0},"generated":{"line":12751,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12750,"column":0},"generated":{"line":12752,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12751,"column":0},"generated":{"line":12753,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12752,"column":0},"generated":{"line":12754,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12753,"column":0},"generated":{"line":12755,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12754,"column":0},"generated":{"line":12756,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12755,"column":0},"generated":{"line":12757,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12756,"column":0},"generated":{"line":12758,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12757,"column":0},"generated":{"line":12759,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12758,"column":0},"generated":{"line":12760,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12759,"column":0},"generated":{"line":12761,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12760,"column":0},"generated":{"line":12762,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12761,"column":0},"generated":{"line":12763,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12762,"column":0},"generated":{"line":12764,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12763,"column":0},"generated":{"line":12765,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12764,"column":0},"generated":{"line":12766,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12765,"column":0},"generated":{"line":12767,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12766,"column":0},"generated":{"line":12768,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12767,"column":0},"generated":{"line":12769,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12768,"column":0},"generated":{"line":12770,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12769,"column":0},"generated":{"line":12771,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12770,"column":0},"generated":{"line":12772,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12771,"column":0},"generated":{"line":12773,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12772,"column":0},"generated":{"line":12774,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12773,"column":0},"generated":{"line":12775,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12774,"column":0},"generated":{"line":12776,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12775,"column":0},"generated":{"line":12777,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12776,"column":0},"generated":{"line":12778,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12777,"column":0},"generated":{"line":12779,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12778,"column":0},"generated":{"line":12780,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12779,"column":0},"generated":{"line":12781,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12780,"column":0},"generated":{"line":12782,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12781,"column":0},"generated":{"line":12783,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12782,"column":0},"generated":{"line":12784,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12783,"column":0},"generated":{"line":12785,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12784,"column":0},"generated":{"line":12786,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12785,"column":0},"generated":{"line":12787,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12786,"column":0},"generated":{"line":12788,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12787,"column":0},"generated":{"line":12789,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12788,"column":0},"generated":{"line":12790,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12789,"column":0},"generated":{"line":12791,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12790,"column":0},"generated":{"line":12792,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12791,"column":0},"generated":{"line":12793,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12792,"column":0},"generated":{"line":12794,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12793,"column":0},"generated":{"line":12795,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12794,"column":0},"generated":{"line":12796,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12795,"column":0},"generated":{"line":12797,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12796,"column":0},"generated":{"line":12798,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12797,"column":0},"generated":{"line":12799,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12798,"column":0},"generated":{"line":12800,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12799,"column":0},"generated":{"line":12801,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12800,"column":0},"generated":{"line":12802,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12801,"column":0},"generated":{"line":12803,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12802,"column":0},"generated":{"line":12804,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12803,"column":0},"generated":{"line":12805,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12804,"column":0},"generated":{"line":12806,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12805,"column":0},"generated":{"line":12807,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12806,"column":0},"generated":{"line":12808,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12807,"column":0},"generated":{"line":12809,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12808,"column":0},"generated":{"line":12810,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12809,"column":0},"generated":{"line":12811,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12810,"column":0},"generated":{"line":12812,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12811,"column":0},"generated":{"line":12813,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12812,"column":0},"generated":{"line":12814,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12813,"column":0},"generated":{"line":12815,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12814,"column":0},"generated":{"line":12816,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12815,"column":0},"generated":{"line":12817,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12816,"column":0},"generated":{"line":12818,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12817,"column":0},"generated":{"line":12819,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12818,"column":0},"generated":{"line":12820,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12819,"column":0},"generated":{"line":12821,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12820,"column":0},"generated":{"line":12822,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12821,"column":0},"generated":{"line":12823,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12822,"column":0},"generated":{"line":12824,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12823,"column":0},"generated":{"line":12825,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12824,"column":0},"generated":{"line":12826,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12825,"column":0},"generated":{"line":12827,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12826,"column":0},"generated":{"line":12828,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12827,"column":0},"generated":{"line":12829,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12828,"column":0},"generated":{"line":12830,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12829,"column":0},"generated":{"line":12831,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12830,"column":0},"generated":{"line":12832,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12831,"column":0},"generated":{"line":12833,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12832,"column":0},"generated":{"line":12834,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12833,"column":0},"generated":{"line":12835,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12834,"column":0},"generated":{"line":12836,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12835,"column":0},"generated":{"line":12837,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12836,"column":0},"generated":{"line":12838,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12837,"column":0},"generated":{"line":12839,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12838,"column":0},"generated":{"line":12840,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12839,"column":0},"generated":{"line":12841,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12840,"column":0},"generated":{"line":12842,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12841,"column":0},"generated":{"line":12843,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12842,"column":0},"generated":{"line":12844,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12843,"column":0},"generated":{"line":12845,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12844,"column":0},"generated":{"line":12846,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12845,"column":0},"generated":{"line":12847,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12846,"column":0},"generated":{"line":12848,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12847,"column":0},"generated":{"line":12849,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12848,"column":0},"generated":{"line":12850,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12849,"column":0},"generated":{"line":12851,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12850,"column":0},"generated":{"line":12852,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12851,"column":0},"generated":{"line":12853,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12852,"column":0},"generated":{"line":12854,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12853,"column":0},"generated":{"line":12855,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12854,"column":0},"generated":{"line":12856,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12855,"column":0},"generated":{"line":12857,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12856,"column":0},"generated":{"line":12858,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12857,"column":0},"generated":{"line":12859,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12858,"column":0},"generated":{"line":12860,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12859,"column":0},"generated":{"line":12861,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12860,"column":0},"generated":{"line":12862,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12861,"column":0},"generated":{"line":12863,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12862,"column":0},"generated":{"line":12864,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12863,"column":0},"generated":{"line":12865,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12864,"column":0},"generated":{"line":12866,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12865,"column":0},"generated":{"line":12867,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12866,"column":0},"generated":{"line":12868,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12867,"column":0},"generated":{"line":12869,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12868,"column":0},"generated":{"line":12870,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12869,"column":0},"generated":{"line":12871,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12870,"column":0},"generated":{"line":12872,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12871,"column":0},"generated":{"line":12873,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12872,"column":0},"generated":{"line":12874,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12873,"column":0},"generated":{"line":12875,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12874,"column":0},"generated":{"line":12876,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12875,"column":0},"generated":{"line":12877,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12876,"column":0},"generated":{"line":12878,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12877,"column":0},"generated":{"line":12879,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12878,"column":0},"generated":{"line":12880,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12879,"column":0},"generated":{"line":12881,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12880,"column":0},"generated":{"line":12882,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12881,"column":0},"generated":{"line":12883,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12882,"column":0},"generated":{"line":12884,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12883,"column":0},"generated":{"line":12885,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12884,"column":0},"generated":{"line":12886,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12885,"column":0},"generated":{"line":12887,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12886,"column":0},"generated":{"line":12888,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12887,"column":0},"generated":{"line":12889,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12888,"column":0},"generated":{"line":12890,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12889,"column":0},"generated":{"line":12891,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12890,"column":0},"generated":{"line":12892,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12891,"column":0},"generated":{"line":12893,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12892,"column":0},"generated":{"line":12894,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12893,"column":0},"generated":{"line":12895,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12894,"column":0},"generated":{"line":12896,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12895,"column":0},"generated":{"line":12897,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12896,"column":0},"generated":{"line":12898,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12897,"column":0},"generated":{"line":12899,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12898,"column":0},"generated":{"line":12900,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12899,"column":0},"generated":{"line":12901,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12900,"column":0},"generated":{"line":12902,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12901,"column":0},"generated":{"line":12903,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12902,"column":0},"generated":{"line":12904,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12903,"column":0},"generated":{"line":12905,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12904,"column":0},"generated":{"line":12906,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12905,"column":0},"generated":{"line":12907,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12906,"column":0},"generated":{"line":12908,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12907,"column":0},"generated":{"line":12909,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12908,"column":0},"generated":{"line":12910,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12909,"column":0},"generated":{"line":12911,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12910,"column":0},"generated":{"line":12912,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12911,"column":0},"generated":{"line":12913,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12912,"column":0},"generated":{"line":12914,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12913,"column":0},"generated":{"line":12915,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12914,"column":0},"generated":{"line":12916,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12915,"column":0},"generated":{"line":12917,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12916,"column":0},"generated":{"line":12918,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12917,"column":0},"generated":{"line":12919,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12918,"column":0},"generated":{"line":12920,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12919,"column":0},"generated":{"line":12921,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12920,"column":0},"generated":{"line":12922,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12921,"column":0},"generated":{"line":12923,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12922,"column":0},"generated":{"line":12924,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12923,"column":0},"generated":{"line":12925,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12924,"column":0},"generated":{"line":12926,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12925,"column":0},"generated":{"line":12927,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12926,"column":0},"generated":{"line":12928,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12927,"column":0},"generated":{"line":12929,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12928,"column":0},"generated":{"line":12930,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12929,"column":0},"generated":{"line":12931,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12930,"column":0},"generated":{"line":12932,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12931,"column":0},"generated":{"line":12933,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12932,"column":0},"generated":{"line":12934,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12933,"column":0},"generated":{"line":12935,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12934,"column":0},"generated":{"line":12936,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12935,"column":0},"generated":{"line":12937,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12936,"column":0},"generated":{"line":12938,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12937,"column":0},"generated":{"line":12939,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12938,"column":0},"generated":{"line":12940,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12939,"column":0},"generated":{"line":12941,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12940,"column":0},"generated":{"line":12942,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12941,"column":0},"generated":{"line":12943,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12942,"column":0},"generated":{"line":12944,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12943,"column":0},"generated":{"line":12945,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12944,"column":0},"generated":{"line":12946,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12945,"column":0},"generated":{"line":12947,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12946,"column":0},"generated":{"line":12948,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12947,"column":0},"generated":{"line":12949,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12948,"column":0},"generated":{"line":12950,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12949,"column":0},"generated":{"line":12951,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12950,"column":0},"generated":{"line":12952,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12951,"column":0},"generated":{"line":12953,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12952,"column":0},"generated":{"line":12954,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12953,"column":0},"generated":{"line":12955,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12954,"column":0},"generated":{"line":12956,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12955,"column":0},"generated":{"line":12957,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12956,"column":0},"generated":{"line":12958,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12957,"column":0},"generated":{"line":12959,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12958,"column":0},"generated":{"line":12960,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12959,"column":0},"generated":{"line":12961,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12960,"column":0},"generated":{"line":12962,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12961,"column":0},"generated":{"line":12963,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12962,"column":0},"generated":{"line":12964,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12963,"column":0},"generated":{"line":12965,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12964,"column":0},"generated":{"line":12966,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12965,"column":0},"generated":{"line":12967,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12966,"column":0},"generated":{"line":12968,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12967,"column":0},"generated":{"line":12969,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12968,"column":0},"generated":{"line":12970,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12969,"column":0},"generated":{"line":12971,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12970,"column":0},"generated":{"line":12972,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12971,"column":0},"generated":{"line":12973,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12972,"column":0},"generated":{"line":12974,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12973,"column":0},"generated":{"line":12975,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12974,"column":0},"generated":{"line":12976,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12975,"column":0},"generated":{"line":12977,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12976,"column":0},"generated":{"line":12978,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12977,"column":0},"generated":{"line":12979,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12978,"column":0},"generated":{"line":12980,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12979,"column":0},"generated":{"line":12981,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12980,"column":0},"generated":{"line":12982,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12981,"column":0},"generated":{"line":12983,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12982,"column":0},"generated":{"line":12984,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12983,"column":0},"generated":{"line":12985,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12984,"column":0},"generated":{"line":12986,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12985,"column":0},"generated":{"line":12987,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12986,"column":0},"generated":{"line":12988,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12987,"column":0},"generated":{"line":12989,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12988,"column":0},"generated":{"line":12990,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12989,"column":0},"generated":{"line":12991,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12990,"column":0},"generated":{"line":12992,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12991,"column":0},"generated":{"line":12993,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12992,"column":0},"generated":{"line":12994,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12993,"column":0},"generated":{"line":12995,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12994,"column":0},"generated":{"line":12996,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12995,"column":0},"generated":{"line":12997,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12996,"column":0},"generated":{"line":12998,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12997,"column":0},"generated":{"line":12999,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12998,"column":0},"generated":{"line":13000,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":12999,"column":0},"generated":{"line":13001,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13000,"column":0},"generated":{"line":13002,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13001,"column":0},"generated":{"line":13003,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13002,"column":0},"generated":{"line":13004,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13003,"column":0},"generated":{"line":13005,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13004,"column":0},"generated":{"line":13006,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13005,"column":0},"generated":{"line":13007,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13006,"column":0},"generated":{"line":13008,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13007,"column":0},"generated":{"line":13009,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13008,"column":0},"generated":{"line":13010,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13009,"column":0},"generated":{"line":13011,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13010,"column":0},"generated":{"line":13012,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13011,"column":0},"generated":{"line":13013,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13012,"column":0},"generated":{"line":13014,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13013,"column":0},"generated":{"line":13015,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13014,"column":0},"generated":{"line":13016,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13015,"column":0},"generated":{"line":13017,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13016,"column":0},"generated":{"line":13018,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13017,"column":0},"generated":{"line":13019,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13018,"column":0},"generated":{"line":13020,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13019,"column":0},"generated":{"line":13021,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13020,"column":0},"generated":{"line":13022,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13021,"column":0},"generated":{"line":13023,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13022,"column":0},"generated":{"line":13024,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13023,"column":0},"generated":{"line":13025,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13024,"column":0},"generated":{"line":13026,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13025,"column":0},"generated":{"line":13027,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13026,"column":0},"generated":{"line":13028,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13027,"column":0},"generated":{"line":13029,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13028,"column":0},"generated":{"line":13030,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13029,"column":0},"generated":{"line":13031,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13030,"column":0},"generated":{"line":13032,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13031,"column":0},"generated":{"line":13033,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13032,"column":0},"generated":{"line":13034,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13033,"column":0},"generated":{"line":13035,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13034,"column":0},"generated":{"line":13036,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13035,"column":0},"generated":{"line":13037,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13036,"column":0},"generated":{"line":13038,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13037,"column":0},"generated":{"line":13039,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13038,"column":0},"generated":{"line":13040,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13039,"column":0},"generated":{"line":13041,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13040,"column":0},"generated":{"line":13042,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13041,"column":0},"generated":{"line":13043,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13042,"column":0},"generated":{"line":13044,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13043,"column":0},"generated":{"line":13045,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13044,"column":0},"generated":{"line":13046,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13045,"column":0},"generated":{"line":13047,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13046,"column":0},"generated":{"line":13048,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13047,"column":0},"generated":{"line":13049,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13048,"column":0},"generated":{"line":13050,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13049,"column":0},"generated":{"line":13051,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13050,"column":0},"generated":{"line":13052,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13051,"column":0},"generated":{"line":13053,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13052,"column":0},"generated":{"line":13054,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13053,"column":0},"generated":{"line":13055,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13054,"column":0},"generated":{"line":13056,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13055,"column":0},"generated":{"line":13057,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13056,"column":0},"generated":{"line":13058,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13057,"column":0},"generated":{"line":13059,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13058,"column":0},"generated":{"line":13060,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13059,"column":0},"generated":{"line":13061,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13060,"column":0},"generated":{"line":13062,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13061,"column":0},"generated":{"line":13063,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13062,"column":0},"generated":{"line":13064,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13063,"column":0},"generated":{"line":13065,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13064,"column":0},"generated":{"line":13066,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13065,"column":0},"generated":{"line":13067,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13066,"column":0},"generated":{"line":13068,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13067,"column":0},"generated":{"line":13069,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13068,"column":0},"generated":{"line":13070,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13069,"column":0},"generated":{"line":13071,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13070,"column":0},"generated":{"line":13072,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13071,"column":0},"generated":{"line":13073,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13072,"column":0},"generated":{"line":13074,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13073,"column":0},"generated":{"line":13075,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13074,"column":0},"generated":{"line":13076,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13075,"column":0},"generated":{"line":13077,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13076,"column":0},"generated":{"line":13078,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13077,"column":0},"generated":{"line":13079,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13078,"column":0},"generated":{"line":13080,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13079,"column":0},"generated":{"line":13081,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13080,"column":0},"generated":{"line":13082,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13081,"column":0},"generated":{"line":13083,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13082,"column":0},"generated":{"line":13084,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13083,"column":0},"generated":{"line":13085,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13084,"column":0},"generated":{"line":13086,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13085,"column":0},"generated":{"line":13087,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13086,"column":0},"generated":{"line":13088,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13087,"column":0},"generated":{"line":13089,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13088,"column":0},"generated":{"line":13090,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13089,"column":0},"generated":{"line":13091,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13090,"column":0},"generated":{"line":13092,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13091,"column":0},"generated":{"line":13093,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13092,"column":0},"generated":{"line":13094,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13093,"column":0},"generated":{"line":13095,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13094,"column":0},"generated":{"line":13096,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13095,"column":0},"generated":{"line":13097,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13096,"column":0},"generated":{"line":13098,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13097,"column":0},"generated":{"line":13099,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13098,"column":0},"generated":{"line":13100,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13099,"column":0},"generated":{"line":13101,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13100,"column":0},"generated":{"line":13102,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13101,"column":0},"generated":{"line":13103,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13102,"column":0},"generated":{"line":13104,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13103,"column":0},"generated":{"line":13105,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13104,"column":0},"generated":{"line":13106,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13105,"column":0},"generated":{"line":13107,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13106,"column":0},"generated":{"line":13108,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13107,"column":0},"generated":{"line":13109,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13108,"column":0},"generated":{"line":13110,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13109,"column":0},"generated":{"line":13111,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13110,"column":0},"generated":{"line":13112,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13111,"column":0},"generated":{"line":13113,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13112,"column":0},"generated":{"line":13114,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13113,"column":0},"generated":{"line":13115,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13114,"column":0},"generated":{"line":13116,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13115,"column":0},"generated":{"line":13117,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13116,"column":0},"generated":{"line":13118,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13117,"column":0},"generated":{"line":13119,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13118,"column":0},"generated":{"line":13120,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13119,"column":0},"generated":{"line":13121,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13120,"column":0},"generated":{"line":13122,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13121,"column":0},"generated":{"line":13123,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13122,"column":0},"generated":{"line":13124,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13123,"column":0},"generated":{"line":13125,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13124,"column":0},"generated":{"line":13126,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13125,"column":0},"generated":{"line":13127,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13126,"column":0},"generated":{"line":13128,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13127,"column":0},"generated":{"line":13129,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13128,"column":0},"generated":{"line":13130,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13129,"column":0},"generated":{"line":13131,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13130,"column":0},"generated":{"line":13132,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13131,"column":0},"generated":{"line":13133,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13132,"column":0},"generated":{"line":13134,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13133,"column":0},"generated":{"line":13135,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13134,"column":0},"generated":{"line":13136,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13135,"column":0},"generated":{"line":13137,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13136,"column":0},"generated":{"line":13138,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13137,"column":0},"generated":{"line":13139,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13138,"column":0},"generated":{"line":13140,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13139,"column":0},"generated":{"line":13141,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13140,"column":0},"generated":{"line":13142,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13141,"column":0},"generated":{"line":13143,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13142,"column":0},"generated":{"line":13144,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13143,"column":0},"generated":{"line":13145,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13144,"column":0},"generated":{"line":13146,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13145,"column":0},"generated":{"line":13147,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13146,"column":0},"generated":{"line":13148,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13147,"column":0},"generated":{"line":13149,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13148,"column":0},"generated":{"line":13150,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13149,"column":0},"generated":{"line":13151,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13150,"column":0},"generated":{"line":13152,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13151,"column":0},"generated":{"line":13153,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13152,"column":0},"generated":{"line":13154,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13153,"column":0},"generated":{"line":13155,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13154,"column":0},"generated":{"line":13156,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13155,"column":0},"generated":{"line":13157,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13156,"column":0},"generated":{"line":13158,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13157,"column":0},"generated":{"line":13159,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13158,"column":0},"generated":{"line":13160,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13159,"column":0},"generated":{"line":13161,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13160,"column":0},"generated":{"line":13162,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13161,"column":0},"generated":{"line":13163,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13162,"column":0},"generated":{"line":13164,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13163,"column":0},"generated":{"line":13165,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13164,"column":0},"generated":{"line":13166,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13165,"column":0},"generated":{"line":13167,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13166,"column":0},"generated":{"line":13168,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13167,"column":0},"generated":{"line":13169,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13168,"column":0},"generated":{"line":13170,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13169,"column":0},"generated":{"line":13171,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13170,"column":0},"generated":{"line":13172,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13171,"column":0},"generated":{"line":13173,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13172,"column":0},"generated":{"line":13174,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13173,"column":0},"generated":{"line":13175,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13174,"column":0},"generated":{"line":13176,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13175,"column":0},"generated":{"line":13177,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13176,"column":0},"generated":{"line":13178,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13177,"column":0},"generated":{"line":13179,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13178,"column":0},"generated":{"line":13180,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13179,"column":0},"generated":{"line":13181,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13180,"column":0},"generated":{"line":13182,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13181,"column":0},"generated":{"line":13183,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13182,"column":0},"generated":{"line":13184,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13183,"column":0},"generated":{"line":13185,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13184,"column":0},"generated":{"line":13186,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13185,"column":0},"generated":{"line":13187,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13186,"column":0},"generated":{"line":13188,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13187,"column":0},"generated":{"line":13189,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13188,"column":0},"generated":{"line":13190,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13189,"column":0},"generated":{"line":13191,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13190,"column":0},"generated":{"line":13192,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13191,"column":0},"generated":{"line":13193,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13192,"column":0},"generated":{"line":13194,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13193,"column":0},"generated":{"line":13195,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13194,"column":0},"generated":{"line":13196,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13195,"column":0},"generated":{"line":13197,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13196,"column":0},"generated":{"line":13198,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13197,"column":0},"generated":{"line":13199,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13198,"column":0},"generated":{"line":13200,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13199,"column":0},"generated":{"line":13201,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13200,"column":0},"generated":{"line":13202,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13201,"column":0},"generated":{"line":13203,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13202,"column":0},"generated":{"line":13204,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13203,"column":0},"generated":{"line":13205,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13204,"column":0},"generated":{"line":13206,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13205,"column":0},"generated":{"line":13207,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13206,"column":0},"generated":{"line":13208,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13207,"column":0},"generated":{"line":13209,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13208,"column":0},"generated":{"line":13210,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13209,"column":0},"generated":{"line":13211,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13210,"column":0},"generated":{"line":13212,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13211,"column":0},"generated":{"line":13213,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13212,"column":0},"generated":{"line":13214,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13213,"column":0},"generated":{"line":13215,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13214,"column":0},"generated":{"line":13216,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13215,"column":0},"generated":{"line":13217,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13216,"column":0},"generated":{"line":13218,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13217,"column":0},"generated":{"line":13219,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13218,"column":0},"generated":{"line":13220,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13219,"column":0},"generated":{"line":13221,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13220,"column":0},"generated":{"line":13222,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13221,"column":0},"generated":{"line":13223,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13222,"column":0},"generated":{"line":13224,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13223,"column":0},"generated":{"line":13225,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13224,"column":0},"generated":{"line":13226,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13225,"column":0},"generated":{"line":13227,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13226,"column":0},"generated":{"line":13228,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13227,"column":0},"generated":{"line":13229,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13228,"column":0},"generated":{"line":13230,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13229,"column":0},"generated":{"line":13231,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13230,"column":0},"generated":{"line":13232,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13231,"column":0},"generated":{"line":13233,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13232,"column":0},"generated":{"line":13234,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13233,"column":0},"generated":{"line":13235,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13234,"column":0},"generated":{"line":13236,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13235,"column":0},"generated":{"line":13237,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13236,"column":0},"generated":{"line":13238,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13237,"column":0},"generated":{"line":13239,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13238,"column":0},"generated":{"line":13240,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13239,"column":0},"generated":{"line":13241,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13240,"column":0},"generated":{"line":13242,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13241,"column":0},"generated":{"line":13243,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13242,"column":0},"generated":{"line":13244,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13243,"column":0},"generated":{"line":13245,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13244,"column":0},"generated":{"line":13246,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13245,"column":0},"generated":{"line":13247,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13246,"column":0},"generated":{"line":13248,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13247,"column":0},"generated":{"line":13249,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13248,"column":0},"generated":{"line":13250,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13249,"column":0},"generated":{"line":13251,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13250,"column":0},"generated":{"line":13252,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13251,"column":0},"generated":{"line":13253,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13252,"column":0},"generated":{"line":13254,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13253,"column":0},"generated":{"line":13255,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13254,"column":0},"generated":{"line":13256,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13255,"column":0},"generated":{"line":13257,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13256,"column":0},"generated":{"line":13258,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13257,"column":0},"generated":{"line":13259,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13258,"column":0},"generated":{"line":13260,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13259,"column":0},"generated":{"line":13261,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13260,"column":0},"generated":{"line":13262,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13261,"column":0},"generated":{"line":13263,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13262,"column":0},"generated":{"line":13264,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13263,"column":0},"generated":{"line":13265,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13264,"column":0},"generated":{"line":13266,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13265,"column":0},"generated":{"line":13267,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13266,"column":0},"generated":{"line":13268,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13267,"column":0},"generated":{"line":13269,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13268,"column":0},"generated":{"line":13270,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13269,"column":0},"generated":{"line":13271,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13270,"column":0},"generated":{"line":13272,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13271,"column":0},"generated":{"line":13273,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13272,"column":0},"generated":{"line":13274,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13273,"column":0},"generated":{"line":13275,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13274,"column":0},"generated":{"line":13276,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13275,"column":0},"generated":{"line":13277,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13276,"column":0},"generated":{"line":13278,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13277,"column":0},"generated":{"line":13279,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13278,"column":0},"generated":{"line":13280,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13279,"column":0},"generated":{"line":13281,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13280,"column":0},"generated":{"line":13282,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13281,"column":0},"generated":{"line":13283,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13282,"column":0},"generated":{"line":13284,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13283,"column":0},"generated":{"line":13285,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13284,"column":0},"generated":{"line":13286,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13285,"column":0},"generated":{"line":13287,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13286,"column":0},"generated":{"line":13288,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13287,"column":0},"generated":{"line":13289,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13288,"column":0},"generated":{"line":13290,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13289,"column":0},"generated":{"line":13291,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13290,"column":0},"generated":{"line":13292,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13291,"column":0},"generated":{"line":13293,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13292,"column":0},"generated":{"line":13294,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13293,"column":0},"generated":{"line":13295,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13294,"column":0},"generated":{"line":13296,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13295,"column":0},"generated":{"line":13297,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13296,"column":0},"generated":{"line":13298,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13297,"column":0},"generated":{"line":13299,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13298,"column":0},"generated":{"line":13300,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13299,"column":0},"generated":{"line":13301,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13300,"column":0},"generated":{"line":13302,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13301,"column":0},"generated":{"line":13303,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13302,"column":0},"generated":{"line":13304,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13303,"column":0},"generated":{"line":13305,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13304,"column":0},"generated":{"line":13306,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13305,"column":0},"generated":{"line":13307,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13306,"column":0},"generated":{"line":13308,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13307,"column":0},"generated":{"line":13309,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13308,"column":0},"generated":{"line":13310,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13309,"column":0},"generated":{"line":13311,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13310,"column":0},"generated":{"line":13312,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13311,"column":0},"generated":{"line":13313,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13312,"column":0},"generated":{"line":13314,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13313,"column":0},"generated":{"line":13315,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13314,"column":0},"generated":{"line":13316,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13315,"column":0},"generated":{"line":13317,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13316,"column":0},"generated":{"line":13318,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13317,"column":0},"generated":{"line":13319,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13318,"column":0},"generated":{"line":13320,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13319,"column":0},"generated":{"line":13321,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13320,"column":0},"generated":{"line":13322,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13321,"column":0},"generated":{"line":13323,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13322,"column":0},"generated":{"line":13324,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13323,"column":0},"generated":{"line":13325,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13324,"column":0},"generated":{"line":13326,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13325,"column":0},"generated":{"line":13327,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13326,"column":0},"generated":{"line":13328,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13327,"column":0},"generated":{"line":13329,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13328,"column":0},"generated":{"line":13330,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13329,"column":0},"generated":{"line":13331,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13330,"column":0},"generated":{"line":13332,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13331,"column":0},"generated":{"line":13333,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13332,"column":0},"generated":{"line":13334,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13333,"column":0},"generated":{"line":13335,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13334,"column":0},"generated":{"line":13336,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13335,"column":0},"generated":{"line":13337,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13336,"column":0},"generated":{"line":13338,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13337,"column":0},"generated":{"line":13339,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13338,"column":0},"generated":{"line":13340,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13339,"column":0},"generated":{"line":13341,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13340,"column":0},"generated":{"line":13342,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13341,"column":0},"generated":{"line":13343,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13342,"column":0},"generated":{"line":13344,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13343,"column":0},"generated":{"line":13345,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13344,"column":0},"generated":{"line":13346,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13345,"column":0},"generated":{"line":13347,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13346,"column":0},"generated":{"line":13348,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13347,"column":0},"generated":{"line":13349,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13348,"column":0},"generated":{"line":13350,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13349,"column":0},"generated":{"line":13351,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13350,"column":0},"generated":{"line":13352,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13351,"column":0},"generated":{"line":13353,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13352,"column":0},"generated":{"line":13354,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13353,"column":0},"generated":{"line":13355,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13354,"column":0},"generated":{"line":13356,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13355,"column":0},"generated":{"line":13357,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13356,"column":0},"generated":{"line":13358,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13357,"column":0},"generated":{"line":13359,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13358,"column":0},"generated":{"line":13360,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13359,"column":0},"generated":{"line":13361,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13360,"column":0},"generated":{"line":13362,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13361,"column":0},"generated":{"line":13363,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13362,"column":0},"generated":{"line":13364,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13363,"column":0},"generated":{"line":13365,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13364,"column":0},"generated":{"line":13366,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13365,"column":0},"generated":{"line":13367,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13366,"column":0},"generated":{"line":13368,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13367,"column":0},"generated":{"line":13369,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13368,"column":0},"generated":{"line":13370,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13369,"column":0},"generated":{"line":13371,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13370,"column":0},"generated":{"line":13372,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13371,"column":0},"generated":{"line":13373,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13372,"column":0},"generated":{"line":13374,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13373,"column":0},"generated":{"line":13375,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13374,"column":0},"generated":{"line":13376,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13375,"column":0},"generated":{"line":13377,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13376,"column":0},"generated":{"line":13378,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13377,"column":0},"generated":{"line":13379,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13378,"column":0},"generated":{"line":13380,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13379,"column":0},"generated":{"line":13381,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13380,"column":0},"generated":{"line":13382,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13381,"column":0},"generated":{"line":13383,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13382,"column":0},"generated":{"line":13384,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13383,"column":0},"generated":{"line":13385,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13384,"column":0},"generated":{"line":13386,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13385,"column":0},"generated":{"line":13387,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13386,"column":0},"generated":{"line":13388,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13387,"column":0},"generated":{"line":13389,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13388,"column":0},"generated":{"line":13390,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13389,"column":0},"generated":{"line":13391,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13390,"column":0},"generated":{"line":13392,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13391,"column":0},"generated":{"line":13393,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13392,"column":0},"generated":{"line":13394,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13393,"column":0},"generated":{"line":13395,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13394,"column":0},"generated":{"line":13396,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13395,"column":0},"generated":{"line":13397,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13396,"column":0},"generated":{"line":13398,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13397,"column":0},"generated":{"line":13399,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13398,"column":0},"generated":{"line":13400,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13399,"column":0},"generated":{"line":13401,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13400,"column":0},"generated":{"line":13402,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13401,"column":0},"generated":{"line":13403,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13402,"column":0},"generated":{"line":13404,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13403,"column":0},"generated":{"line":13405,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13404,"column":0},"generated":{"line":13406,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13405,"column":0},"generated":{"line":13407,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13406,"column":0},"generated":{"line":13408,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13407,"column":0},"generated":{"line":13409,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13408,"column":0},"generated":{"line":13410,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13409,"column":0},"generated":{"line":13411,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13410,"column":0},"generated":{"line":13412,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13411,"column":0},"generated":{"line":13413,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13412,"column":0},"generated":{"line":13414,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13413,"column":0},"generated":{"line":13415,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13414,"column":0},"generated":{"line":13416,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13415,"column":0},"generated":{"line":13417,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13416,"column":0},"generated":{"line":13418,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13417,"column":0},"generated":{"line":13419,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13418,"column":0},"generated":{"line":13420,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13419,"column":0},"generated":{"line":13421,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13420,"column":0},"generated":{"line":13422,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13421,"column":0},"generated":{"line":13423,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13422,"column":0},"generated":{"line":13424,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13423,"column":0},"generated":{"line":13425,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13424,"column":0},"generated":{"line":13426,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13425,"column":0},"generated":{"line":13427,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13426,"column":0},"generated":{"line":13428,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13427,"column":0},"generated":{"line":13429,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13428,"column":0},"generated":{"line":13430,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13429,"column":0},"generated":{"line":13431,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13430,"column":0},"generated":{"line":13432,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13431,"column":0},"generated":{"line":13433,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13432,"column":0},"generated":{"line":13434,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13433,"column":0},"generated":{"line":13435,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13434,"column":0},"generated":{"line":13436,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13435,"column":0},"generated":{"line":13437,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13436,"column":0},"generated":{"line":13438,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13437,"column":0},"generated":{"line":13439,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13438,"column":0},"generated":{"line":13440,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13439,"column":0},"generated":{"line":13441,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13440,"column":0},"generated":{"line":13442,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13441,"column":0},"generated":{"line":13443,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13442,"column":0},"generated":{"line":13444,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13443,"column":0},"generated":{"line":13445,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13444,"column":0},"generated":{"line":13446,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13445,"column":0},"generated":{"line":13447,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13446,"column":0},"generated":{"line":13448,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13447,"column":0},"generated":{"line":13449,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13448,"column":0},"generated":{"line":13450,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13449,"column":0},"generated":{"line":13451,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13450,"column":0},"generated":{"line":13452,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13451,"column":0},"generated":{"line":13453,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13452,"column":0},"generated":{"line":13454,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13453,"column":0},"generated":{"line":13455,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13454,"column":0},"generated":{"line":13456,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13455,"column":0},"generated":{"line":13457,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13456,"column":0},"generated":{"line":13458,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13457,"column":0},"generated":{"line":13459,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13458,"column":0},"generated":{"line":13460,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13459,"column":0},"generated":{"line":13461,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13460,"column":0},"generated":{"line":13462,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13461,"column":0},"generated":{"line":13463,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13462,"column":0},"generated":{"line":13464,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13463,"column":0},"generated":{"line":13465,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13464,"column":0},"generated":{"line":13466,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13465,"column":0},"generated":{"line":13467,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13466,"column":0},"generated":{"line":13468,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13467,"column":0},"generated":{"line":13469,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13468,"column":0},"generated":{"line":13470,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13469,"column":0},"generated":{"line":13471,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13470,"column":0},"generated":{"line":13472,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13471,"column":0},"generated":{"line":13473,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13472,"column":0},"generated":{"line":13474,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13473,"column":0},"generated":{"line":13475,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13474,"column":0},"generated":{"line":13476,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13475,"column":0},"generated":{"line":13477,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13476,"column":0},"generated":{"line":13478,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13477,"column":0},"generated":{"line":13479,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13478,"column":0},"generated":{"line":13480,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13479,"column":0},"generated":{"line":13481,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13480,"column":0},"generated":{"line":13482,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13481,"column":0},"generated":{"line":13483,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13482,"column":0},"generated":{"line":13484,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13483,"column":0},"generated":{"line":13485,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13484,"column":0},"generated":{"line":13486,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13485,"column":0},"generated":{"line":13487,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13486,"column":0},"generated":{"line":13488,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13487,"column":0},"generated":{"line":13489,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13488,"column":0},"generated":{"line":13490,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13489,"column":0},"generated":{"line":13491,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13490,"column":0},"generated":{"line":13492,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13491,"column":0},"generated":{"line":13493,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13492,"column":0},"generated":{"line":13494,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13493,"column":0},"generated":{"line":13495,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13494,"column":0},"generated":{"line":13496,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13495,"column":0},"generated":{"line":13497,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13496,"column":0},"generated":{"line":13498,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13497,"column":0},"generated":{"line":13499,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13498,"column":0},"generated":{"line":13500,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13499,"column":0},"generated":{"line":13501,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13500,"column":0},"generated":{"line":13502,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13501,"column":0},"generated":{"line":13503,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13502,"column":0},"generated":{"line":13504,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13503,"column":0},"generated":{"line":13505,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13504,"column":0},"generated":{"line":13506,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13505,"column":0},"generated":{"line":13507,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13506,"column":0},"generated":{"line":13508,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13507,"column":0},"generated":{"line":13509,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13508,"column":0},"generated":{"line":13510,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13509,"column":0},"generated":{"line":13511,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13510,"column":0},"generated":{"line":13512,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13511,"column":0},"generated":{"line":13513,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13512,"column":0},"generated":{"line":13514,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13513,"column":0},"generated":{"line":13515,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13514,"column":0},"generated":{"line":13516,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13515,"column":0},"generated":{"line":13517,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13516,"column":0},"generated":{"line":13518,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13517,"column":0},"generated":{"line":13519,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13518,"column":0},"generated":{"line":13520,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13519,"column":0},"generated":{"line":13521,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13520,"column":0},"generated":{"line":13522,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13521,"column":0},"generated":{"line":13523,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13522,"column":0},"generated":{"line":13524,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13523,"column":0},"generated":{"line":13525,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13524,"column":0},"generated":{"line":13526,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13525,"column":0},"generated":{"line":13527,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13526,"column":0},"generated":{"line":13528,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13527,"column":0},"generated":{"line":13529,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13528,"column":0},"generated":{"line":13530,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13529,"column":0},"generated":{"line":13531,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13530,"column":0},"generated":{"line":13532,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13531,"column":0},"generated":{"line":13533,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13532,"column":0},"generated":{"line":13534,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13533,"column":0},"generated":{"line":13535,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13534,"column":0},"generated":{"line":13536,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13535,"column":0},"generated":{"line":13537,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13536,"column":0},"generated":{"line":13538,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13537,"column":0},"generated":{"line":13539,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13538,"column":0},"generated":{"line":13540,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13539,"column":0},"generated":{"line":13541,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13540,"column":0},"generated":{"line":13542,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13541,"column":0},"generated":{"line":13543,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13542,"column":0},"generated":{"line":13544,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13543,"column":0},"generated":{"line":13545,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13544,"column":0},"generated":{"line":13546,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13545,"column":0},"generated":{"line":13547,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13546,"column":0},"generated":{"line":13548,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13547,"column":0},"generated":{"line":13549,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13548,"column":0},"generated":{"line":13550,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13549,"column":0},"generated":{"line":13551,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13550,"column":0},"generated":{"line":13552,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13551,"column":0},"generated":{"line":13553,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13552,"column":0},"generated":{"line":13554,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13553,"column":0},"generated":{"line":13555,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13554,"column":0},"generated":{"line":13556,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13555,"column":0},"generated":{"line":13557,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13556,"column":0},"generated":{"line":13558,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13557,"column":0},"generated":{"line":13559,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13558,"column":0},"generated":{"line":13560,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13559,"column":0},"generated":{"line":13561,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13560,"column":0},"generated":{"line":13562,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13561,"column":0},"generated":{"line":13563,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13562,"column":0},"generated":{"line":13564,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13563,"column":0},"generated":{"line":13565,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13564,"column":0},"generated":{"line":13566,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13565,"column":0},"generated":{"line":13567,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13566,"column":0},"generated":{"line":13568,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13567,"column":0},"generated":{"line":13569,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13568,"column":0},"generated":{"line":13570,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13569,"column":0},"generated":{"line":13571,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13570,"column":0},"generated":{"line":13572,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13571,"column":0},"generated":{"line":13573,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13572,"column":0},"generated":{"line":13574,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13573,"column":0},"generated":{"line":13575,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13574,"column":0},"generated":{"line":13576,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13575,"column":0},"generated":{"line":13577,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13576,"column":0},"generated":{"line":13578,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13577,"column":0},"generated":{"line":13579,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13578,"column":0},"generated":{"line":13580,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13579,"column":0},"generated":{"line":13581,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13580,"column":0},"generated":{"line":13582,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13581,"column":0},"generated":{"line":13583,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13582,"column":0},"generated":{"line":13584,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13583,"column":0},"generated":{"line":13585,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13584,"column":0},"generated":{"line":13586,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13585,"column":0},"generated":{"line":13587,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13586,"column":0},"generated":{"line":13588,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13587,"column":0},"generated":{"line":13589,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13588,"column":0},"generated":{"line":13590,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13589,"column":0},"generated":{"line":13591,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13590,"column":0},"generated":{"line":13592,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13591,"column":0},"generated":{"line":13593,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13592,"column":0},"generated":{"line":13594,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13593,"column":0},"generated":{"line":13595,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13594,"column":0},"generated":{"line":13596,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13595,"column":0},"generated":{"line":13597,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13596,"column":0},"generated":{"line":13598,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13597,"column":0},"generated":{"line":13599,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13598,"column":0},"generated":{"line":13600,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13599,"column":0},"generated":{"line":13601,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13600,"column":0},"generated":{"line":13602,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13601,"column":0},"generated":{"line":13603,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13602,"column":0},"generated":{"line":13604,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13603,"column":0},"generated":{"line":13605,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13604,"column":0},"generated":{"line":13606,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13605,"column":0},"generated":{"line":13607,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13606,"column":0},"generated":{"line":13608,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13607,"column":0},"generated":{"line":13609,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13608,"column":0},"generated":{"line":13610,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13609,"column":0},"generated":{"line":13611,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13610,"column":0},"generated":{"line":13612,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13611,"column":0},"generated":{"line":13613,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13612,"column":0},"generated":{"line":13614,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13613,"column":0},"generated":{"line":13615,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13614,"column":0},"generated":{"line":13616,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13615,"column":0},"generated":{"line":13617,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13616,"column":0},"generated":{"line":13618,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13617,"column":0},"generated":{"line":13619,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13618,"column":0},"generated":{"line":13620,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13619,"column":0},"generated":{"line":13621,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13620,"column":0},"generated":{"line":13622,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13621,"column":0},"generated":{"line":13623,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13622,"column":0},"generated":{"line":13624,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13623,"column":0},"generated":{"line":13625,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13624,"column":0},"generated":{"line":13626,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13625,"column":0},"generated":{"line":13627,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13626,"column":0},"generated":{"line":13628,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13627,"column":0},"generated":{"line":13629,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13628,"column":0},"generated":{"line":13630,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13629,"column":0},"generated":{"line":13631,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13630,"column":0},"generated":{"line":13632,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13631,"column":0},"generated":{"line":13633,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13632,"column":0},"generated":{"line":13634,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13633,"column":0},"generated":{"line":13635,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13634,"column":0},"generated":{"line":13636,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13635,"column":0},"generated":{"line":13637,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13636,"column":0},"generated":{"line":13638,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13637,"column":0},"generated":{"line":13639,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13638,"column":0},"generated":{"line":13640,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13639,"column":0},"generated":{"line":13641,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13640,"column":0},"generated":{"line":13642,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13641,"column":0},"generated":{"line":13643,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13642,"column":0},"generated":{"line":13644,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13643,"column":0},"generated":{"line":13645,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13644,"column":0},"generated":{"line":13646,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13645,"column":0},"generated":{"line":13647,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13646,"column":0},"generated":{"line":13648,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13647,"column":0},"generated":{"line":13649,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13648,"column":0},"generated":{"line":13650,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13649,"column":0},"generated":{"line":13651,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13650,"column":0},"generated":{"line":13652,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13651,"column":0},"generated":{"line":13653,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13652,"column":0},"generated":{"line":13654,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13653,"column":0},"generated":{"line":13655,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13654,"column":0},"generated":{"line":13656,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13655,"column":0},"generated":{"line":13657,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13656,"column":0},"generated":{"line":13658,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13657,"column":0},"generated":{"line":13659,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13658,"column":0},"generated":{"line":13660,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13659,"column":0},"generated":{"line":13661,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13660,"column":0},"generated":{"line":13662,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13661,"column":0},"generated":{"line":13663,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13662,"column":0},"generated":{"line":13664,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13663,"column":0},"generated":{"line":13665,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13664,"column":0},"generated":{"line":13666,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13665,"column":0},"generated":{"line":13667,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13666,"column":0},"generated":{"line":13668,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13667,"column":0},"generated":{"line":13669,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13668,"column":0},"generated":{"line":13670,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13669,"column":0},"generated":{"line":13671,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13670,"column":0},"generated":{"line":13672,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13671,"column":0},"generated":{"line":13673,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13672,"column":0},"generated":{"line":13674,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13673,"column":0},"generated":{"line":13675,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13674,"column":0},"generated":{"line":13676,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13675,"column":0},"generated":{"line":13677,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13676,"column":0},"generated":{"line":13678,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13677,"column":0},"generated":{"line":13679,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13678,"column":0},"generated":{"line":13680,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13679,"column":0},"generated":{"line":13681,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13680,"column":0},"generated":{"line":13682,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13681,"column":0},"generated":{"line":13683,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13682,"column":0},"generated":{"line":13684,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13683,"column":0},"generated":{"line":13685,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13684,"column":0},"generated":{"line":13686,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13685,"column":0},"generated":{"line":13687,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13686,"column":0},"generated":{"line":13688,"column":0}},{"source":"node_modules/cannon/build/cannon.js","original":{"line":13687,"column":0},"generated":{"line":13689,"column":0}}],"sources":{"node_modules/cannon/build/cannon.js":"/*\r\n * Copyright (c) 2015 cannon.js Authors\r\n *\r\n * Permission is hereby granted, free of charge, to any person\r\n * obtaining a copy of this software and associated documentation\r\n * files (the \"Software\"), to deal in the Software without\r\n * restriction, including without limitation the rights to use, copy,\r\n * modify, merge, publish, distribute, sublicense, and/or sell copies\r\n * of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&false)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CANNON=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\r\nmodule.exports={\r\n  \"name\": \"cannon\",\r\n  \"version\": \"0.6.2\",\r\n  \"description\": \"A lightweight 3D physics engine written in JavaScript.\",\r\n  \"homepage\": \"https://github.com/schteppe/cannon.js\",\r\n  \"author\": \"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)\",\r\n  \"keywords\": [\r\n    \"cannon.js\",\r\n    \"cannon\",\r\n    \"physics\",\r\n    \"engine\",\r\n    \"3d\"\r\n  ],\r\n  \"main\": \"./build/cannon.js\",\r\n  \"engines\": {\r\n    \"node\": \"*\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/schteppe/cannon.js.git\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/schteppe/cannon.js/issues\"\r\n  },\r\n  \"licenses\": [\r\n    {\r\n      \"type\": \"MIT\"\r\n    }\r\n  ],\r\n  \"devDependencies\": {\r\n    \"jshint\": \"latest\",\r\n    \"uglify-js\": \"latest\",\r\n    \"nodeunit\": \"^0.9.0\",\r\n    \"grunt\": \"~0.4.0\",\r\n    \"grunt-contrib-jshint\": \"~0.1.1\",\r\n    \"grunt-contrib-nodeunit\": \"^0.4.1\",\r\n    \"grunt-contrib-concat\": \"~0.1.3\",\r\n    \"grunt-contrib-uglify\": \"^0.5.1\",\r\n    \"grunt-browserify\": \"^2.1.4\",\r\n    \"grunt-contrib-yuidoc\": \"^0.5.2\",\r\n    \"browserify\": \"*\"\r\n  },\r\n  \"dependencies\": {}\r\n}\r\n\r\n},{}],2:[function(_dereq_,module,exports){\r\n// Export classes\r\nmodule.exports = {\r\n    version :                       _dereq_('../package.json').version,\r\n\r\n    AABB :                          _dereq_('./collision/AABB'),\r\n    ArrayCollisionMatrix :          _dereq_('./collision/ArrayCollisionMatrix'),\r\n    Body :                          _dereq_('./objects/Body'),\r\n    Box :                           _dereq_('./shapes/Box'),\r\n    Broadphase :                    _dereq_('./collision/Broadphase'),\r\n    Constraint :                    _dereq_('./constraints/Constraint'),\r\n    ContactEquation :               _dereq_('./equations/ContactEquation'),\r\n    Narrowphase :                   _dereq_('./world/Narrowphase'),\r\n    ConeTwistConstraint :           _dereq_('./constraints/ConeTwistConstraint'),\r\n    ContactMaterial :               _dereq_('./material/ContactMaterial'),\r\n    ConvexPolyhedron :              _dereq_('./shapes/ConvexPolyhedron'),\r\n    Cylinder :                      _dereq_('./shapes/Cylinder'),\r\n    DistanceConstraint :            _dereq_('./constraints/DistanceConstraint'),\r\n    Equation :                      _dereq_('./equations/Equation'),\r\n    EventTarget :                   _dereq_('./utils/EventTarget'),\r\n    FrictionEquation :              _dereq_('./equations/FrictionEquation'),\r\n    GSSolver :                      _dereq_('./solver/GSSolver'),\r\n    GridBroadphase :                _dereq_('./collision/GridBroadphase'),\r\n    Heightfield :                   _dereq_('./shapes/Heightfield'),\r\n    HingeConstraint :               _dereq_('./constraints/HingeConstraint'),\r\n    LockConstraint :                _dereq_('./constraints/LockConstraint'),\r\n    Mat3 :                          _dereq_('./math/Mat3'),\r\n    Material :                      _dereq_('./material/Material'),\r\n    NaiveBroadphase :               _dereq_('./collision/NaiveBroadphase'),\r\n    ObjectCollisionMatrix :         _dereq_('./collision/ObjectCollisionMatrix'),\r\n    Pool :                          _dereq_('./utils/Pool'),\r\n    Particle :                      _dereq_('./shapes/Particle'),\r\n    Plane :                         _dereq_('./shapes/Plane'),\r\n    PointToPointConstraint :        _dereq_('./constraints/PointToPointConstraint'),\r\n    Quaternion :                    _dereq_('./math/Quaternion'),\r\n    Ray :                           _dereq_('./collision/Ray'),\r\n    RaycastVehicle :                _dereq_('./objects/RaycastVehicle'),\r\n    RaycastResult :                 _dereq_('./collision/RaycastResult'),\r\n    RigidVehicle :                  _dereq_('./objects/RigidVehicle'),\r\n    RotationalEquation :            _dereq_('./equations/RotationalEquation'),\r\n    RotationalMotorEquation :       _dereq_('./equations/RotationalMotorEquation'),\r\n    SAPBroadphase :                 _dereq_('./collision/SAPBroadphase'),\r\n    SPHSystem :                     _dereq_('./objects/SPHSystem'),\r\n    Shape :                         _dereq_('./shapes/Shape'),\r\n    Solver :                        _dereq_('./solver/Solver'),\r\n    Sphere :                        _dereq_('./shapes/Sphere'),\r\n    SplitSolver :                   _dereq_('./solver/SplitSolver'),\r\n    Spring :                        _dereq_('./objects/Spring'),\r\n    Trimesh :                       _dereq_('./shapes/Trimesh'),\r\n    Vec3 :                          _dereq_('./math/Vec3'),\r\n    Vec3Pool :                      _dereq_('./utils/Vec3Pool'),\r\n    World :                         _dereq_('./world/World'),\r\n};\r\n\r\n},{\"../package.json\":1,\"./collision/AABB\":3,\"./collision/ArrayCollisionMatrix\":4,\"./collision/Broadphase\":5,\"./collision/GridBroadphase\":6,\"./collision/NaiveBroadphase\":7,\"./collision/ObjectCollisionMatrix\":8,\"./collision/Ray\":9,\"./collision/RaycastResult\":10,\"./collision/SAPBroadphase\":11,\"./constraints/ConeTwistConstraint\":12,\"./constraints/Constraint\":13,\"./constraints/DistanceConstraint\":14,\"./constraints/HingeConstraint\":15,\"./constraints/LockConstraint\":16,\"./constraints/PointToPointConstraint\":17,\"./equations/ContactEquation\":19,\"./equations/Equation\":20,\"./equations/FrictionEquation\":21,\"./equations/RotationalEquation\":22,\"./equations/RotationalMotorEquation\":23,\"./material/ContactMaterial\":24,\"./material/Material\":25,\"./math/Mat3\":27,\"./math/Quaternion\":28,\"./math/Vec3\":30,\"./objects/Body\":31,\"./objects/RaycastVehicle\":32,\"./objects/RigidVehicle\":33,\"./objects/SPHSystem\":34,\"./objects/Spring\":35,\"./shapes/Box\":37,\"./shapes/ConvexPolyhedron\":38,\"./shapes/Cylinder\":39,\"./shapes/Heightfield\":40,\"./shapes/Particle\":41,\"./shapes/Plane\":42,\"./shapes/Shape\":43,\"./shapes/Sphere\":44,\"./shapes/Trimesh\":45,\"./solver/GSSolver\":46,\"./solver/Solver\":47,\"./solver/SplitSolver\":48,\"./utils/EventTarget\":49,\"./utils/Pool\":51,\"./utils/Vec3Pool\":54,\"./world/Narrowphase\":55,\"./world/World\":56}],3:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = AABB;\r\n\r\n/**\r\n * Axis aligned bounding box class.\r\n * @class AABB\r\n * @constructor\r\n * @param {Object} [options]\r\n * @param {Vec3}   [options.upperBound]\r\n * @param {Vec3}   [options.lowerBound]\r\n */\r\nfunction AABB(options){\r\n    options = options || {};\r\n\r\n    /**\r\n     * The lower bound of the bounding box.\r\n     * @property lowerBound\r\n     * @type {Vec3}\r\n     */\r\n    this.lowerBound = new Vec3();\r\n    if(options.lowerBound){\r\n        this.lowerBound.copy(options.lowerBound);\r\n    }\r\n\r\n    /**\r\n     * The upper bound of the bounding box.\r\n     * @property upperBound\r\n     * @type {Vec3}\r\n     */\r\n    this.upperBound = new Vec3();\r\n    if(options.upperBound){\r\n        this.upperBound.copy(options.upperBound);\r\n    }\r\n}\r\n\r\nvar tmp = new Vec3();\r\n\r\n/**\r\n * Set the AABB bounds from a set of points.\r\n * @method setFromPoints\r\n * @param {Array} points An array of Vec3's.\r\n * @param {Vec3} position\r\n * @param {Quaternion} quaternion\r\n * @param {number} skinSize\r\n * @return {AABB} The self object\r\n */\r\nAABB.prototype.setFromPoints = function(points, position, quaternion, skinSize){\r\n    var l = this.lowerBound,\r\n        u = this.upperBound,\r\n        q = quaternion;\r\n\r\n    // Set to the first point\r\n    l.copy(points[0]);\r\n    if(q){\r\n        q.vmult(l, l);\r\n    }\r\n    u.copy(l);\r\n\r\n    for(var i = 1; i<points.length; i++){\r\n        var p = points[i];\r\n\r\n        if(q){\r\n            q.vmult(p, tmp);\r\n            p = tmp;\r\n        }\r\n\r\n        if(p.x > u.x){ u.x = p.x; }\r\n        if(p.x < l.x){ l.x = p.x; }\r\n        if(p.y > u.y){ u.y = p.y; }\r\n        if(p.y < l.y){ l.y = p.y; }\r\n        if(p.z > u.z){ u.z = p.z; }\r\n        if(p.z < l.z){ l.z = p.z; }\r\n    }\r\n\r\n    // Add offset\r\n    if (position) {\r\n        position.vadd(l, l);\r\n        position.vadd(u, u);\r\n    }\r\n\r\n    if(skinSize){\r\n        l.x -= skinSize;\r\n        l.y -= skinSize;\r\n        l.z -= skinSize;\r\n        u.x += skinSize;\r\n        u.y += skinSize;\r\n        u.z += skinSize;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Copy bounds from an AABB to this AABB\r\n * @method copy\r\n * @param  {AABB} aabb Source to copy from\r\n * @return {AABB} The this object, for chainability\r\n */\r\nAABB.prototype.copy = function(aabb){\r\n    this.lowerBound.copy(aabb.lowerBound);\r\n    this.upperBound.copy(aabb.upperBound);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Clone an AABB\r\n * @method clone\r\n */\r\nAABB.prototype.clone = function(){\r\n    return new AABB().copy(this);\r\n};\r\n\r\n/**\r\n * Extend this AABB so that it covers the given AABB too.\r\n * @method extend\r\n * @param  {AABB} aabb\r\n */\r\nAABB.prototype.extend = function(aabb){\r\n    // Extend lower bound\r\n    var l = aabb.lowerBound.x;\r\n    if(this.lowerBound.x > l){\r\n        this.lowerBound.x = l;\r\n    }\r\n\r\n    // Upper\r\n    var u = aabb.upperBound.x;\r\n    if(this.upperBound.x < u){\r\n        this.upperBound.x = u;\r\n    }\r\n\r\n    // Extend lower bound\r\n    var l = aabb.lowerBound.y;\r\n    if(this.lowerBound.y > l){\r\n        this.lowerBound.y = l;\r\n    }\r\n\r\n    // Upper\r\n    var u = aabb.upperBound.y;\r\n    if(this.upperBound.y < u){\r\n        this.upperBound.y = u;\r\n    }\r\n\r\n    // Extend lower bound\r\n    var l = aabb.lowerBound.z;\r\n    if(this.lowerBound.z > l){\r\n        this.lowerBound.z = l;\r\n    }\r\n\r\n    // Upper\r\n    var u = aabb.upperBound.z;\r\n    if(this.upperBound.z < u){\r\n        this.upperBound.z = u;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns true if the given AABB overlaps this AABB.\r\n * @method overlaps\r\n * @param  {AABB} aabb\r\n * @return {Boolean}\r\n */\r\nAABB.prototype.overlaps = function(aabb){\r\n    var l1 = this.lowerBound,\r\n        u1 = this.upperBound,\r\n        l2 = aabb.lowerBound,\r\n        u2 = aabb.upperBound;\r\n\r\n    //      l2        u2\r\n    //      |---------|\r\n    // |--------|\r\n    // l1       u1\r\n\r\n    return ((l2.x <= u1.x && u1.x <= u2.x) || (l1.x <= u2.x && u2.x <= u1.x)) &&\r\n           ((l2.y <= u1.y && u1.y <= u2.y) || (l1.y <= u2.y && u2.y <= u1.y)) &&\r\n           ((l2.z <= u1.z && u1.z <= u2.z) || (l1.z <= u2.z && u2.z <= u1.z));\r\n};\r\n\r\n/**\r\n * Returns true if the given AABB is fully contained in this AABB.\r\n * @method contains\r\n * @param {AABB} aabb\r\n * @return {Boolean}\r\n */\r\nAABB.prototype.contains = function(aabb){\r\n    var l1 = this.lowerBound,\r\n        u1 = this.upperBound,\r\n        l2 = aabb.lowerBound,\r\n        u2 = aabb.upperBound;\r\n\r\n    //      l2        u2\r\n    //      |---------|\r\n    // |---------------|\r\n    // l1              u1\r\n\r\n    return (\r\n        (l1.x <= l2.x && u1.x >= u2.x) &&\r\n        (l1.y <= l2.y && u1.y >= u2.y) &&\r\n        (l1.z <= l2.z && u1.z >= u2.z)\r\n    );\r\n};\r\n\r\n/**\r\n * @method getCorners\r\n * @param {Vec3} a\r\n * @param {Vec3} b\r\n * @param {Vec3} c\r\n * @param {Vec3} d\r\n * @param {Vec3} e\r\n * @param {Vec3} f\r\n * @param {Vec3} g\r\n * @param {Vec3} h\r\n */\r\nAABB.prototype.getCorners = function(a, b, c, d, e, f, g, h){\r\n    var l = this.lowerBound,\r\n        u = this.upperBound;\r\n\r\n    a.copy(l);\r\n    b.set( u.x, l.y, l.z );\r\n    c.set( u.x, u.y, l.z );\r\n    d.set( l.x, u.y, u.z );\r\n    e.set( u.x, l.y, l.z );\r\n    f.set( l.x, u.y, l.z );\r\n    g.set( l.x, l.y, u.z );\r\n    h.copy(u);\r\n};\r\n\r\nvar transformIntoFrame_corners = [\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3()\r\n];\r\n\r\n/**\r\n * Get the representation of an AABB in another frame.\r\n * @method toLocalFrame\r\n * @param  {Transform} frame\r\n * @param  {AABB} target\r\n * @return {AABB} The \"target\" AABB object.\r\n */\r\nAABB.prototype.toLocalFrame = function(frame, target){\r\n\r\n    var corners = transformIntoFrame_corners;\r\n    var a = corners[0];\r\n    var b = corners[1];\r\n    var c = corners[2];\r\n    var d = corners[3];\r\n    var e = corners[4];\r\n    var f = corners[5];\r\n    var g = corners[6];\r\n    var h = corners[7];\r\n\r\n    // Get corners in current frame\r\n    this.getCorners(a, b, c, d, e, f, g, h);\r\n\r\n    // Transform them to new local frame\r\n    for(var i=0; i !== 8; i++){\r\n        var corner = corners[i];\r\n        frame.pointToLocal(corner, corner);\r\n    }\r\n\r\n    return target.setFromPoints(corners);\r\n};\r\n\r\n/**\r\n * Get the representation of an AABB in the global frame.\r\n * @method toWorldFrame\r\n * @param  {Transform} frame\r\n * @param  {AABB} target\r\n * @return {AABB} The \"target\" AABB object.\r\n */\r\nAABB.prototype.toWorldFrame = function(frame, target){\r\n\r\n    var corners = transformIntoFrame_corners;\r\n    var a = corners[0];\r\n    var b = corners[1];\r\n    var c = corners[2];\r\n    var d = corners[3];\r\n    var e = corners[4];\r\n    var f = corners[5];\r\n    var g = corners[6];\r\n    var h = corners[7];\r\n\r\n    // Get corners in current frame\r\n    this.getCorners(a, b, c, d, e, f, g, h);\r\n\r\n    // Transform them to new local frame\r\n    for(var i=0; i !== 8; i++){\r\n        var corner = corners[i];\r\n        frame.pointToWorld(corner, corner);\r\n    }\r\n\r\n    return target.setFromPoints(corners);\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"../utils/Utils\":53}],4:[function(_dereq_,module,exports){\r\nmodule.exports = ArrayCollisionMatrix;\r\n\r\n/**\r\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\r\n * @class ArrayCollisionMatrix\r\n * @constructor\r\n */\r\nfunction ArrayCollisionMatrix() {\r\n\r\n    /**\r\n     * The matrix storage\r\n     * @property matrix\r\n     * @type {Array}\r\n     */\r\n\tthis.matrix = [];\r\n}\r\n\r\n/**\r\n * Get an element\r\n * @method get\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @return {Number}\r\n */\r\nArrayCollisionMatrix.prototype.get = function(i, j) {\r\n\ti = i.index;\r\n\tj = j.index;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n\treturn this.matrix[(i*(i + 1)>>1) + j-1];\r\n};\r\n\r\n/**\r\n * Set an element\r\n * @method set\r\n * @param {Number} i\r\n * @param {Number} j\r\n * @param {Number} value\r\n */\r\nArrayCollisionMatrix.prototype.set = function(i, j, value) {\r\n\ti = i.index;\r\n\tj = j.index;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n\tthis.matrix[(i*(i + 1)>>1) + j-1] = value ? 1 : 0;\r\n};\r\n\r\n/**\r\n * Sets all elements to zero\r\n * @method reset\r\n */\r\nArrayCollisionMatrix.prototype.reset = function() {\r\n\tfor (var i=0, l=this.matrix.length; i!==l; i++) {\r\n\t\tthis.matrix[i]=0;\r\n\t}\r\n};\r\n\r\n/**\r\n * Sets the max number of objects\r\n * @method setNumObjects\r\n * @param {Number} n\r\n */\r\nArrayCollisionMatrix.prototype.setNumObjects = function(n) {\r\n\tthis.matrix.length = n*(n-1)>>1;\r\n};\r\n\r\n},{}],5:[function(_dereq_,module,exports){\r\nvar Body = _dereq_('../objects/Body');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Plane = _dereq_('../shapes/Plane');\r\n\r\nmodule.exports = Broadphase;\r\n\r\n/**\r\n * Base class for broadphase implementations\r\n * @class Broadphase\r\n * @constructor\r\n * @author schteppe\r\n */\r\nfunction Broadphase(){\r\n    /**\r\n    * The world to search for collisions in.\r\n    * @property world\r\n    * @type {World}\r\n    */\r\n    this.world = null;\r\n\r\n    /**\r\n     * If set to true, the broadphase uses bounding boxes for intersection test, else it uses bounding spheres.\r\n     * @property useBoundingBoxes\r\n     * @type {Boolean}\r\n     */\r\n    this.useBoundingBoxes = false;\r\n\r\n    /**\r\n     * Set to true if the objects in the world moved.\r\n     * @property {Boolean} dirty\r\n     */\r\n    this.dirty = true;\r\n}\r\n\r\n/**\r\n * Get the collision pairs from the world\r\n * @method collisionPairs\r\n * @param {World} world The world to search in\r\n * @param {Array} p1 Empty array to be filled with body objects\r\n * @param {Array} p2 Empty array to be filled with body objects\r\n */\r\nBroadphase.prototype.collisionPairs = function(world,p1,p2){\r\n    throw new Error(\"collisionPairs not implemented for this BroadPhase class!\");\r\n};\r\n\r\n/**\r\n * Check if a body pair needs to be intersection tested at all.\r\n * @method needBroadphaseCollision\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @return {bool}\r\n */\r\nvar Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC = Body.STATIC | Body.KINEMATIC;\r\nBroadphase.prototype.needBroadphaseCollision = function(bodyA,bodyB){\r\n\r\n    // Check collision filter masks\r\n    if( (bodyA.collisionFilterGroup & bodyB.collisionFilterMask)===0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask)===0){\r\n        return false;\r\n    }\r\n\r\n    // Check types\r\n    if(((bodyA.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyA.sleepState === Body.SLEEPING) &&\r\n       ((bodyB.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyB.sleepState === Body.SLEEPING)) {\r\n        // Both bodies are static, kinematic or sleeping. Skip.\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Check if the bounding volumes of two bodies intersect.\r\n * @method intersectionTest\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {array} pairs1\r\n * @param {array} pairs2\r\n  */\r\nBroadphase.prototype.intersectionTest = function(bodyA, bodyB, pairs1, pairs2){\r\n    if(this.useBoundingBoxes){\r\n        this.doBoundingBoxBroadphase(bodyA,bodyB,pairs1,pairs2);\r\n    } else {\r\n        this.doBoundingSphereBroadphase(bodyA,bodyB,pairs1,pairs2);\r\n    }\r\n};\r\n\r\n/**\r\n * Check if the bounding spheres of two bodies are intersecting.\r\n * @method doBoundingSphereBroadphase\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Array} pairs1 bodyA is appended to this array if intersection\r\n * @param {Array} pairs2 bodyB is appended to this array if intersection\r\n */\r\nvar Broadphase_collisionPairs_r = new Vec3(), // Temp objects\r\n    Broadphase_collisionPairs_normal =  new Vec3(),\r\n    Broadphase_collisionPairs_quat =  new Quaternion(),\r\n    Broadphase_collisionPairs_relpos  =  new Vec3();\r\nBroadphase.prototype.doBoundingSphereBroadphase = function(bodyA,bodyB,pairs1,pairs2){\r\n    var r = Broadphase_collisionPairs_r;\r\n    bodyB.position.vsub(bodyA.position,r);\r\n    var boundingRadiusSum2 = Math.pow(bodyA.boundingRadius + bodyB.boundingRadius, 2);\r\n    var norm2 = r.norm2();\r\n    if(norm2 < boundingRadiusSum2){\r\n        pairs1.push(bodyA);\r\n        pairs2.push(bodyB);\r\n    }\r\n};\r\n\r\n/**\r\n * Check if the bounding boxes of two bodies are intersecting.\r\n * @method doBoundingBoxBroadphase\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nBroadphase.prototype.doBoundingBoxBroadphase = function(bodyA,bodyB,pairs1,pairs2){\r\n    if(bodyA.aabbNeedsUpdate){\r\n        bodyA.computeAABB();\r\n    }\r\n    if(bodyB.aabbNeedsUpdate){\r\n        bodyB.computeAABB();\r\n    }\r\n\r\n    // Check AABB / AABB\r\n    if(bodyA.aabb.overlaps(bodyB.aabb)){\r\n        pairs1.push(bodyA);\r\n        pairs2.push(bodyB);\r\n    }\r\n};\r\n\r\n/**\r\n * Removes duplicate pairs from the pair arrays.\r\n * @method makePairsUnique\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nvar Broadphase_makePairsUnique_temp = { keys:[] },\r\n    Broadphase_makePairsUnique_p1 = [],\r\n    Broadphase_makePairsUnique_p2 = [];\r\nBroadphase.prototype.makePairsUnique = function(pairs1,pairs2){\r\n    var t = Broadphase_makePairsUnique_temp,\r\n        p1 = Broadphase_makePairsUnique_p1,\r\n        p2 = Broadphase_makePairsUnique_p2,\r\n        N = pairs1.length;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        p1[i] = pairs1[i];\r\n        p2[i] = pairs2[i];\r\n    }\r\n\r\n    pairs1.length = 0;\r\n    pairs2.length = 0;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var id1 = p1[i].id,\r\n            id2 = p2[i].id;\r\n        var key = id1 < id2 ? id1+\",\"+id2 :  id2+\",\"+id1;\r\n        t[key] = i;\r\n        t.keys.push(key);\r\n    }\r\n\r\n    for(var i=0; i!==t.keys.length; i++){\r\n        var key = t.keys.pop(),\r\n            pairIndex = t[key];\r\n        pairs1.push(p1[pairIndex]);\r\n        pairs2.push(p2[pairIndex]);\r\n        delete t[key];\r\n    }\r\n};\r\n\r\n/**\r\n * To be implemented by subcasses\r\n * @method setWorld\r\n * @param {World} world\r\n */\r\nBroadphase.prototype.setWorld = function(world){\r\n};\r\n\r\n/**\r\n * Check if the bounding spheres of two bodies overlap.\r\n * @method boundingSphereCheck\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @return {boolean}\r\n */\r\nvar bsc_dist = new Vec3();\r\nBroadphase.boundingSphereCheck = function(bodyA,bodyB){\r\n    var dist = bsc_dist;\r\n    bodyA.position.vsub(bodyB.position,dist);\r\n    return Math.pow(bodyA.shape.boundingSphereRadius + bodyB.shape.boundingSphereRadius,2) > dist.norm2();\r\n};\r\n\r\n/**\r\n * Returns all the bodies within the AABB.\r\n * @method aabbQuery\r\n * @param  {World} world\r\n * @param  {AABB} aabb\r\n * @param  {array} result An array to store resulting bodies in.\r\n * @return {array}\r\n */\r\nBroadphase.prototype.aabbQuery = function(world, aabb, result){\r\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\r\n    return [];\r\n};\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Plane\":42,\"../shapes/Shape\":43}],6:[function(_dereq_,module,exports){\r\nmodule.exports = GridBroadphase;\r\n\r\nvar Broadphase = _dereq_('./Broadphase');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Shape = _dereq_('../shapes/Shape');\r\n\r\n/**\r\n * Axis aligned uniform grid broadphase.\r\n * @class GridBroadphase\r\n * @constructor\r\n * @extends Broadphase\r\n * @todo Needs support for more than just planes and spheres.\r\n * @param {Vec3} aabbMin\r\n * @param {Vec3} aabbMax\r\n * @param {Number} nx Number of boxes along x\r\n * @param {Number} ny Number of boxes along y\r\n * @param {Number} nz Number of boxes along z\r\n */\r\nfunction GridBroadphase(aabbMin,aabbMax,nx,ny,nz){\r\n    Broadphase.apply(this);\r\n    this.nx = nx || 10;\r\n    this.ny = ny || 10;\r\n    this.nz = nz || 10;\r\n    this.aabbMin = aabbMin || new Vec3(100,100,100);\r\n    this.aabbMax = aabbMax || new Vec3(-100,-100,-100);\r\n\tvar nbins = this.nx * this.ny * this.nz;\r\n\tif (nbins <= 0) {\r\n\t\tthrow \"GridBroadphase: Each dimension's n must be >0\";\r\n\t}\r\n    this.bins = [];\r\n\tthis.binLengths = []; //Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\r\n\tthis.bins.length = nbins;\r\n\tthis.binLengths.length = nbins;\r\n\tfor (var i=0;i<nbins;i++) {\r\n\t\tthis.bins[i]=[];\r\n\t\tthis.binLengths[i]=0;\r\n\t}\r\n}\r\nGridBroadphase.prototype = new Broadphase();\r\nGridBroadphase.prototype.constructor = GridBroadphase;\r\n\r\n/**\r\n * Get all the collision pairs in the physics world\r\n * @method collisionPairs\r\n * @param {World} world\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nvar GridBroadphase_collisionPairs_d = new Vec3();\r\nvar GridBroadphase_collisionPairs_binPos = new Vec3();\r\nGridBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\r\n    var N = world.numObjects(),\r\n        bodies = world.bodies;\r\n\r\n    var max = this.aabbMax,\r\n        min = this.aabbMin,\r\n        nx = this.nx,\r\n        ny = this.ny,\r\n        nz = this.nz;\r\n\r\n\tvar xstep = ny*nz;\r\n\tvar ystep = nz;\r\n\tvar zstep = 1;\r\n\r\n    var xmax = max.x,\r\n        ymax = max.y,\r\n        zmax = max.z,\r\n        xmin = min.x,\r\n        ymin = min.y,\r\n        zmin = min.z;\r\n\r\n    var xmult = nx / (xmax-xmin),\r\n        ymult = ny / (ymax-ymin),\r\n        zmult = nz / (zmax-zmin);\r\n\r\n    var binsizeX = (xmax - xmin) / nx,\r\n        binsizeY = (ymax - ymin) / ny,\r\n        binsizeZ = (zmax - zmin) / nz;\r\n\r\n\tvar binRadius = Math.sqrt(binsizeX*binsizeX + binsizeY*binsizeY + binsizeZ*binsizeZ) * 0.5;\r\n\r\n    var types = Shape.types;\r\n    var SPHERE =            types.SPHERE,\r\n        PLANE =             types.PLANE,\r\n        BOX =               types.BOX,\r\n        COMPOUND =          types.COMPOUND,\r\n        CONVEXPOLYHEDRON =  types.CONVEXPOLYHEDRON;\r\n\r\n    var bins=this.bins,\r\n\t\tbinLengths=this.binLengths,\r\n        Nbins=this.bins.length;\r\n\r\n    // Reset bins\r\n    for(var i=0; i!==Nbins; i++){\r\n        binLengths[i] = 0;\r\n    }\r\n\r\n    var ceil = Math.ceil;\r\n\tvar min = Math.min;\r\n\tvar max = Math.max;\r\n\r\n\tfunction addBoxToBins(x0,y0,z0,x1,y1,z1,bi) {\r\n\t\tvar xoff0 = ((x0 - xmin) * xmult)|0,\r\n\t\t\tyoff0 = ((y0 - ymin) * ymult)|0,\r\n\t\t\tzoff0 = ((z0 - zmin) * zmult)|0,\r\n\t\t\txoff1 = ceil((x1 - xmin) * xmult),\r\n\t\t\tyoff1 = ceil((y1 - ymin) * ymult),\r\n\t\t\tzoff1 = ceil((z1 - zmin) * zmult);\r\n\r\n\t\tif (xoff0 < 0) { xoff0 = 0; } else if (xoff0 >= nx) { xoff0 = nx - 1; }\r\n\t\tif (yoff0 < 0) { yoff0 = 0; } else if (yoff0 >= ny) { yoff0 = ny - 1; }\r\n\t\tif (zoff0 < 0) { zoff0 = 0; } else if (zoff0 >= nz) { zoff0 = nz - 1; }\r\n\t\tif (xoff1 < 0) { xoff1 = 0; } else if (xoff1 >= nx) { xoff1 = nx - 1; }\r\n\t\tif (yoff1 < 0) { yoff1 = 0; } else if (yoff1 >= ny) { yoff1 = ny - 1; }\r\n\t\tif (zoff1 < 0) { zoff1 = 0; } else if (zoff1 >= nz) { zoff1 = nz - 1; }\r\n\r\n\t\txoff0 *= xstep;\r\n\t\tyoff0 *= ystep;\r\n\t\tzoff0 *= zstep;\r\n\t\txoff1 *= xstep;\r\n\t\tyoff1 *= ystep;\r\n\t\tzoff1 *= zstep;\r\n\r\n\t\tfor (var xoff = xoff0; xoff <= xoff1; xoff += xstep) {\r\n\t\t\tfor (var yoff = yoff0; yoff <= yoff1; yoff += ystep) {\r\n\t\t\t\tfor (var zoff = zoff0; zoff <= zoff1; zoff += zstep) {\r\n\t\t\t\t\tvar idx = xoff+yoff+zoff;\r\n\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    // Put all bodies into the bins\r\n    for(var i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        var si = bi.shape;\r\n\r\n        switch(si.type){\r\n        case SPHERE:\r\n            // Put in bin\r\n            // check if overlap with other bins\r\n            var x = bi.position.x,\r\n                y = bi.position.y,\r\n                z = bi.position.z;\r\n            var r = si.radius;\r\n\r\n\t\t\taddBoxToBins(x-r, y-r, z-r, x+r, y+r, z+r, bi);\r\n            break;\r\n\r\n        case PLANE:\r\n            if(si.worldNormalNeedsUpdate){\r\n                si.computeWorldNormal(bi.quaternion);\r\n            }\r\n            var planeNormal = si.worldNormal;\r\n\r\n\t\t\t//Relative position from origin of plane object to the first bin\r\n\t\t\t//Incremented as we iterate through the bins\r\n\t\t\tvar xreset = xmin + binsizeX*0.5 - bi.position.x,\r\n\t\t\t\tyreset = ymin + binsizeY*0.5 - bi.position.y,\r\n\t\t\t\tzreset = zmin + binsizeZ*0.5 - bi.position.z;\r\n\r\n            var d = GridBroadphase_collisionPairs_d;\r\n\t\t\td.set(xreset, yreset, zreset);\r\n\r\n\t\t\tfor (var xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\r\n\t\t\t\tfor (var yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\r\n\t\t\t\t\tfor (var zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\r\n\t\t\t\t\t\tif (d.dot(planeNormal) < binRadius) {\r\n\t\t\t\t\t\t\tvar idx = xoff + yoff + zoff;\r\n\t\t\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n            break;\r\n\r\n        default:\r\n\t\t\tif (bi.aabbNeedsUpdate) {\r\n\t\t\t\tbi.computeAABB();\r\n\t\t\t}\r\n\r\n\t\t\taddBoxToBins(\r\n\t\t\t\tbi.aabb.lowerBound.x,\r\n\t\t\t\tbi.aabb.lowerBound.y,\r\n\t\t\t\tbi.aabb.lowerBound.z,\r\n\t\t\t\tbi.aabb.upperBound.x,\r\n\t\t\t\tbi.aabb.upperBound.y,\r\n\t\t\t\tbi.aabb.upperBound.z,\r\n\t\t\t\tbi);\r\n            break;\r\n        }\r\n    }\r\n\r\n    // Check each bin\r\n    for(var i=0; i!==Nbins; i++){\r\n\t\tvar binLength = binLengths[i];\r\n\t\t//Skip bins with no potential collisions\r\n\t\tif (binLength > 1) {\r\n\t\t\tvar bin = bins[i];\r\n\r\n\t\t\t// Do N^2 broadphase inside\r\n\t\t\tfor(var xi=0; xi!==binLength; xi++){\r\n\t\t\t\tvar bi = bin[xi];\r\n\t\t\t\tfor(var yi=0; yi!==xi; yi++){\r\n\t\t\t\t\tvar bj = bin[yi];\r\n\t\t\t\t\tif(this.needBroadphaseCollision(bi,bj)){\r\n\t\t\t\t\t\tthis.intersectionTest(bi,bj,pairs1,pairs2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n//\tfor (var zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\r\n//\t\tconsole.log(\"layer \"+zi);\r\n//\t\tfor (var yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\r\n//\t\t\tvar row = '';\r\n//\t\t\tfor (var xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\r\n//\t\t\t\tvar idx = xoff + yoff + zoff;\r\n//\t\t\t\trow += ' ' + binLengths[idx];\r\n//\t\t\t}\r\n//\t\t\tconsole.log(row);\r\n//\t\t}\r\n//\t}\r\n\r\n    this.makePairsUnique(pairs1,pairs2);\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"../shapes/Shape\":43,\"./Broadphase\":5}],7:[function(_dereq_,module,exports){\r\nmodule.exports = NaiveBroadphase;\r\n\r\nvar Broadphase = _dereq_('./Broadphase');\r\nvar AABB = _dereq_('./AABB');\r\n\r\n/**\r\n * Naive broadphase implementation, used in lack of better ones.\r\n * @class NaiveBroadphase\r\n * @constructor\r\n * @description The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 (which is bad)\r\n * @extends Broadphase\r\n */\r\nfunction NaiveBroadphase(){\r\n    Broadphase.apply(this);\r\n}\r\nNaiveBroadphase.prototype = new Broadphase();\r\nNaiveBroadphase.prototype.constructor = NaiveBroadphase;\r\n\r\n/**\r\n * Get all the collision pairs in the physics world\r\n * @method collisionPairs\r\n * @param {World} world\r\n * @param {Array} pairs1\r\n * @param {Array} pairs2\r\n */\r\nNaiveBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\r\n    var bodies = world.bodies,\r\n        n = bodies.length,\r\n        i,j,bi,bj;\r\n\r\n    // Naive N^2 ftw!\r\n    for(i=0; i!==n; i++){\r\n        for(j=0; j!==i; j++){\r\n\r\n            bi = bodies[i];\r\n            bj = bodies[j];\r\n\r\n            if(!this.needBroadphaseCollision(bi,bj)){\r\n                continue;\r\n            }\r\n\r\n            this.intersectionTest(bi,bj,pairs1,pairs2);\r\n        }\r\n    }\r\n};\r\n\r\nvar tmpAABB = new AABB();\r\n\r\n/**\r\n * Returns all the bodies within an AABB.\r\n * @method aabbQuery\r\n * @param  {World} world\r\n * @param  {AABB} aabb\r\n * @param {array} result An array to store resulting bodies in.\r\n * @return {array}\r\n */\r\nNaiveBroadphase.prototype.aabbQuery = function(world, aabb, result){\r\n    result = result || [];\r\n\r\n    for(var i = 0; i < world.bodies.length; i++){\r\n        var b = world.bodies[i];\r\n\r\n        if(b.aabbNeedsUpdate){\r\n            b.computeAABB();\r\n        }\r\n\r\n        // Ugly hack until Body gets aabb\r\n        if(b.aabb.overlaps(aabb)){\r\n            result.push(b);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n},{\"./AABB\":3,\"./Broadphase\":5}],8:[function(_dereq_,module,exports){\r\nmodule.exports = ObjectCollisionMatrix;\r\n\r\n/**\r\n * Records what objects are colliding with each other\r\n * @class ObjectCollisionMatrix\r\n * @constructor\r\n */\r\nfunction ObjectCollisionMatrix() {\r\n\r\n    /**\r\n     * The matrix storage\r\n     * @property matrix\r\n     * @type {Object}\r\n     */\r\n\tthis.matrix = {};\r\n}\r\n\r\n/**\r\n * @method get\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @return {Number}\r\n */\r\nObjectCollisionMatrix.prototype.get = function(i, j) {\r\n\ti = i.id;\r\n\tj = j.id;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n\treturn i+'-'+j in this.matrix;\r\n};\r\n\r\n/**\r\n * @method set\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @param {Number} value\r\n */\r\nObjectCollisionMatrix.prototype.set = function(i, j, value) {\r\n\ti = i.id;\r\n\tj = j.id;\r\n    if (j > i) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n\t}\r\n\tif (value) {\r\n\t\tthis.matrix[i+'-'+j] = true;\r\n\t}\r\n\telse {\r\n\t\tdelete this.matrix[i+'-'+j];\r\n\t}\r\n};\r\n\r\n/**\r\n * Empty the matrix\r\n * @method reset\r\n */\r\nObjectCollisionMatrix.prototype.reset = function() {\r\n\tthis.matrix = {};\r\n};\r\n\r\n/**\r\n * Set max number of objects\r\n * @method setNumObjects\r\n * @param {Number} n\r\n */\r\nObjectCollisionMatrix.prototype.setNumObjects = function(n) {\r\n};\r\n\r\n},{}],9:[function(_dereq_,module,exports){\r\nmodule.exports = Ray;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\r\nvar Box = _dereq_('../shapes/Box');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar AABB = _dereq_('../collision/AABB');\r\n\r\n/**\r\n * A line in 3D space that intersects bodies and return points.\r\n * @class Ray\r\n * @constructor\r\n * @param {Vec3} from\r\n * @param {Vec3} to\r\n */\r\nfunction Ray(from, to){\r\n    /**\r\n     * @property {Vec3} from\r\n     */\r\n    this.from = from ? from.clone() : new Vec3();\r\n\r\n    /**\r\n     * @property {Vec3} to\r\n     */\r\n    this.to = to ? to.clone() : new Vec3();\r\n\r\n    /**\r\n     * @private\r\n     * @property {Vec3} _direction\r\n     */\r\n    this._direction = new Vec3();\r\n\r\n    /**\r\n     * The precision of the ray. Used when checking parallelity etc.\r\n     * @property {Number} precision\r\n     */\r\n    this.precision = 0.0001;\r\n\r\n    /**\r\n     * Set to true if you want the Ray to take .collisionResponse flags into account on bodies and shapes.\r\n     * @property {Boolean} checkCollisionResponse\r\n     */\r\n    this.checkCollisionResponse = true;\r\n\r\n    /**\r\n     * If set to true, the ray skips any hits with normal.dot(rayDirection) < 0.\r\n     * @property {Boolean} skipBackfaces\r\n     */\r\n    this.skipBackfaces = false;\r\n\r\n    /**\r\n     * @property {number} collisionFilterMask\r\n     * @default -1\r\n     */\r\n    this.collisionFilterMask = -1;\r\n\r\n    /**\r\n     * @property {number} collisionFilterGroup\r\n     * @default -1\r\n     */\r\n    this.collisionFilterGroup = -1;\r\n\r\n    /**\r\n     * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\r\n     * @property {number} mode\r\n     */\r\n    this.mode = Ray.ANY;\r\n\r\n    /**\r\n     * Current result object.\r\n     * @property {RaycastResult} result\r\n     */\r\n    this.result = new RaycastResult();\r\n\r\n    /**\r\n     * Will be set to true during intersectWorld() if the ray hit anything.\r\n     * @property {Boolean} hasHit\r\n     */\r\n    this.hasHit = false;\r\n\r\n    /**\r\n     * Current, user-provided result callback. Will be used if mode is Ray.ALL.\r\n     * @property {Function} callback\r\n     */\r\n    this.callback = function(result){};\r\n}\r\nRay.prototype.constructor = Ray;\r\n\r\nRay.CLOSEST = 1;\r\nRay.ANY = 2;\r\nRay.ALL = 4;\r\n\r\nvar tmpAABB = new AABB();\r\nvar tmpArray = [];\r\n\r\n/**\r\n * Do itersection against all bodies in the given World.\r\n * @method intersectWorld\r\n * @param  {World} world\r\n * @param  {object} options\r\n * @return {Boolean} True if the ray hit anything, otherwise false.\r\n */\r\nRay.prototype.intersectWorld = function (world, options) {\r\n    this.mode = options.mode || Ray.ANY;\r\n    this.result = options.result || new RaycastResult();\r\n    this.skipBackfaces = !!options.skipBackfaces;\r\n    this.collisionFilterMask = typeof(options.collisionFilterMask) !== 'undefined' ? options.collisionFilterMask : -1;\r\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) !== 'undefined' ? options.collisionFilterGroup : -1;\r\n    if(options.from){\r\n        this.from.copy(options.from);\r\n    }\r\n    if(options.to){\r\n        this.to.copy(options.to);\r\n    }\r\n    this.callback = options.callback || function(){};\r\n    this.hasHit = false;\r\n\r\n    this.result.reset();\r\n    this._updateDirection();\r\n\r\n    this.getAABB(tmpAABB);\r\n    tmpArray.length = 0;\r\n    world.broadphase.aabbQuery(world, tmpAABB, tmpArray);\r\n    this.intersectBodies(tmpArray);\r\n\r\n    return this.hasHit;\r\n};\r\n\r\nvar v1 = new Vec3(),\r\n    v2 = new Vec3();\r\n\r\n/*\r\n * As per \"Barycentric Technique\" as named here http://www.blackpawn.com/texts/pointinpoly/default.html But without the division\r\n */\r\nRay.pointInTriangle = pointInTriangle;\r\nfunction pointInTriangle(p, a, b, c) {\r\n    c.vsub(a,v0);\r\n    b.vsub(a,v1);\r\n    p.vsub(a,v2);\r\n\r\n    var dot00 = v0.dot( v0 );\r\n    var dot01 = v0.dot( v1 );\r\n    var dot02 = v0.dot( v2 );\r\n    var dot11 = v1.dot( v1 );\r\n    var dot12 = v1.dot( v2 );\r\n\r\n    var u,v;\r\n\r\n    return  ( (u = dot11 * dot02 - dot01 * dot12) >= 0 ) &&\r\n            ( (v = dot00 * dot12 - dot01 * dot02) >= 0 ) &&\r\n            ( u + v < ( dot00 * dot11 - dot01 * dot01 ) );\r\n}\r\n\r\n/**\r\n * Shoot a ray at a body, get back information about the hit.\r\n * @method intersectBody\r\n * @private\r\n * @param {Body} body\r\n * @param {RaycastResult} [result] Deprecated - set the result property of the Ray instead.\r\n */\r\nvar intersectBody_xi = new Vec3();\r\nvar intersectBody_qi = new Quaternion();\r\nRay.prototype.intersectBody = function (body, result) {\r\n    if(result){\r\n        this.result = result;\r\n        this._updateDirection();\r\n    }\r\n    var checkCollisionResponse = this.checkCollisionResponse;\r\n\r\n    if(checkCollisionResponse && !body.collisionResponse){\r\n        return;\r\n    }\r\n\r\n    if((this.collisionFilterGroup & body.collisionFilterMask)===0 || (body.collisionFilterGroup & this.collisionFilterMask)===0){\r\n        return;\r\n    }\r\n\r\n    var xi = intersectBody_xi;\r\n    var qi = intersectBody_qi;\r\n\r\n    for (var i = 0, N = body.shapes.length; i < N; i++) {\r\n        var shape = body.shapes[i];\r\n\r\n        if(checkCollisionResponse && !shape.collisionResponse){\r\n            continue; // Skip\r\n        }\r\n\r\n        body.quaternion.mult(body.shapeOrientations[i], qi);\r\n        body.quaternion.vmult(body.shapeOffsets[i], xi);\r\n        xi.vadd(body.position, xi);\r\n\r\n        this.intersectShape(\r\n            shape,\r\n            qi,\r\n            xi,\r\n            body\r\n        );\r\n\r\n        if(this.result._shouldStop){\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @method intersectBodies\r\n * @param {Array} bodies An array of Body objects.\r\n * @param {RaycastResult} [result] Deprecated\r\n */\r\nRay.prototype.intersectBodies = function (bodies, result) {\r\n    if(result){\r\n        this.result = result;\r\n        this._updateDirection();\r\n    }\r\n\r\n    for ( var i = 0, l = bodies.length; !this.result._shouldStop && i < l; i ++ ) {\r\n        this.intersectBody(bodies[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Updates the _direction vector.\r\n * @private\r\n * @method _updateDirection\r\n */\r\nRay.prototype._updateDirection = function(){\r\n    this.to.vsub(this.from, this._direction);\r\n    this._direction.normalize();\r\n};\r\n\r\n/**\r\n * @method intersectShape\r\n * @private\r\n * @param {Shape} shape\r\n * @param {Quaternion} quat\r\n * @param {Vec3} position\r\n * @param {Body} body\r\n */\r\nRay.prototype.intersectShape = function(shape, quat, position, body){\r\n    var from = this.from;\r\n\r\n\r\n    // Checking boundingSphere\r\n    var distance = distanceFromIntersection(from, this._direction, position);\r\n    if ( distance > shape.boundingSphereRadius ) {\r\n        return;\r\n    }\r\n\r\n    var intersectMethod = this[shape.type];\r\n    if(intersectMethod){\r\n        intersectMethod.call(this, shape, quat, position, body);\r\n    }\r\n};\r\n\r\nvar vector = new Vec3();\r\nvar normal = new Vec3();\r\nvar intersectPoint = new Vec3();\r\n\r\nvar a = new Vec3();\r\nvar b = new Vec3();\r\nvar c = new Vec3();\r\nvar d = new Vec3();\r\n\r\nvar tmpRaycastResult = new RaycastResult();\r\n\r\n/**\r\n * @method intersectBox\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectBox = function(shape, quat, position, body){\r\n    return this.intersectConvex(shape.convexPolyhedronRepresentation, quat, position, body);\r\n};\r\nRay.prototype[Shape.types.BOX] = Ray.prototype.intersectBox;\r\n\r\n/**\r\n * @method intersectPlane\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectPlane = function(shape, quat, position, body){\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var direction = this._direction;\r\n\r\n    // Get plane normal\r\n    var worldNormal = new Vec3(0, 0, 1);\r\n    quat.vmult(worldNormal, worldNormal);\r\n\r\n    var len = new Vec3();\r\n    from.vsub(position, len);\r\n    var planeToFrom = len.dot(worldNormal);\r\n    to.vsub(position, len);\r\n    var planeToTo = len.dot(worldNormal);\r\n\r\n    if(planeToFrom * planeToTo > 0){\r\n        // \"from\" and \"to\" are on the same side of the plane... bail out\r\n        return;\r\n    }\r\n\r\n    if(from.distanceTo(to) < planeToFrom){\r\n        return;\r\n    }\r\n\r\n    var n_dot_dir = worldNormal.dot(direction);\r\n\r\n    if (Math.abs(n_dot_dir) < this.precision) {\r\n        // No intersection\r\n        return;\r\n    }\r\n\r\n    var planePointToFrom = new Vec3();\r\n    var dir_scaled_with_t = new Vec3();\r\n    var hitPointWorld = new Vec3();\r\n\r\n    from.vsub(position, planePointToFrom);\r\n    var t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\r\n    direction.scale(t, dir_scaled_with_t);\r\n    from.vadd(dir_scaled_with_t, hitPointWorld);\r\n\r\n    this.reportIntersection(worldNormal, hitPointWorld, shape, body, -1);\r\n};\r\nRay.prototype[Shape.types.PLANE] = Ray.prototype.intersectPlane;\r\n\r\n/**\r\n * Get the world AABB of the ray.\r\n * @method getAABB\r\n * @param  {AABB} aabb\r\n */\r\nRay.prototype.getAABB = function(result){\r\n    var to = this.to;\r\n    var from = this.from;\r\n    result.lowerBound.x = Math.min(to.x, from.x);\r\n    result.lowerBound.y = Math.min(to.y, from.y);\r\n    result.lowerBound.z = Math.min(to.z, from.z);\r\n    result.upperBound.x = Math.max(to.x, from.x);\r\n    result.upperBound.y = Math.max(to.y, from.y);\r\n    result.upperBound.z = Math.max(to.z, from.z);\r\n};\r\n\r\nvar intersectConvexOptions = {\r\n    faceList: [0]\r\n};\r\n\r\n/**\r\n * @method intersectHeightfield\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectHeightfield = function(shape, quat, position, body){\r\n    var data = shape.data,\r\n        w = shape.elementSize,\r\n        worldPillarOffset = new Vec3();\r\n\r\n    // Convert the ray to local heightfield coordinates\r\n    var localRay = new Ray(this.from, this.to);\r\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\r\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\r\n\r\n    // Get the index of the data points to test against\r\n    var index = [];\r\n    var iMinX = null;\r\n    var iMinY = null;\r\n    var iMaxX = null;\r\n    var iMaxY = null;\r\n\r\n    var inside = shape.getIndexOfPosition(localRay.from.x, localRay.from.y, index, false);\r\n    if(inside){\r\n        iMinX = index[0];\r\n        iMinY = index[1];\r\n        iMaxX = index[0];\r\n        iMaxY = index[1];\r\n    }\r\n    inside = shape.getIndexOfPosition(localRay.to.x, localRay.to.y, index, false);\r\n    if(inside){\r\n        if (iMinX === null || index[0] < iMinX) { iMinX = index[0]; }\r\n        if (iMaxX === null || index[0] > iMaxX) { iMaxX = index[0]; }\r\n        if (iMinY === null || index[1] < iMinY) { iMinY = index[1]; }\r\n        if (iMaxY === null || index[1] > iMaxY) { iMaxY = index[1]; }\r\n    }\r\n\r\n    if(iMinX === null){\r\n        return;\r\n    }\r\n\r\n    var minMax = [];\r\n    shape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    var min = minMax[0];\r\n    var max = minMax[1];\r\n\r\n    // // Bail out if the ray can't touch the bounding box\r\n    // // TODO\r\n    // var aabb = new AABB();\r\n    // this.getAABB(aabb);\r\n    // if(aabb.intersects()){\r\n    //     return;\r\n    // }\r\n\r\n    for(var i = iMinX; i <= iMaxX; i++){\r\n        for(var j = iMinY; j <= iMaxY; j++){\r\n\r\n            if(this.result._shouldStop){\r\n                return;\r\n            }\r\n\r\n            // Lower triangle\r\n            shape.getConvexTrianglePillar(i, j, false);\r\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\r\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\r\n\r\n            if(this.result._shouldStop){\r\n                return;\r\n            }\r\n\r\n            // Upper triangle\r\n            shape.getConvexTrianglePillar(i, j, true);\r\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\r\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\r\n        }\r\n    }\r\n};\r\nRay.prototype[Shape.types.HEIGHTFIELD] = Ray.prototype.intersectHeightfield;\r\n\r\nvar Ray_intersectSphere_intersectionPoint = new Vec3();\r\nvar Ray_intersectSphere_normal = new Vec3();\r\n\r\n/**\r\n * @method intersectSphere\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n */\r\nRay.prototype.intersectSphere = function(shape, quat, position, body){\r\n    var from = this.from,\r\n        to = this.to,\r\n        r = shape.radius;\r\n\r\n    var a = Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2) + Math.pow(to.z - from.z, 2);\r\n    var b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\r\n    var c = Math.pow(from.x - position.x, 2) + Math.pow(from.y - position.y, 2) + Math.pow(from.z - position.z, 2) - Math.pow(r, 2);\r\n\r\n    var delta = Math.pow(b, 2) - 4 * a * c;\r\n\r\n    var intersectionPoint = Ray_intersectSphere_intersectionPoint;\r\n    var normal = Ray_intersectSphere_normal;\r\n\r\n    if(delta < 0){\r\n        // No intersection\r\n        return;\r\n\r\n    } else if(delta === 0){\r\n        // single intersection point\r\n        from.lerp(to, delta, intersectionPoint);\r\n\r\n        intersectionPoint.vsub(position, normal);\r\n        normal.normalize();\r\n\r\n        this.reportIntersection(normal, intersectionPoint, shape, body, -1);\r\n\r\n    } else {\r\n        var d1 = (- b - Math.sqrt(delta)) / (2 * a);\r\n        var d2 = (- b + Math.sqrt(delta)) / (2 * a);\r\n\r\n        if(d1 >= 0 && d1 <= 1){\r\n            from.lerp(to, d1, intersectionPoint);\r\n            intersectionPoint.vsub(position, normal);\r\n            normal.normalize();\r\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\r\n        }\r\n\r\n        if(this.result._shouldStop){\r\n            return;\r\n        }\r\n\r\n        if(d2 >= 0 && d2 <= 1){\r\n            from.lerp(to, d2, intersectionPoint);\r\n            intersectionPoint.vsub(position, normal);\r\n            normal.normalize();\r\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\r\n        }\r\n    }\r\n};\r\nRay.prototype[Shape.types.SPHERE] = Ray.prototype.intersectSphere;\r\n\r\n\r\nvar intersectConvex_normal = new Vec3();\r\nvar intersectConvex_minDistNormal = new Vec3();\r\nvar intersectConvex_minDistIntersect = new Vec3();\r\nvar intersectConvex_vector = new Vec3();\r\n\r\n/**\r\n * @method intersectConvex\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n * @param {object} [options]\r\n * @param {array} [options.faceList]\r\n */\r\nRay.prototype.intersectConvex = function intersectConvex(\r\n    shape,\r\n    quat,\r\n    position,\r\n    body,\r\n    options\r\n){\r\n    var minDistNormal = intersectConvex_minDistNormal;\r\n    var normal = intersectConvex_normal;\r\n    var vector = intersectConvex_vector;\r\n    var minDistIntersect = intersectConvex_minDistIntersect;\r\n    var faceList = (options && options.faceList) || null;\r\n\r\n    // Checking faces\r\n    var faces = shape.faces,\r\n        vertices = shape.vertices,\r\n        normals = shape.faceNormals;\r\n    var direction = this._direction;\r\n\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var fromToDistance = from.distanceTo(to);\r\n\r\n    var minDist = -1;\r\n    var Nfaces = faceList ? faceList.length : faces.length;\r\n    var result = this.result;\r\n\r\n    for (var j = 0; !result._shouldStop && j < Nfaces; j++) {\r\n        var fi = faceList ? faceList[j] : j;\r\n\r\n        var face = faces[fi];\r\n        var faceNormal = normals[fi];\r\n        var q = quat;\r\n        var x = position;\r\n\r\n        // determine if ray intersects the plane of the face\r\n        // note: this works regardless of the direction of the face normal\r\n\r\n        // Get plane point in world coordinates...\r\n        vector.copy(vertices[face[0]]);\r\n        q.vmult(vector,vector);\r\n        vector.vadd(x,vector);\r\n\r\n        // ...but make it relative to the ray from. We'll fix this later.\r\n        vector.vsub(from,vector);\r\n\r\n        // Get plane normal\r\n        q.vmult(faceNormal,normal);\r\n\r\n        // If this dot product is negative, we have something interesting\r\n        var dot = direction.dot(normal);\r\n\r\n        // Bail out if ray and plane are parallel\r\n        if ( Math.abs( dot ) < this.precision ){\r\n            continue;\r\n        }\r\n\r\n        // calc distance to plane\r\n        var scalar = normal.dot(vector) / dot;\r\n\r\n        // if negative distance, then plane is behind ray\r\n        if (scalar < 0){\r\n            continue;\r\n        }\r\n\r\n        // if (dot < 0) {\r\n\r\n        // Intersection point is from + direction * scalar\r\n        direction.mult(scalar,intersectPoint);\r\n        intersectPoint.vadd(from,intersectPoint);\r\n\r\n        // a is the point we compare points b and c with.\r\n        a.copy(vertices[face[0]]);\r\n        q.vmult(a,a);\r\n        x.vadd(a,a);\r\n\r\n        for(var i = 1; !result._shouldStop && i < face.length - 1; i++){\r\n            // Transform 3 vertices to world coords\r\n            b.copy(vertices[face[i]]);\r\n            c.copy(vertices[face[i+1]]);\r\n            q.vmult(b,b);\r\n            q.vmult(c,c);\r\n            x.vadd(b,b);\r\n            x.vadd(c,c);\r\n\r\n            var distance = intersectPoint.distanceTo(from);\r\n\r\n            if(!(pointInTriangle(intersectPoint, a, b, c) || pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance){\r\n                continue;\r\n            }\r\n\r\n            this.reportIntersection(normal, intersectPoint, shape, body, fi);\r\n        }\r\n        // }\r\n    }\r\n};\r\nRay.prototype[Shape.types.CONVEXPOLYHEDRON] = Ray.prototype.intersectConvex;\r\n\r\nvar intersectTrimesh_normal = new Vec3();\r\nvar intersectTrimesh_localDirection = new Vec3();\r\nvar intersectTrimesh_localFrom = new Vec3();\r\nvar intersectTrimesh_localTo = new Vec3();\r\nvar intersectTrimesh_worldNormal = new Vec3();\r\nvar intersectTrimesh_worldIntersectPoint = new Vec3();\r\nvar intersectTrimesh_localAABB = new AABB();\r\nvar intersectTrimesh_triangles = [];\r\nvar intersectTrimesh_treeTransform = new Transform();\r\n\r\n/**\r\n * @method intersectTrimesh\r\n * @private\r\n * @param  {Shape} shape\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} position\r\n * @param  {Body} body\r\n * @param {object} [options]\r\n * @todo Optimize by transforming the world to local space first.\r\n * @todo Use Octree lookup\r\n */\r\nRay.prototype.intersectTrimesh = function intersectTrimesh(\r\n    mesh,\r\n    quat,\r\n    position,\r\n    body,\r\n    options\r\n){\r\n    var normal = intersectTrimesh_normal;\r\n    var triangles = intersectTrimesh_triangles;\r\n    var treeTransform = intersectTrimesh_treeTransform;\r\n    var minDistNormal = intersectConvex_minDistNormal;\r\n    var vector = intersectConvex_vector;\r\n    var minDistIntersect = intersectConvex_minDistIntersect;\r\n    var localAABB = intersectTrimesh_localAABB;\r\n    var localDirection = intersectTrimesh_localDirection;\r\n    var localFrom = intersectTrimesh_localFrom;\r\n    var localTo = intersectTrimesh_localTo;\r\n    var worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\r\n    var worldNormal = intersectTrimesh_worldNormal;\r\n    var faceList = (options && options.faceList) || null;\r\n\r\n    // Checking faces\r\n    var indices = mesh.indices,\r\n        vertices = mesh.vertices,\r\n        normals = mesh.faceNormals;\r\n\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var direction = this._direction;\r\n\r\n    var minDist = -1;\r\n    treeTransform.position.copy(position);\r\n    treeTransform.quaternion.copy(quat);\r\n\r\n    // Transform ray to local space!\r\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\r\n    //body.vectorToLocalFrame(direction, localDirection);\r\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\r\n    //body.pointToLocalFrame(from, localFrom);\r\n    Transform.pointToLocalFrame(position, quat, to, localTo);\r\n    //body.pointToLocalFrame(to, localTo);\r\n    var fromToDistanceSquared = localFrom.distanceSquared(localTo);\r\n\r\n    mesh.tree.rayQuery(this, treeTransform, triangles);\r\n\r\n    for (var i = 0, N = triangles.length; !this.result._shouldStop && i !== N; i++) {\r\n        var trianglesIndex = triangles[i];\r\n\r\n        mesh.getNormal(trianglesIndex, normal);\r\n\r\n        // determine if ray intersects the plane of the face\r\n        // note: this works regardless of the direction of the face normal\r\n\r\n        // Get plane point in world coordinates...\r\n        mesh.getVertex(indices[trianglesIndex * 3], a);\r\n\r\n        // ...but make it relative to the ray from. We'll fix this later.\r\n        a.vsub(localFrom,vector);\r\n\r\n        // Get plane normal\r\n        // quat.vmult(normal, normal);\r\n\r\n        // If this dot product is negative, we have something interesting\r\n        var dot = localDirection.dot(normal);\r\n\r\n        // Bail out if ray and plane are parallel\r\n        // if (Math.abs( dot ) < this.precision){\r\n        //     continue;\r\n        // }\r\n\r\n        // calc distance to plane\r\n        var scalar = normal.dot(vector) / dot;\r\n\r\n        // if negative distance, then plane is behind ray\r\n        if (scalar < 0){\r\n            continue;\r\n        }\r\n\r\n        // Intersection point is from + direction * scalar\r\n        localDirection.scale(scalar,intersectPoint);\r\n        intersectPoint.vadd(localFrom,intersectPoint);\r\n\r\n        // Get triangle vertices\r\n        mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\r\n        mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\r\n\r\n        var squaredDistance = intersectPoint.distanceSquared(localFrom);\r\n\r\n        if(!(pointInTriangle(intersectPoint, b, a, c) || pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared){\r\n            continue;\r\n        }\r\n\r\n        // transform intersectpoint and normal to world\r\n        Transform.vectorToWorldFrame(quat, normal, worldNormal);\r\n        //body.vectorToWorldFrame(normal, worldNormal);\r\n        Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\r\n        //body.pointToWorldFrame(intersectPoint, worldIntersectPoint);\r\n        this.reportIntersection(worldNormal, worldIntersectPoint, mesh, body, trianglesIndex);\r\n    }\r\n    triangles.length = 0;\r\n};\r\nRay.prototype[Shape.types.TRIMESH] = Ray.prototype.intersectTrimesh;\r\n\r\n\r\n/**\r\n * @method reportIntersection\r\n * @private\r\n * @param  {Vec3} normal\r\n * @param  {Vec3} hitPointWorld\r\n * @param  {Shape} shape\r\n * @param  {Body} body\r\n * @return {boolean} True if the intersections should continue\r\n */\r\nRay.prototype.reportIntersection = function(normal, hitPointWorld, shape, body, hitFaceIndex){\r\n    var from = this.from;\r\n    var to = this.to;\r\n    var distance = from.distanceTo(hitPointWorld);\r\n    var result = this.result;\r\n\r\n    // Skip back faces?\r\n    if(this.skipBackfaces && normal.dot(this._direction) > 0){\r\n        return;\r\n    }\r\n\r\n    result.hitFaceIndex = typeof(hitFaceIndex) !== 'undefined' ? hitFaceIndex : -1;\r\n\r\n    switch(this.mode){\r\n    case Ray.ALL:\r\n        this.hasHit = true;\r\n        result.set(\r\n            from,\r\n            to,\r\n            normal,\r\n            hitPointWorld,\r\n            shape,\r\n            body,\r\n            distance\r\n        );\r\n        result.hasHit = true;\r\n        this.callback(result);\r\n        break;\r\n\r\n    case Ray.CLOSEST:\r\n\r\n        // Store if closer than current closest\r\n        if(distance < result.distance || !result.hasHit){\r\n            this.hasHit = true;\r\n            result.hasHit = true;\r\n            result.set(\r\n                from,\r\n                to,\r\n                normal,\r\n                hitPointWorld,\r\n                shape,\r\n                body,\r\n                distance\r\n            );\r\n        }\r\n        break;\r\n\r\n    case Ray.ANY:\r\n\r\n        // Report and stop.\r\n        this.hasHit = true;\r\n        result.hasHit = true;\r\n        result.set(\r\n            from,\r\n            to,\r\n            normal,\r\n            hitPointWorld,\r\n            shape,\r\n            body,\r\n            distance\r\n        );\r\n        result._shouldStop = true;\r\n        break;\r\n    }\r\n};\r\n\r\nvar v0 = new Vec3(),\r\n    intersect = new Vec3();\r\nfunction distanceFromIntersection(from, direction, position) {\r\n\r\n    // v0 is vector from from to position\r\n    position.vsub(from,v0);\r\n    var dot = v0.dot(direction);\r\n\r\n    // intersect = direction*dot + from\r\n    direction.mult(dot,intersect);\r\n    intersect.vadd(from,intersect);\r\n\r\n    var distance = position.distanceTo(intersect);\r\n\r\n    return distance;\r\n}\r\n\r\n\r\n},{\"../collision/AABB\":3,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43}],10:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\nmodule.exports = RaycastResult;\r\n\r\n/**\r\n * Storage for Ray casting data.\r\n * @class RaycastResult\r\n * @constructor\r\n */\r\nfunction RaycastResult(){\r\n\r\n\t/**\r\n\t * @property {Vec3} rayFromWorld\r\n\t */\r\n\tthis.rayFromWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {Vec3} rayToWorld\r\n\t */\r\n\tthis.rayToWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {Vec3} hitNormalWorld\r\n\t */\r\n\tthis.hitNormalWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {Vec3} hitPointWorld\r\n\t */\r\n\tthis.hitPointWorld = new Vec3();\r\n\r\n\t/**\r\n\t * @property {boolean} hasHit\r\n\t */\r\n\tthis.hasHit = false;\r\n\r\n\t/**\r\n\t * The hit shape, or null.\r\n\t * @property {Shape} shape\r\n\t */\r\n\tthis.shape = null;\r\n\r\n\t/**\r\n\t * The hit body, or null.\r\n\t * @property {Body} body\r\n\t */\r\n\tthis.body = null;\r\n\r\n\t/**\r\n\t * The index of the hit triangle, if the hit shape was a trimesh.\r\n\t * @property {number} hitFaceIndex\r\n\t * @default -1\r\n\t */\r\n\tthis.hitFaceIndex = -1;\r\n\r\n\t/**\r\n\t * Distance to the hit. Will be set to -1 if there was no hit.\r\n\t * @property {number} distance\r\n\t * @default -1\r\n\t */\r\n\tthis.distance = -1;\r\n\r\n\t/**\r\n\t * If the ray should stop traversing the bodies.\r\n\t * @private\r\n\t * @property {Boolean} _shouldStop\r\n\t * @default false\r\n\t */\r\n\tthis._shouldStop = false;\r\n}\r\n\r\n/**\r\n * Reset all result data.\r\n * @method reset\r\n */\r\nRaycastResult.prototype.reset = function () {\r\n\tthis.rayFromWorld.setZero();\r\n\tthis.rayToWorld.setZero();\r\n\tthis.hitNormalWorld.setZero();\r\n\tthis.hitPointWorld.setZero();\r\n\tthis.hasHit = false;\r\n\tthis.shape = null;\r\n\tthis.body = null;\r\n\tthis.hitFaceIndex = -1;\r\n\tthis.distance = -1;\r\n\tthis._shouldStop = false;\r\n};\r\n\r\n/**\r\n * @method abort\r\n */\r\nRaycastResult.prototype.abort = function(){\r\n\tthis._shouldStop = true;\r\n};\r\n\r\n/**\r\n * @method set\r\n * @param {Vec3} rayFromWorld\r\n * @param {Vec3} rayToWorld\r\n * @param {Vec3} hitNormalWorld\r\n * @param {Vec3} hitPointWorld\r\n * @param {Shape} shape\r\n * @param {Body} body\r\n * @param {number} distance\r\n */\r\nRaycastResult.prototype.set = function(\r\n\trayFromWorld,\r\n\trayToWorld,\r\n\thitNormalWorld,\r\n\thitPointWorld,\r\n\tshape,\r\n\tbody,\r\n\tdistance\r\n){\r\n\tthis.rayFromWorld.copy(rayFromWorld);\r\n\tthis.rayToWorld.copy(rayToWorld);\r\n\tthis.hitNormalWorld.copy(hitNormalWorld);\r\n\tthis.hitPointWorld.copy(hitPointWorld);\r\n\tthis.shape = shape;\r\n\tthis.body = body;\r\n\tthis.distance = distance;\r\n};\r\n},{\"../math/Vec3\":30}],11:[function(_dereq_,module,exports){\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Broadphase = _dereq_('../collision/Broadphase');\r\n\r\nmodule.exports = SAPBroadphase;\r\n\r\n/**\r\n * Sweep and prune broadphase along one axis.\r\n *\r\n * @class SAPBroadphase\r\n * @constructor\r\n * @param {World} [world]\r\n * @extends Broadphase\r\n */\r\nfunction SAPBroadphase(world){\r\n    Broadphase.apply(this);\r\n\r\n    /**\r\n     * List of bodies currently in the broadphase.\r\n     * @property axisList\r\n     * @type {Array}\r\n     */\r\n    this.axisList = [];\r\n\r\n    /**\r\n     * The world to search in.\r\n     * @property world\r\n     * @type {World}\r\n     */\r\n    this.world = null;\r\n\r\n    /**\r\n     * Axis to sort the bodies along. Set to 0 for x axis, and 1 for y axis. For best performance, choose an axis that the bodies are spread out more on.\r\n     * @property axisIndex\r\n     * @type {Number}\r\n     */\r\n    this.axisIndex = 0;\r\n\r\n    var axisList = this.axisList;\r\n\r\n    this._addBodyHandler = function(e){\r\n        axisList.push(e.body);\r\n    };\r\n\r\n    this._removeBodyHandler = function(e){\r\n        var idx = axisList.indexOf(e.body);\r\n        if(idx !== -1){\r\n            axisList.splice(idx,1);\r\n        }\r\n    };\r\n\r\n    if(world){\r\n        this.setWorld(world);\r\n    }\r\n}\r\nSAPBroadphase.prototype = new Broadphase();\r\n\r\n/**\r\n * Change the world\r\n * @method setWorld\r\n * @param  {World} world\r\n */\r\nSAPBroadphase.prototype.setWorld = function(world){\r\n    // Clear the old axis array\r\n    this.axisList.length = 0;\r\n\r\n    // Add all bodies from the new world\r\n    for(var i=0; i<world.bodies.length; i++){\r\n        this.axisList.push(world.bodies[i]);\r\n    }\r\n\r\n    // Remove old handlers, if any\r\n    world.removeEventListener(\"addBody\", this._addBodyHandler);\r\n    world.removeEventListener(\"removeBody\", this._removeBodyHandler);\r\n\r\n    // Add handlers to update the list of bodies.\r\n    world.addEventListener(\"addBody\", this._addBodyHandler);\r\n    world.addEventListener(\"removeBody\", this._removeBodyHandler);\r\n\r\n    this.world = world;\r\n    this.dirty = true;\r\n};\r\n\r\n/**\r\n * @static\r\n * @method insertionSortX\r\n * @param  {Array} a\r\n * @return {Array}\r\n */\r\nSAPBroadphase.insertionSortX = function(a) {\r\n    for(var i=1,l=a.length;i<l;i++) {\r\n        var v = a[i];\r\n        for(var j=i - 1;j>=0;j--) {\r\n            if(a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x){\r\n                break;\r\n            }\r\n            a[j+1] = a[j];\r\n        }\r\n        a[j+1] = v;\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * @static\r\n * @method insertionSortY\r\n * @param  {Array} a\r\n * @return {Array}\r\n */\r\nSAPBroadphase.insertionSortY = function(a) {\r\n    for(var i=1,l=a.length;i<l;i++) {\r\n        var v = a[i];\r\n        for(var j=i - 1;j>=0;j--) {\r\n            if(a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y){\r\n                break;\r\n            }\r\n            a[j+1] = a[j];\r\n        }\r\n        a[j+1] = v;\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * @static\r\n * @method insertionSortZ\r\n * @param  {Array} a\r\n * @return {Array}\r\n */\r\nSAPBroadphase.insertionSortZ = function(a) {\r\n    for(var i=1,l=a.length;i<l;i++) {\r\n        var v = a[i];\r\n        for(var j=i - 1;j>=0;j--) {\r\n            if(a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z){\r\n                break;\r\n            }\r\n            a[j+1] = a[j];\r\n        }\r\n        a[j+1] = v;\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * Collect all collision pairs\r\n * @method collisionPairs\r\n * @param  {World} world\r\n * @param  {Array} p1\r\n * @param  {Array} p2\r\n */\r\nSAPBroadphase.prototype.collisionPairs = function(world,p1,p2){\r\n    var bodies = this.axisList,\r\n        N = bodies.length,\r\n        axisIndex = this.axisIndex,\r\n        i, j;\r\n\r\n    if(this.dirty){\r\n        this.sortList();\r\n        this.dirty = false;\r\n    }\r\n\r\n    // Look through the list\r\n    for(i=0; i !== N; i++){\r\n        var bi = bodies[i];\r\n\r\n        for(j=i+1; j < N; j++){\r\n            var bj = bodies[j];\r\n\r\n            if(!this.needBroadphaseCollision(bi,bj)){\r\n                continue;\r\n            }\r\n\r\n            if(!SAPBroadphase.checkBounds(bi,bj,axisIndex)){\r\n                break;\r\n            }\r\n\r\n            this.intersectionTest(bi,bj,p1,p2);\r\n        }\r\n    }\r\n};\r\n\r\nSAPBroadphase.prototype.sortList = function(){\r\n    var axisList = this.axisList;\r\n    var axisIndex = this.axisIndex;\r\n    var N = axisList.length;\r\n\r\n    // Update AABBs\r\n    for(var i = 0; i!==N; i++){\r\n        var bi = axisList[i];\r\n        if(bi.aabbNeedsUpdate){\r\n            bi.computeAABB();\r\n        }\r\n    }\r\n\r\n    // Sort the list\r\n    if(axisIndex === 0){\r\n        SAPBroadphase.insertionSortX(axisList);\r\n    } else if(axisIndex === 1){\r\n        SAPBroadphase.insertionSortY(axisList);\r\n    } else if(axisIndex === 2){\r\n        SAPBroadphase.insertionSortZ(axisList);\r\n    }\r\n};\r\n\r\n/**\r\n * Check if the bounds of two bodies overlap, along the given SAP axis.\r\n * @static\r\n * @method checkBounds\r\n * @param  {Body} bi\r\n * @param  {Body} bj\r\n * @param  {Number} axisIndex\r\n * @return {Boolean}\r\n */\r\nSAPBroadphase.checkBounds = function(bi, bj, axisIndex){\r\n    var biPos;\r\n    var bjPos;\r\n\r\n    if(axisIndex === 0){\r\n        biPos = bi.position.x;\r\n        bjPos = bj.position.x;\r\n    } else if(axisIndex === 1){\r\n        biPos = bi.position.y;\r\n        bjPos = bj.position.y;\r\n    } else if(axisIndex === 2){\r\n        biPos = bi.position.z;\r\n        bjPos = bj.position.z;\r\n    }\r\n\r\n    var ri = bi.boundingRadius,\r\n        rj = bj.boundingRadius,\r\n        boundA1 = biPos - ri,\r\n        boundA2 = biPos + ri,\r\n        boundB1 = bjPos - rj,\r\n        boundB2 = bjPos + rj;\r\n\r\n    return boundB1 < boundA2;\r\n};\r\n\r\n/**\r\n * Computes the variance of the body positions and estimates the best\r\n * axis to use. Will automatically set property .axisIndex.\r\n * @method autoDetectAxis\r\n */\r\nSAPBroadphase.prototype.autoDetectAxis = function(){\r\n    var sumX=0,\r\n        sumX2=0,\r\n        sumY=0,\r\n        sumY2=0,\r\n        sumZ=0,\r\n        sumZ2=0,\r\n        bodies = this.axisList,\r\n        N = bodies.length,\r\n        invN=1/N;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var b = bodies[i];\r\n\r\n        var centerX = b.position.x;\r\n        sumX += centerX;\r\n        sumX2 += centerX*centerX;\r\n\r\n        var centerY = b.position.y;\r\n        sumY += centerY;\r\n        sumY2 += centerY*centerY;\r\n\r\n        var centerZ = b.position.z;\r\n        sumZ += centerZ;\r\n        sumZ2 += centerZ*centerZ;\r\n    }\r\n\r\n    var varianceX = sumX2 - sumX*sumX*invN,\r\n        varianceY = sumY2 - sumY*sumY*invN,\r\n        varianceZ = sumZ2 - sumZ*sumZ*invN;\r\n\r\n    if(varianceX > varianceY){\r\n        if(varianceX > varianceZ){\r\n            this.axisIndex = 0;\r\n        } else{\r\n            this.axisIndex = 2;\r\n        }\r\n    } else if(varianceY > varianceZ){\r\n        this.axisIndex = 1;\r\n    } else{\r\n        this.axisIndex = 2;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns all the bodies within an AABB.\r\n * @method aabbQuery\r\n * @param  {World} world\r\n * @param  {AABB} aabb\r\n * @param {array} result An array to store resulting bodies in.\r\n * @return {array}\r\n */\r\nSAPBroadphase.prototype.aabbQuery = function(world, aabb, result){\r\n    result = result || [];\r\n\r\n    if(this.dirty){\r\n        this.sortList();\r\n        this.dirty = false;\r\n    }\r\n\r\n    var axisIndex = this.axisIndex, axis = 'x';\r\n    if(axisIndex === 1){ axis = 'y'; }\r\n    if(axisIndex === 2){ axis = 'z'; }\r\n\r\n    var axisList = this.axisList;\r\n    var lower = aabb.lowerBound[axis];\r\n    var upper = aabb.upperBound[axis];\r\n    for(var i = 0; i < axisList.length; i++){\r\n        var b = axisList[i];\r\n\r\n        if(b.aabbNeedsUpdate){\r\n            b.computeAABB();\r\n        }\r\n\r\n        if(b.aabb.overlaps(aabb)){\r\n            result.push(b);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n},{\"../collision/Broadphase\":5,\"../shapes/Shape\":43}],12:[function(_dereq_,module,exports){\r\nmodule.exports = ConeTwistConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\r\nvar ConeEquation = _dereq_('../equations/ConeEquation');\r\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * @class ConeTwistConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {Vec3} [options.pivotA]\r\n * @param {Vec3} [options.pivotB]\r\n * @param {Vec3} [options.axisA]\r\n * @param {Vec3} [options.axisB]\r\n * @param {Number} [options.maxForce=1e6]\r\n * @extends PointToPointConstraint\r\n */\r\nfunction ConeTwistConstraint(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    // Set pivot point in between\r\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\r\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\r\n\r\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\r\n\r\n    this.collideConnected = !!options.collideConnected;\r\n\r\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\r\n\r\n    /**\r\n     * @property {ConeEquation} coneEquation\r\n     */\r\n    var c = this.coneEquation = new ConeEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} twistEquation\r\n     */\r\n    var t = this.twistEquation = new RotationalEquation(bodyA,bodyB,options);\r\n    this.twistAngle = typeof(options.twistAngle) !== 'undefined' ? options.twistAngle : 0;\r\n\r\n    // Make the cone equation push the bodies toward the cone axis, not outward\r\n    c.maxForce = 0;\r\n    c.minForce = -maxForce;\r\n\r\n    // Make the twist equation add torque toward the initial position\r\n    t.maxForce = 0;\r\n    t.minForce = -maxForce;\r\n\r\n    this.equations.push(c, t);\r\n}\r\nConeTwistConstraint.prototype = new PointToPointConstraint();\r\nConeTwistConstraint.constructor = ConeTwistConstraint;\r\n\r\nvar ConeTwistConstraint_update_tmpVec1 = new Vec3();\r\nvar ConeTwistConstraint_update_tmpVec2 = new Vec3();\r\n\r\nConeTwistConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        cone = this.coneEquation,\r\n        twist = this.twistEquation;\r\n\r\n    PointToPointConstraint.prototype.update.call(this);\r\n\r\n    // Update the axes to the cone constraint\r\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\r\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB);\r\n\r\n    // Update the world axes in the twist constraint\r\n    this.axisA.tangents(twist.axisA, twist.axisA);\r\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\r\n\r\n    this.axisB.tangents(twist.axisB, twist.axisB);\r\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\r\n\r\n    cone.angle = this.angle;\r\n    twist.maxAngle = this.twistAngle;\r\n};\r\n\r\n\r\n},{\"../equations/ConeEquation\":18,\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],13:[function(_dereq_,module,exports){\r\nmodule.exports = Constraint;\r\n\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\n/**\r\n * Constraint base class\r\n * @class Constraint\r\n * @author schteppe\r\n * @constructor\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {boolean} [options.collideConnected=true]\r\n * @param {boolean} [options.wakeUpBodies=true]\r\n */\r\nfunction Constraint(bodyA, bodyB, options){\r\n    options = Utils.defaults(options,{\r\n        collideConnected : true,\r\n        wakeUpBodies : true,\r\n    });\r\n\r\n    /**\r\n     * Equations to be solved in this constraint\r\n     * @property equations\r\n     * @type {Array}\r\n     */\r\n    this.equations = [];\r\n\r\n    /**\r\n     * @property {Body} bodyA\r\n     */\r\n    this.bodyA = bodyA;\r\n\r\n    /**\r\n     * @property {Body} bodyB\r\n     */\r\n    this.bodyB = bodyB;\r\n\r\n    /**\r\n     * @property {Number} id\r\n     */\r\n    this.id = Constraint.idCounter++;\r\n\r\n    /**\r\n     * Set to true if you want the bodies to collide when they are connected.\r\n     * @property collideConnected\r\n     * @type {boolean}\r\n     */\r\n    this.collideConnected = options.collideConnected;\r\n\r\n    if(options.wakeUpBodies){\r\n        if(bodyA){\r\n            bodyA.wakeUp();\r\n        }\r\n        if(bodyB){\r\n            bodyB.wakeUp();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Update all the equations with data.\r\n * @method update\r\n */\r\nConstraint.prototype.update = function(){\r\n    throw new Error(\"method update() not implmemented in this Constraint subclass!\");\r\n};\r\n\r\n/**\r\n * Enables all equations in the constraint.\r\n * @method enable\r\n */\r\nConstraint.prototype.enable = function(){\r\n    var eqs = this.equations;\r\n    for(var i=0; i<eqs.length; i++){\r\n        eqs[i].enabled = true;\r\n    }\r\n};\r\n\r\n/**\r\n * Disables all equations in the constraint.\r\n * @method disable\r\n */\r\nConstraint.prototype.disable = function(){\r\n    var eqs = this.equations;\r\n    for(var i=0; i<eqs.length; i++){\r\n        eqs[i].enabled = false;\r\n    }\r\n};\r\n\r\nConstraint.idCounter = 0;\r\n\r\n},{\"../utils/Utils\":53}],14:[function(_dereq_,module,exports){\r\nmodule.exports = DistanceConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\n\r\n/**\r\n * Constrains two bodies to be at a constant distance from each others center of mass.\r\n * @class DistanceConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\r\n * @param {Number} [maxForce=1e6]\r\n * @extends Constraint\r\n */\r\nfunction DistanceConstraint(bodyA,bodyB,distance,maxForce){\r\n    Constraint.call(this,bodyA,bodyB);\r\n\r\n    if(typeof(distance)===\"undefined\") {\r\n        distance = bodyA.position.distanceTo(bodyB.position);\r\n    }\r\n\r\n    if(typeof(maxForce)===\"undefined\") {\r\n        maxForce = 1e6;\r\n    }\r\n\r\n    /**\r\n     * @property {number} distance\r\n     */\r\n    this.distance = distance;\r\n\r\n    /**\r\n     * @property {ContactEquation} distanceEquation\r\n     */\r\n    var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\r\n    this.equations.push(eq);\r\n\r\n    // Make it bidirectional\r\n    eq.minForce = -maxForce;\r\n    eq.maxForce =  maxForce;\r\n}\r\nDistanceConstraint.prototype = new Constraint();\r\n\r\nDistanceConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA;\r\n    var bodyB = this.bodyB;\r\n    var eq = this.distanceEquation;\r\n    var halfDist = this.distance * 0.5;\r\n    var normal = eq.ni;\r\n\r\n    bodyB.position.vsub(bodyA.position, normal);\r\n    normal.normalize();\r\n    normal.mult(halfDist, eq.ri);\r\n    normal.mult(-halfDist, eq.rj);\r\n};\r\n},{\"../equations/ContactEquation\":19,\"./Constraint\":13}],15:[function(_dereq_,module,exports){\r\nmodule.exports = HingeConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\r\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\r\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\r\n * @class HingeConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {Vec3} [options.pivotA] A point defined locally in bodyA. This defines the offset of axisA.\r\n * @param {Vec3} [options.axisA] An axis that bodyA can rotate around, defined locally in bodyA.\r\n * @param {Vec3} [options.pivotB]\r\n * @param {Vec3} [options.axisB]\r\n * @param {Number} [options.maxForce=1e6]\r\n * @extends PointToPointConstraint\r\n */\r\nfunction HingeConstraint(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\r\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\r\n\r\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\r\n\r\n    /**\r\n     * Rotation axis, defined locally in bodyA.\r\n     * @property {Vec3} axisA\r\n     */\r\n    var axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1,0,0);\r\n    axisA.normalize();\r\n\r\n    /**\r\n     * Rotation axis, defined locally in bodyB.\r\n     * @property {Vec3} axisB\r\n     */\r\n    var axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1,0,0);\r\n    axisB.normalize();\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation1\r\n     */\r\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation2\r\n     */\r\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalMotorEquation} motorEquation\r\n     */\r\n    var motor = this.motorEquation = new RotationalMotorEquation(bodyA,bodyB,maxForce);\r\n    motor.enabled = false; // Not enabled by default\r\n\r\n    // Equations to be fed to the solver\r\n    this.equations.push(\r\n        r1, // rotational1\r\n        r2, // rotational2\r\n        motor\r\n    );\r\n}\r\nHingeConstraint.prototype = new PointToPointConstraint();\r\nHingeConstraint.constructor = HingeConstraint;\r\n\r\n/**\r\n * @method enableMotor\r\n */\r\nHingeConstraint.prototype.enableMotor = function(){\r\n    this.motorEquation.enabled = true;\r\n};\r\n\r\n/**\r\n * @method disableMotor\r\n */\r\nHingeConstraint.prototype.disableMotor = function(){\r\n    this.motorEquation.enabled = false;\r\n};\r\n\r\n/**\r\n * @method setMotorSpeed\r\n * @param {number} speed\r\n */\r\nHingeConstraint.prototype.setMotorSpeed = function(speed){\r\n    this.motorEquation.targetVelocity = speed;\r\n};\r\n\r\n/**\r\n * @method setMotorMaxForce\r\n * @param {number} maxForce\r\n */\r\nHingeConstraint.prototype.setMotorMaxForce = function(maxForce){\r\n    this.motorEquation.maxForce = maxForce;\r\n    this.motorEquation.minForce = -maxForce;\r\n};\r\n\r\nvar HingeConstraint_update_tmpVec1 = new Vec3();\r\nvar HingeConstraint_update_tmpVec2 = new Vec3();\r\n\r\nHingeConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        motor = this.motorEquation,\r\n        r1 = this.rotationalEquation1,\r\n        r2 = this.rotationalEquation2,\r\n        worldAxisA = HingeConstraint_update_tmpVec1,\r\n        worldAxisB = HingeConstraint_update_tmpVec2;\r\n\r\n    var axisA = this.axisA;\r\n    var axisB = this.axisB;\r\n\r\n    PointToPointConstraint.prototype.update.call(this);\r\n\r\n    // Get world axes\r\n    bodyA.quaternion.vmult(axisA, worldAxisA);\r\n    bodyB.quaternion.vmult(axisB, worldAxisB);\r\n\r\n    worldAxisA.tangents(r1.axisA, r2.axisA);\r\n    r1.axisB.copy(worldAxisB);\r\n    r2.axisB.copy(worldAxisB);\r\n\r\n    if(this.motorEquation.enabled){\r\n        bodyA.quaternion.vmult(this.axisA, motor.axisA);\r\n        bodyB.quaternion.vmult(this.axisB, motor.axisB);\r\n    }\r\n};\r\n\r\n\r\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],16:[function(_dereq_,module,exports){\r\nmodule.exports = LockConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\r\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\r\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Lock constraint. Will remove all degrees of freedom between the bodies.\r\n * @class LockConstraint\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {object} [options]\r\n * @param {Number} [options.maxForce=1e6]\r\n * @extends PointToPointConstraint\r\n */\r\nfunction LockConstraint(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    // Set pivot point in between\r\n    var pivotA = new Vec3();\r\n    var pivotB = new Vec3();\r\n    var halfWay = new Vec3();\r\n    bodyA.position.vadd(bodyB.position, halfWay);\r\n    halfWay.scale(0.5, halfWay);\r\n    bodyB.pointToLocalFrame(halfWay, pivotB);\r\n    bodyA.pointToLocalFrame(halfWay, pivotA);\r\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation1\r\n     */\r\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation2\r\n     */\r\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    /**\r\n     * @property {RotationalEquation} rotationalEquation3\r\n     */\r\n    var r3 = this.rotationalEquation3 = new RotationalEquation(bodyA,bodyB,options);\r\n\r\n    this.equations.push(r1, r2, r3);\r\n}\r\nLockConstraint.prototype = new PointToPointConstraint();\r\nLockConstraint.constructor = LockConstraint;\r\n\r\nvar LockConstraint_update_tmpVec1 = new Vec3();\r\nvar LockConstraint_update_tmpVec2 = new Vec3();\r\n\r\nLockConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        motor = this.motorEquation,\r\n        r1 = this.rotationalEquation1,\r\n        r2 = this.rotationalEquation2,\r\n        r3 = this.rotationalEquation3,\r\n        worldAxisA = LockConstraint_update_tmpVec1,\r\n        worldAxisB = LockConstraint_update_tmpVec2;\r\n\r\n    PointToPointConstraint.prototype.update.call(this);\r\n\r\n    bodyA.vectorToWorldFrame(Vec3.UNIT_X, r1.axisA);\r\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Y, r1.axisB);\r\n\r\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Y, r2.axisA);\r\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Z, r2.axisB);\r\n\r\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Z, r3.axisA);\r\n    bodyB.vectorToWorldFrame(Vec3.UNIT_X, r3.axisB);\r\n};\r\n\r\n\r\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],17:[function(_dereq_,module,exports){\r\nmodule.exports = PointToPointConstraint;\r\n\r\nvar Constraint = _dereq_('./Constraint');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Connects two bodies at given offset points.\r\n * @class PointToPointConstraint\r\n * @extends Constraint\r\n * @constructor\r\n * @param {Body} bodyA\r\n * @param {Vec3} pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\r\n * @param {Body} bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\r\n * @param {Vec3} pivotB See pivotA.\r\n * @param {Number} maxForce The maximum force that should be applied to constrain the bodies.\r\n *\r\n * @example\r\n *     var bodyA = new Body({ mass: 1 });\r\n *     var bodyB = new Body({ mass: 1 });\r\n *     bodyA.position.set(-1, 0, 0);\r\n *     bodyB.position.set(1, 0, 0);\r\n *     bodyA.addShape(shapeA);\r\n *     bodyB.addShape(shapeB);\r\n *     world.addBody(bodyA);\r\n *     world.addBody(bodyB);\r\n *     var localPivotA = new Vec3(1, 0, 0);\r\n *     var localPivotB = new Vec3(-1, 0, 0);\r\n *     var constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB);\r\n *     world.addConstraint(constraint);\r\n */\r\nfunction PointToPointConstraint(bodyA,pivotA,bodyB,pivotB,maxForce){\r\n    Constraint.call(this,bodyA,bodyB);\r\n\r\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\r\n\r\n    /**\r\n     * Pivot, defined locally in bodyA.\r\n     * @property {Vec3} pivotA\r\n     */\r\n    this.pivotA = pivotA ? pivotA.clone() : new Vec3();\r\n\r\n    /**\r\n     * Pivot, defined locally in bodyB.\r\n     * @property {Vec3} pivotB\r\n     */\r\n    this.pivotB = pivotB ? pivotB.clone() : new Vec3();\r\n\r\n    /**\r\n     * @property {ContactEquation} equationX\r\n     */\r\n    var x = this.equationX = new ContactEquation(bodyA,bodyB);\r\n\r\n    /**\r\n     * @property {ContactEquation} equationY\r\n     */\r\n    var y = this.equationY = new ContactEquation(bodyA,bodyB);\r\n\r\n    /**\r\n     * @property {ContactEquation} equationZ\r\n     */\r\n    var z = this.equationZ = new ContactEquation(bodyA,bodyB);\r\n\r\n    // Equations to be fed to the solver\r\n    this.equations.push(x, y, z);\r\n\r\n    // Make the equations bidirectional\r\n    x.minForce = y.minForce = z.minForce = -maxForce;\r\n    x.maxForce = y.maxForce = z.maxForce =  maxForce;\r\n\r\n    x.ni.set(1, 0, 0);\r\n    y.ni.set(0, 1, 0);\r\n    z.ni.set(0, 0, 1);\r\n}\r\nPointToPointConstraint.prototype = new Constraint();\r\n\r\nPointToPointConstraint.prototype.update = function(){\r\n    var bodyA = this.bodyA;\r\n    var bodyB = this.bodyB;\r\n    var x = this.equationX;\r\n    var y = this.equationY;\r\n    var z = this.equationZ;\r\n\r\n    // Rotate the pivots to world space\r\n    bodyA.quaternion.vmult(this.pivotA,x.ri);\r\n    bodyB.quaternion.vmult(this.pivotB,x.rj);\r\n\r\n    y.ri.copy(x.ri);\r\n    y.rj.copy(x.rj);\r\n    z.ri.copy(x.ri);\r\n    z.rj.copy(x.rj);\r\n};\r\n},{\"../equations/ContactEquation\":19,\"../math/Vec3\":30,\"./Constraint\":13}],18:[function(_dereq_,module,exports){\r\nmodule.exports = ConeEquation;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Equation = _dereq_('./Equation');\r\n\r\n/**\r\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\r\n * @class ConeEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Vec3} [options.axisA] Local axis in A\r\n * @param {Vec3} [options.axisB] Local axis in B\r\n * @param {Vec3} [options.angle] The \"cone angle\" to keep\r\n * @param {number} [options.maxForce=1e6]\r\n * @extends Equation\r\n */\r\nfunction ConeEquation(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\r\n\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\r\n\r\n    /**\r\n     * The cone angle to keep\r\n     * @property {number} angle\r\n     */\r\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\r\n}\r\n\r\nConeEquation.prototype = new Equation();\r\nConeEquation.prototype.constructor = ConeEquation;\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\n\r\nConeEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n\r\n        ni = this.axisA,\r\n        nj = this.axisB,\r\n\r\n        nixnj = tmpVec1,\r\n        njxni = tmpVec2,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n\r\n    // Caluclate cross products\r\n    ni.cross(nj, nixnj);\r\n    nj.cross(ni, njxni);\r\n\r\n    // The angle between two vector is:\r\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\r\n\r\n    // g = a * b\r\n    // gdot = (b x a) * wi + (a x b) * wj\r\n    // G = [0 bxa 0 axb]\r\n    // W = [vi wi vj wj]\r\n    GA.rotational.copy(njxni);\r\n    GB.rotational.copy(nixnj);\r\n\r\n    var g = Math.cos(this.angle) - ni.dot(nj),\r\n        GW = this.computeGW(),\r\n        GiMf = this.computeGiMf();\r\n\r\n    var B = - g * a - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],19:[function(_dereq_,module,exports){\r\nmodule.exports = ContactEquation;\r\n\r\nvar Equation = _dereq_('./Equation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\n\r\n/**\r\n * Contact/non-penetration constraint equation\r\n * @class ContactEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @extends Equation\r\n */\r\nfunction ContactEquation(bodyA, bodyB, maxForce){\r\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\r\n    Equation.call(this, bodyA, bodyB, 0, maxForce);\r\n\r\n    /**\r\n     * @property restitution\r\n     * @type {Number}\r\n     */\r\n    this.restitution = 0.0; // \"bounciness\": u1 = -e*u0\r\n\r\n    /**\r\n     * World-oriented vector that goes from the center of bi to the contact point.\r\n     * @property {Vec3} ri\r\n     */\r\n    this.ri = new Vec3();\r\n\r\n    /**\r\n     * World-oriented vector that starts in body j position and goes to the contact point.\r\n     * @property {Vec3} rj\r\n     */\r\n    this.rj = new Vec3();\r\n\r\n    /**\r\n     * Contact normal, pointing out of body i.\r\n     * @property {Vec3} ni\r\n     */\r\n    this.ni = new Vec3();\r\n}\r\n\r\nContactEquation.prototype = new Equation();\r\nContactEquation.prototype.constructor = ContactEquation;\r\n\r\nvar ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\r\nvar ContactEquation_computeB_temp2 = new Vec3();\r\nvar ContactEquation_computeB_temp3 = new Vec3();\r\nContactEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        ri = this.ri,\r\n        rj = this.rj,\r\n        rixn = ContactEquation_computeB_temp1,\r\n        rjxn = ContactEquation_computeB_temp2,\r\n\r\n        vi = bi.velocity,\r\n        wi = bi.angularVelocity,\r\n        fi = bi.force,\r\n        taui = bi.torque,\r\n\r\n        vj = bj.velocity,\r\n        wj = bj.angularVelocity,\r\n        fj = bj.force,\r\n        tauj = bj.torque,\r\n\r\n        penetrationVec = ContactEquation_computeB_temp3,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n\r\n        n = this.ni;\r\n\r\n    // Caluclate cross products\r\n    ri.cross(n,rixn);\r\n    rj.cross(n,rjxn);\r\n\r\n    // g = xj+rj -(xi+ri)\r\n    // G = [ -ni  -rixn  ni  rjxn ]\r\n    n.negate(GA.spatial);\r\n    rixn.negate(GA.rotational);\r\n    GB.spatial.copy(n);\r\n    GB.rotational.copy(rjxn);\r\n\r\n    // Calculate the penetration vector\r\n    penetrationVec.copy(bj.position);\r\n    penetrationVec.vadd(rj,penetrationVec);\r\n    penetrationVec.vsub(bi.position,penetrationVec);\r\n    penetrationVec.vsub(ri,penetrationVec);\r\n\r\n    var g = n.dot(penetrationVec);\r\n\r\n    // Compute iteration\r\n    var ePlusOne = this.restitution + 1;\r\n    var GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\r\n    var GiMf = this.computeGiMf();\r\n\r\n    var B = - g * a - GW * b - h*GiMf;\r\n\r\n    return B;\r\n};\r\n\r\nvar ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\r\nvar ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\r\n\r\n/**\r\n * Get the current relative velocity in the contact point.\r\n * @method getImpactVelocityAlongNormal\r\n * @return {number}\r\n */\r\nContactEquation.prototype.getImpactVelocityAlongNormal = function(){\r\n    var vi = ContactEquation_getImpactVelocityAlongNormal_vi;\r\n    var vj = ContactEquation_getImpactVelocityAlongNormal_vj;\r\n    var xi = ContactEquation_getImpactVelocityAlongNormal_xi;\r\n    var xj = ContactEquation_getImpactVelocityAlongNormal_xj;\r\n    var relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\r\n\r\n    this.bi.position.vadd(this.ri, xi);\r\n    this.bj.position.vadd(this.rj, xj);\r\n\r\n    this.bi.getVelocityAtWorldPoint(xi, vi);\r\n    this.bj.getVelocityAtWorldPoint(xj, vj);\r\n\r\n    vi.vsub(vj, relVel);\r\n\r\n    return this.ni.dot(relVel);\r\n};\r\n\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],20:[function(_dereq_,module,exports){\r\nmodule.exports = Equation;\r\n\r\nvar JacobianElement = _dereq_('../math/JacobianElement'),\r\n    Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Equation base class\r\n * @class Equation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bi\r\n * @param {Body} bj\r\n * @param {Number} minForce Minimum (read: negative max) force to be applied by the constraint.\r\n * @param {Number} maxForce Maximum (read: positive max) force to be applied by the constraint.\r\n */\r\nfunction Equation(bi,bj,minForce,maxForce){\r\n    this.id = Equation.id++;\r\n\r\n    /**\r\n     * @property {number} minForce\r\n     */\r\n    this.minForce = typeof(minForce)===\"undefined\" ? -1e6 : minForce;\r\n\r\n    /**\r\n     * @property {number} maxForce\r\n     */\r\n    this.maxForce = typeof(maxForce)===\"undefined\" ? 1e6 : maxForce;\r\n\r\n    /**\r\n     * @property bi\r\n     * @type {Body}\r\n     */\r\n    this.bi = bi;\r\n\r\n    /**\r\n     * @property bj\r\n     * @type {Body}\r\n     */\r\n    this.bj = bj;\r\n\r\n    /**\r\n     * SPOOK parameter\r\n     * @property {number} a\r\n     */\r\n    this.a = 0.0;\r\n\r\n    /**\r\n     * SPOOK parameter\r\n     * @property {number} b\r\n     */\r\n    this.b = 0.0;\r\n\r\n    /**\r\n     * SPOOK parameter\r\n     * @property {number} eps\r\n     */\r\n    this.eps = 0.0;\r\n\r\n    /**\r\n     * @property {JacobianElement} jacobianElementA\r\n     */\r\n    this.jacobianElementA = new JacobianElement();\r\n\r\n    /**\r\n     * @property {JacobianElement} jacobianElementB\r\n     */\r\n    this.jacobianElementB = new JacobianElement();\r\n\r\n    /**\r\n     * @property {boolean} enabled\r\n     * @default true\r\n     */\r\n    this.enabled = true;\r\n\r\n    // Set typical spook params\r\n    this.setSpookParams(1e7,4,1/60);\r\n}\r\nEquation.prototype.constructor = Equation;\r\n\r\nEquation.id = 0;\r\n\r\n/**\r\n * Recalculates a,b,eps.\r\n * @method setSpookParams\r\n */\r\nEquation.prototype.setSpookParams = function(stiffness,relaxation,timeStep){\r\n    var d = relaxation,\r\n        k = stiffness,\r\n        h = timeStep;\r\n    this.a = 4.0 / (h * (1 + 4 * d));\r\n    this.b = (4.0 * d) / (1 + 4 * d);\r\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\r\n};\r\n\r\n/**\r\n * Computes the RHS of the SPOOK equation\r\n * @method computeB\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeB = function(a,b,h){\r\n    var GW = this.computeGW(),\r\n        Gq = this.computeGq(),\r\n        GiMf = this.computeGiMf();\r\n    return - Gq * a - GW * b - GiMf*h;\r\n};\r\n\r\n/**\r\n * Computes G*q, where q are the generalized body coordinates\r\n * @method computeGq\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeGq = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        xi = bi.position,\r\n        xj = bj.position;\r\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\r\n};\r\n\r\nvar zero = new Vec3();\r\n\r\n/**\r\n * Computes G*W, where W are the body velocities\r\n * @method computeGW\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeGW = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        vi = bi.velocity,\r\n        vj = bj.velocity,\r\n        wi = bi.angularVelocity || zero,\r\n        wj = bj.angularVelocity || zero;\r\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\r\n};\r\n\r\n\r\n/**\r\n * Computes G*Wlambda, where W are the body velocities\r\n * @method computeGWlambda\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeGWlambda = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        vi = bi.vlambda,\r\n        vj = bj.vlambda,\r\n        wi = bi.wlambda || zero,\r\n        wj = bj.wlambda || zero;\r\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\r\n};\r\n\r\n/**\r\n * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\r\n * @method computeGiMf\r\n * @return {Number}\r\n */\r\nvar iMfi = new Vec3(),\r\n    iMfj = new Vec3(),\r\n    invIi_vmult_taui = new Vec3(),\r\n    invIj_vmult_tauj = new Vec3();\r\nEquation.prototype.computeGiMf = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        fi = bi.force,\r\n        ti = bi.torque,\r\n        fj = bj.force,\r\n        tj = bj.torque,\r\n        invMassi = bi.invMassSolve,\r\n        invMassj = bj.invMassSolve;\r\n\r\n    if(bi.invInertiaWorldSolve){ bi.invInertiaWorldSolve.vmult(ti,invIi_vmult_taui); }\r\n    else { invIi_vmult_taui.set(0,0,0); }\r\n    if(bj.invInertiaWorldSolve){ bj.invInertiaWorldSolve.vmult(tj,invIj_vmult_tauj); }\r\n    else { invIj_vmult_tauj.set(0,0,0); }\r\n\r\n    fi.mult(invMassi,iMfi);\r\n    fj.mult(invMassj,iMfj);\r\n\r\n    return GA.multiplyVectors(iMfi,invIi_vmult_taui) + GB.multiplyVectors(iMfj,invIj_vmult_tauj);\r\n};\r\n\r\n/**\r\n * Computes G*inv(M)*G'\r\n * @method computeGiMGt\r\n * @return {Number}\r\n */\r\nvar tmp = new Vec3();\r\nEquation.prototype.computeGiMGt = function(){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        invMassi = bi.invMassSolve,\r\n        invMassj = bj.invMassSolve,\r\n        invIi = bi.invInertiaWorldSolve,\r\n        invIj = bj.invInertiaWorldSolve,\r\n        result = invMassi + invMassj;\r\n\r\n    if(invIi){\r\n        invIi.vmult(GA.rotational,tmp);\r\n        result += tmp.dot(GA.rotational);\r\n    }\r\n\r\n    if(invIj){\r\n        invIj.vmult(GB.rotational,tmp);\r\n        result += tmp.dot(GB.rotational);\r\n    }\r\n\r\n    return  result;\r\n};\r\n\r\nvar addToWlambda_temp = new Vec3(),\r\n    addToWlambda_Gi = new Vec3(),\r\n    addToWlambda_Gj = new Vec3(),\r\n    addToWlambda_ri = new Vec3(),\r\n    addToWlambda_rj = new Vec3(),\r\n    addToWlambda_Mdiag = new Vec3();\r\n\r\n/**\r\n * Add constraint velocity to the bodies.\r\n * @method addToWlambda\r\n * @param {Number} deltalambda\r\n */\r\nEquation.prototype.addToWlambda = function(deltalambda){\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        temp = addToWlambda_temp;\r\n\r\n    // Add to linear velocity\r\n    // v_lambda += inv(M) * delta_lamba * G\r\n    GA.spatial.mult(bi.invMassSolve * deltalambda,temp);\r\n    bi.vlambda.vadd(temp, bi.vlambda);\r\n\r\n    GB.spatial.mult(bj.invMassSolve * deltalambda,temp);\r\n    bj.vlambda.vadd(temp, bj.vlambda);\r\n\r\n    // Add to angular velocity\r\n    if(bi.invInertiaWorldSolve){\r\n        bi.invInertiaWorldSolve.vmult(GA.rotational,temp);\r\n        temp.mult(deltalambda,temp);\r\n        bi.wlambda.vadd(temp,bi.wlambda);\r\n    }\r\n\r\n    if(bj.invInertiaWorldSolve){\r\n        bj.invInertiaWorldSolve.vmult(GB.rotational,temp);\r\n        temp.mult(deltalambda,temp);\r\n        bj.wlambda.vadd(temp,bj.wlambda);\r\n    }\r\n};\r\n\r\n/**\r\n * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\r\n * @method computeInvC\r\n * @param  {Number} eps\r\n * @return {Number}\r\n */\r\nEquation.prototype.computeC = function(){\r\n    return this.computeGiMGt() + this.eps;\r\n};\r\n\r\n},{\"../math/JacobianElement\":26,\"../math/Vec3\":30}],21:[function(_dereq_,module,exports){\r\nmodule.exports = FrictionEquation;\r\n\r\nvar Equation = _dereq_('./Equation');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\n\r\n/**\r\n * Constrains the slipping in a contact along a tangent\r\n * @class FrictionEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Number} slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\r\n * @extends Equation\r\n */\r\nfunction FrictionEquation(bodyA, bodyB, slipForce){\r\n    Equation.call(this,bodyA, bodyB, -slipForce, slipForce);\r\n    this.ri = new Vec3();\r\n    this.rj = new Vec3();\r\n    this.t = new Vec3(); // tangent\r\n}\r\n\r\nFrictionEquation.prototype = new Equation();\r\nFrictionEquation.prototype.constructor = FrictionEquation;\r\n\r\nvar FrictionEquation_computeB_temp1 = new Vec3();\r\nvar FrictionEquation_computeB_temp2 = new Vec3();\r\nFrictionEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n        ri = this.ri,\r\n        rj = this.rj,\r\n        rixt = FrictionEquation_computeB_temp1,\r\n        rjxt = FrictionEquation_computeB_temp2,\r\n        t = this.t;\r\n\r\n    // Caluclate cross products\r\n    ri.cross(t,rixt);\r\n    rj.cross(t,rjxt);\r\n\r\n    // G = [-t -rixt t rjxt]\r\n    // And remember, this is a pure velocity constraint, g is always zero!\r\n    var GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n    t.negate(GA.spatial);\r\n    rixt.negate(GA.rotational);\r\n    GB.spatial.copy(t);\r\n    GB.rotational.copy(rjxt);\r\n\r\n    var GW = this.computeGW();\r\n    var GiMf = this.computeGiMf();\r\n\r\n    var B = - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],22:[function(_dereq_,module,exports){\r\nmodule.exports = RotationalEquation;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Equation = _dereq_('./Equation');\r\n\r\n/**\r\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\r\n * @class RotationalEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Vec3} [options.axisA]\r\n * @param {Vec3} [options.axisB]\r\n * @param {number} [options.maxForce]\r\n * @extends Equation\r\n */\r\nfunction RotationalEquation(bodyA, bodyB, options){\r\n    options = options || {};\r\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\r\n\r\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\r\n\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\r\n\r\n    this.maxAngle = Math.PI / 2;\r\n}\r\n\r\nRotationalEquation.prototype = new Equation();\r\nRotationalEquation.prototype.constructor = RotationalEquation;\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\n\r\nRotationalEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n\r\n        ni = this.axisA,\r\n        nj = this.axisB,\r\n\r\n        nixnj = tmpVec1,\r\n        njxni = tmpVec2,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n\r\n    // Caluclate cross products\r\n    ni.cross(nj, nixnj);\r\n    nj.cross(ni, njxni);\r\n\r\n    // g = ni * nj\r\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\r\n    // G = [0 njxni 0 nixnj]\r\n    // W = [vi wi vj wj]\r\n    GA.rotational.copy(njxni);\r\n    GB.rotational.copy(nixnj);\r\n\r\n    var g = Math.cos(this.maxAngle) - ni.dot(nj),\r\n        GW = this.computeGW(),\r\n        GiMf = this.computeGiMf();\r\n\r\n    var B = - g * a - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],23:[function(_dereq_,module,exports){\r\nmodule.exports = RotationalMotorEquation;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Equation = _dereq_('./Equation');\r\n\r\n/**\r\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\r\n * @class RotationalMotorEquation\r\n * @constructor\r\n * @author schteppe\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Number} maxForce\r\n * @extends Equation\r\n */\r\nfunction RotationalMotorEquation(bodyA, bodyB, maxForce){\r\n    maxForce = typeof(maxForce)!=='undefined' ? maxForce : 1e6;\r\n    Equation.call(this,bodyA,bodyB,-maxForce,maxForce);\r\n\r\n    /**\r\n     * World oriented rotational axis\r\n     * @property {Vec3} axisA\r\n     */\r\n    this.axisA = new Vec3();\r\n\r\n    /**\r\n     * World oriented rotational axis\r\n     * @property {Vec3} axisB\r\n     */\r\n    this.axisB = new Vec3(); // World oriented rotational axis\r\n\r\n    /**\r\n     * Motor velocity\r\n     * @property {Number} targetVelocity\r\n     */\r\n    this.targetVelocity = 0;\r\n}\r\n\r\nRotationalMotorEquation.prototype = new Equation();\r\nRotationalMotorEquation.prototype.constructor = RotationalMotorEquation;\r\n\r\nRotationalMotorEquation.prototype.computeB = function(h){\r\n    var a = this.a,\r\n        b = this.b,\r\n        bi = this.bi,\r\n        bj = this.bj,\r\n\r\n        axisA = this.axisA,\r\n        axisB = this.axisB,\r\n\r\n        GA = this.jacobianElementA,\r\n        GB = this.jacobianElementB;\r\n\r\n    // g = 0\r\n    // gdot = axisA * wi - axisB * wj\r\n    // gdot = G * W = G * [vi wi vj wj]\r\n    // =>\r\n    // G = [0 axisA 0 -axisB]\r\n\r\n    GA.rotational.copy(axisA);\r\n    axisB.negate(GB.rotational);\r\n\r\n    var GW = this.computeGW() - this.targetVelocity,\r\n        GiMf = this.computeGiMf();\r\n\r\n    var B = - GW * b - h * GiMf;\r\n\r\n    return B;\r\n};\r\n\r\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],24:[function(_dereq_,module,exports){\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = ContactMaterial;\r\n\r\n/**\r\n * Defines what happens when two materials meet.\r\n * @class ContactMaterial\r\n * @constructor\r\n * @param {Material} m1\r\n * @param {Material} m2\r\n * @param {object} [options]\r\n * @param {Number} [options.friction=0.3]\r\n * @param {Number} [options.restitution=0.3]\r\n * @param {number} [options.contactEquationStiffness=1e7]\r\n * @param {number} [options.contactEquationRelaxation=3]\r\n * @param {number} [options.frictionEquationStiffness=1e7]\r\n * @param {Number} [options.frictionEquationRelaxation=3]\r\n */\r\nfunction ContactMaterial(m1, m2, options){\r\n    options = Utils.defaults(options, {\r\n        friction: 0.3,\r\n        restitution: 0.3,\r\n        contactEquationStiffness: 1e7,\r\n        contactEquationRelaxation: 3,\r\n        frictionEquationStiffness: 1e7,\r\n        frictionEquationRelaxation: 3\r\n    });\r\n\r\n    /**\r\n     * Identifier of this material\r\n     * @property {Number} id\r\n     */\r\n    this.id = ContactMaterial.idCounter++;\r\n\r\n    /**\r\n     * Participating materials\r\n     * @property {Array} materials\r\n     * @todo  Should be .materialA and .materialB instead\r\n     */\r\n    this.materials = [m1, m2];\r\n\r\n    /**\r\n     * Friction coefficient\r\n     * @property {Number} friction\r\n     */\r\n    this.friction = options.friction;\r\n\r\n    /**\r\n     * Restitution coefficient\r\n     * @property {Number} restitution\r\n     */\r\n    this.restitution = options.restitution;\r\n\r\n    /**\r\n     * Stiffness of the produced contact equations\r\n     * @property {Number} contactEquationStiffness\r\n     */\r\n    this.contactEquationStiffness = options.contactEquationStiffness;\r\n\r\n    /**\r\n     * Relaxation time of the produced contact equations\r\n     * @property {Number} contactEquationRelaxation\r\n     */\r\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\r\n\r\n    /**\r\n     * Stiffness of the produced friction equations\r\n     * @property {Number} frictionEquationStiffness\r\n     */\r\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\r\n\r\n    /**\r\n     * Relaxation time of the produced friction equations\r\n     * @property {Number} frictionEquationRelaxation\r\n     */\r\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\r\n}\r\n\r\nContactMaterial.idCounter = 0;\r\n\r\n},{\"../utils/Utils\":53}],25:[function(_dereq_,module,exports){\r\nmodule.exports = Material;\r\n\r\n/**\r\n * Defines a physics material.\r\n * @class Material\r\n * @constructor\r\n * @param {object} [options]\r\n * @author schteppe\r\n */\r\nfunction Material(options){\r\n    var name = '';\r\n    options = options || {};\r\n\r\n    // Backwards compatibility fix\r\n    if(typeof(options) === 'string'){\r\n        name = options;\r\n        options = {};\r\n    } else if(typeof(options) === 'object') {\r\n        name = '';\r\n    }\r\n\r\n    /**\r\n     * @property name\r\n     * @type {String}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * material id.\r\n     * @property id\r\n     * @type {number}\r\n     */\r\n    this.id = Material.idCounter++;\r\n\r\n    /**\r\n     * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\r\n     * @property {number} friction\r\n     */\r\n    this.friction = typeof(options.friction) !== 'undefined' ? options.friction : -1;\r\n\r\n    /**\r\n     * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\r\n     * @property {number} restitution\r\n     */\r\n    this.restitution = typeof(options.restitution) !== 'undefined' ? options.restitution : -1;\r\n}\r\n\r\nMaterial.idCounter = 0;\r\n\r\n},{}],26:[function(_dereq_,module,exports){\r\nmodule.exports = JacobianElement;\r\n\r\nvar Vec3 = _dereq_('./Vec3');\r\n\r\n/**\r\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\r\n * @class JacobianElement\r\n * @constructor\r\n */\r\nfunction JacobianElement(){\r\n\r\n    /**\r\n     * @property {Vec3} spatial\r\n     */\r\n    this.spatial = new Vec3();\r\n\r\n    /**\r\n     * @property {Vec3} rotational\r\n     */\r\n    this.rotational = new Vec3();\r\n}\r\n\r\n/**\r\n * Multiply with other JacobianElement\r\n * @method multiplyElement\r\n * @param  {JacobianElement} element\r\n * @return {Number}\r\n */\r\nJacobianElement.prototype.multiplyElement = function(element){\r\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\r\n};\r\n\r\n/**\r\n * Multiply with two vectors\r\n * @method multiplyVectors\r\n * @param  {Vec3} spatial\r\n * @param  {Vec3} rotational\r\n * @return {Number}\r\n */\r\nJacobianElement.prototype.multiplyVectors = function(spatial,rotational){\r\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\r\n};\r\n\r\n},{\"./Vec3\":30}],27:[function(_dereq_,module,exports){\r\nmodule.exports = Mat3;\r\n\r\nvar Vec3 = _dereq_('./Vec3');\r\n\r\n/**\r\n * A 3x3 matrix.\r\n * @class Mat3\r\n * @constructor\r\n * @param array elements Array of nine elements. Optional.\r\n * @author schteppe / http://github.com/schteppe\r\n */\r\nfunction Mat3(elements){\r\n    /**\r\n     * A vector of length 9, containing all matrix elements\r\n     * @property {Array} elements\r\n     */\r\n    if(elements){\r\n        this.elements = elements;\r\n    } else {\r\n        this.elements = [0,0,0,0,0,0,0,0,0];\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the matrix to identity\r\n * @method identity\r\n * @todo Should perhaps be renamed to setIdentity() to be more clear.\r\n * @todo Create another function that immediately creates an identity matrix eg. eye()\r\n */\r\nMat3.prototype.identity = function(){\r\n    var e = this.elements;\r\n    e[0] = 1;\r\n    e[1] = 0;\r\n    e[2] = 0;\r\n\r\n    e[3] = 0;\r\n    e[4] = 1;\r\n    e[5] = 0;\r\n\r\n    e[6] = 0;\r\n    e[7] = 0;\r\n    e[8] = 1;\r\n};\r\n\r\n/**\r\n * Set all elements to zero\r\n * @method setZero\r\n */\r\nMat3.prototype.setZero = function(){\r\n    var e = this.elements;\r\n    e[0] = 0;\r\n    e[1] = 0;\r\n    e[2] = 0;\r\n    e[3] = 0;\r\n    e[4] = 0;\r\n    e[5] = 0;\r\n    e[6] = 0;\r\n    e[7] = 0;\r\n    e[8] = 0;\r\n};\r\n\r\n/**\r\n * Sets the matrix diagonal elements from a Vec3\r\n * @method setTrace\r\n * @param {Vec3} vec3\r\n */\r\nMat3.prototype.setTrace = function(vec3){\r\n    var e = this.elements;\r\n    e[0] = vec3.x;\r\n    e[4] = vec3.y;\r\n    e[8] = vec3.z;\r\n};\r\n\r\n/**\r\n * Gets the matrix diagonal elements\r\n * @method getTrace\r\n * @return {Vec3}\r\n */\r\nMat3.prototype.getTrace = function(target){\r\n    var target = target || new Vec3();\r\n    var e = this.elements;\r\n    target.x = e[0];\r\n    target.y = e[4];\r\n    target.z = e[8];\r\n};\r\n\r\n/**\r\n * Matrix-Vector multiplication\r\n * @method vmult\r\n * @param {Vec3} v The vector to multiply with\r\n * @param {Vec3} target Optional, target to save the result in.\r\n */\r\nMat3.prototype.vmult = function(v,target){\r\n    target = target || new Vec3();\r\n\r\n    var e = this.elements,\r\n        x = v.x,\r\n        y = v.y,\r\n        z = v.z;\r\n    target.x = e[0]*x + e[1]*y + e[2]*z;\r\n    target.y = e[3]*x + e[4]*y + e[5]*z;\r\n    target.z = e[6]*x + e[7]*y + e[8]*z;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Matrix-scalar multiplication\r\n * @method smult\r\n * @param {Number} s\r\n */\r\nMat3.prototype.smult = function(s){\r\n    for(var i=0; i<this.elements.length; i++){\r\n        this.elements[i] *= s;\r\n    }\r\n};\r\n\r\n/**\r\n * Matrix multiplication\r\n * @method mmult\r\n * @param {Mat3} m Matrix to multiply with from left side.\r\n * @return {Mat3} The result.\r\n */\r\nMat3.prototype.mmult = function(m,target){\r\n    var r = target || new Mat3();\r\n    for(var i=0; i<3; i++){\r\n        for(var j=0; j<3; j++){\r\n            var sum = 0.0;\r\n            for(var k=0; k<3; k++){\r\n                sum += m.elements[i+k*3] * this.elements[k+j*3];\r\n            }\r\n            r.elements[i+j*3] = sum;\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * Scale each column of the matrix\r\n * @method scale\r\n * @param {Vec3} v\r\n * @return {Mat3} The result.\r\n */\r\nMat3.prototype.scale = function(v,target){\r\n    target = target || new Mat3();\r\n    var e = this.elements,\r\n        t = target.elements;\r\n    for(var i=0; i!==3; i++){\r\n        t[3*i + 0] = v.x * e[3*i + 0];\r\n        t[3*i + 1] = v.y * e[3*i + 1];\r\n        t[3*i + 2] = v.z * e[3*i + 2];\r\n    }\r\n    return target;\r\n};\r\n\r\n/**\r\n * Solve Ax=b\r\n * @method solve\r\n * @param {Vec3} b The right hand side\r\n * @param {Vec3} target Optional. Target vector to save in.\r\n * @return {Vec3} The solution x\r\n * @todo should reuse arrays\r\n */\r\nMat3.prototype.solve = function(b,target){\r\n    target = target || new Vec3();\r\n\r\n    // Construct equations\r\n    var nr = 3; // num rows\r\n    var nc = 4; // num cols\r\n    var eqns = [];\r\n    for(var i=0; i<nr*nc; i++){\r\n        eqns.push(0);\r\n    }\r\n    var i,j;\r\n    for(i=0; i<3; i++){\r\n        for(j=0; j<3; j++){\r\n            eqns[i+nc*j] = this.elements[i+3*j];\r\n        }\r\n    }\r\n    eqns[3+4*0] = b.x;\r\n    eqns[3+4*1] = b.y;\r\n    eqns[3+4*2] = b.z;\r\n\r\n    // Compute right upper triangular version of the matrix - Gauss elimination\r\n    var n = 3, k = n, np;\r\n    var kp = 4; // num rows\r\n    var p, els;\r\n    do {\r\n        i = k - n;\r\n        if (eqns[i+nc*i] === 0) {\r\n            // the pivot is null, swap lines\r\n            for (j = i + 1; j < k; j++) {\r\n                if (eqns[i+nc*j] !== 0) {\r\n                    np = kp;\r\n                    do {  // do ligne( i ) = ligne( i ) + ligne( k )\r\n                        p = kp - np;\r\n                        eqns[p+nc*i] += eqns[p+nc*j];\r\n                    } while (--np);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (eqns[i+nc*i] !== 0) {\r\n            for (j = i + 1; j < k; j++) {\r\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\r\n                np = kp;\r\n                do {  // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\r\n                    p = kp - np;\r\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\r\n                } while (--np);\r\n            }\r\n        }\r\n    } while (--n);\r\n\r\n    // Get the solution\r\n    target.z = eqns[2*nc+3] / eqns[2*nc+2];\r\n    target.y = (eqns[1*nc+3] - eqns[1*nc+2]*target.z) / eqns[1*nc+1];\r\n    target.x = (eqns[0*nc+3] - eqns[0*nc+2]*target.z - eqns[0*nc+1]*target.y) / eqns[0*nc+0];\r\n\r\n    if(isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x===Infinity || target.y===Infinity || target.z===Infinity){\r\n        throw \"Could not solve equation! Got x=[\"+target.toString()+\"], b=[\"+b.toString()+\"], A=[\"+this.toString()+\"]\";\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get an element in the matrix by index. Index starts at 0, not 1!!!\r\n * @method e\r\n * @param {Number} row\r\n * @param {Number} column\r\n * @param {Number} value Optional. If provided, the matrix element will be set to this value.\r\n * @return {Number}\r\n */\r\nMat3.prototype.e = function( row , column ,value){\r\n    if(value===undefined){\r\n        return this.elements[column+3*row];\r\n    } else {\r\n        // Set value\r\n        this.elements[column+3*row] = value;\r\n    }\r\n};\r\n\r\n/**\r\n * Copy another matrix into this matrix object.\r\n * @method copy\r\n * @param {Mat3} source\r\n * @return {Mat3} this\r\n */\r\nMat3.prototype.copy = function(source){\r\n    for(var i=0; i < source.elements.length; i++){\r\n        this.elements[i] = source.elements[i];\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Returns a string representation of the matrix.\r\n * @method toString\r\n * @return string\r\n */\r\nMat3.prototype.toString = function(){\r\n    var r = \"\";\r\n    var sep = \",\";\r\n    for(var i=0; i<9; i++){\r\n        r += this.elements[i] + sep;\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * reverse the matrix\r\n * @method reverse\r\n * @param {Mat3} target Optional. Target matrix to save in.\r\n * @return {Mat3} The solution x\r\n */\r\nMat3.prototype.reverse = function(target){\r\n\r\n    target = target || new Mat3();\r\n\r\n    // Construct equations\r\n    var nr = 3; // num rows\r\n    var nc = 6; // num cols\r\n    var eqns = [];\r\n    for(var i=0; i<nr*nc; i++){\r\n        eqns.push(0);\r\n    }\r\n    var i,j;\r\n    for(i=0; i<3; i++){\r\n        for(j=0; j<3; j++){\r\n            eqns[i+nc*j] = this.elements[i+3*j];\r\n        }\r\n    }\r\n    eqns[3+6*0] = 1;\r\n    eqns[3+6*1] = 0;\r\n    eqns[3+6*2] = 0;\r\n    eqns[4+6*0] = 0;\r\n    eqns[4+6*1] = 1;\r\n    eqns[4+6*2] = 0;\r\n    eqns[5+6*0] = 0;\r\n    eqns[5+6*1] = 0;\r\n    eqns[5+6*2] = 1;\r\n\r\n    // Compute right upper triangular version of the matrix - Gauss elimination\r\n    var n = 3, k = n, np;\r\n    var kp = nc; // num rows\r\n    var p;\r\n    do {\r\n        i = k - n;\r\n        if (eqns[i+nc*i] === 0) {\r\n            // the pivot is null, swap lines\r\n            for (j = i + 1; j < k; j++) {\r\n                if (eqns[i+nc*j] !== 0) {\r\n                    np = kp;\r\n                    do { // do line( i ) = line( i ) + line( k )\r\n                        p = kp - np;\r\n                        eqns[p+nc*i] += eqns[p+nc*j];\r\n                    } while (--np);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (eqns[i+nc*i] !== 0) {\r\n            for (j = i + 1; j < k; j++) {\r\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\r\n                np = kp;\r\n                do { // do line( k ) = line( k ) - multiplier * line( i )\r\n                    p = kp - np;\r\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\r\n                } while (--np);\r\n            }\r\n        }\r\n    } while (--n);\r\n\r\n    // eliminate the upper left triangle of the matrix\r\n    i = 2;\r\n    do {\r\n        j = i-1;\r\n        do {\r\n            var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\r\n            np = nc;\r\n            do {\r\n                p = nc - np;\r\n                eqns[p+nc*j] =  eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\r\n            } while (--np);\r\n        } while (j--);\r\n    } while (--i);\r\n\r\n    // operations on the diagonal\r\n    i = 2;\r\n    do {\r\n        var multiplier = 1 / eqns[i+nc*i];\r\n        np = nc;\r\n        do {\r\n            p = nc - np;\r\n            eqns[p+nc*i] = eqns[p+nc*i] * multiplier ;\r\n        } while (--np);\r\n    } while (i--);\r\n\r\n    i = 2;\r\n    do {\r\n        j = 2;\r\n        do {\r\n            p = eqns[nr+j+nc*i];\r\n            if( isNaN( p ) || p ===Infinity ){\r\n                throw \"Could not reverse! A=[\"+this.toString()+\"]\";\r\n            }\r\n            target.e( i , j , p );\r\n        } while (j--);\r\n    } while (i--);\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Set the matrix from a quaterion\r\n * @method setRotationFromQuaternion\r\n * @param {Quaternion} q\r\n */\r\nMat3.prototype.setRotationFromQuaternion = function( q ) {\r\n    var x = q.x, y = q.y, z = q.z, w = q.w,\r\n        x2 = x + x, y2 = y + y, z2 = z + z,\r\n        xx = x * x2, xy = x * y2, xz = x * z2,\r\n        yy = y * y2, yz = y * z2, zz = z * z2,\r\n        wx = w * x2, wy = w * y2, wz = w * z2,\r\n        e = this.elements;\r\n\r\n    e[3*0 + 0] = 1 - ( yy + zz );\r\n    e[3*0 + 1] = xy - wz;\r\n    e[3*0 + 2] = xz + wy;\r\n\r\n    e[3*1 + 0] = xy + wz;\r\n    e[3*1 + 1] = 1 - ( xx + zz );\r\n    e[3*1 + 2] = yz - wx;\r\n\r\n    e[3*2 + 0] = xz - wy;\r\n    e[3*2 + 1] = yz + wx;\r\n    e[3*2 + 2] = 1 - ( xx + yy );\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Transpose the matrix\r\n * @method transpose\r\n * @param  {Mat3} target Where to store the result.\r\n * @return {Mat3} The target Mat3, or a new Mat3 if target was omitted.\r\n */\r\nMat3.prototype.transpose = function( target ) {\r\n    target = target || new Mat3();\r\n\r\n    var Mt = target.elements,\r\n        M = this.elements;\r\n\r\n    for(var i=0; i!==3; i++){\r\n        for(var j=0; j!==3; j++){\r\n            Mt[3*i + j] = M[3*j + i];\r\n        }\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\n},{\"./Vec3\":30}],28:[function(_dereq_,module,exports){\r\nmodule.exports = Quaternion;\r\n\r\nvar Vec3 = _dereq_('./Vec3');\r\n\r\n/**\r\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\r\n * @class Quaternion\r\n * @constructor\r\n * @param {Number} x Multiplier of the imaginary basis vector i.\r\n * @param {Number} y Multiplier of the imaginary basis vector j.\r\n * @param {Number} z Multiplier of the imaginary basis vector k.\r\n * @param {Number} w Multiplier of the real part.\r\n * @see http://en.wikipedia.org/wiki/Quaternion\r\n */\r\nfunction Quaternion(x,y,z,w){\r\n    /**\r\n     * @property {Number} x\r\n     */\r\n    this.x = x!==undefined ? x : 0;\r\n\r\n    /**\r\n     * @property {Number} y\r\n     */\r\n    this.y = y!==undefined ? y : 0;\r\n\r\n    /**\r\n     * @property {Number} z\r\n     */\r\n    this.z = z!==undefined ? z : 0;\r\n\r\n    /**\r\n     * The multiplier of the real quaternion basis vector.\r\n     * @property {Number} w\r\n     */\r\n    this.w = w!==undefined ? w : 1;\r\n}\r\n\r\n/**\r\n * Set the value of the quaternion.\r\n * @method set\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @param {Number} w\r\n */\r\nQuaternion.prototype.set = function(x,y,z,w){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.w = w;\r\n};\r\n\r\n/**\r\n * Convert to a readable format\r\n * @method toString\r\n * @return string\r\n */\r\nQuaternion.prototype.toString = function(){\r\n    return this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w;\r\n};\r\n\r\n/**\r\n * Convert to an Array\r\n * @method toArray\r\n * @return Array\r\n */\r\nQuaternion.prototype.toArray = function(){\r\n    return [this.x, this.y, this.z, this.w];\r\n};\r\n\r\n/**\r\n * Set the quaternion components given an axis and an angle.\r\n * @method setFromAxisAngle\r\n * @param {Vec3} axis\r\n * @param {Number} angle in radians\r\n */\r\nQuaternion.prototype.setFromAxisAngle = function(axis,angle){\r\n    var s = Math.sin(angle*0.5);\r\n    this.x = axis.x * s;\r\n    this.y = axis.y * s;\r\n    this.z = axis.z * s;\r\n    this.w = Math.cos(angle*0.5);\r\n};\r\n\r\n/**\r\n * Converts the quaternion to axis/angle representation.\r\n * @method toAxisAngle\r\n * @param {Vec3} targetAxis Optional. A vector object to reuse for storing the axis.\r\n * @return Array An array, first elemnt is the axis and the second is the angle in radians.\r\n */\r\nQuaternion.prototype.toAxisAngle = function(targetAxis){\r\n    targetAxis = targetAxis || new Vec3();\r\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\r\n    var angle = 2 * Math.acos(this.w);\r\n    var s = Math.sqrt(1-this.w*this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\r\n    if (s < 0.001) { // test to avoid divide by zero, s is always positive due to sqrt\r\n        // if s close to zero then direction of axis not important\r\n        targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\r\n        targetAxis.y = this.y;\r\n        targetAxis.z = this.z;\r\n    } else {\r\n        targetAxis.x = this.x / s; // normalise axis\r\n        targetAxis.y = this.y / s;\r\n        targetAxis.z = this.z / s;\r\n    }\r\n    return [targetAxis,angle];\r\n};\r\n\r\nvar sfv_t1 = new Vec3(),\r\n    sfv_t2 = new Vec3();\r\n\r\n/**\r\n * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\r\n * @method setFromVectors\r\n * @param {Vec3} u\r\n * @param {Vec3} v\r\n */\r\nQuaternion.prototype.setFromVectors = function(u,v){\r\n    if(u.isAntiparallelTo(v)){\r\n        var t1 = sfv_t1;\r\n        var t2 = sfv_t2;\r\n\r\n        u.tangents(t1,t2);\r\n        this.setFromAxisAngle(t1,Math.PI);\r\n    } else {\r\n        var a = u.cross(v);\r\n        this.x = a.x;\r\n        this.y = a.y;\r\n        this.z = a.z;\r\n        this.w = Math.sqrt(Math.pow(u.norm(),2) * Math.pow(v.norm(),2)) + u.dot(v);\r\n        this.normalize();\r\n    }\r\n};\r\n\r\n/**\r\n * Quaternion multiplication\r\n * @method mult\r\n * @param {Quaternion} q\r\n * @param {Quaternion} target Optional.\r\n * @return {Quaternion}\r\n */\r\nvar Quaternion_mult_va = new Vec3();\r\nvar Quaternion_mult_vb = new Vec3();\r\nvar Quaternion_mult_vaxvb = new Vec3();\r\nQuaternion.prototype.mult = function(q,target){\r\n    target = target || new Quaternion();\r\n    var w = this.w,\r\n        va = Quaternion_mult_va,\r\n        vb = Quaternion_mult_vb,\r\n        vaxvb = Quaternion_mult_vaxvb;\r\n\r\n    va.set(this.x,this.y,this.z);\r\n    vb.set(q.x,q.y,q.z);\r\n    target.w = w*q.w - va.dot(vb);\r\n    va.cross(vb,vaxvb);\r\n\r\n    target.x = w * vb.x + q.w*va.x + vaxvb.x;\r\n    target.y = w * vb.y + q.w*va.y + vaxvb.y;\r\n    target.z = w * vb.z + q.w*va.z + vaxvb.z;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get the inverse quaternion rotation.\r\n * @method inverse\r\n * @param {Quaternion} target\r\n * @return {Quaternion}\r\n */\r\nQuaternion.prototype.inverse = function(target){\r\n    var x = this.x, y = this.y, z = this.z, w = this.w;\r\n    target = target || new Quaternion();\r\n\r\n    this.conjugate(target);\r\n    var inorm2 = 1/(x*x + y*y + z*z + w*w);\r\n    target.x *= inorm2;\r\n    target.y *= inorm2;\r\n    target.z *= inorm2;\r\n    target.w *= inorm2;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get the quaternion conjugate\r\n * @method conjugate\r\n * @param {Quaternion} target\r\n * @return {Quaternion}\r\n */\r\nQuaternion.prototype.conjugate = function(target){\r\n    target = target || new Quaternion();\r\n\r\n    target.x = -this.x;\r\n    target.y = -this.y;\r\n    target.z = -this.z;\r\n    target.w = this.w;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Normalize the quaternion. Note that this changes the values of the quaternion.\r\n * @method normalize\r\n */\r\nQuaternion.prototype.normalize = function(){\r\n    var l = Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);\r\n    if ( l === 0 ) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    } else {\r\n        l = 1 / l;\r\n        this.x *= l;\r\n        this.y *= l;\r\n        this.z *= l;\r\n        this.w *= l;\r\n    }\r\n};\r\n\r\n/**\r\n * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\r\n * @method normalizeFast\r\n * @see http://jsperf.com/fast-quaternion-normalization\r\n * @author unphased, https://github.com/unphased\r\n */\r\nQuaternion.prototype.normalizeFast = function () {\r\n    var f = (3.0-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2.0;\r\n    if ( f === 0 ) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    } else {\r\n        this.x *= f;\r\n        this.y *= f;\r\n        this.z *= f;\r\n        this.w *= f;\r\n    }\r\n};\r\n\r\n/**\r\n * Multiply the quaternion by a vector\r\n * @method vmult\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional\r\n * @return {Vec3}\r\n */\r\nQuaternion.prototype.vmult = function(v,target){\r\n    target = target || new Vec3();\r\n\r\n    var x = v.x,\r\n        y = v.y,\r\n        z = v.z;\r\n\r\n    var qx = this.x,\r\n        qy = this.y,\r\n        qz = this.z,\r\n        qw = this.w;\r\n\r\n    // q*v\r\n    var ix =  qw * x + qy * z - qz * y,\r\n    iy =  qw * y + qz * x - qx * z,\r\n    iz =  qw * z + qx * y - qy * x,\r\n    iw = -qx * x - qy * y - qz * z;\r\n\r\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Copies value of source to this quaternion.\r\n * @method copy\r\n * @param {Quaternion} source\r\n * @return {Quaternion} this\r\n */\r\nQuaternion.prototype.copy = function(source){\r\n    this.x = source.x;\r\n    this.y = source.y;\r\n    this.z = source.z;\r\n    this.w = source.w;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: http://www.euclideanspace.com/maths/standards/index.htm\r\n * @method toEuler\r\n * @param {Vec3} target\r\n * @param string order Three-character string e.g. \"YZX\", which also is default.\r\n */\r\nQuaternion.prototype.toEuler = function(target,order){\r\n    order = order || \"YZX\";\r\n\r\n    var heading, attitude, bank;\r\n    var x = this.x, y = this.y, z = this.z, w = this.w;\r\n\r\n    switch(order){\r\n    case \"YZX\":\r\n        var test = x*y + z*w;\r\n        if (test > 0.499) { // singularity at north pole\r\n            heading = 2 * Math.atan2(x,w);\r\n            attitude = Math.PI/2;\r\n            bank = 0;\r\n        }\r\n        if (test < -0.499) { // singularity at south pole\r\n            heading = -2 * Math.atan2(x,w);\r\n            attitude = - Math.PI/2;\r\n            bank = 0;\r\n        }\r\n        if(isNaN(heading)){\r\n            var sqx = x*x;\r\n            var sqy = y*y;\r\n            var sqz = z*z;\r\n            heading = Math.atan2(2*y*w - 2*x*z , 1 - 2*sqy - 2*sqz); // Heading\r\n            attitude = Math.asin(2*test); // attitude\r\n            bank = Math.atan2(2*x*w - 2*y*z , 1 - 2*sqx - 2*sqz); // bank\r\n        }\r\n        break;\r\n    default:\r\n        throw new Error(\"Euler order \"+order+\" not supported yet.\");\r\n    }\r\n\r\n    target.y = heading;\r\n    target.z = attitude;\r\n    target.x = bank;\r\n};\r\n\r\n/**\r\n * See http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\r\n * @method setFromEuler\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @param {String} order The order to apply angles: 'XYZ' or 'YXZ' or any other combination\r\n */\r\nQuaternion.prototype.setFromEuler = function ( x, y, z, order ) {\r\n    order = order || \"XYZ\";\r\n\r\n    var c1 = Math.cos( x / 2 );\r\n    var c2 = Math.cos( y / 2 );\r\n    var c3 = Math.cos( z / 2 );\r\n    var s1 = Math.sin( x / 2 );\r\n    var s2 = Math.sin( y / 2 );\r\n    var s3 = Math.sin( z / 2 );\r\n\r\n    if ( order === 'XYZ' ) {\r\n\r\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    } else if ( order === 'YXZ' ) {\r\n\r\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    } else if ( order === 'ZXY' ) {\r\n\r\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    } else if ( order === 'ZYX' ) {\r\n\r\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    } else if ( order === 'YZX' ) {\r\n\r\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    } else if ( order === 'XZY' ) {\r\n\r\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    }\r\n\r\n    return this;\r\n\r\n};\r\n\r\nQuaternion.prototype.clone = function(){\r\n    return new Quaternion(this.x, this.y, this.z, this.w);\r\n};\r\n},{\"./Vec3\":30}],29:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('./Vec3');\r\nvar Quaternion = _dereq_('./Quaternion');\r\n\r\nmodule.exports = Transform;\r\n\r\n/**\r\n * @class Transform\r\n * @constructor\r\n */\r\nfunction Transform(options) {\r\n    options = options || {};\r\n\r\n\t/**\r\n\t * @property {Vec3} position\r\n\t */\r\n\tthis.position = new Vec3();\r\n    if(options.position){\r\n        this.position.copy(options.position);\r\n    }\r\n\r\n\t/**\r\n\t * @property {Quaternion} quaternion\r\n\t */\r\n\tthis.quaternion = new Quaternion();\r\n    if(options.quaternion){\r\n        this.quaternion.copy(options.quaternion);\r\n    }\r\n}\r\n\r\nvar tmpQuat = new Quaternion();\r\n\r\n/**\r\n * @static\r\n * @method pointToLocaFrame\r\n * @param {Vec3} position\r\n * @param {Quaternion} quaternion\r\n * @param {Vec3} worldPoint\r\n * @param {Vec3} result\r\n */\r\nTransform.pointToLocalFrame = function(position, quaternion, worldPoint, result){\r\n    var result = result || new Vec3();\r\n    worldPoint.vsub(position, result);\r\n    quaternion.conjugate(tmpQuat);\r\n    tmpQuat.vmult(result, result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get a global point in local transform coordinates.\r\n * @method pointToLocal\r\n * @param  {Vec3} point\r\n * @param  {Vec3} result\r\n * @return {Vec3} The \"result\" vector object\r\n */\r\nTransform.prototype.pointToLocal = function(worldPoint, result){\r\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\r\n};\r\n\r\n/**\r\n * @static\r\n * @method pointToWorldFrame\r\n * @param {Vec3} position\r\n * @param {Vec3} quaternion\r\n * @param {Vec3} localPoint\r\n * @param {Vec3} result\r\n */\r\nTransform.pointToWorldFrame = function(position, quaternion, localPoint, result){\r\n    var result = result || new Vec3();\r\n    quaternion.vmult(localPoint, result);\r\n    result.vadd(position, result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Get a local point in global transform coordinates.\r\n * @method pointToWorld\r\n * @param  {Vec3} point\r\n * @param  {Vec3} result\r\n * @return {Vec3} The \"result\" vector object\r\n */\r\nTransform.prototype.pointToWorld = function(localPoint, result){\r\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\r\n};\r\n\r\n\r\nTransform.prototype.vectorToWorldFrame = function(localVector, result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.vmult(localVector, result);\r\n    return result;\r\n};\r\n\r\nTransform.vectorToWorldFrame = function(quaternion, localVector, result){\r\n    quaternion.vmult(localVector, result);\r\n    return result;\r\n};\r\n\r\nTransform.vectorToLocalFrame = function(position, quaternion, worldVector, result){\r\n    var result = result || new Vec3();\r\n    quaternion.w *= -1;\r\n    quaternion.vmult(worldVector, result);\r\n    quaternion.w *= -1;\r\n    return result;\r\n};\r\n\r\n},{\"./Quaternion\":28,\"./Vec3\":30}],30:[function(_dereq_,module,exports){\r\nmodule.exports = Vec3;\r\n\r\nvar Mat3 = _dereq_('./Mat3');\r\n\r\n/**\r\n * 3-dimensional vector\r\n * @class Vec3\r\n * @constructor\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @author schteppe\r\n * @example\r\n *     var v = new Vec3(1, 2, 3);\r\n *     console.log('x=' + v.x); // x=1\r\n */\r\nfunction Vec3(x,y,z){\r\n    /**\r\n     * @property x\r\n     * @type {Number}\r\n     */\r\n    this.x = x||0.0;\r\n\r\n    /**\r\n     * @property y\r\n     * @type {Number}\r\n     */\r\n    this.y = y||0.0;\r\n\r\n    /**\r\n     * @property z\r\n     * @type {Number}\r\n     */\r\n    this.z = z||0.0;\r\n}\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} ZERO\r\n */\r\nVec3.ZERO = new Vec3(0, 0, 0);\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} UNIT_X\r\n */\r\nVec3.UNIT_X = new Vec3(1, 0, 0);\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} UNIT_Y\r\n */\r\nVec3.UNIT_Y = new Vec3(0, 1, 0);\r\n\r\n/**\r\n * @static\r\n * @property {Vec3} UNIT_Z\r\n */\r\nVec3.UNIT_Z = new Vec3(0, 0, 1);\r\n\r\n/**\r\n * Vector cross product\r\n * @method cross\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional. Target to save in.\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.cross = function(v,target){\r\n    var vx=v.x, vy=v.y, vz=v.z, x=this.x, y=this.y, z=this.z;\r\n    target = target || new Vec3();\r\n\r\n    target.x = (y * vz) - (z * vy);\r\n    target.y = (z * vx) - (x * vz);\r\n    target.z = (x * vy) - (y * vx);\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n * Set the vectors' 3 elements\r\n * @method set\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} z\r\n * @return Vec3\r\n */\r\nVec3.prototype.set = function(x,y,z){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set all components of the vector to zero.\r\n * @method setZero\r\n */\r\nVec3.prototype.setZero = function(){\r\n    this.x = this.y = this.z = 0;\r\n};\r\n\r\n/**\r\n * Vector addition\r\n * @method vadd\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional.\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.vadd = function(v,target){\r\n    if(target){\r\n        target.x = v.x + this.x;\r\n        target.y = v.y + this.y;\r\n        target.z = v.z + this.z;\r\n    } else {\r\n        return new Vec3(this.x + v.x,\r\n                               this.y + v.y,\r\n                               this.z + v.z);\r\n    }\r\n};\r\n\r\n/**\r\n * Vector subtraction\r\n * @method vsub\r\n * @param {Vec3} v\r\n * @param {Vec3} target Optional. Target to save in.\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.vsub = function(v,target){\r\n    if(target){\r\n        target.x = this.x - v.x;\r\n        target.y = this.y - v.y;\r\n        target.z = this.z - v.z;\r\n    } else {\r\n        return new Vec3(this.x-v.x,\r\n                               this.y-v.y,\r\n                               this.z-v.z);\r\n    }\r\n};\r\n\r\n/**\r\n * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\r\n * @method crossmat\r\n * @see http://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf\r\n * @return {Mat3}\r\n */\r\nVec3.prototype.crossmat = function(){\r\n    return new Mat3([     0,  -this.z,   this.y,\r\n                            this.z,        0,  -this.x,\r\n                           -this.y,   this.x,        0]);\r\n};\r\n\r\n/**\r\n * Normalize the vector. Note that this changes the values in the vector.\r\n * @method normalize\r\n * @return {Number} Returns the norm of the vector\r\n */\r\nVec3.prototype.normalize = function(){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var n = Math.sqrt(x*x + y*y + z*z);\r\n    if(n>0.0){\r\n        var invN = 1/n;\r\n        this.x *= invN;\r\n        this.y *= invN;\r\n        this.z *= invN;\r\n    } else {\r\n        // Make something up\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n    return n;\r\n};\r\n\r\n/**\r\n * Get the version of this vector that is of length 1.\r\n * @method unit\r\n * @param {Vec3} target Optional target to save in\r\n * @return {Vec3} Returns the unit vector\r\n */\r\nVec3.prototype.unit = function(target){\r\n    target = target || new Vec3();\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var ninv = Math.sqrt(x*x + y*y + z*z);\r\n    if(ninv>0.0){\r\n        ninv = 1.0/ninv;\r\n        target.x = x * ninv;\r\n        target.y = y * ninv;\r\n        target.z = z * ninv;\r\n    } else {\r\n        target.x = 1;\r\n        target.y = 0;\r\n        target.z = 0;\r\n    }\r\n    return target;\r\n};\r\n\r\n/**\r\n * Get the length of the vector\r\n * @method norm\r\n * @return {Number}\r\n * @deprecated Use .length() instead\r\n */\r\nVec3.prototype.norm = function(){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    return Math.sqrt(x*x + y*y + z*z);\r\n};\r\n\r\n/**\r\n * Get the length of the vector\r\n * @method length\r\n * @return {Number}\r\n */\r\nVec3.prototype.length = Vec3.prototype.norm;\r\n\r\n/**\r\n * Get the squared length of the vector\r\n * @method norm2\r\n * @return {Number}\r\n * @deprecated Use .lengthSquared() instead.\r\n */\r\nVec3.prototype.norm2 = function(){\r\n    return this.dot(this);\r\n};\r\n\r\n/**\r\n * Get the squared length of the vector.\r\n * @method lengthSquared\r\n * @return {Number}\r\n */\r\nVec3.prototype.lengthSquared = Vec3.prototype.norm2;\r\n\r\n/**\r\n * Get distance from this point to another point\r\n * @method distanceTo\r\n * @param  {Vec3} p\r\n * @return {Number}\r\n */\r\nVec3.prototype.distanceTo = function(p){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var px=p.x, py=p.y, pz=p.z;\r\n    return Math.sqrt((px-x)*(px-x)+\r\n                     (py-y)*(py-y)+\r\n                     (pz-z)*(pz-z));\r\n};\r\n\r\n/**\r\n * Get squared distance from this point to another point\r\n * @method distanceSquared\r\n * @param  {Vec3} p\r\n * @return {Number}\r\n */\r\nVec3.prototype.distanceSquared = function(p){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    var px=p.x, py=p.y, pz=p.z;\r\n    return (px-x)*(px-x) + (py-y)*(py-y) + (pz-z)*(pz-z);\r\n};\r\n\r\n/**\r\n * Multiply all the components of the vector with a scalar.\r\n * @deprecated Use .scale instead\r\n * @method mult\r\n * @param {Number} scalar\r\n * @param {Vec3} target The vector to save the result in.\r\n * @return {Vec3}\r\n * @deprecated Use .scale() instead\r\n */\r\nVec3.prototype.mult = function(scalar,target){\r\n    target = target || new Vec3();\r\n    var x = this.x,\r\n        y = this.y,\r\n        z = this.z;\r\n    target.x = scalar * x;\r\n    target.y = scalar * y;\r\n    target.z = scalar * z;\r\n    return target;\r\n};\r\n\r\n/**\r\n * Multiply the vector with a scalar.\r\n * @method scale\r\n * @param {Number} scalar\r\n * @param {Vec3} target\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.scale = Vec3.prototype.mult;\r\n\r\n/**\r\n * Calculate dot product\r\n * @method dot\r\n * @param {Vec3} v\r\n * @return {Number}\r\n */\r\nVec3.prototype.dot = function(v){\r\n    return this.x * v.x + this.y * v.y + this.z * v.z;\r\n};\r\n\r\n/**\r\n * @method isZero\r\n * @return bool\r\n */\r\nVec3.prototype.isZero = function(){\r\n    return this.x===0 && this.y===0 && this.z===0;\r\n};\r\n\r\n/**\r\n * Make the vector point in the opposite direction.\r\n * @method negate\r\n * @param {Vec3} target Optional target to save in\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.negate = function(target){\r\n    target = target || new Vec3();\r\n    target.x = -this.x;\r\n    target.y = -this.y;\r\n    target.z = -this.z;\r\n    return target;\r\n};\r\n\r\n/**\r\n * Compute two artificial tangents to the vector\r\n * @method tangents\r\n * @param {Vec3} t1 Vector object to save the first tangent in\r\n * @param {Vec3} t2 Vector object to save the second tangent in\r\n */\r\nvar Vec3_tangents_n = new Vec3();\r\nvar Vec3_tangents_randVec = new Vec3();\r\nVec3.prototype.tangents = function(t1,t2){\r\n    var norm = this.norm();\r\n    if(norm>0.0){\r\n        var n = Vec3_tangents_n;\r\n        var inorm = 1/norm;\r\n        n.set(this.x*inorm,this.y*inorm,this.z*inorm);\r\n        var randVec = Vec3_tangents_randVec;\r\n        if(Math.abs(n.x) < 0.9){\r\n            randVec.set(1,0,0);\r\n            n.cross(randVec,t1);\r\n        } else {\r\n            randVec.set(0,1,0);\r\n            n.cross(randVec,t1);\r\n        }\r\n        n.cross(t1,t2);\r\n    } else {\r\n        // The normal length is zero, make something up\r\n        t1.set(1, 0, 0);\r\n        t2.set(0, 1, 0);\r\n    }\r\n};\r\n\r\n/**\r\n * Converts to a more readable format\r\n * @method toString\r\n * @return string\r\n */\r\nVec3.prototype.toString = function(){\r\n    return this.x+\",\"+this.y+\",\"+this.z;\r\n};\r\n\r\n/**\r\n * Converts to an array\r\n * @method toArray\r\n * @return Array\r\n */\r\nVec3.prototype.toArray = function(){\r\n    return [this.x, this.y, this.z];\r\n};\r\n\r\n/**\r\n * Copies value of source to this vector.\r\n * @method copy\r\n * @param {Vec3} source\r\n * @return {Vec3} this\r\n */\r\nVec3.prototype.copy = function(source){\r\n    this.x = source.x;\r\n    this.y = source.y;\r\n    this.z = source.z;\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Do a linear interpolation between two vectors\r\n * @method lerp\r\n * @param {Vec3} v\r\n * @param {Number} t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\r\n * @param {Vec3} target\r\n */\r\nVec3.prototype.lerp = function(v,t,target){\r\n    var x=this.x, y=this.y, z=this.z;\r\n    target.x = x + (v.x-x)*t;\r\n    target.y = y + (v.y-y)*t;\r\n    target.z = z + (v.z-z)*t;\r\n};\r\n\r\n/**\r\n * Check if a vector equals is almost equal to another one.\r\n * @method almostEquals\r\n * @param {Vec3} v\r\n * @param {Number} precision\r\n * @return bool\r\n */\r\nVec3.prototype.almostEquals = function(v,precision){\r\n    if(precision===undefined){\r\n        precision = 1e-6;\r\n    }\r\n    if( Math.abs(this.x-v.x)>precision ||\r\n        Math.abs(this.y-v.y)>precision ||\r\n        Math.abs(this.z-v.z)>precision){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Check if a vector is almost zero\r\n * @method almostZero\r\n * @param {Number} precision\r\n */\r\nVec3.prototype.almostZero = function(precision){\r\n    if(precision===undefined){\r\n        precision = 1e-6;\r\n    }\r\n    if( Math.abs(this.x)>precision ||\r\n        Math.abs(this.y)>precision ||\r\n        Math.abs(this.z)>precision){\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nvar antip_neg = new Vec3();\r\n\r\n/**\r\n * Check if the vector is anti-parallel to another vector.\r\n * @method isAntiparallelTo\r\n * @param  {Vec3}  v\r\n * @param  {Number}  precision Set to zero for exact comparisons\r\n * @return {Boolean}\r\n */\r\nVec3.prototype.isAntiparallelTo = function(v,precision){\r\n    this.negate(antip_neg);\r\n    return antip_neg.almostEquals(v,precision);\r\n};\r\n\r\n/**\r\n * Clone the vector\r\n * @method clone\r\n * @return {Vec3}\r\n */\r\nVec3.prototype.clone = function(){\r\n    return new Vec3(this.x, this.y, this.z);\r\n};\r\n},{\"./Mat3\":27}],31:[function(_dereq_,module,exports){\r\nmodule.exports = Body;\r\n\r\nvar EventTarget = _dereq_('../utils/EventTarget');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Mat3 = _dereq_('../math/Mat3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Material = _dereq_('../material/Material');\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Box = _dereq_('../shapes/Box');\r\n\r\n/**\r\n * Base class for all body types.\r\n * @class Body\r\n * @constructor\r\n * @extends EventTarget\r\n * @param {object} [options]\r\n * @param {Vec3} [options.position]\r\n * @param {Vec3} [options.velocity]\r\n * @param {Vec3} [options.angularVelocity]\r\n * @param {Quaternion} [options.quaternion]\r\n * @param {number} [options.mass]\r\n * @param {Material} [options.material]\r\n * @param {number} [options.type]\r\n * @param {number} [options.linearDamping=0.01]\r\n * @param {number} [options.angularDamping=0.01]\r\n * @param {boolean} [options.allowSleep=true]\r\n * @param {number} [options.sleepSpeedLimit=0.1]\r\n * @param {number} [options.sleepTimeLimit=1]\r\n * @param {number} [options.collisionFilterGroup=1]\r\n * @param {number} [options.collisionFilterMask=1]\r\n * @param {boolean} [options.fixedRotation=false]\r\n * @param {Body} [options.shape]\r\n * @example\r\n *     var body = new Body({\r\n *         mass: 1\r\n *     });\r\n *     var shape = new Sphere(1);\r\n *     body.addShape(shape);\r\n *     world.add(body);\r\n */\r\nfunction Body(options){\r\n    options = options || {};\r\n\r\n    EventTarget.apply(this);\r\n\r\n    this.id = Body.idCounter++;\r\n\r\n    /**\r\n     * Reference to the world the body is living in\r\n     * @property world\r\n     * @type {World}\r\n     */\r\n    this.world = null;\r\n\r\n    /**\r\n     * Callback function that is used BEFORE stepping the system. Use it to apply forces, for example. Inside the function, \"this\" will refer to this Body object.\r\n     * @property preStep\r\n     * @type {Function}\r\n     * @deprecated Use World events instead\r\n     */\r\n    this.preStep = null;\r\n\r\n    /**\r\n     * Callback function that is used AFTER stepping the system. Inside the function, \"this\" will refer to this Body object.\r\n     * @property postStep\r\n     * @type {Function}\r\n     * @deprecated Use World events instead\r\n     */\r\n    this.postStep = null;\r\n\r\n    this.vlambda = new Vec3();\r\n\r\n    /**\r\n     * @property {Number} collisionFilterGroup\r\n     */\r\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) === 'number' ? options.collisionFilterGroup : 1;\r\n\r\n    /**\r\n     * @property {Number} collisionFilterMask\r\n     */\r\n    this.collisionFilterMask = typeof(options.collisionFilterMask) === 'number' ? options.collisionFilterMask : 1;\r\n\r\n    /**\r\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\r\n     * @property {Number} collisionResponse\r\n     */\r\n\tthis.collisionResponse = true;\r\n\r\n    /**\r\n     * @property position\r\n     * @type {Vec3}\r\n     */\r\n    this.position = new Vec3();\r\n\r\n    if(options.position){\r\n        this.position.copy(options.position);\r\n    }\r\n\r\n    /**\r\n     * @property {Vec3} previousPosition\r\n     */\r\n    this.previousPosition = new Vec3();\r\n\r\n    /**\r\n     * Initial position of the body\r\n     * @property initPosition\r\n     * @type {Vec3}\r\n     */\r\n    this.initPosition = new Vec3();\r\n\r\n    /**\r\n     * @property velocity\r\n     * @type {Vec3}\r\n     */\r\n    this.velocity = new Vec3();\r\n\r\n    if(options.velocity){\r\n        this.velocity.copy(options.velocity);\r\n    }\r\n\r\n    /**\r\n     * @property initVelocity\r\n     * @type {Vec3}\r\n     */\r\n    this.initVelocity = new Vec3();\r\n\r\n    /**\r\n     * Linear force on the body\r\n     * @property force\r\n     * @type {Vec3}\r\n     */\r\n    this.force = new Vec3();\r\n\r\n    var mass = typeof(options.mass) === 'number' ? options.mass : 0;\r\n\r\n    /**\r\n     * @property mass\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    this.mass = mass;\r\n\r\n    /**\r\n     * @property invMass\r\n     * @type {Number}\r\n     */\r\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\r\n\r\n    /**\r\n     * @property material\r\n     * @type {Material}\r\n     */\r\n    this.material = options.material || null;\r\n\r\n    /**\r\n     * @property linearDamping\r\n     * @type {Number}\r\n     */\r\n    this.linearDamping = typeof(options.linearDamping) === 'number' ? options.linearDamping : 0.01;\r\n\r\n    /**\r\n     * One of: Body.DYNAMIC, Body.STATIC and Body.KINEMATIC.\r\n     * @property type\r\n     * @type {Number}\r\n     */\r\n    this.type = (mass <= 0.0 ? Body.STATIC : Body.DYNAMIC);\r\n    if(typeof(options.type) === typeof(Body.STATIC)){\r\n        this.type = options.type;\r\n    }\r\n\r\n    /**\r\n     * If true, the body will automatically fall to sleep.\r\n     * @property allowSleep\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    this.allowSleep = typeof(options.allowSleep) !== 'undefined' ? options.allowSleep : true;\r\n\r\n    /**\r\n     * Current sleep state.\r\n     * @property sleepState\r\n     * @type {Number}\r\n     */\r\n    this.sleepState = 0;\r\n\r\n    /**\r\n     * If the speed (the norm of the velocity) is smaller than this value, the body is considered sleepy.\r\n     * @property sleepSpeedLimit\r\n     * @type {Number}\r\n     * @default 0.1\r\n     */\r\n    this.sleepSpeedLimit = typeof(options.sleepSpeedLimit) !== 'undefined' ? options.sleepSpeedLimit : 0.1;\r\n\r\n    /**\r\n     * If the body has been sleepy for this sleepTimeLimit seconds, it is considered sleeping.\r\n     * @property sleepTimeLimit\r\n     * @type {Number}\r\n     * @default 1\r\n     */\r\n    this.sleepTimeLimit = typeof(options.sleepTimeLimit) !== 'undefined' ? options.sleepTimeLimit : 1;\r\n\r\n    this.timeLastSleepy = 0;\r\n\r\n    this._wakeUpAfterNarrowphase = false;\r\n\r\n\r\n    /**\r\n     * Rotational force on the body, around center of mass\r\n     * @property {Vec3} torque\r\n     */\r\n    this.torque = new Vec3();\r\n\r\n    /**\r\n     * Orientation of the body\r\n     * @property quaternion\r\n     * @type {Quaternion}\r\n     */\r\n    this.quaternion = new Quaternion();\r\n\r\n    if(options.quaternion){\r\n        this.quaternion.copy(options.quaternion);\r\n    }\r\n\r\n    /**\r\n     * @property initQuaternion\r\n     * @type {Quaternion}\r\n     */\r\n    this.initQuaternion = new Quaternion();\r\n\r\n    /**\r\n     * @property angularVelocity\r\n     * @type {Vec3}\r\n     */\r\n    this.angularVelocity = new Vec3();\r\n\r\n    if(options.angularVelocity){\r\n        this.angularVelocity.copy(options.angularVelocity);\r\n    }\r\n\r\n    /**\r\n     * @property initAngularVelocity\r\n     * @type {Vec3}\r\n     */\r\n    this.initAngularVelocity = new Vec3();\r\n\r\n    this.interpolatedPosition = new Vec3();\r\n    this.interpolatedQuaternion = new Quaternion();\r\n\r\n    /**\r\n     * @property shapes\r\n     * @type {array}\r\n     */\r\n    this.shapes = [];\r\n\r\n    /**\r\n     * @property shapeOffsets\r\n     * @type {array}\r\n     */\r\n    this.shapeOffsets = [];\r\n\r\n    /**\r\n     * @property shapeOrientations\r\n     * @type {array}\r\n     */\r\n    this.shapeOrientations = [];\r\n\r\n    /**\r\n     * @property inertia\r\n     * @type {Vec3}\r\n     */\r\n    this.inertia = new Vec3();\r\n\r\n    /**\r\n     * @property {Vec3} invInertia\r\n     */\r\n    this.invInertia = new Vec3();\r\n\r\n    /**\r\n     * @property {Mat3} invInertiaWorld\r\n     */\r\n    this.invInertiaWorld = new Mat3();\r\n\r\n    this.invMassSolve = 0;\r\n\r\n    /**\r\n     * @property {Vec3} invInertiaSolve\r\n     */\r\n    this.invInertiaSolve = new Vec3();\r\n\r\n    /**\r\n     * @property {Mat3} invInertiaWorldSolve\r\n     */\r\n    this.invInertiaWorldSolve = new Mat3();\r\n\r\n    /**\r\n     * Set to true if you don't want the body to rotate. Make sure to run .updateMassProperties() after changing this.\r\n     * @property {Boolean} fixedRotation\r\n     * @default false\r\n     */\r\n    this.fixedRotation = typeof(options.fixedRotation) !== \"undefined\" ? options.fixedRotation : false;\r\n\r\n    /**\r\n     * @property {Number} angularDamping\r\n     */\r\n    this.angularDamping = typeof(options.angularDamping) !== 'undefined' ? options.angularDamping : 0.01;\r\n\r\n    /**\r\n     * @property aabb\r\n     * @type {AABB}\r\n     */\r\n    this.aabb = new AABB();\r\n\r\n    /**\r\n     * Indicates if the AABB needs to be updated before use.\r\n     * @property aabbNeedsUpdate\r\n     * @type {Boolean}\r\n     */\r\n    this.aabbNeedsUpdate = true;\r\n\r\n    this.wlambda = new Vec3();\r\n\r\n    if(options.shape){\r\n        this.addShape(options.shape);\r\n    }\r\n\r\n    this.updateMassProperties();\r\n}\r\nBody.prototype = new EventTarget();\r\nBody.prototype.constructor = Body;\r\n\r\n/**\r\n * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\r\n * @static\r\n * @property DYNAMIC\r\n * @type {Number}\r\n */\r\nBody.DYNAMIC = 1;\r\n\r\n/**\r\n * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\r\n * @static\r\n * @property STATIC\r\n * @type {Number}\r\n */\r\nBody.STATIC = 2;\r\n\r\n/**\r\n * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\r\n * @static\r\n * @property KINEMATIC\r\n * @type {Number}\r\n */\r\nBody.KINEMATIC = 4;\r\n\r\n\r\n\r\n/**\r\n * @static\r\n * @property AWAKE\r\n * @type {number}\r\n */\r\nBody.AWAKE = 0;\r\n\r\n/**\r\n * @static\r\n * @property SLEEPY\r\n * @type {number}\r\n */\r\nBody.SLEEPY = 1;\r\n\r\n/**\r\n * @static\r\n * @property SLEEPING\r\n * @type {number}\r\n */\r\nBody.SLEEPING = 2;\r\n\r\nBody.idCounter = 0;\r\n\r\n/**\r\n * Wake the body up.\r\n * @method wakeUp\r\n */\r\nBody.prototype.wakeUp = function(){\r\n    var s = this.sleepState;\r\n    this.sleepState = 0;\r\n    if(s === Body.SLEEPING){\r\n        this.dispatchEvent({type:\"wakeup\"});\r\n    }\r\n};\r\n\r\n/**\r\n * Force body sleep\r\n * @method sleep\r\n */\r\nBody.prototype.sleep = function(){\r\n    this.sleepState = Body.SLEEPING;\r\n    this.velocity.set(0,0,0);\r\n    this.angularVelocity.set(0,0,0);\r\n};\r\n\r\nBody.sleepyEvent = {\r\n    type: \"sleepy\"\r\n};\r\n\r\nBody.sleepEvent = {\r\n    type: \"sleep\"\r\n};\r\n\r\n/**\r\n * Called every timestep to update internal sleep timer and change sleep state if needed.\r\n * @method sleepTick\r\n * @param {Number} time The world time in seconds\r\n */\r\nBody.prototype.sleepTick = function(time){\r\n    if(this.allowSleep){\r\n        var sleepState = this.sleepState;\r\n        var speedSquared = this.velocity.norm2() + this.angularVelocity.norm2();\r\n        var speedLimitSquared = Math.pow(this.sleepSpeedLimit,2);\r\n        if(sleepState===Body.AWAKE && speedSquared < speedLimitSquared){\r\n            this.sleepState = Body.SLEEPY; // Sleepy\r\n            this.timeLastSleepy = time;\r\n            this.dispatchEvent(Body.sleepyEvent);\r\n        } else if(sleepState===Body.SLEEPY && speedSquared > speedLimitSquared){\r\n            this.wakeUp(); // Wake up\r\n        } else if(sleepState===Body.SLEEPY && (time - this.timeLastSleepy ) > this.sleepTimeLimit){\r\n            this.sleep(); // Sleeping\r\n            this.dispatchEvent(Body.sleepEvent);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\r\n * @method updateSolveMassProperties\r\n */\r\nBody.prototype.updateSolveMassProperties = function(){\r\n    if(this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC){\r\n        this.invMassSolve = 0;\r\n        this.invInertiaSolve.setZero();\r\n        this.invInertiaWorldSolve.setZero();\r\n    } else {\r\n        this.invMassSolve = this.invMass;\r\n        this.invInertiaSolve.copy(this.invInertia);\r\n        this.invInertiaWorldSolve.copy(this.invInertiaWorld);\r\n    }\r\n};\r\n\r\n/**\r\n * Convert a world point to local body frame.\r\n * @method pointToLocalFrame\r\n * @param  {Vec3} worldPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.pointToLocalFrame = function(worldPoint,result){\r\n    var result = result || new Vec3();\r\n    worldPoint.vsub(this.position,result);\r\n    this.quaternion.conjugate().vmult(result,result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Convert a world vector to local body frame.\r\n * @method vectorToLocalFrame\r\n * @param  {Vec3} worldPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.vectorToLocalFrame = function(worldVector, result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.conjugate().vmult(worldVector,result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Convert a local body point to world frame.\r\n * @method pointToWorldFrame\r\n * @param  {Vec3} localPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.pointToWorldFrame = function(localPoint,result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.vmult(localPoint,result);\r\n    result.vadd(this.position,result);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Convert a local body point to world frame.\r\n * @method vectorToWorldFrame\r\n * @param  {Vec3} localVector\r\n * @param  {Vec3} result\r\n * @return {Vec3}\r\n */\r\nBody.prototype.vectorToWorldFrame = function(localVector, result){\r\n    var result = result || new Vec3();\r\n    this.quaternion.vmult(localVector, result);\r\n    return result;\r\n};\r\n\r\nvar tmpVec = new Vec3();\r\nvar tmpQuat = new Quaternion();\r\n\r\n/**\r\n * Add a shape to the body with a local offset and orientation.\r\n * @method addShape\r\n * @param {Shape} shape\r\n * @param {Vec3} offset\r\n * @param {Quaternion} quaternion\r\n * @return {Body} The body object, for chainability.\r\n */\r\nBody.prototype.addShape = function(shape, _offset, _orientation){\r\n    var offset = new Vec3();\r\n    var orientation = new Quaternion();\r\n\r\n    if(_offset){\r\n        offset.copy(_offset);\r\n    }\r\n    if(_orientation){\r\n        orientation.copy(_orientation);\r\n    }\r\n\r\n    this.shapes.push(shape);\r\n    this.shapeOffsets.push(offset);\r\n    this.shapeOrientations.push(orientation);\r\n    this.updateMassProperties();\r\n    this.updateBoundingRadius();\r\n\r\n    this.aabbNeedsUpdate = true;\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Update the bounding radius of the body. Should be done if any of the shapes are changed.\r\n * @method updateBoundingRadius\r\n */\r\nBody.prototype.updateBoundingRadius = function(){\r\n    var shapes = this.shapes,\r\n        shapeOffsets = this.shapeOffsets,\r\n        N = shapes.length,\r\n        radius = 0;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var shape = shapes[i];\r\n        shape.updateBoundingSphereRadius();\r\n        var offset = shapeOffsets[i].norm(),\r\n            r = shape.boundingSphereRadius;\r\n        if(offset + r > radius){\r\n            radius = offset + r;\r\n        }\r\n    }\r\n\r\n    this.boundingRadius = radius;\r\n};\r\n\r\nvar computeAABB_shapeAABB = new AABB();\r\n\r\n/**\r\n * Updates the .aabb\r\n * @method computeAABB\r\n * @todo rename to updateAABB()\r\n */\r\nBody.prototype.computeAABB = function(){\r\n    var shapes = this.shapes,\r\n        shapeOffsets = this.shapeOffsets,\r\n        shapeOrientations = this.shapeOrientations,\r\n        N = shapes.length,\r\n        offset = tmpVec,\r\n        orientation = tmpQuat,\r\n        bodyQuat = this.quaternion,\r\n        aabb = this.aabb,\r\n        shapeAABB = computeAABB_shapeAABB;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var shape = shapes[i];\r\n\r\n        // Get shape world quaternion\r\n        shapeOrientations[i].mult(bodyQuat, orientation);\r\n\r\n        // Get shape world position\r\n        orientation.vmult(shapeOffsets[i], offset);\r\n        offset.vadd(this.position, offset);\r\n\r\n        // vec2.rotate(offset, shapeOffsets[i], bodyAngle);\r\n        // vec2.add(offset, offset, this.position);\r\n\r\n        // Get shape AABB\r\n        shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\r\n\r\n        if(i === 0){\r\n            aabb.copy(shapeAABB);\r\n        } else {\r\n            aabb.extend(shapeAABB);\r\n        }\r\n    }\r\n\r\n    this.aabbNeedsUpdate = false;\r\n};\r\n\r\nvar uiw_m1 = new Mat3(),\r\n    uiw_m2 = new Mat3(),\r\n    uiw_m3 = new Mat3();\r\n\r\n/**\r\n * Update .inertiaWorld and .invInertiaWorld\r\n * @method updateInertiaWorld\r\n */\r\nBody.prototype.updateInertiaWorld = function(force){\r\n    var I = this.invInertia;\r\n    if (I.x === I.y && I.y === I.z && !force) {\r\n        // If inertia M = s*I, where I is identity and s a scalar, then\r\n        //    R*M*R' = R*(s*I)*R' = s*R*I*R' = s*R*R' = s*I = M\r\n        // where R is the rotation matrix.\r\n        // In other words, we don't have to transform the inertia if all\r\n        // inertia diagonal entries are equal.\r\n    } else {\r\n        var m1 = uiw_m1,\r\n            m2 = uiw_m2,\r\n            m3 = uiw_m3;\r\n        m1.setRotationFromQuaternion(this.quaternion);\r\n        m1.transpose(m2);\r\n        m1.scale(I,m1);\r\n        m1.mmult(m2,this.invInertiaWorld);\r\n        //m3.getTrace(this.invInertiaWorld);\r\n    }\r\n\r\n    /*\r\n    this.quaternion.vmult(this.inertia,this.inertiaWorld);\r\n    this.quaternion.vmult(this.invInertia,this.invInertiaWorld);\r\n    */\r\n};\r\n\r\n/**\r\n * Apply force to a world point. This could for example be a point on the Body surface. Applying force this way will add to Body.force and Body.torque.\r\n * @method applyForce\r\n * @param  {Vec3} force The amount of force to add.\r\n * @param  {Vec3} worldPoint A world point to apply the force on.\r\n */\r\nvar Body_applyForce_r = new Vec3();\r\nvar Body_applyForce_rotForce = new Vec3();\r\nBody.prototype.applyForce = function(force,worldPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    // Compute point position relative to the body center\r\n    var r = Body_applyForce_r;\r\n    worldPoint.vsub(this.position,r);\r\n\r\n    // Compute produced rotational force\r\n    var rotForce = Body_applyForce_rotForce;\r\n    r.cross(force,rotForce);\r\n\r\n    // Add linear force\r\n    this.force.vadd(force,this.force);\r\n\r\n    // Add rotational force\r\n    this.torque.vadd(rotForce,this.torque);\r\n};\r\n\r\n/**\r\n * Apply force to a local point in the body.\r\n * @method applyLocalForce\r\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\r\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\r\n */\r\nvar Body_applyLocalForce_worldForce = new Vec3();\r\nvar Body_applyLocalForce_worldPoint = new Vec3();\r\nBody.prototype.applyLocalForce = function(localForce, localPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    var worldForce = Body_applyLocalForce_worldForce;\r\n    var worldPoint = Body_applyLocalForce_worldPoint;\r\n\r\n    // Transform the force vector to world space\r\n    this.vectorToWorldFrame(localForce, worldForce);\r\n    this.pointToWorldFrame(localPoint, worldPoint);\r\n\r\n    this.applyForce(worldForce, worldPoint);\r\n};\r\n\r\n/**\r\n * Apply impulse to a world point. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.\r\n * @method applyImpulse\r\n * @param  {Vec3} impulse The amount of impulse to add.\r\n * @param  {Vec3} worldPoint A world point to apply the force on.\r\n */\r\nvar Body_applyImpulse_r = new Vec3();\r\nvar Body_applyImpulse_velo = new Vec3();\r\nvar Body_applyImpulse_rotVelo = new Vec3();\r\nBody.prototype.applyImpulse = function(impulse, worldPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    // Compute point position relative to the body center\r\n    var r = Body_applyImpulse_r;\r\n    worldPoint.vsub(this.position,r);\r\n\r\n    // Compute produced central impulse velocity\r\n    var velo = Body_applyImpulse_velo;\r\n    velo.copy(impulse);\r\n    velo.mult(this.invMass,velo);\r\n\r\n    // Add linear impulse\r\n    this.velocity.vadd(velo, this.velocity);\r\n\r\n    // Compute produced rotational impulse velocity\r\n    var rotVelo = Body_applyImpulse_rotVelo;\r\n    r.cross(impulse,rotVelo);\r\n\r\n    /*\r\n    rotVelo.x *= this.invInertia.x;\r\n    rotVelo.y *= this.invInertia.y;\r\n    rotVelo.z *= this.invInertia.z;\r\n    */\r\n    this.invInertiaWorld.vmult(rotVelo,rotVelo);\r\n\r\n    // Add rotational Impulse\r\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\r\n};\r\n\r\n/**\r\n * Apply locally-defined impulse to a local point in the body.\r\n * @method applyLocalImpulse\r\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\r\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\r\n */\r\nvar Body_applyLocalImpulse_worldImpulse = new Vec3();\r\nvar Body_applyLocalImpulse_worldPoint = new Vec3();\r\nBody.prototype.applyLocalImpulse = function(localImpulse, localPoint){\r\n    if(this.type !== Body.DYNAMIC){\r\n        return;\r\n    }\r\n\r\n    var worldImpulse = Body_applyLocalImpulse_worldImpulse;\r\n    var worldPoint = Body_applyLocalImpulse_worldPoint;\r\n\r\n    // Transform the force vector to world space\r\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\r\n    this.pointToWorldFrame(localPoint, worldPoint);\r\n\r\n    this.applyImpulse(worldImpulse, worldPoint);\r\n};\r\n\r\nvar Body_updateMassProperties_halfExtents = new Vec3();\r\n\r\n/**\r\n * Should be called whenever you change the body shape or mass.\r\n * @method updateMassProperties\r\n */\r\nBody.prototype.updateMassProperties = function(){\r\n    var halfExtents = Body_updateMassProperties_halfExtents;\r\n\r\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\r\n    var I = this.inertia;\r\n    var fixed = this.fixedRotation;\r\n\r\n    // Approximate with AABB box\r\n    this.computeAABB();\r\n    halfExtents.set(\r\n        (this.aabb.upperBound.x-this.aabb.lowerBound.x) / 2,\r\n        (this.aabb.upperBound.y-this.aabb.lowerBound.y) / 2,\r\n        (this.aabb.upperBound.z-this.aabb.lowerBound.z) / 2\r\n    );\r\n    Box.calculateInertia(halfExtents, this.mass, I);\r\n\r\n    this.invInertia.set(\r\n        I.x > 0 && !fixed ? 1.0 / I.x : 0,\r\n        I.y > 0 && !fixed ? 1.0 / I.y : 0,\r\n        I.z > 0 && !fixed ? 1.0 / I.z : 0\r\n    );\r\n    this.updateInertiaWorld(true);\r\n};\r\n\r\n/**\r\n * Get world velocity of a point in the body.\r\n * @method getVelocityAtWorldPoint\r\n * @param  {Vec3} worldPoint\r\n * @param  {Vec3} result\r\n * @return {Vec3} The result vector.\r\n */\r\nBody.prototype.getVelocityAtWorldPoint = function(worldPoint, result){\r\n    var r = new Vec3();\r\n    worldPoint.vsub(this.position, r);\r\n    this.angularVelocity.cross(r, result);\r\n    this.velocity.vadd(result, result);\r\n    return result;\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../material/Material\":25,\"../math/Mat3\":27,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Shape\":43,\"../utils/EventTarget\":49}],32:[function(_dereq_,module,exports){\r\nvar Body = _dereq_('./Body');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar Ray = _dereq_('../collision/Ray');\r\nvar WheelInfo = _dereq_('../objects/WheelInfo');\r\n\r\nmodule.exports = RaycastVehicle;\r\n\r\n/**\r\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\r\n * @class RaycastVehicle\r\n * @constructor\r\n * @param {object} [options]\r\n * @param {Body} [options.chassisBody] The car chassis body.\r\n * @param {integer} [options.indexRightAxis] Axis to use for right. x=0, y=1, z=2\r\n * @param {integer} [options.indexLeftAxis]\r\n * @param {integer} [options.indexUpAxis]\r\n */\r\nfunction RaycastVehicle(options){\r\n\r\n    /**\r\n     * @property {Body} chassisBody\r\n     */\r\n    this.chassisBody = options.chassisBody;\r\n\r\n    /**\r\n     * An array of WheelInfo objects.\r\n     * @property {array} wheelInfos\r\n     */\r\n    this.wheelInfos = [];\r\n\r\n    /**\r\n     * Will be set to true if the car is sliding.\r\n     * @property {boolean} sliding\r\n     */\r\n    this.sliding = false;\r\n\r\n    /**\r\n     * @property {World} world\r\n     */\r\n    this.world = null;\r\n\r\n    /**\r\n     * Index of the right axis, 0=x, 1=y, 2=z\r\n     * @property {integer} indexRightAxis\r\n     * @default 1\r\n     */\r\n    this.indexRightAxis = typeof(options.indexRightAxis) !== 'undefined' ? options.indexRightAxis : 1;\r\n\r\n    /**\r\n     * Index of the forward axis, 0=x, 1=y, 2=z\r\n     * @property {integer} indexForwardAxis\r\n     * @default 0\r\n     */\r\n    this.indexForwardAxis = typeof(options.indexForwardAxis) !== 'undefined' ? options.indexForwardAxis : 0;\r\n\r\n    /**\r\n     * Index of the up axis, 0=x, 1=y, 2=z\r\n     * @property {integer} indexUpAxis\r\n     * @default 2\r\n     */\r\n    this.indexUpAxis = typeof(options.indexUpAxis) !== 'undefined' ? options.indexUpAxis : 2;\r\n}\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\nvar tmpVec3 = new Vec3();\r\nvar tmpVec4 = new Vec3();\r\nvar tmpVec5 = new Vec3();\r\nvar tmpVec6 = new Vec3();\r\nvar tmpRay = new Ray();\r\n\r\n/**\r\n * Add a wheel. For information about the options, see WheelInfo.\r\n * @method addWheel\r\n * @param {object} [options]\r\n */\r\nRaycastVehicle.prototype.addWheel = function(options){\r\n    options = options || {};\r\n\r\n    var info = new WheelInfo(options);\r\n    var index = this.wheelInfos.length;\r\n    this.wheelInfos.push(info);\r\n\r\n    return index;\r\n};\r\n\r\n/**\r\n * Set the steering value of a wheel.\r\n * @method setSteeringValue\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n */\r\nRaycastVehicle.prototype.setSteeringValue = function(value, wheelIndex){\r\n    var wheel = this.wheelInfos[wheelIndex];\r\n    wheel.steering = value;\r\n};\r\n\r\nvar torque = new Vec3();\r\n\r\n/**\r\n * Set the wheel force to apply on one of the wheels each time step\r\n * @method applyEngineForce\r\n * @param  {number} value\r\n * @param  {integer} wheelIndex\r\n */\r\nRaycastVehicle.prototype.applyEngineForce = function(value, wheelIndex){\r\n    this.wheelInfos[wheelIndex].engineForce = value;\r\n};\r\n\r\n/**\r\n * Set the braking force of a wheel\r\n * @method setBrake\r\n * @param {number} brake\r\n * @param {integer} wheelIndex\r\n */\r\nRaycastVehicle.prototype.setBrake = function(brake, wheelIndex){\r\n    this.wheelInfos[wheelIndex].brake = brake;\r\n};\r\n\r\n/**\r\n * Add the vehicle including its constraints to the world.\r\n * @method addToWorld\r\n * @param {World} world\r\n */\r\nRaycastVehicle.prototype.addToWorld = function(world){\r\n    var constraints = this.constraints;\r\n    world.add(this.chassisBody);\r\n    var that = this;\r\n    this.preStepCallback = function(){\r\n        that.updateVehicle(world.dt);\r\n    };\r\n    world.addEventListener('preStep', this.preStepCallback);\r\n    this.world = world;\r\n};\r\n\r\n/**\r\n * Get one of the wheel axles, world-oriented.\r\n * @private\r\n * @method getVehicleAxisWorld\r\n * @param  {integer} axisIndex\r\n * @param  {Vec3} result\r\n */\r\nRaycastVehicle.prototype.getVehicleAxisWorld = function(axisIndex, result){\r\n    result.set(\r\n        axisIndex === 0 ? 1 : 0,\r\n        axisIndex === 1 ? 1 : 0,\r\n        axisIndex === 2 ? 1 : 0\r\n    );\r\n    this.chassisBody.vectorToWorldFrame(result, result);\r\n};\r\n\r\nRaycastVehicle.prototype.updateVehicle = function(timeStep){\r\n    var wheelInfos = this.wheelInfos;\r\n    var numWheels = wheelInfos.length;\r\n    var chassisBody = this.chassisBody;\r\n\r\n    for (var i = 0; i < numWheels; i++) {\r\n        this.updateWheelTransform(i);\r\n    }\r\n\r\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.norm();\r\n\r\n    var forwardWorld = new Vec3();\r\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\r\n\r\n    if (forwardWorld.dot(chassisBody.velocity) < 0){\r\n        this.currentVehicleSpeedKmHour *= -1;\r\n    }\r\n\r\n    // simulate suspension\r\n    for (var i = 0; i < numWheels; i++) {\r\n        this.castRay(wheelInfos[i]);\r\n    }\r\n\r\n    this.updateSuspension(timeStep);\r\n\r\n    var impulse = new Vec3();\r\n    var relpos = new Vec3();\r\n    for (var i = 0; i < numWheels; i++) {\r\n        //apply suspension force\r\n        var wheel = wheelInfos[i];\r\n        var suspensionForce = wheel.suspensionForce;\r\n        if (suspensionForce > wheel.maxSuspensionForce) {\r\n            suspensionForce = wheel.maxSuspensionForce;\r\n        }\r\n        wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\r\n\r\n        wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\r\n        chassisBody.applyImpulse(impulse, wheel.raycastResult.hitPointWorld/*relpos*/);\r\n    }\r\n\r\n    this.updateFriction(timeStep);\r\n\r\n    var hitNormalWorldScaledWithProj = new Vec3();\r\n    var fwd  = new Vec3();\r\n    var vel = new Vec3();\r\n    for (i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n        //var relpos = new Vec3();\r\n        //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\r\n        chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel);\r\n\r\n        // Hack to get the rotation in the correct direction\r\n        var m = 1;\r\n        switch(this.indexUpAxis){\r\n        case 1:\r\n            m = -1;\r\n            break;\r\n        }\r\n\r\n        if (wheel.isInContact) {\r\n\r\n            this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\r\n            var proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\r\n            wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\r\n\r\n            fwd.vsub(hitNormalWorldScaledWithProj, fwd);\r\n\r\n            var proj2 = fwd.dot(vel);\r\n            wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\r\n        }\r\n\r\n        if((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed){\r\n            // Apply custom rotation when accelerating and sliding\r\n            wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\r\n        }\r\n\r\n        // Lock wheels\r\n        if(Math.abs(wheel.brake) > Math.abs(wheel.engineForce)){\r\n            wheel.deltaRotation = 0;\r\n        }\r\n\r\n        wheel.rotation += wheel.deltaRotation; // Use the old value\r\n        wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\r\n    }\r\n};\r\n\r\nRaycastVehicle.prototype.updateSuspension = function(deltaTime) {\r\n    var chassisBody = this.chassisBody;\r\n    var chassisMass = chassisBody.mass;\r\n    var wheelInfos = this.wheelInfos;\r\n    var numWheels = wheelInfos.length;\r\n\r\n    for (var w_it = 0; w_it < numWheels; w_it++){\r\n        var wheel = wheelInfos[w_it];\r\n\r\n        if (wheel.isInContact){\r\n            var force;\r\n\r\n            // Spring\r\n            var susp_length = wheel.suspensionRestLength;\r\n            var current_length = wheel.suspensionLength;\r\n            var length_diff = (susp_length - current_length);\r\n\r\n            force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension;\r\n\r\n            // Damper\r\n            var projected_rel_vel = wheel.suspensionRelativeVelocity;\r\n            var susp_damping;\r\n            if (projected_rel_vel < 0) {\r\n                susp_damping = wheel.dampingCompression;\r\n            } else {\r\n                susp_damping = wheel.dampingRelaxation;\r\n            }\r\n            force -= susp_damping * projected_rel_vel;\r\n\r\n            wheel.suspensionForce = force * chassisMass;\r\n            if (wheel.suspensionForce < 0) {\r\n                wheel.suspensionForce = 0;\r\n            }\r\n        } else {\r\n            wheel.suspensionForce = 0;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Remove the vehicle including its constraints from the world.\r\n * @method removeFromWorld\r\n * @param {World} world\r\n */\r\nRaycastVehicle.prototype.removeFromWorld = function(world){\r\n    var constraints = this.constraints;\r\n    world.remove(this.chassisBody);\r\n    world.removeEventListener('preStep', this.preStepCallback);\r\n    this.world = null;\r\n};\r\n\r\nvar castRay_rayvector = new Vec3();\r\nvar castRay_target = new Vec3();\r\nRaycastVehicle.prototype.castRay = function(wheel) {\r\n    var rayvector = castRay_rayvector;\r\n    var target = castRay_target;\r\n\r\n    this.updateWheelTransformWorld(wheel);\r\n    var chassisBody = this.chassisBody;\r\n\r\n    var depth = -1;\r\n\r\n    var raylen = wheel.suspensionRestLength + wheel.radius;\r\n\r\n    wheel.directionWorld.scale(raylen, rayvector);\r\n    var source = wheel.chassisConnectionPointWorld;\r\n    source.vadd(rayvector, target);\r\n    var raycastResult = wheel.raycastResult;\r\n\r\n    var param = 0;\r\n\r\n    raycastResult.reset();\r\n    // Turn off ray collision with the chassis temporarily\r\n    var oldState = chassisBody.collisionResponse;\r\n    chassisBody.collisionResponse = false;\r\n\r\n    // Cast ray against world\r\n    this.world.rayTest(source, target, raycastResult);\r\n    chassisBody.collisionResponse = oldState;\r\n\r\n    var object = raycastResult.body;\r\n\r\n    wheel.raycastResult.groundObject = 0;\r\n\r\n    if (object) {\r\n        depth = raycastResult.distance;\r\n        wheel.raycastResult.hitNormalWorld  = raycastResult.hitNormalWorld;\r\n        wheel.isInContact = true;\r\n\r\n        var hitDistance = raycastResult.distance;\r\n        wheel.suspensionLength = hitDistance - wheel.radius;\r\n\r\n        // clamp on max suspension travel\r\n        var minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\r\n        var maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\r\n        if (wheel.suspensionLength < minSuspensionLength) {\r\n            wheel.suspensionLength = minSuspensionLength;\r\n        }\r\n        if (wheel.suspensionLength > maxSuspensionLength) {\r\n            wheel.suspensionLength = maxSuspensionLength;\r\n            wheel.raycastResult.reset();\r\n        }\r\n\r\n        var denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\r\n\r\n        var chassis_velocity_at_contactPoint = new Vec3();\r\n        chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\r\n\r\n        var projVel = wheel.raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\r\n\r\n        if (denominator >= -0.1) {\r\n            wheel.suspensionRelativeVelocity = 0;\r\n            wheel.clippedInvContactDotSuspension = 1 / 0.1;\r\n        } else {\r\n            var inv = -1 / denominator;\r\n            wheel.suspensionRelativeVelocity = projVel * inv;\r\n            wheel.clippedInvContactDotSuspension = inv;\r\n        }\r\n\r\n    } else {\r\n\r\n        //put wheel info as in rest position\r\n        wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\r\n        wheel.suspensionRelativeVelocity = 0.0;\r\n        wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\r\n        wheel.clippedInvContactDotSuspension = 1.0;\r\n    }\r\n\r\n    return depth;\r\n};\r\n\r\nRaycastVehicle.prototype.updateWheelTransformWorld = function(wheel){\r\n    wheel.isInContact = false;\r\n    var chassisBody = this.chassisBody;\r\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\r\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\r\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\r\n};\r\n\r\n\r\n/**\r\n * Update one of the wheel transform.\r\n * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\r\n * @method updateWheelTransform\r\n * @param {integer} wheelIndex The wheel index to update.\r\n */\r\nRaycastVehicle.prototype.updateWheelTransform = function(wheelIndex){\r\n    var up = tmpVec4;\r\n    var right = tmpVec5;\r\n    var fwd = tmpVec6;\r\n\r\n    var wheel = this.wheelInfos[wheelIndex];\r\n    this.updateWheelTransformWorld(wheel);\r\n\r\n    wheel.directionLocal.scale(-1, up);\r\n    right.copy(wheel.axleLocal);\r\n    up.cross(right, fwd);\r\n    fwd.normalize();\r\n    right.normalize();\r\n\r\n    // Rotate around steering over the wheelAxle\r\n    var steering = wheel.steering;\r\n    var steeringOrn = new Quaternion();\r\n    steeringOrn.setFromAxisAngle(up, steering);\r\n\r\n    var rotatingOrn = new Quaternion();\r\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation);\r\n\r\n    // World rotation of the wheel\r\n    var q = wheel.worldTransform.quaternion;\r\n    this.chassisBody.quaternion.mult(steeringOrn, q);\r\n    q.mult(rotatingOrn, q);\r\n\r\n    q.normalize();\r\n\r\n    // world position of the wheel\r\n    var p = wheel.worldTransform.position;\r\n    p.copy(wheel.directionWorld);\r\n    p.scale(wheel.suspensionLength, p);\r\n    p.vadd(wheel.chassisConnectionPointWorld, p);\r\n};\r\n\r\nvar directions = [\r\n    new Vec3(1, 0, 0),\r\n    new Vec3(0, 1, 0),\r\n    new Vec3(0, 0, 1)\r\n];\r\n\r\n/**\r\n * Get the world transform of one of the wheels\r\n * @method getWheelTransformWorld\r\n * @param  {integer} wheelIndex\r\n * @return {Transform}\r\n */\r\nRaycastVehicle.prototype.getWheelTransformWorld = function(wheelIndex) {\r\n    return this.wheelInfos[wheelIndex].worldTransform;\r\n};\r\n\r\n\r\nvar updateFriction_surfNormalWS_scaled_proj = new Vec3();\r\nvar updateFriction_axle = [];\r\nvar updateFriction_forwardWS = [];\r\nvar sideFrictionStiffness2 = 1;\r\nRaycastVehicle.prototype.updateFriction = function(timeStep) {\r\n    var surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj;\r\n\r\n    //calculate the impulse, so that the wheels don't move sidewards\r\n    var wheelInfos = this.wheelInfos;\r\n    var numWheels = wheelInfos.length;\r\n    var chassisBody = this.chassisBody;\r\n    var forwardWS = updateFriction_forwardWS;\r\n    var axle = updateFriction_axle;\r\n\r\n    var numWheelsOnGround = 0;\r\n\r\n    for (var i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n\r\n        var groundObject = wheel.raycastResult.body;\r\n        if (groundObject){\r\n            numWheelsOnGround++;\r\n        }\r\n\r\n        wheel.sideImpulse = 0;\r\n        wheel.forwardImpulse = 0;\r\n        if(!forwardWS[i]){\r\n            forwardWS[i] = new Vec3();\r\n        }\r\n        if(!axle[i]){\r\n            axle[i] = new Vec3();\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < numWheels; i++){\r\n        var wheel = wheelInfos[i];\r\n\r\n        var groundObject = wheel.raycastResult.body;\r\n\r\n        if (groundObject) {\r\n            var axlei = axle[i];\r\n            var wheelTrans = this.getWheelTransformWorld(i);\r\n\r\n            // Get world axle\r\n            wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\r\n\r\n            var surfNormalWS = wheel.raycastResult.hitNormalWorld;\r\n            var proj = axlei.dot(surfNormalWS);\r\n            surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\r\n            axlei.vsub(surfNormalWS_scaled_proj, axlei);\r\n            axlei.normalize();\r\n\r\n            surfNormalWS.cross(axlei, forwardWS[i]);\r\n            forwardWS[i].normalize();\r\n\r\n            wheel.sideImpulse = resolveSingleBilateral(\r\n                chassisBody,\r\n                wheel.raycastResult.hitPointWorld,\r\n                groundObject,\r\n                wheel.raycastResult.hitPointWorld,\r\n                axlei\r\n            );\r\n\r\n            wheel.sideImpulse *= sideFrictionStiffness2;\r\n        }\r\n    }\r\n\r\n    var sideFactor = 1;\r\n    var fwdFactor = 0.5;\r\n\r\n    this.sliding = false;\r\n    for (var i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n        var groundObject = wheel.raycastResult.body;\r\n\r\n        var rollingFriction = 0;\r\n\r\n        wheel.slipInfo = 1;\r\n        if (groundObject) {\r\n            var defaultRollingFrictionImpulse = 0;\r\n            var maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse;\r\n\r\n            // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\r\n            // rollingFriction = calcRollingFriction(contactPt);\r\n            rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\r\n\r\n            rollingFriction += wheel.engineForce * timeStep;\r\n\r\n            // rollingFriction = 0;\r\n            var factor = maxImpulse / rollingFriction;\r\n            wheel.slipInfo *= factor;\r\n        }\r\n\r\n        //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\r\n\r\n        wheel.forwardImpulse = 0;\r\n        wheel.skidInfo = 1;\r\n\r\n        if (groundObject) {\r\n            wheel.skidInfo = 1;\r\n\r\n            var maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\r\n            var maximpSide = maximp;\r\n\r\n            var maximpSquared = maximp * maximpSide;\r\n\r\n            wheel.forwardImpulse = rollingFriction;//wheelInfo.engineForce* timeStep;\r\n\r\n            var x = wheel.forwardImpulse * fwdFactor;\r\n            var y = wheel.sideImpulse * sideFactor;\r\n\r\n            var impulseSquared = x * x + y * y;\r\n\r\n            wheel.sliding = false;\r\n            if (impulseSquared > maximpSquared) {\r\n                this.sliding = true;\r\n                wheel.sliding = true;\r\n\r\n                var factor = maximp / Math.sqrt(impulseSquared);\r\n\r\n                wheel.skidInfo *= factor;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (this.sliding) {\r\n        for (var i = 0; i < numWheels; i++) {\r\n            var wheel = wheelInfos[i];\r\n            if (wheel.sideImpulse !== 0) {\r\n                if (wheel.skidInfo < 1){\r\n                    wheel.forwardImpulse *= wheel.skidInfo;\r\n                    wheel.sideImpulse *= wheel.skidInfo;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // apply the impulses\r\n    for (var i = 0; i < numWheels; i++) {\r\n        var wheel = wheelInfos[i];\r\n\r\n        var rel_pos = new Vec3();\r\n        //wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos);\r\n        // cannons applyimpulse is using world coord for the position\r\n        rel_pos.copy(wheel.raycastResult.hitPointWorld);\r\n\r\n        if (wheel.forwardImpulse !== 0) {\r\n            var impulse = new Vec3();\r\n            forwardWS[i].scale(wheel.forwardImpulse, impulse);\r\n            chassisBody.applyImpulse(impulse, rel_pos);\r\n        }\r\n\r\n        if (wheel.sideImpulse !== 0){\r\n            var groundObject = wheel.raycastResult.body;\r\n\r\n            var rel_pos2 = new Vec3();\r\n            //wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2);\r\n            rel_pos2.copy(wheel.raycastResult.hitPointWorld);\r\n            var sideImp = new Vec3();\r\n            axle[i].scale(wheel.sideImpulse, sideImp);\r\n\r\n            // Scale the relative position in the up direction with rollInfluence.\r\n            // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\r\n            chassisBody.pointToLocalFrame(rel_pos, rel_pos);\r\n            rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\r\n            chassisBody.pointToWorldFrame(rel_pos, rel_pos);\r\n            chassisBody.applyImpulse(sideImp, rel_pos);\r\n\r\n            //apply friction impulse on the ground\r\n            sideImp.scale(-1, sideImp);\r\n            groundObject.applyImpulse(sideImp, rel_pos2);\r\n        }\r\n    }\r\n};\r\n\r\nvar calcRollingFriction_vel1 = new Vec3();\r\nvar calcRollingFriction_vel2 = new Vec3();\r\nvar calcRollingFriction_vel = new Vec3();\r\n\r\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\r\n    var j1 = 0;\r\n    var contactPosWorld = frictionPosWorld;\r\n\r\n    // var rel_pos1 = new Vec3();\r\n    // var rel_pos2 = new Vec3();\r\n    var vel1 = calcRollingFriction_vel1;\r\n    var vel2 = calcRollingFriction_vel2;\r\n    var vel = calcRollingFriction_vel;\r\n    // contactPosWorld.vsub(body0.position, rel_pos1);\r\n    // contactPosWorld.vsub(body1.position, rel_pos2);\r\n\r\n    body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\r\n    body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\r\n    vel1.vsub(vel2, vel);\r\n\r\n    var vrel = frictionDirectionWorld.dot(vel);\r\n\r\n    var denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\r\n    var denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\r\n    var relaxation = 1;\r\n    var jacDiagABInv = relaxation / (denom0 + denom1);\r\n\r\n    // calculate j that moves us to zero relative velocity\r\n    j1 = -vrel * jacDiagABInv;\r\n\r\n    if (maxImpulse < j1) {\r\n        j1 = maxImpulse;\r\n    }\r\n    if (j1 < -maxImpulse) {\r\n        j1 = -maxImpulse;\r\n    }\r\n\r\n    return j1;\r\n}\r\n\r\nvar computeImpulseDenominator_r0 = new Vec3();\r\nvar computeImpulseDenominator_c0 = new Vec3();\r\nvar computeImpulseDenominator_vec = new Vec3();\r\nvar computeImpulseDenominator_m = new Vec3();\r\nfunction computeImpulseDenominator(body, pos, normal) {\r\n    var r0 = computeImpulseDenominator_r0;\r\n    var c0 = computeImpulseDenominator_c0;\r\n    var vec = computeImpulseDenominator_vec;\r\n    var m = computeImpulseDenominator_m;\r\n\r\n    pos.vsub(body.position, r0);\r\n    r0.cross(normal, c0);\r\n    body.invInertiaWorld.vmult(c0, m);\r\n    m.cross(r0, vec);\r\n\r\n    return body.invMass + normal.dot(vec);\r\n}\r\n\r\n\r\nvar resolveSingleBilateral_vel1 = new Vec3();\r\nvar resolveSingleBilateral_vel2 = new Vec3();\r\nvar resolveSingleBilateral_vel = new Vec3();\r\n\r\n//bilateral constraint between two dynamic objects\r\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal, impulse){\r\n    var normalLenSqr = normal.norm2();\r\n    if (normalLenSqr > 1.1){\r\n        return 0; // no impulse\r\n    }\r\n    // var rel_pos1 = new Vec3();\r\n    // var rel_pos2 = new Vec3();\r\n    // pos1.vsub(body1.position, rel_pos1);\r\n    // pos2.vsub(body2.position, rel_pos2);\r\n\r\n    var vel1 = resolveSingleBilateral_vel1;\r\n    var vel2 = resolveSingleBilateral_vel2;\r\n    var vel = resolveSingleBilateral_vel;\r\n    body1.getVelocityAtWorldPoint(pos1, vel1);\r\n    body2.getVelocityAtWorldPoint(pos2, vel2);\r\n\r\n    vel1.vsub(vel2, vel);\r\n\r\n    var rel_vel = normal.dot(vel);\r\n\r\n    var contactDamping = 0.2;\r\n    var massTerm = 1 / (body1.invMass + body2.invMass);\r\n    var impulse = - contactDamping * rel_vel * massTerm;\r\n\r\n    return impulse;\r\n}\r\n},{\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/WheelInfo\":36,\"./Body\":31}],33:[function(_dereq_,module,exports){\r\nvar Body = _dereq_('./Body');\r\nvar Sphere = _dereq_('../shapes/Sphere');\r\nvar Box = _dereq_('../shapes/Box');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar HingeConstraint = _dereq_('../constraints/HingeConstraint');\r\n\r\nmodule.exports = RigidVehicle;\r\n\r\n/**\r\n * Simple vehicle helper class with spherical rigid body wheels.\r\n * @class RigidVehicle\r\n * @constructor\r\n * @param {Body} [options.chassisBody]\r\n */\r\nfunction RigidVehicle(options){\r\n    this.wheelBodies = [];\r\n\r\n    /**\r\n     * @property coordinateSystem\r\n     * @type {Vec3}\r\n     */\r\n    this.coordinateSystem = typeof(options.coordinateSystem)==='undefined' ? new Vec3(1, 2, 3) : options.coordinateSystem.clone();\r\n\r\n    /**\r\n     * @property {Body} chassisBody\r\n     */\r\n    this.chassisBody = options.chassisBody;\r\n\r\n    if(!this.chassisBody){\r\n        // No chassis body given. Create it!\r\n        var chassisShape = new Box(new Vec3(5, 2, 0.5));\r\n        this.chassisBody = new Body(1, chassisShape);\r\n    }\r\n\r\n    /**\r\n     * @property constraints\r\n     * @type {Array}\r\n     */\r\n    this.constraints = [];\r\n\r\n    this.wheelAxes = [];\r\n    this.wheelForces = [];\r\n}\r\n\r\n/**\r\n * Add a wheel\r\n * @method addWheel\r\n * @param {object} options\r\n * @param {boolean} [options.isFrontWheel]\r\n * @param {Vec3} [options.position] Position of the wheel, locally in the chassis body.\r\n * @param {Vec3} [options.direction] Slide direction of the wheel along the suspension.\r\n * @param {Vec3} [options.axis] Axis of rotation of the wheel, locally defined in the chassis.\r\n * @param {Body} [options.body] The wheel body.\r\n */\r\nRigidVehicle.prototype.addWheel = function(options){\r\n    options = options || {};\r\n    var wheelBody = options.body;\r\n    if(!wheelBody){\r\n        wheelBody =  new Body(1, new Sphere(1.2));\r\n    }\r\n    this.wheelBodies.push(wheelBody);\r\n    this.wheelForces.push(0);\r\n\r\n    // Position constrain wheels\r\n    var zero = new Vec3();\r\n    var position = typeof(options.position) !== 'undefined' ? options.position.clone() : new Vec3();\r\n\r\n    // Set position locally to the chassis\r\n    var worldPosition = new Vec3();\r\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\r\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z);\r\n\r\n    // Constrain wheel\r\n    var axis = typeof(options.axis) !== 'undefined' ? options.axis.clone() : new Vec3(0, 1, 0);\r\n    this.wheelAxes.push(axis);\r\n\r\n    var hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\r\n        pivotA: position,\r\n        axisA: axis,\r\n        pivotB: Vec3.ZERO,\r\n        axisB: axis,\r\n        collideConnected: false\r\n    });\r\n    this.constraints.push(hingeConstraint);\r\n\r\n    return this.wheelBodies.length - 1;\r\n};\r\n\r\n/**\r\n * Set the steering value of a wheel.\r\n * @method setSteeringValue\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n * @todo check coordinateSystem\r\n */\r\nRigidVehicle.prototype.setSteeringValue = function(value, wheelIndex){\r\n    // Set angle of the hinge axis\r\n    var axis = this.wheelAxes[wheelIndex];\r\n\r\n    var c = Math.cos(value),\r\n        s = Math.sin(value),\r\n        x = axis.x,\r\n        y = axis.y;\r\n    this.constraints[wheelIndex].axisA.set(\r\n        c*x -s*y,\r\n        s*x +c*y,\r\n        0\r\n    );\r\n};\r\n\r\n/**\r\n * Set the target rotational speed of the hinge constraint.\r\n * @method setMotorSpeed\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.setMotorSpeed = function(value, wheelIndex){\r\n    var hingeConstraint = this.constraints[wheelIndex];\r\n    hingeConstraint.enableMotor();\r\n    hingeConstraint.motorTargetVelocity = value;\r\n};\r\n\r\n/**\r\n * Set the target rotational speed of the hinge constraint.\r\n * @method disableMotor\r\n * @param {number} value\r\n * @param {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.disableMotor = function(wheelIndex){\r\n    var hingeConstraint = this.constraints[wheelIndex];\r\n    hingeConstraint.disableMotor();\r\n};\r\n\r\nvar torque = new Vec3();\r\n\r\n/**\r\n * Set the wheel force to apply on one of the wheels each time step\r\n * @method setWheelForce\r\n * @param  {number} value\r\n * @param  {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.setWheelForce = function(value, wheelIndex){\r\n    this.wheelForces[wheelIndex] = value;\r\n};\r\n\r\n/**\r\n * Apply a torque on one of the wheels.\r\n * @method applyWheelForce\r\n * @param  {number} value\r\n * @param  {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.applyWheelForce = function(value, wheelIndex){\r\n    var axis = this.wheelAxes[wheelIndex];\r\n    var wheelBody = this.wheelBodies[wheelIndex];\r\n    var bodyTorque = wheelBody.torque;\r\n\r\n    axis.scale(value, torque);\r\n    wheelBody.vectorToWorldFrame(torque, torque);\r\n    bodyTorque.vadd(torque, bodyTorque);\r\n};\r\n\r\n/**\r\n * Add the vehicle including its constraints to the world.\r\n * @method addToWorld\r\n * @param {World} world\r\n */\r\nRigidVehicle.prototype.addToWorld = function(world){\r\n    var constraints = this.constraints;\r\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\r\n\r\n    for (var i = 0; i < bodies.length; i++) {\r\n        world.add(bodies[i]);\r\n    }\r\n\r\n    for (var i = 0; i < constraints.length; i++) {\r\n        world.addConstraint(constraints[i]);\r\n    }\r\n\r\n    world.addEventListener('preStep', this._update.bind(this));\r\n};\r\n\r\nRigidVehicle.prototype._update = function(){\r\n    var wheelForces = this.wheelForces;\r\n    for (var i = 0; i < wheelForces.length; i++) {\r\n        this.applyWheelForce(wheelForces[i], i);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove the vehicle including its constraints from the world.\r\n * @method removeFromWorld\r\n * @param {World} world\r\n */\r\nRigidVehicle.prototype.removeFromWorld = function(world){\r\n    var constraints = this.constraints;\r\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\r\n\r\n    for (var i = 0; i < bodies.length; i++) {\r\n        world.remove(bodies[i]);\r\n    }\r\n\r\n    for (var i = 0; i < constraints.length; i++) {\r\n        world.removeConstraint(constraints[i]);\r\n    }\r\n};\r\n\r\nvar worldAxis = new Vec3();\r\n\r\n/**\r\n * Get current rotational velocity of a wheel\r\n * @method getWheelSpeed\r\n * @param {integer} wheelIndex\r\n */\r\nRigidVehicle.prototype.getWheelSpeed = function(wheelIndex){\r\n    var axis = this.wheelAxes[wheelIndex];\r\n    var wheelBody = this.wheelBodies[wheelIndex];\r\n    var w = wheelBody.angularVelocity;\r\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\r\n    return w.dot(worldAxis);\r\n};\r\n\r\n},{\"../constraints/HingeConstraint\":15,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Sphere\":44,\"./Body\":31}],34:[function(_dereq_,module,exports){\r\nmodule.exports = SPHSystem;\r\n\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Particle = _dereq_('../shapes/Particle');\r\nvar Body = _dereq_('../objects/Body');\r\nvar Material = _dereq_('../material/Material');\r\n\r\n/**\r\n * Smoothed-particle hydrodynamics system\r\n * @class SPHSystem\r\n * @constructor\r\n */\r\nfunction SPHSystem(){\r\n    this.particles = [];\r\n\t\r\n    /**\r\n     * Density of the system (kg/m3).\r\n     * @property {number} density\r\n     */\r\n    this.density = 1;\r\n\t\r\n    /**\r\n     * Distance below which two particles are considered to be neighbors.\r\n     * It should be adjusted so there are about 15-20 neighbor particles within this radius.\r\n     * @property {number} smoothingRadius\r\n     */\r\n    this.smoothingRadius = 1;\r\n    this.speedOfSound = 1;\r\n\t\r\n    /**\r\n     * Viscosity of the system.\r\n     * @property {number} viscosity\r\n     */\r\n    this.viscosity = 0.01;\r\n    this.eps = 0.000001;\r\n\r\n    // Stuff Computed per particle\r\n    this.pressures = [];\r\n    this.densities = [];\r\n    this.neighbors = [];\r\n}\r\n\r\n/**\r\n * Add a particle to the system.\r\n * @method add\r\n * @param {Body} particle\r\n */\r\nSPHSystem.prototype.add = function(particle){\r\n    this.particles.push(particle);\r\n    if(this.neighbors.length < this.particles.length){\r\n        this.neighbors.push([]);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove a particle from the system.\r\n * @method remove\r\n * @param {Body} particle\r\n */\r\nSPHSystem.prototype.remove = function(particle){\r\n    var idx = this.particles.indexOf(particle);\r\n    if(idx !== -1){\r\n        this.particles.splice(idx,1);\r\n        if(this.neighbors.length > this.particles.length){\r\n            this.neighbors.pop();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get neighbors within smoothing volume, save in the array neighbors\r\n * @method getNeighbors\r\n * @param {Body} particle\r\n * @param {Array} neighbors\r\n */\r\nvar SPHSystem_getNeighbors_dist = new Vec3();\r\nSPHSystem.prototype.getNeighbors = function(particle,neighbors){\r\n    var N = this.particles.length,\r\n        id = particle.id,\r\n        R2 = this.smoothingRadius * this.smoothingRadius,\r\n        dist = SPHSystem_getNeighbors_dist;\r\n    for(var i=0; i!==N; i++){\r\n        var p = this.particles[i];\r\n        p.position.vsub(particle.position,dist);\r\n        if(id!==p.id && dist.norm2() < R2){\r\n            neighbors.push(p);\r\n        }\r\n    }\r\n};\r\n\r\n// Temp vectors for calculation\r\nvar SPHSystem_update_dist = new Vec3(),\r\n    SPHSystem_update_a_pressure = new Vec3(),\r\n    SPHSystem_update_a_visc = new Vec3(),\r\n    SPHSystem_update_gradW = new Vec3(),\r\n    SPHSystem_update_r_vec = new Vec3(),\r\n    SPHSystem_update_u = new Vec3(); // Relative velocity\r\nSPHSystem.prototype.update = function(){\r\n    var N = this.particles.length,\r\n        dist = SPHSystem_update_dist,\r\n        cs = this.speedOfSound,\r\n        eps = this.eps;\r\n\r\n    for(var i=0; i!==N; i++){\r\n        var p = this.particles[i]; // Current particle\r\n        var neighbors = this.neighbors[i];\r\n\r\n        // Get neighbors\r\n        neighbors.length = 0;\r\n        this.getNeighbors(p,neighbors);\r\n        neighbors.push(this.particles[i]); // Add current too\r\n        var numNeighbors = neighbors.length;\r\n\r\n        // Accumulate density for the particle\r\n        var sum = 0.0;\r\n        for(var j=0; j!==numNeighbors; j++){\r\n\r\n            //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\r\n            p.position.vsub(neighbors[j].position, dist);\r\n            var len = dist.norm();\r\n\r\n            var weight = this.w(len);\r\n            sum += neighbors[j].mass * weight;\r\n        }\r\n\r\n        // Save\r\n        this.densities[i] = sum;\r\n        this.pressures[i] = cs * cs * (this.densities[i] - this.density);\r\n    }\r\n\r\n    // Add forces\r\n\r\n    // Sum to these accelerations\r\n    var a_pressure= SPHSystem_update_a_pressure;\r\n    var a_visc =    SPHSystem_update_a_visc;\r\n    var gradW =     SPHSystem_update_gradW;\r\n    var r_vec =     SPHSystem_update_r_vec;\r\n    var u =         SPHSystem_update_u;\r\n\r\n    for(var i=0; i!==N; i++){\r\n\r\n        var particle = this.particles[i];\r\n\r\n        a_pressure.set(0,0,0);\r\n        a_visc.set(0,0,0);\r\n\r\n        // Init vars\r\n        var Pij;\r\n        var nabla;\r\n        var Vij;\r\n\r\n        // Sum up for all other neighbors\r\n        var neighbors = this.neighbors[i];\r\n        var numNeighbors = neighbors.length;\r\n\r\n        //printf(\"Neighbors: \");\r\n        for(var j=0; j!==numNeighbors; j++){\r\n\r\n            var neighbor = neighbors[j];\r\n            //printf(\"%d \",nj);\r\n\r\n            // Get r once for all..\r\n            particle.position.vsub(neighbor.position,r_vec);\r\n            var r = r_vec.norm();\r\n\r\n            // Pressure contribution\r\n            Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i]*this.densities[i] + eps) + this.pressures[j] / (this.densities[j]*this.densities[j] + eps));\r\n            this.gradw(r_vec, gradW);\r\n            // Add to pressure acceleration\r\n            gradW.mult(Pij , gradW);\r\n            a_pressure.vadd(gradW, a_pressure);\r\n\r\n            // Viscosity contribution\r\n            neighbor.velocity.vsub(particle.velocity, u);\r\n            u.mult( 1.0 / (0.0001+this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass , u );\r\n            nabla = this.nablaw(r);\r\n            u.mult(nabla,u);\r\n            // Add to viscosity acceleration\r\n            a_visc.vadd( u, a_visc );\r\n        }\r\n\r\n        // Calculate force\r\n        a_visc.mult(particle.mass, a_visc);\r\n        a_pressure.mult(particle.mass, a_pressure);\r\n\r\n        // Add force to particles\r\n        particle.force.vadd(a_visc, particle.force);\r\n        particle.force.vadd(a_pressure, particle.force);\r\n    }\r\n};\r\n\r\n// Calculate the weight using the W(r) weightfunction\r\nSPHSystem.prototype.w = function(r){\r\n    // 315\r\n    var h = this.smoothingRadius;\r\n    return 315.0/(64.0*Math.PI*Math.pow(h,9)) * Math.pow(h*h-r*r,3);\r\n};\r\n\r\n// calculate gradient of the weight function\r\nSPHSystem.prototype.gradw = function(rVec,resultVec){\r\n    var r = rVec.norm(),\r\n        h = this.smoothingRadius;\r\n    rVec.mult(945.0/(32.0*Math.PI*Math.pow(h,9)) * Math.pow((h*h-r*r),2) , resultVec);\r\n};\r\n\r\n// Calculate nabla(W)\r\nSPHSystem.prototype.nablaw = function(r){\r\n    var h = this.smoothingRadius;\r\n    var nabla = 945.0/(32.0*Math.PI*Math.pow(h,9)) * (h*h-r*r)*(7*r*r - 3*h*h);\r\n    return nabla;\r\n};\r\n\r\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Particle\":41,\"../shapes/Shape\":43}],35:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\nmodule.exports = Spring;\r\n\r\n/**\r\n * A spring, connecting two bodies.\r\n *\r\n * @class Spring\r\n * @constructor\r\n * @param {Body} bodyA\r\n * @param {Body} bodyB\r\n * @param {Object} [options]\r\n * @param {number} [options.restLength]   A number > 0. Default: 1\r\n * @param {number} [options.stiffness]    A number >= 0. Default: 100\r\n * @param {number} [options.damping]      A number >= 0. Default: 1\r\n * @param {Vec3}  [options.worldAnchorA] Where to hook the spring to body A, in world coordinates.\r\n * @param {Vec3}  [options.worldAnchorB]\r\n * @param {Vec3}  [options.localAnchorA] Where to hook the spring to body A, in local body coordinates.\r\n * @param {Vec3}  [options.localAnchorB]\r\n */\r\nfunction Spring(bodyA,bodyB,options){\r\n    options = options || {};\r\n\r\n    /**\r\n     * Rest length of the spring.\r\n     * @property restLength\r\n     * @type {number}\r\n     */\r\n    this.restLength = typeof(options.restLength) === \"number\" ? options.restLength : 1;\r\n\r\n    /**\r\n     * Stiffness of the spring.\r\n     * @property stiffness\r\n     * @type {number}\r\n     */\r\n    this.stiffness = options.stiffness || 100;\r\n\r\n    /**\r\n     * Damping of the spring.\r\n     * @property damping\r\n     * @type {number}\r\n     */\r\n    this.damping = options.damping || 1;\r\n\r\n    /**\r\n     * First connected body.\r\n     * @property bodyA\r\n     * @type {Body}\r\n     */\r\n    this.bodyA = bodyA;\r\n\r\n    /**\r\n     * Second connected body.\r\n     * @property bodyB\r\n     * @type {Body}\r\n     */\r\n    this.bodyB = bodyB;\r\n\r\n    /**\r\n     * Anchor for bodyA in local bodyA coordinates.\r\n     * @property localAnchorA\r\n     * @type {Vec3}\r\n     */\r\n    this.localAnchorA = new Vec3();\r\n\r\n    /**\r\n     * Anchor for bodyB in local bodyB coordinates.\r\n     * @property localAnchorB\r\n     * @type {Vec3}\r\n     */\r\n    this.localAnchorB = new Vec3();\r\n\r\n    if(options.localAnchorA){\r\n        this.localAnchorA.copy(options.localAnchorA);\r\n    }\r\n    if(options.localAnchorB){\r\n        this.localAnchorB.copy(options.localAnchorB);\r\n    }\r\n    if(options.worldAnchorA){\r\n        this.setWorldAnchorA(options.worldAnchorA);\r\n    }\r\n    if(options.worldAnchorB){\r\n        this.setWorldAnchorB(options.worldAnchorB);\r\n    }\r\n}\r\n\r\n/**\r\n * Set the anchor point on body A, using world coordinates.\r\n * @method setWorldAnchorA\r\n * @param {Vec3} worldAnchorA\r\n */\r\nSpring.prototype.setWorldAnchorA = function(worldAnchorA){\r\n    this.bodyA.pointToLocalFrame(worldAnchorA,this.localAnchorA);\r\n};\r\n\r\n/**\r\n * Set the anchor point on body B, using world coordinates.\r\n * @method setWorldAnchorB\r\n * @param {Vec3} worldAnchorB\r\n */\r\nSpring.prototype.setWorldAnchorB = function(worldAnchorB){\r\n    this.bodyB.pointToLocalFrame(worldAnchorB,this.localAnchorB);\r\n};\r\n\r\n/**\r\n * Get the anchor point on body A, in world coordinates.\r\n * @method getWorldAnchorA\r\n * @param {Vec3} result The vector to store the result in.\r\n */\r\nSpring.prototype.getWorldAnchorA = function(result){\r\n    this.bodyA.pointToWorldFrame(this.localAnchorA,result);\r\n};\r\n\r\n/**\r\n * Get the anchor point on body B, in world coordinates.\r\n * @method getWorldAnchorB\r\n * @param {Vec3} result The vector to store the result in.\r\n */\r\nSpring.prototype.getWorldAnchorB = function(result){\r\n    this.bodyB.pointToWorldFrame(this.localAnchorB,result);\r\n};\r\n\r\nvar applyForce_r =              new Vec3(),\r\n    applyForce_r_unit =         new Vec3(),\r\n    applyForce_u =              new Vec3(),\r\n    applyForce_f =              new Vec3(),\r\n    applyForce_worldAnchorA =   new Vec3(),\r\n    applyForce_worldAnchorB =   new Vec3(),\r\n    applyForce_ri =             new Vec3(),\r\n    applyForce_rj =             new Vec3(),\r\n    applyForce_ri_x_f =         new Vec3(),\r\n    applyForce_rj_x_f =         new Vec3(),\r\n    applyForce_tmp =            new Vec3();\r\n\r\n/**\r\n * Apply the spring force to the connected bodies.\r\n * @method applyForce\r\n */\r\nSpring.prototype.applyForce = function(){\r\n    var k = this.stiffness,\r\n        d = this.damping,\r\n        l = this.restLength,\r\n        bodyA = this.bodyA,\r\n        bodyB = this.bodyB,\r\n        r = applyForce_r,\r\n        r_unit = applyForce_r_unit,\r\n        u = applyForce_u,\r\n        f = applyForce_f,\r\n        tmp = applyForce_tmp;\r\n\r\n    var worldAnchorA = applyForce_worldAnchorA,\r\n        worldAnchorB = applyForce_worldAnchorB,\r\n        ri = applyForce_ri,\r\n        rj = applyForce_rj,\r\n        ri_x_f = applyForce_ri_x_f,\r\n        rj_x_f = applyForce_rj_x_f;\r\n\r\n    // Get world anchors\r\n    this.getWorldAnchorA(worldAnchorA);\r\n    this.getWorldAnchorB(worldAnchorB);\r\n\r\n    // Get offset points\r\n    worldAnchorA.vsub(bodyA.position,ri);\r\n    worldAnchorB.vsub(bodyB.position,rj);\r\n\r\n    // Compute distance vector between world anchor points\r\n    worldAnchorB.vsub(worldAnchorA,r);\r\n    var rlen = r.norm();\r\n    r_unit.copy(r);\r\n    r_unit.normalize();\r\n\r\n    // Compute relative velocity of the anchor points, u\r\n    bodyB.velocity.vsub(bodyA.velocity,u);\r\n    // Add rotational velocity\r\n\r\n    bodyB.angularVelocity.cross(rj,tmp);\r\n    u.vadd(tmp,u);\r\n    bodyA.angularVelocity.cross(ri,tmp);\r\n    u.vsub(tmp,u);\r\n\r\n    // F = - k * ( x - L ) - D * ( u )\r\n    r_unit.mult(-k*(rlen-l) - d*u.dot(r_unit), f);\r\n\r\n    // Add forces to bodies\r\n    bodyA.force.vsub(f,bodyA.force);\r\n    bodyB.force.vadd(f,bodyB.force);\r\n\r\n    // Angular force\r\n    ri.cross(f,ri_x_f);\r\n    rj.cross(f,rj_x_f);\r\n    bodyA.torque.vsub(ri_x_f,bodyA.torque);\r\n    bodyB.torque.vadd(rj_x_f,bodyB.torque);\r\n};\r\n\r\n},{\"../math/Vec3\":30}],36:[function(_dereq_,module,exports){\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = WheelInfo;\r\n\r\n/**\r\n * @class WheelInfo\r\n * @constructor\r\n * @param {Object} [options]\r\n *\r\n * @param {Vec3} [options.chassisConnectionPointLocal]\r\n * @param {Vec3} [options.chassisConnectionPointWorld]\r\n * @param {Vec3} [options.directionLocal]\r\n * @param {Vec3} [options.directionWorld]\r\n * @param {Vec3} [options.axleLocal]\r\n * @param {Vec3} [options.axleWorld]\r\n * @param {number} [options.suspensionRestLength=1]\r\n * @param {number} [options.suspensionMaxLength=2]\r\n * @param {number} [options.radius=1]\r\n * @param {number} [options.suspensionStiffness=100]\r\n * @param {number} [options.dampingCompression=10]\r\n * @param {number} [options.dampingRelaxation=10]\r\n * @param {number} [options.frictionSlip=10000]\r\n * @param {number} [options.steering=0]\r\n * @param {number} [options.rotation=0]\r\n * @param {number} [options.deltaRotation=0]\r\n * @param {number} [options.rollInfluence=0.01]\r\n * @param {number} [options.maxSuspensionForce]\r\n * @param {boolean} [options.isFrontWheel=true]\r\n * @param {number} [options.clippedInvContactDotSuspension=1]\r\n * @param {number} [options.suspensionRelativeVelocity=0]\r\n * @param {number} [options.suspensionForce=0]\r\n * @param {number} [options.skidInfo=0]\r\n * @param {number} [options.suspensionLength=0]\r\n * @param {number} [options.maxSuspensionTravel=1]\r\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\r\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\r\n */\r\nfunction WheelInfo(options){\r\n    options = Utils.defaults(options, {\r\n        chassisConnectionPointLocal: new Vec3(),\r\n        chassisConnectionPointWorld: new Vec3(),\r\n        directionLocal: new Vec3(),\r\n        directionWorld: new Vec3(),\r\n        axleLocal: new Vec3(),\r\n        axleWorld: new Vec3(),\r\n        suspensionRestLength: 1,\r\n        suspensionMaxLength: 2,\r\n        radius: 1,\r\n        suspensionStiffness: 100,\r\n        dampingCompression: 10,\r\n        dampingRelaxation: 10,\r\n        frictionSlip: 10000,\r\n        steering: 0,\r\n        rotation: 0,\r\n        deltaRotation: 0,\r\n        rollInfluence: 0.01,\r\n        maxSuspensionForce: Number.MAX_VALUE,\r\n        isFrontWheel: true,\r\n        clippedInvContactDotSuspension: 1,\r\n        suspensionRelativeVelocity: 0,\r\n        suspensionForce: 0,\r\n        skidInfo: 0,\r\n        suspensionLength: 0,\r\n        maxSuspensionTravel: 1,\r\n        useCustomSlidingRotationalSpeed: false,\r\n        customSlidingRotationalSpeed: -0.1\r\n    });\r\n\r\n    /**\r\n     * Max travel distance of the suspension, in meters.\r\n     * @property {number} maxSuspensionTravel\r\n     */\r\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\r\n\r\n    /**\r\n     * Speed to apply to the wheel rotation when the wheel is sliding.\r\n     * @property {number} customSlidingRotationalSpeed\r\n     */\r\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\r\n\r\n    /**\r\n     * If the customSlidingRotationalSpeed should be used.\r\n     * @property {Boolean} useCustomSlidingRotationalSpeed\r\n     */\r\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\r\n\r\n    /**\r\n     * @property {Boolean} sliding\r\n     */\r\n    this.sliding = false;\r\n\r\n    /**\r\n     * Connection point, defined locally in the chassis body frame.\r\n     * @property {Vec3} chassisConnectionPointLocal\r\n     */\r\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\r\n\r\n    /**\r\n     * @property {Vec3} chassisConnectionPointWorld\r\n     */\r\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\r\n\r\n    /**\r\n     * @property {Vec3} directionLocal\r\n     */\r\n    this.directionLocal = options.directionLocal.clone();\r\n\r\n    /**\r\n     * @property {Vec3} directionWorld\r\n     */\r\n    this.directionWorld = options.directionWorld.clone();\r\n\r\n    /**\r\n     * @property {Vec3} axleLocal\r\n     */\r\n    this.axleLocal = options.axleLocal.clone();\r\n\r\n    /**\r\n     * @property {Vec3} axleWorld\r\n     */\r\n    this.axleWorld = options.axleWorld.clone();\r\n\r\n    /**\r\n     * @property {number} suspensionRestLength\r\n     */\r\n    this.suspensionRestLength = options.suspensionRestLength;\r\n\r\n    /**\r\n     * @property {number} suspensionMaxLength\r\n     */\r\n    this.suspensionMaxLength = options.suspensionMaxLength;\r\n\r\n    /**\r\n     * @property {number} radius\r\n     */\r\n    this.radius = options.radius;\r\n\r\n    /**\r\n     * @property {number} suspensionStiffness\r\n     */\r\n    this.suspensionStiffness = options.suspensionStiffness;\r\n\r\n    /**\r\n     * @property {number} dampingCompression\r\n     */\r\n    this.dampingCompression = options.dampingCompression;\r\n\r\n    /**\r\n     * @property {number} dampingRelaxation\r\n     */\r\n    this.dampingRelaxation = options.dampingRelaxation;\r\n\r\n    /**\r\n     * @property {number} frictionSlip\r\n     */\r\n    this.frictionSlip = options.frictionSlip;\r\n\r\n    /**\r\n     * @property {number} steering\r\n     */\r\n    this.steering = 0;\r\n\r\n    /**\r\n     * Rotation value, in radians.\r\n     * @property {number} rotation\r\n     */\r\n    this.rotation = 0;\r\n\r\n    /**\r\n     * @property {number} deltaRotation\r\n     */\r\n    this.deltaRotation = 0;\r\n\r\n    /**\r\n     * @property {number} rollInfluence\r\n     */\r\n    this.rollInfluence = options.rollInfluence;\r\n\r\n    /**\r\n     * @property {number} maxSuspensionForce\r\n     */\r\n    this.maxSuspensionForce = options.maxSuspensionForce;\r\n\r\n    /**\r\n     * @property {number} engineForce\r\n     */\r\n    this.engineForce = 0;\r\n\r\n    /**\r\n     * @property {number} brake\r\n     */\r\n    this.brake = 0;\r\n\r\n    /**\r\n     * @property {number} isFrontWheel\r\n     */\r\n    this.isFrontWheel = options.isFrontWheel;\r\n\r\n    /**\r\n     * @property {number} clippedInvContactDotSuspension\r\n     */\r\n    this.clippedInvContactDotSuspension = 1;\r\n\r\n    /**\r\n     * @property {number} suspensionRelativeVelocity\r\n     */\r\n    this.suspensionRelativeVelocity = 0;\r\n\r\n    /**\r\n     * @property {number} suspensionForce\r\n     */\r\n    this.suspensionForce = 0;\r\n\r\n    /**\r\n     * @property {number} skidInfo\r\n     */\r\n    this.skidInfo = 0;\r\n\r\n    /**\r\n     * @property {number} suspensionLength\r\n     */\r\n    this.suspensionLength = 0;\r\n\r\n    /**\r\n     * @property {number} sideImpulse\r\n     */\r\n    this.sideImpulse = 0;\r\n\r\n    /**\r\n     * @property {number} forwardImpulse\r\n     */\r\n    this.forwardImpulse = 0;\r\n\r\n    /**\r\n     * The result from raycasting\r\n     * @property {RaycastResult} raycastResult\r\n     */\r\n    this.raycastResult = new RaycastResult();\r\n\r\n    /**\r\n     * Wheel world transform\r\n     * @property {Transform} worldTransform\r\n     */\r\n    this.worldTransform = new Transform();\r\n\r\n    /**\r\n     * @property {boolean} isInContact\r\n     */\r\n    this.isInContact = false;\r\n}\r\n\r\nvar chassis_velocity_at_contactPoint = new Vec3();\r\nvar relpos = new Vec3();\r\nvar chassis_velocity_at_contactPoint = new Vec3();\r\nWheelInfo.prototype.updateWheel = function(chassis){\r\n    var raycastResult = this.raycastResult;\r\n\r\n    if (this.isInContact){\r\n        var project= raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\r\n        raycastResult.hitPointWorld.vsub(chassis.position, relpos);\r\n        chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\r\n        var projVel = raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\r\n        if (project >= -0.1) {\r\n            this.suspensionRelativeVelocity = 0.0;\r\n            this.clippedInvContactDotSuspension = 1.0 / 0.1;\r\n        } else {\r\n            var inv = -1 / project;\r\n            this.suspensionRelativeVelocity = projVel * inv;\r\n            this.clippedInvContactDotSuspension = inv;\r\n        }\r\n\r\n    } else {\r\n        // Not in contact : position wheel in a nice (rest length) position\r\n        raycastResult.suspensionLength = this.suspensionRestLength;\r\n        this.suspensionRelativeVelocity = 0.0;\r\n        raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\r\n        this.clippedInvContactDotSuspension = 1.0;\r\n    }\r\n};\r\n},{\"../collision/RaycastResult\":10,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Utils\":53}],37:[function(_dereq_,module,exports){\r\nmodule.exports = Box;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\r\n\r\n/**\r\n * A 3d box shape.\r\n * @class Box\r\n * @constructor\r\n * @param {Vec3} halfExtents\r\n * @author schteppe\r\n * @extends Shape\r\n */\r\nfunction Box(halfExtents){\r\n    Shape.call(this);\r\n\r\n    this.type = Shape.types.BOX;\r\n\r\n    /**\r\n     * @property halfExtents\r\n     * @type {Vec3}\r\n     */\r\n    this.halfExtents = halfExtents;\r\n\r\n    /**\r\n     * Used by the contact generator to make contacts with other convex polyhedra for example\r\n     * @property convexPolyhedronRepresentation\r\n     * @type {ConvexPolyhedron}\r\n     */\r\n    this.convexPolyhedronRepresentation = null;\r\n\r\n    this.updateConvexPolyhedronRepresentation();\r\n    this.updateBoundingSphereRadius();\r\n}\r\nBox.prototype = new Shape();\r\nBox.prototype.constructor = Box;\r\n\r\n/**\r\n * Updates the local convex polyhedron representation used for some collisions.\r\n * @method updateConvexPolyhedronRepresentation\r\n */\r\nBox.prototype.updateConvexPolyhedronRepresentation = function(){\r\n    var sx = this.halfExtents.x;\r\n    var sy = this.halfExtents.y;\r\n    var sz = this.halfExtents.z;\r\n    var V = Vec3;\r\n\r\n    var vertices = [\r\n        new V(-sx,-sy,-sz),\r\n        new V( sx,-sy,-sz),\r\n        new V( sx, sy,-sz),\r\n        new V(-sx, sy,-sz),\r\n        new V(-sx,-sy, sz),\r\n        new V( sx,-sy, sz),\r\n        new V( sx, sy, sz),\r\n        new V(-sx, sy, sz)\r\n    ];\r\n\r\n    var indices = [\r\n        [3,2,1,0], // -z\r\n        [4,5,6,7], // +z\r\n        [5,4,0,1], // -y\r\n        [2,3,7,6], // +y\r\n        [0,4,7,3], // -x\r\n        [1,2,6,5], // +x\r\n    ];\r\n\r\n    var axes = [\r\n        new V(0, 0, 1),\r\n        new V(0, 1, 0),\r\n        new V(1, 0, 0)\r\n    ];\r\n\r\n    var h = new ConvexPolyhedron(vertices, indices);\r\n    this.convexPolyhedronRepresentation = h;\r\n    h.material = this.material;\r\n};\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n * @return {Vec3}\r\n */\r\nBox.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    Box.calculateInertia(this.halfExtents, mass, target);\r\n    return target;\r\n};\r\n\r\nBox.calculateInertia = function(halfExtents,mass,target){\r\n    var e = halfExtents;\r\n    target.x = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.z*2*e.z );\r\n    target.y = 1.0 / 12.0 * mass * (   2*e.x*2*e.x + 2*e.z*2*e.z );\r\n    target.z = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.x*2*e.x );\r\n};\r\n\r\n/**\r\n * Get the box 6 side normals\r\n * @method getSideNormals\r\n * @param {array}      sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\r\n * @param {Quaternion} quat             Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\r\n * @return {array}\r\n */\r\nBox.prototype.getSideNormals = function(sixTargetVectors,quat){\r\n    var sides = sixTargetVectors;\r\n    var ex = this.halfExtents;\r\n    sides[0].set(  ex.x,     0,     0);\r\n    sides[1].set(     0,  ex.y,     0);\r\n    sides[2].set(     0,     0,  ex.z);\r\n    sides[3].set( -ex.x,     0,     0);\r\n    sides[4].set(     0, -ex.y,     0);\r\n    sides[5].set(     0,     0, -ex.z);\r\n\r\n    if(quat!==undefined){\r\n        for(var i=0; i!==sides.length; i++){\r\n            quat.vmult(sides[i],sides[i]);\r\n        }\r\n    }\r\n\r\n    return sides;\r\n};\r\n\r\nBox.prototype.volume = function(){\r\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\r\n};\r\n\r\nBox.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = this.halfExtents.norm();\r\n};\r\n\r\nvar worldCornerTempPos = new Vec3();\r\nvar worldCornerTempNeg = new Vec3();\r\nBox.prototype.forEachWorldCorner = function(pos,quat,callback){\r\n\r\n    var e = this.halfExtents;\r\n    var corners = [[  e.x,  e.y,  e.z],\r\n                   [ -e.x,  e.y,  e.z],\r\n                   [ -e.x, -e.y,  e.z],\r\n                   [ -e.x, -e.y, -e.z],\r\n                   [  e.x, -e.y, -e.z],\r\n                   [  e.x,  e.y, -e.z],\r\n                   [ -e.x,  e.y, -e.z],\r\n                   [  e.x, -e.y,  e.z]];\r\n    for(var i=0; i<corners.length; i++){\r\n        worldCornerTempPos.set(corners[i][0],corners[i][1],corners[i][2]);\r\n        quat.vmult(worldCornerTempPos,worldCornerTempPos);\r\n        pos.vadd(worldCornerTempPos,worldCornerTempPos);\r\n        callback(worldCornerTempPos.x,\r\n                 worldCornerTempPos.y,\r\n                 worldCornerTempPos.z);\r\n    }\r\n};\r\n\r\nvar worldCornersTemp = [\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3(),\r\n    new Vec3()\r\n];\r\nBox.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n\r\n    var e = this.halfExtents;\r\n    worldCornersTemp[0].set(e.x, e.y, e.z);\r\n    worldCornersTemp[1].set(-e.x,  e.y, e.z);\r\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\r\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\r\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\r\n    worldCornersTemp[5].set(e.x,  e.y, -e.z);\r\n    worldCornersTemp[6].set(-e.x,  e.y, -e.z);\r\n    worldCornersTemp[7].set(e.x, -e.y,  e.z);\r\n\r\n    var wc = worldCornersTemp[0];\r\n    quat.vmult(wc, wc);\r\n    pos.vadd(wc, wc);\r\n    max.copy(wc);\r\n    min.copy(wc);\r\n    for(var i=1; i<8; i++){\r\n        var wc = worldCornersTemp[i];\r\n        quat.vmult(wc, wc);\r\n        pos.vadd(wc, wc);\r\n        var x = wc.x;\r\n        var y = wc.y;\r\n        var z = wc.z;\r\n        if(x > max.x){\r\n            max.x = x;\r\n        }\r\n        if(y > max.y){\r\n            max.y = y;\r\n        }\r\n        if(z > max.z){\r\n            max.z = z;\r\n        }\r\n\r\n        if(x < min.x){\r\n            min.x = x;\r\n        }\r\n        if(y < min.y){\r\n            min.y = y;\r\n        }\r\n        if(z < min.z){\r\n            min.z = z;\r\n        }\r\n    }\r\n\r\n    // Get each axis max\r\n    // min.set(Infinity,Infinity,Infinity);\r\n    // max.set(-Infinity,-Infinity,-Infinity);\r\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\r\n    //     if(x > max.x){\r\n    //         max.x = x;\r\n    //     }\r\n    //     if(y > max.y){\r\n    //         max.y = y;\r\n    //     }\r\n    //     if(z > max.z){\r\n    //         max.z = z;\r\n    //     }\r\n\r\n    //     if(x < min.x){\r\n    //         min.x = x;\r\n    //     }\r\n    //     if(y < min.y){\r\n    //         min.y = y;\r\n    //     }\r\n    //     if(z < min.z){\r\n    //         min.z = z;\r\n    //     }\r\n    // });\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],38:[function(_dereq_,module,exports){\r\nmodule.exports = ConvexPolyhedron;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Transform = _dereq_('../math/Transform');\r\n\r\n/**\r\n * A set of polygons describing a convex shape.\r\n * @class ConvexPolyhedron\r\n * @constructor\r\n * @extends Shape\r\n * @description The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\r\n * in the same 3D plane), instead these should be merged into one polygon.\r\n *\r\n * @param {array} points An array of Vec3's\r\n * @param {array} faces Array of integer arrays, describing which vertices that is included in each face.\r\n *\r\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\r\n * @author schteppe / https://github.com/schteppe\r\n * @see http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\r\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\r\n *\r\n * @todo Move the clipping functions to ContactGenerator?\r\n * @todo Automatically merge coplanar polygons in constructor.\r\n */\r\nfunction ConvexPolyhedron(points, faces, uniqueAxes) {\r\n    var that = this;\r\n    Shape.call(this);\r\n    this.type = Shape.types.CONVEXPOLYHEDRON;\r\n\r\n    /**\r\n     * Array of Vec3\r\n     * @property vertices\r\n     * @type {Array}\r\n     */\r\n    this.vertices = points||[];\r\n\r\n    this.worldVertices = []; // World transformed version of .vertices\r\n    this.worldVerticesNeedsUpdate = true;\r\n\r\n    /**\r\n     * Array of integer arrays, indicating which vertices each face consists of\r\n     * @property faces\r\n     * @type {Array}\r\n     */\r\n    this.faces = faces||[];\r\n\r\n    /**\r\n     * Array of Vec3\r\n     * @property faceNormals\r\n     * @type {Array}\r\n     */\r\n    this.faceNormals = [];\r\n    this.computeNormals();\r\n\r\n    this.worldFaceNormalsNeedsUpdate = true;\r\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\r\n\r\n    /**\r\n     * Array of Vec3\r\n     * @property uniqueEdges\r\n     * @type {Array}\r\n     */\r\n    this.uniqueEdges = [];\r\n\r\n    /**\r\n     * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\r\n     * @property {Array} uniqueAxes\r\n     */\r\n    this.uniqueAxes = uniqueAxes ? uniqueAxes.slice() : null;\r\n\r\n    this.computeEdges();\r\n    this.updateBoundingSphereRadius();\r\n}\r\nConvexPolyhedron.prototype = new Shape();\r\nConvexPolyhedron.prototype.constructor = ConvexPolyhedron;\r\n\r\nvar computeEdges_tmpEdge = new Vec3();\r\n/**\r\n * Computes uniqueEdges\r\n * @method computeEdges\r\n */\r\nConvexPolyhedron.prototype.computeEdges = function(){\r\n    var faces = this.faces;\r\n    var vertices = this.vertices;\r\n    var nv = vertices.length;\r\n    var edges = this.uniqueEdges;\r\n\r\n    edges.length = 0;\r\n\r\n    var edge = computeEdges_tmpEdge;\r\n\r\n    for(var i=0; i !== faces.length; i++){\r\n        var face = faces[i];\r\n        var numVertices = face.length;\r\n        for(var j = 0; j !== numVertices; j++){\r\n            var k = ( j+1 ) % numVertices;\r\n            vertices[face[j]].vsub(vertices[face[k]], edge);\r\n            edge.normalize();\r\n            var found = false;\r\n            for(var p=0; p !== edges.length; p++){\r\n                if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!found){\r\n                edges.push(edge.clone());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Compute the normals of the faces. Will reuse existing Vec3 objects in the .faceNormals array if they exist.\r\n * @method computeNormals\r\n */\r\nConvexPolyhedron.prototype.computeNormals = function(){\r\n    this.faceNormals.length = this.faces.length;\r\n\r\n    // Generate normals\r\n    for(var i=0; i<this.faces.length; i++){\r\n\r\n        // Check so all vertices exists for this face\r\n        for(var j=0; j<this.faces[i].length; j++){\r\n            if(!this.vertices[this.faces[i][j]]){\r\n                throw new Error(\"Vertex \"+this.faces[i][j]+\" not found!\");\r\n            }\r\n        }\r\n\r\n        var n = this.faceNormals[i] || new Vec3();\r\n        this.getFaceNormal(i,n);\r\n        n.negate(n);\r\n        this.faceNormals[i] = n;\r\n        var vertex = this.vertices[this.faces[i][0]];\r\n        if(n.dot(vertex) < 0){\r\n            console.error(\".faceNormals[\" + i + \"] = Vec3(\"+n.toString()+\") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");\r\n            for(var j=0; j<this.faces[i].length; j++){\r\n                console.warn(\".vertices[\"+this.faces[i][j]+\"] = Vec3(\"+this.vertices[this.faces[i][j]].toString()+\")\");\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get face normal given 3 vertices\r\n * @static\r\n * @method getFaceNormal\r\n * @param {Vec3} va\r\n * @param {Vec3} vb\r\n * @param {Vec3} vc\r\n * @param {Vec3} target\r\n */\r\nvar cb = new Vec3();\r\nvar ab = new Vec3();\r\nConvexPolyhedron.computeNormal = function ( va, vb, vc, target ) {\r\n    vb.vsub(va,ab);\r\n    vc.vsub(vb,cb);\r\n    cb.cross(ab,target);\r\n    if ( !target.isZero() ) {\r\n        target.normalize();\r\n    }\r\n};\r\n\r\n/**\r\n * Compute the normal of a face from its vertices\r\n * @method getFaceNormal\r\n * @param  {Number} i\r\n * @param  {Vec3} target\r\n */\r\nConvexPolyhedron.prototype.getFaceNormal = function(i,target){\r\n    var f = this.faces[i];\r\n    var va = this.vertices[f[0]];\r\n    var vb = this.vertices[f[1]];\r\n    var vc = this.vertices[f[2]];\r\n    return ConvexPolyhedron.computeNormal(va,vb,vc,target);\r\n};\r\n\r\n/**\r\n * @method clipAgainstHull\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {ConvexPolyhedron} hullB\r\n * @param {Vec3} posB\r\n * @param {Quaternion} quatB\r\n * @param {Vec3} separatingNormal\r\n * @param {Number} minDist Clamp distance\r\n * @param {Number} maxDist\r\n * @param {array} result The an array of contact point objects, see clipFaceAgainstHull\r\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\r\n */\r\nvar cah_WorldNormal = new Vec3();\r\nConvexPolyhedron.prototype.clipAgainstHull = function(posA,quatA,hullB,posB,quatB,separatingNormal,minDist,maxDist,result){\r\n    var WorldNormal = cah_WorldNormal;\r\n    var hullA = this;\r\n    var curMaxDist = maxDist;\r\n    var closestFaceB = -1;\r\n    var dmax = -Number.MAX_VALUE;\r\n    for(var face=0; face < hullB.faces.length; face++){\r\n        WorldNormal.copy(hullB.faceNormals[face]);\r\n        quatB.vmult(WorldNormal,WorldNormal);\r\n        //posB.vadd(WorldNormal,WorldNormal);\r\n        var d = WorldNormal.dot(separatingNormal);\r\n        if (d > dmax){\r\n            dmax = d;\r\n            closestFaceB = face;\r\n        }\r\n    }\r\n    var worldVertsB1 = [];\r\n    var polyB = hullB.faces[closestFaceB];\r\n    var numVertices = polyB.length;\r\n    for(var e0=0; e0<numVertices; e0++){\r\n        var b = hullB.vertices[polyB[e0]];\r\n        var worldb = new Vec3();\r\n        worldb.copy(b);\r\n        quatB.vmult(worldb,worldb);\r\n        posB.vadd(worldb,worldb);\r\n        worldVertsB1.push(worldb);\r\n    }\r\n\r\n    if (closestFaceB>=0){\r\n        this.clipFaceAgainstHull(separatingNormal,\r\n                                 posA,\r\n                                 quatA,\r\n                                 worldVertsB1,\r\n                                 minDist,\r\n                                 maxDist,\r\n                                 result);\r\n    }\r\n};\r\n\r\n/**\r\n * Find the separating axis between this hull and another\r\n * @method findSeparatingAxis\r\n * @param {ConvexPolyhedron} hullB\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {Vec3} posB\r\n * @param {Quaternion} quatB\r\n * @param {Vec3} target The target vector to save the axis in\r\n * @return {bool} Returns false if a separation is found, else true\r\n */\r\nvar fsa_faceANormalWS3 = new Vec3(),\r\n    fsa_Worldnormal1 = new Vec3(),\r\n    fsa_deltaC = new Vec3(),\r\n    fsa_worldEdge0 = new Vec3(),\r\n    fsa_worldEdge1 = new Vec3(),\r\n    fsa_Cross = new Vec3();\r\nConvexPolyhedron.prototype.findSeparatingAxis = function(hullB,posA,quatA,posB,quatB,target, faceListA, faceListB){\r\n    var faceANormalWS3 = fsa_faceANormalWS3,\r\n        Worldnormal1 = fsa_Worldnormal1,\r\n        deltaC = fsa_deltaC,\r\n        worldEdge0 = fsa_worldEdge0,\r\n        worldEdge1 = fsa_worldEdge1,\r\n        Cross = fsa_Cross;\r\n\r\n    var dmin = Number.MAX_VALUE;\r\n    var hullA = this;\r\n    var curPlaneTests=0;\r\n\r\n    if(!hullA.uniqueAxes){\r\n\r\n        var numFacesA = faceListA ? faceListA.length : hullA.faces.length;\r\n\r\n        // Test face normals from hullA\r\n        for(var i=0; i<numFacesA; i++){\r\n            var fi = faceListA ? faceListA[i] : i;\r\n\r\n            // Get world face normal\r\n            faceANormalWS3.copy(hullA.faceNormals[fi]);\r\n            quatA.vmult(faceANormalWS3,faceANormalWS3);\r\n\r\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(faceANormalWS3);\r\n            }\r\n        }\r\n\r\n    } else {\r\n\r\n        // Test unique axes\r\n        for(var i = 0; i !== hullA.uniqueAxes.length; i++){\r\n\r\n            // Get world axis\r\n            quatA.vmult(hullA.uniqueAxes[i],faceANormalWS3);\r\n\r\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(faceANormalWS3);\r\n            }\r\n        }\r\n    }\r\n\r\n    if(!hullB.uniqueAxes){\r\n\r\n        // Test face normals from hullB\r\n        var numFacesB = faceListB ? faceListB.length : hullB.faces.length;\r\n        for(var i=0;i<numFacesB;i++){\r\n\r\n            var fi = faceListB ? faceListB[i] : i;\r\n\r\n            Worldnormal1.copy(hullB.faceNormals[fi]);\r\n            quatB.vmult(Worldnormal1,Worldnormal1);\r\n            curPlaneTests++;\r\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(Worldnormal1);\r\n            }\r\n        }\r\n    } else {\r\n\r\n        // Test unique axes in B\r\n        for(var i = 0; i !== hullB.uniqueAxes.length; i++){\r\n            quatB.vmult(hullB.uniqueAxes[i],Worldnormal1);\r\n\r\n            curPlaneTests++;\r\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\r\n            if(d===false){\r\n                return false;\r\n            }\r\n\r\n            if(d<dmin){\r\n                dmin = d;\r\n                target.copy(Worldnormal1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Test edges\r\n    for(var e0=0; e0 !== hullA.uniqueEdges.length; e0++){\r\n\r\n        // Get world edge\r\n        quatA.vmult(hullA.uniqueEdges[e0],worldEdge0);\r\n\r\n        for(var e1=0; e1 !== hullB.uniqueEdges.length; e1++){\r\n\r\n            // Get world edge 2\r\n            quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\r\n            worldEdge0.cross(worldEdge1,Cross);\r\n\r\n            if(!Cross.almostZero()){\r\n                Cross.normalize();\r\n                var dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\r\n                if(dist === false){\r\n                    return false;\r\n                }\r\n                if(dist < dmin){\r\n                    dmin = dist;\r\n                    target.copy(Cross);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    posB.vsub(posA,deltaC);\r\n    if((deltaC.dot(target))>0.0){\r\n        target.negate(target);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nvar maxminA=[], maxminB=[];\r\n\r\n/**\r\n * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\r\n * @method testSepAxis\r\n * @param {Vec3} axis\r\n * @param {ConvexPolyhedron} hullB\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {Vec3} posB\r\n * @param {Quaternion} quatB\r\n * @return {number} The overlap depth, or FALSE if no penetration.\r\n */\r\nConvexPolyhedron.prototype.testSepAxis = function(axis, hullB, posA, quatA, posB, quatB){\r\n    var hullA=this;\r\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\r\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\r\n    var maxA = maxminA[0];\r\n    var minA = maxminA[1];\r\n    var maxB = maxminB[0];\r\n    var minB = maxminB[1];\r\n    if(maxA<minB || maxB<minA){\r\n        return false; // Separated\r\n    }\r\n    var d0 = maxA - minB;\r\n    var d1 = maxB - minA;\r\n    var depth = d0<d1 ? d0:d1;\r\n    return depth;\r\n};\r\n\r\nvar cli_aabbmin = new Vec3(),\r\n    cli_aabbmax = new Vec3();\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n */\r\nConvexPolyhedron.prototype.calculateLocalInertia = function(mass,target){\r\n    // Approximate with box inertia\r\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\r\n    this.computeLocalAABB(cli_aabbmin,cli_aabbmax);\r\n    var x = cli_aabbmax.x - cli_aabbmin.x,\r\n        y = cli_aabbmax.y - cli_aabbmin.y,\r\n        z = cli_aabbmax.z - cli_aabbmin.z;\r\n    target.x = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z );\r\n    target.y = 1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z );\r\n    target.z = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x );\r\n};\r\n\r\n/**\r\n * @method getPlaneConstantOfFace\r\n * @param  {Number} face_i Index of the face\r\n * @return {Number}\r\n */\r\nConvexPolyhedron.prototype.getPlaneConstantOfFace = function(face_i){\r\n    var f = this.faces[face_i];\r\n    var n = this.faceNormals[face_i];\r\n    var v = this.vertices[f[0]];\r\n    var c = -n.dot(v);\r\n    return c;\r\n};\r\n\r\n/**\r\n * Clip a face against a hull.\r\n * @method clipFaceAgainstHull\r\n * @param {Vec3} separatingNormal\r\n * @param {Vec3} posA\r\n * @param {Quaternion} quatA\r\n * @param {Array} worldVertsB1 An array of Vec3 with vertices in the world frame.\r\n * @param {Number} minDist Distance clamping\r\n * @param {Number} maxDist\r\n * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\r\n */\r\nvar cfah_faceANormalWS = new Vec3(),\r\n    cfah_edge0 = new Vec3(),\r\n    cfah_WorldEdge0 = new Vec3(),\r\n    cfah_worldPlaneAnormal1 = new Vec3(),\r\n    cfah_planeNormalWS1 = new Vec3(),\r\n    cfah_worldA1 = new Vec3(),\r\n    cfah_localPlaneNormal = new Vec3(),\r\n    cfah_planeNormalWS = new Vec3();\r\nConvexPolyhedron.prototype.clipFaceAgainstHull = function(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist,result){\r\n    var faceANormalWS = cfah_faceANormalWS,\r\n        edge0 = cfah_edge0,\r\n        WorldEdge0 = cfah_WorldEdge0,\r\n        worldPlaneAnormal1 = cfah_worldPlaneAnormal1,\r\n        planeNormalWS1 = cfah_planeNormalWS1,\r\n        worldA1 = cfah_worldA1,\r\n        localPlaneNormal = cfah_localPlaneNormal,\r\n        planeNormalWS = cfah_planeNormalWS;\r\n\r\n    var hullA = this;\r\n    var worldVertsB2 = [];\r\n    var pVtxIn = worldVertsB1;\r\n    var pVtxOut = worldVertsB2;\r\n    // Find the face with normal closest to the separating axis\r\n    var closestFaceA = -1;\r\n    var dmin = Number.MAX_VALUE;\r\n    for(var face=0; face<hullA.faces.length; face++){\r\n        faceANormalWS.copy(hullA.faceNormals[face]);\r\n        quatA.vmult(faceANormalWS,faceANormalWS);\r\n        //posA.vadd(faceANormalWS,faceANormalWS);\r\n        var d = faceANormalWS.dot(separatingNormal);\r\n        if (d < dmin){\r\n            dmin = d;\r\n            closestFaceA = face;\r\n        }\r\n    }\r\n    if (closestFaceA < 0){\r\n        // console.log(\"--- did not find any closest face... ---\");\r\n        return;\r\n    }\r\n    //console.log(\"closest A: \",closestFaceA);\r\n    // Get the face and construct connected faces\r\n    var polyA = hullA.faces[closestFaceA];\r\n    polyA.connectedFaces = [];\r\n    for(var i=0; i<hullA.faces.length; i++){\r\n        for(var j=0; j<hullA.faces[i].length; j++){\r\n            if(polyA.indexOf(hullA.faces[i][j])!==-1 /* Sharing a vertex*/ && i!==closestFaceA /* Not the one we are looking for connections from */ && polyA.connectedFaces.indexOf(i)===-1 /* Not already added */ ){\r\n                polyA.connectedFaces.push(i);\r\n            }\r\n        }\r\n    }\r\n    // Clip the polygon to the back of the planes of all faces of hull A, that are adjacent to the witness face\r\n    var numContacts = pVtxIn.length;\r\n    var numVerticesA = polyA.length;\r\n    var res = [];\r\n    for(var e0=0; e0<numVerticesA; e0++){\r\n        var a = hullA.vertices[polyA[e0]];\r\n        var b = hullA.vertices[polyA[(e0+1)%numVerticesA]];\r\n        a.vsub(b,edge0);\r\n        WorldEdge0.copy(edge0);\r\n        quatA.vmult(WorldEdge0,WorldEdge0);\r\n        posA.vadd(WorldEdge0,WorldEdge0);\r\n        worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);//transA.getBasis()* btVector3(polyA.m_plane[0],polyA.m_plane[1],polyA.m_plane[2]);\r\n        quatA.vmult(worldPlaneAnormal1,worldPlaneAnormal1);\r\n        posA.vadd(worldPlaneAnormal1,worldPlaneAnormal1);\r\n        WorldEdge0.cross(worldPlaneAnormal1,planeNormalWS1);\r\n        planeNormalWS1.negate(planeNormalWS1);\r\n        worldA1.copy(a);\r\n        quatA.vmult(worldA1,worldA1);\r\n        posA.vadd(worldA1,worldA1);\r\n        var planeEqWS1 = -worldA1.dot(planeNormalWS1);\r\n        var planeEqWS;\r\n        if(true){\r\n            var otherFace = polyA.connectedFaces[e0];\r\n            localPlaneNormal.copy(this.faceNormals[otherFace]);\r\n            var localPlaneEq = this.getPlaneConstantOfFace(otherFace);\r\n\r\n            planeNormalWS.copy(localPlaneNormal);\r\n            quatA.vmult(planeNormalWS,planeNormalWS);\r\n            //posA.vadd(planeNormalWS,planeNormalWS);\r\n            var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\r\n        } else  {\r\n            planeNormalWS.copy(planeNormalWS1);\r\n            planeEqWS = planeEqWS1;\r\n        }\r\n\r\n        // Clip face against our constructed plane\r\n        this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS);\r\n\r\n        // Throw away all clipped points, but save the reamining until next clip\r\n        while(pVtxIn.length){\r\n            pVtxIn.shift();\r\n        }\r\n        while(pVtxOut.length){\r\n            pVtxIn.push(pVtxOut.shift());\r\n        }\r\n    }\r\n\r\n    //console.log(\"Resulting points after clip:\",pVtxIn);\r\n\r\n    // only keep contact points that are behind the witness face\r\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\r\n\r\n    var localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\r\n    planeNormalWS.copy(localPlaneNormal);\r\n    quatA.vmult(planeNormalWS,planeNormalWS);\r\n\r\n    var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\r\n    for (var i=0; i<pVtxIn.length; i++){\r\n        var depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; //???\r\n        /*console.log(\"depth calc from normal=\",planeNormalWS.toString(),\" and constant \"+planeEqWS+\" and vertex \",pVtxIn[i].toString(),\" gives \"+depth);*/\r\n        if (depth <=minDist){\r\n            console.log(\"clamped: depth=\"+depth+\" to minDist=\"+(minDist+\"\"));\r\n            depth = minDist;\r\n        }\r\n\r\n        if (depth <=maxDist){\r\n            var point = pVtxIn[i];\r\n            if(depth<=0){\r\n                /*console.log(\"Got contact point \",point.toString(),\r\n                  \", depth=\",depth,\r\n                  \"contact normal=\",separatingNormal.toString(),\r\n                  \"plane\",planeNormalWS.toString(),\r\n                  \"planeConstant\",planeEqWS);*/\r\n                var p = {\r\n                    point:point,\r\n                    normal:planeNormalWS,\r\n                    depth: depth,\r\n                };\r\n                result.push(p);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Clip a face in a hull against the back of a plane.\r\n * @method clipFaceAgainstPlane\r\n * @param {Array} inVertices\r\n * @param {Array} outVertices\r\n * @param {Vec3} planeNormal\r\n * @param {Number} planeConstant The constant in the mathematical plane equation\r\n */\r\nConvexPolyhedron.prototype.clipFaceAgainstPlane = function(inVertices,outVertices, planeNormal, planeConstant){\r\n    var n_dot_first, n_dot_last;\r\n    var numVerts = inVertices.length;\r\n\r\n    if(numVerts < 2){\r\n        return outVertices;\r\n    }\r\n\r\n    var firstVertex = inVertices[inVertices.length-1],\r\n        lastVertex =   inVertices[0];\r\n\r\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\r\n\r\n    for(var vi = 0; vi < numVerts; vi++){\r\n        lastVertex = inVertices[vi];\r\n        n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\r\n        if(n_dot_first < 0){\r\n            if(n_dot_last < 0){\r\n                // Start < 0, end < 0, so output lastVertex\r\n                var newv = new Vec3();\r\n                newv.copy(lastVertex);\r\n                outVertices.push(newv);\r\n            } else {\r\n                // Start < 0, end >= 0, so output intersection\r\n                var newv = new Vec3();\r\n                firstVertex.lerp(lastVertex,\r\n                                 n_dot_first / (n_dot_first - n_dot_last),\r\n                                 newv);\r\n                outVertices.push(newv);\r\n            }\r\n        } else {\r\n            if(n_dot_last<0){\r\n                // Start >= 0, end < 0 so output intersection and end\r\n                var newv = new Vec3();\r\n                firstVertex.lerp(lastVertex,\r\n                                 n_dot_first / (n_dot_first - n_dot_last),\r\n                                 newv);\r\n                outVertices.push(newv);\r\n                outVertices.push(lastVertex);\r\n            }\r\n        }\r\n        firstVertex = lastVertex;\r\n        n_dot_first = n_dot_last;\r\n    }\r\n    return outVertices;\r\n};\r\n\r\n// Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\r\nConvexPolyhedron.prototype.computeWorldVertices = function(position,quat){\r\n    var N = this.vertices.length;\r\n    while(this.worldVertices.length < N){\r\n        this.worldVertices.push( new Vec3() );\r\n    }\r\n\r\n    var verts = this.vertices,\r\n        worldVerts = this.worldVertices;\r\n    for(var i=0; i!==N; i++){\r\n        quat.vmult( verts[i] , worldVerts[i] );\r\n        position.vadd( worldVerts[i] , worldVerts[i] );\r\n    }\r\n\r\n    this.worldVerticesNeedsUpdate = false;\r\n};\r\n\r\nvar computeLocalAABB_worldVert = new Vec3();\r\nConvexPolyhedron.prototype.computeLocalAABB = function(aabbmin,aabbmax){\r\n    var n = this.vertices.length,\r\n        vertices = this.vertices,\r\n        worldVert = computeLocalAABB_worldVert;\r\n\r\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n\r\n    for(var i=0; i<n; i++){\r\n        var v = vertices[i];\r\n        if     (v.x < aabbmin.x){\r\n            aabbmin.x = v.x;\r\n        } else if(v.x > aabbmax.x){\r\n            aabbmax.x = v.x;\r\n        }\r\n        if     (v.y < aabbmin.y){\r\n            aabbmin.y = v.y;\r\n        } else if(v.y > aabbmax.y){\r\n            aabbmax.y = v.y;\r\n        }\r\n        if     (v.z < aabbmin.z){\r\n            aabbmin.z = v.z;\r\n        } else if(v.z > aabbmax.z){\r\n            aabbmax.z = v.z;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\r\n * @method computeWorldFaceNormals\r\n * @param  {Quaternion} quat\r\n */\r\nConvexPolyhedron.prototype.computeWorldFaceNormals = function(quat){\r\n    var N = this.faceNormals.length;\r\n    while(this.worldFaceNormals.length < N){\r\n        this.worldFaceNormals.push( new Vec3() );\r\n    }\r\n\r\n    var normals = this.faceNormals,\r\n        worldNormals = this.worldFaceNormals;\r\n    for(var i=0; i!==N; i++){\r\n        quat.vmult( normals[i] , worldNormals[i] );\r\n    }\r\n\r\n    this.worldFaceNormalsNeedsUpdate = false;\r\n};\r\n\r\n/**\r\n * @method updateBoundingSphereRadius\r\n */\r\nConvexPolyhedron.prototype.updateBoundingSphereRadius = function(){\r\n    // Assume points are distributed with local (0,0,0) as center\r\n    var max2 = 0;\r\n    var verts = this.vertices;\r\n    for(var i=0, N=verts.length; i!==N; i++) {\r\n        var norm2 = verts[i].norm2();\r\n        if(norm2 > max2){\r\n            max2 = norm2;\r\n        }\r\n    }\r\n    this.boundingSphereRadius = Math.sqrt(max2);\r\n};\r\n\r\nvar tempWorldVertex = new Vec3();\r\n\r\n/**\r\n * @method calculateWorldAABB\r\n * @param {Vec3}        pos\r\n * @param {Quaternion}  quat\r\n * @param {Vec3}        min\r\n * @param {Vec3}        max\r\n */\r\nConvexPolyhedron.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    var n = this.vertices.length, verts = this.vertices;\r\n    var minx,miny,minz,maxx,maxy,maxz;\r\n    for(var i=0; i<n; i++){\r\n        tempWorldVertex.copy(verts[i]);\r\n        quat.vmult(tempWorldVertex,tempWorldVertex);\r\n        pos.vadd(tempWorldVertex,tempWorldVertex);\r\n        var v = tempWorldVertex;\r\n        if     (v.x < minx || minx===undefined){\r\n            minx = v.x;\r\n        } else if(v.x > maxx || maxx===undefined){\r\n            maxx = v.x;\r\n        }\r\n\r\n        if     (v.y < miny || miny===undefined){\r\n            miny = v.y;\r\n        } else if(v.y > maxy || maxy===undefined){\r\n            maxy = v.y;\r\n        }\r\n\r\n        if     (v.z < minz || minz===undefined){\r\n            minz = v.z;\r\n        } else if(v.z > maxz || maxz===undefined){\r\n            maxz = v.z;\r\n        }\r\n    }\r\n    min.set(minx,miny,minz);\r\n    max.set(maxx,maxy,maxz);\r\n};\r\n\r\n/**\r\n * Get approximate convex volume\r\n * @method volume\r\n * @return {Number}\r\n */\r\nConvexPolyhedron.prototype.volume = function(){\r\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\r\n};\r\n\r\n/**\r\n * Get an average of all the vertices positions\r\n * @method getAveragePointLocal\r\n * @param  {Vec3} target\r\n * @return {Vec3}\r\n */\r\nConvexPolyhedron.prototype.getAveragePointLocal = function(target){\r\n    target = target || new Vec3();\r\n    var n = this.vertices.length,\r\n        verts = this.vertices;\r\n    for(var i=0; i<n; i++){\r\n        target.vadd(verts[i],target);\r\n    }\r\n    target.mult(1/n,target);\r\n    return target;\r\n};\r\n\r\n/**\r\n * Transform all local points. Will change the .vertices\r\n * @method transformAllPoints\r\n * @param  {Vec3} offset\r\n * @param  {Quaternion} quat\r\n */\r\nConvexPolyhedron.prototype.transformAllPoints = function(offset,quat){\r\n    var n = this.vertices.length,\r\n        verts = this.vertices;\r\n\r\n    // Apply rotation\r\n    if(quat){\r\n        // Rotate vertices\r\n        for(var i=0; i<n; i++){\r\n            var v = verts[i];\r\n            quat.vmult(v,v);\r\n        }\r\n        // Rotate face normals\r\n        for(var i=0; i<this.faceNormals.length; i++){\r\n            var v = this.faceNormals[i];\r\n            quat.vmult(v,v);\r\n        }\r\n        /*\r\n        // Rotate edges\r\n        for(var i=0; i<this.uniqueEdges.length; i++){\r\n            var v = this.uniqueEdges[i];\r\n            quat.vmult(v,v);\r\n        }*/\r\n    }\r\n\r\n    // Apply offset\r\n    if(offset){\r\n        for(var i=0; i<n; i++){\r\n            var v = verts[i];\r\n            v.vadd(offset,v);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Checks whether p is inside the polyhedra. Must be in local coords. The point lies outside of the convex hull of the other points if and only if the direction of all the vectors from it to those other points are on less than one half of a sphere around it.\r\n * @method pointIsInside\r\n * @param  {Vec3} p      A point given in local coordinates\r\n * @return {Boolean}\r\n */\r\nvar ConvexPolyhedron_pointIsInside = new Vec3();\r\nvar ConvexPolyhedron_vToP = new Vec3();\r\nvar ConvexPolyhedron_vToPointInside = new Vec3();\r\nConvexPolyhedron.prototype.pointIsInside = function(p){\r\n    var n = this.vertices.length,\r\n        verts = this.vertices,\r\n        faces = this.faces,\r\n        normals = this.faceNormals;\r\n    var positiveResult = null;\r\n    var N = this.faces.length;\r\n    var pointInside = ConvexPolyhedron_pointIsInside;\r\n    this.getAveragePointLocal(pointInside);\r\n    for(var i=0; i<N; i++){\r\n        var numVertices = this.faces[i].length;\r\n        var n = normals[i];\r\n        var v = verts[faces[i][0]]; // We only need one point in the face\r\n\r\n        // This dot product determines which side of the edge the point is\r\n        var vToP = ConvexPolyhedron_vToP;\r\n        p.vsub(v,vToP);\r\n        var r1 = n.dot(vToP);\r\n\r\n        var vToPointInside = ConvexPolyhedron_vToPointInside;\r\n        pointInside.vsub(v,vToPointInside);\r\n        var r2 = n.dot(vToPointInside);\r\n\r\n        if((r1<0 && r2>0) || (r1>0 && r2<0)){\r\n            return false; // Encountered some other sign. Exit.\r\n        } else {\r\n        }\r\n    }\r\n\r\n    // If we got here, all dot products were of the same sign.\r\n    return positiveResult ? 1 : -1;\r\n};\r\n\r\n/**\r\n * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis. Results are saved in the array maxmin.\r\n * @static\r\n * @method project\r\n * @param {ConvexPolyhedron} hull\r\n * @param {Vec3} axis\r\n * @param {Vec3} pos\r\n * @param {Quaternion} quat\r\n * @param {array} result result[0] and result[1] will be set to maximum and minimum, respectively.\r\n */\r\nvar project_worldVertex = new Vec3();\r\nvar project_localAxis = new Vec3();\r\nvar project_localOrigin = new Vec3();\r\nConvexPolyhedron.project = function(hull, axis, pos, quat, result){\r\n    var n = hull.vertices.length,\r\n        worldVertex = project_worldVertex,\r\n        localAxis = project_localAxis,\r\n        max = 0,\r\n        min = 0,\r\n        localOrigin = project_localOrigin,\r\n        vs = hull.vertices;\r\n\r\n    localOrigin.setZero();\r\n\r\n    // Transform the axis to local\r\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\r\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\r\n    var add = localOrigin.dot(localAxis);\r\n\r\n    min = max = vs[0].dot(localAxis);\r\n\r\n    for(var i = 1; i < n; i++){\r\n        var val = vs[i].dot(localAxis);\r\n\r\n        if(val > max){\r\n            max = val;\r\n        }\r\n\r\n        if(val < min){\r\n            min = val;\r\n        }\r\n    }\r\n\r\n    min -= add;\r\n    max -= add;\r\n\r\n    if(min > max){\r\n        // Inconsistent - swap\r\n        var temp = min;\r\n        min = max;\r\n        max = temp;\r\n    }\r\n    // Output\r\n    result[0] = max;\r\n    result[1] = min;\r\n};\r\n\r\n},{\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"./Shape\":43}],39:[function(_dereq_,module,exports){\r\nmodule.exports = Cylinder;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\r\n\r\n/**\r\n * @class Cylinder\r\n * @constructor\r\n * @extends ConvexPolyhedron\r\n * @author schteppe / https://github.com/schteppe\r\n * @param {Number} radiusTop\r\n * @param {Number} radiusBottom\r\n * @param {Number} height\r\n * @param {Number} numSegments The number of segments to build the cylinder out of\r\n */\r\nfunction Cylinder( radiusTop, radiusBottom, height , numSegments ) {\r\n    var N = numSegments,\r\n        verts = [],\r\n        axes = [],\r\n        faces = [],\r\n        bottomface = [],\r\n        topface = [],\r\n        cos = Math.cos,\r\n        sin = Math.sin;\r\n\r\n    // First bottom point\r\n    verts.push(new Vec3(radiusBottom*cos(0),\r\n                               radiusBottom*sin(0),\r\n                               -height*0.5));\r\n    bottomface.push(0);\r\n\r\n    // First top point\r\n    verts.push(new Vec3(radiusTop*cos(0),\r\n                               radiusTop*sin(0),\r\n                               height*0.5));\r\n    topface.push(1);\r\n\r\n    for(var i=0; i<N; i++){\r\n        var theta = 2*Math.PI/N * (i+1);\r\n        var thetaN = 2*Math.PI/N * (i+0.5);\r\n        if(i<N-1){\r\n            // Bottom\r\n            verts.push(new Vec3(radiusBottom*cos(theta),\r\n                                       radiusBottom*sin(theta),\r\n                                       -height*0.5));\r\n            bottomface.push(2*i+2);\r\n            // Top\r\n            verts.push(new Vec3(radiusTop*cos(theta),\r\n                                       radiusTop*sin(theta),\r\n                                       height*0.5));\r\n            topface.push(2*i+3);\r\n\r\n            // Face\r\n            faces.push([2*i+2, 2*i+3, 2*i+1,2*i]);\r\n        } else {\r\n            faces.push([0,1, 2*i+1, 2*i]); // Connect\r\n        }\r\n\r\n        // Axis: we can cut off half of them if we have even number of segments\r\n        if(N % 2 === 1 || i < N / 2){\r\n            axes.push(new Vec3(cos(thetaN), sin(thetaN), 0));\r\n        }\r\n    }\r\n    faces.push(topface);\r\n    axes.push(new Vec3(0,0,1));\r\n\r\n    // Reorder bottom face\r\n    var temp = [];\r\n    for(var i=0; i<bottomface.length; i++){\r\n        temp.push(bottomface[bottomface.length - i - 1]);\r\n    }\r\n    faces.push(temp);\r\n\r\n    this.type = Shape.types.CONVEXPOLYHEDRON;\r\n    ConvexPolyhedron.call( this, verts, faces, axes );\r\n}\r\n\r\nCylinder.prototype = new ConvexPolyhedron();\r\n\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],40:[function(_dereq_,module,exports){\r\nvar Shape = _dereq_('./Shape');\r\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Utils = _dereq_('../utils/Utils');\r\n\r\nmodule.exports = Heightfield;\r\n\r\n/**\r\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\r\n * @class Heightfield\r\n * @extends Shape\r\n * @constructor\r\n * @param {Array} data An array of Y values that will be used to construct the terrain.\r\n * @param {object} options\r\n * @param {Number} [options.minValue] Minimum value of the data points in the data array. Will be computed automatically if not given.\r\n * @param {Number} [options.maxValue] Maximum value.\r\n * @param {Number} [options.elementSize=0.1] World spacing between the data points in X direction.\r\n * @todo Should be possible to use along all axes, not just y\r\n *\r\n * @example\r\n *     // Generate some height data (y-values).\r\n *     var data = [];\r\n *     for(var i = 0; i < 1000; i++){\r\n *         var y = 0.5 * Math.cos(0.2 * i);\r\n *         data.push(y);\r\n *     }\r\n *\r\n *     // Create the heightfield shape\r\n *     var heightfieldShape = new Heightfield(data, {\r\n *         elementSize: 1 // Distance between the data points in X and Y directions\r\n *     });\r\n *     var heightfieldBody = new Body();\r\n *     heightfieldBody.addShape(heightfieldShape);\r\n *     world.addBody(heightfieldBody);\r\n */\r\nfunction Heightfield(data, options){\r\n    options = Utils.defaults(options, {\r\n        maxValue : null,\r\n        minValue : null,\r\n        elementSize : 1\r\n    });\r\n\r\n    /**\r\n     * An array of numbers, or height values, that are spread out along the x axis.\r\n     * @property {array} data\r\n     */\r\n    this.data = data;\r\n\r\n    /**\r\n     * Max value of the data\r\n     * @property {number} maxValue\r\n     */\r\n    this.maxValue = options.maxValue;\r\n\r\n    /**\r\n     * Max value of the data\r\n     * @property {number} minValue\r\n     */\r\n    this.minValue = options.minValue;\r\n\r\n    /**\r\n     * The width of each element\r\n     * @property {number} elementSize\r\n     * @todo elementSizeX and Y\r\n     */\r\n    this.elementSize = options.elementSize;\r\n\r\n    if(options.minValue === null){\r\n        this.updateMinValue();\r\n    }\r\n    if(options.maxValue === null){\r\n        this.updateMaxValue();\r\n    }\r\n\r\n    this.cacheEnabled = true;\r\n\r\n    Shape.call(this);\r\n\r\n    this.pillarConvex = new ConvexPolyhedron();\r\n    this.pillarOffset = new Vec3();\r\n\r\n    this.type = Shape.types.HEIGHTFIELD;\r\n    this.updateBoundingSphereRadius();\r\n\r\n    // \"i_j_isUpper\" => { convex: ..., offset: ... }\r\n    // for example:\r\n    // _cachedPillars[\"0_2_1\"]\r\n    this._cachedPillars = {};\r\n}\r\nHeightfield.prototype = new Shape();\r\n\r\n/**\r\n * Call whenever you change the data array.\r\n * @method update\r\n */\r\nHeightfield.prototype.update = function(){\r\n    this._cachedPillars = {};\r\n};\r\n\r\n/**\r\n * Update the .minValue property\r\n * @method updateMinValue\r\n */\r\nHeightfield.prototype.updateMinValue = function(){\r\n    var data = this.data;\r\n    var minValue = data[0][0];\r\n    for(var i=0; i !== data.length; i++){\r\n        for(var j=0; j !== data[i].length; j++){\r\n            var v = data[i][j];\r\n            if(v < minValue){\r\n                minValue = v;\r\n            }\r\n        }\r\n    }\r\n    this.minValue = minValue;\r\n};\r\n\r\n/**\r\n * Update the .maxValue property\r\n * @method updateMaxValue\r\n */\r\nHeightfield.prototype.updateMaxValue = function(){\r\n    var data = this.data;\r\n    var maxValue = data[0][0];\r\n    for(var i=0; i !== data.length; i++){\r\n        for(var j=0; j !== data[i].length; j++){\r\n            var v = data[i][j];\r\n            if(v > maxValue){\r\n                maxValue = v;\r\n            }\r\n        }\r\n    }\r\n    this.maxValue = maxValue;\r\n};\r\n\r\n/**\r\n * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\r\n * @method setHeightValueAtIndex\r\n * @param {integer} xi\r\n * @param {integer} yi\r\n * @param {number} value\r\n */\r\nHeightfield.prototype.setHeightValueAtIndex = function(xi, yi, value){\r\n    var data = this.data;\r\n    data[xi][yi] = value;\r\n\r\n    // Invalidate cache\r\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\r\n    if(xi > 0){\r\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\r\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\r\n    }\r\n    if(yi > 0){\r\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\r\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\r\n    }\r\n    if(yi > 0 && xi > 0){\r\n        this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\r\n    }\r\n};\r\n\r\n/**\r\n * Get max/min in a rectangle in the matrix data\r\n * @method getRectMinMax\r\n * @param  {integer} iMinX\r\n * @param  {integer} iMinY\r\n * @param  {integer} iMaxX\r\n * @param  {integer} iMaxY\r\n * @param  {array} [result] An array to store the results in.\r\n * @return {array} The result array, if it was passed in. Minimum will be at position 0 and max at 1.\r\n */\r\nHeightfield.prototype.getRectMinMax = function (iMinX, iMinY, iMaxX, iMaxY, result) {\r\n    result = result || [];\r\n\r\n    // Get max and min of the data\r\n    var data = this.data,\r\n        max = this.minValue; // Set first value\r\n    for(var i = iMinX; i <= iMaxX; i++){\r\n        for(var j = iMinY; j <= iMaxY; j++){\r\n            var height = data[i][j];\r\n            if(height > max){\r\n                max = height;\r\n            }\r\n        }\r\n    }\r\n\r\n    result[0] = this.minValue;\r\n    result[1] = max;\r\n};\r\n\r\n/**\r\n * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\r\n * @method getIndexOfPosition\r\n * @param  {number} x\r\n * @param  {number} y\r\n * @param  {array} result Two-element array\r\n * @param  {boolean} clamp If the position should be clamped to the heightfield edge.\r\n * @return {boolean}\r\n */\r\nHeightfield.prototype.getIndexOfPosition = function (x, y, result, clamp) {\r\n\r\n    // Get the index of the data points to test against\r\n    var w = this.elementSize;\r\n    var data = this.data;\r\n    var xi = Math.floor(x / w);\r\n    var yi = Math.floor(y / w);\r\n\r\n    result[0] = xi;\r\n    result[1] = yi;\r\n\r\n    if(clamp){\r\n        // Clamp index to edges\r\n        if(xi < 0){ xi = 0; }\r\n        if(yi < 0){ yi = 0; }\r\n        if(xi >= data.length - 1){ xi = data.length - 1; }\r\n        if(yi >= data[0].length - 1){ yi = data[0].length - 1; }\r\n    }\r\n\r\n    // Bail out if we are out of the terrain\r\n    if(xi < 0 || yi < 0 || xi >= data.length-1 || yi >= data[0].length-1){\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nHeightfield.prototype.getHeightAt = function(x, y, edgeClamp){\r\n    var idx = [];\r\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\r\n\r\n    // TODO: get upper or lower triangle, then use barycentric interpolation to get the height in the triangle.\r\n    var minmax = [];\r\n    this.getRectMinMax(idx[0], idx[1] + 1, idx[0], idx[1] + 1, minmax);\r\n\r\n    return (minmax[0] + minmax[1]) / 2; // average\r\n};\r\n\r\nHeightfield.prototype.getCacheConvexTrianglePillarKey = function(xi, yi, getUpperTriangle){\r\n    return xi + '_' + yi + '_' + (getUpperTriangle ? 1 : 0);\r\n};\r\n\r\nHeightfield.prototype.getCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\r\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\r\n};\r\n\r\nHeightfield.prototype.setCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle, convex, offset){\r\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\r\n        convex: convex,\r\n        offset: offset\r\n    };\r\n};\r\n\r\nHeightfield.prototype.clearCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\r\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\r\n};\r\n\r\n/**\r\n * Get a triangle in the terrain in the form of a triangular convex shape.\r\n * @method getConvexTrianglePillar\r\n * @param  {integer} i\r\n * @param  {integer} j\r\n * @param  {boolean} getUpperTriangle\r\n */\r\nHeightfield.prototype.getConvexTrianglePillar = function(xi, yi, getUpperTriangle){\r\n    var result = this.pillarConvex;\r\n    var offsetResult = this.pillarOffset;\r\n\r\n    if(this.cacheEnabled){\r\n        var data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\r\n        if(data){\r\n            this.pillarConvex = data.convex;\r\n            this.pillarOffset = data.offset;\r\n            return;\r\n        }\r\n\r\n        result = new ConvexPolyhedron();\r\n        offsetResult = new Vec3();\r\n\r\n        this.pillarConvex = result;\r\n        this.pillarOffset = offsetResult;\r\n    }\r\n\r\n    var data = this.data;\r\n    var elementSize = this.elementSize;\r\n    var faces = result.faces;\r\n\r\n    // Reuse verts if possible\r\n    result.vertices.length = 6;\r\n    for (var i = 0; i < 6; i++) {\r\n        if(!result.vertices[i]){\r\n            result.vertices[i] = new Vec3();\r\n        }\r\n    }\r\n\r\n    // Reuse faces if possible\r\n    faces.length = 5;\r\n    for (var i = 0; i < 5; i++) {\r\n        if(!faces[i]){\r\n            faces[i] = [];\r\n        }\r\n    }\r\n\r\n    var verts = result.vertices;\r\n\r\n    var h = (Math.min(\r\n        data[xi][yi],\r\n        data[xi+1][yi],\r\n        data[xi][yi+1],\r\n        data[xi+1][yi+1]\r\n    ) - this.minValue ) / 2 + this.minValue;\r\n\r\n    if (!getUpperTriangle) {\r\n\r\n        // Center of the triangle pillar - all polygons are given relative to this one\r\n        offsetResult.set(\r\n            (xi + 0.25) * elementSize, // sort of center of a triangle\r\n            (yi + 0.25) * elementSize,\r\n            h // vertical center\r\n        );\r\n\r\n        // Top triangle verts\r\n        verts[0].set(\r\n            -0.25 * elementSize,\r\n            -0.25 * elementSize,\r\n            data[xi][yi] - h\r\n        );\r\n        verts[1].set(\r\n            0.75 * elementSize,\r\n            -0.25 * elementSize,\r\n            data[xi + 1][yi] - h\r\n        );\r\n        verts[2].set(\r\n            -0.25 * elementSize,\r\n            0.75 * elementSize,\r\n            data[xi][yi + 1] - h\r\n        );\r\n\r\n        // bottom triangle verts\r\n        verts[3].set(\r\n            -0.25 * elementSize,\r\n            -0.25 * elementSize,\r\n            -h-1\r\n        );\r\n        verts[4].set(\r\n            0.75 * elementSize,\r\n            -0.25 * elementSize,\r\n            -h-1\r\n        );\r\n        verts[5].set(\r\n            -0.25 * elementSize,\r\n            0.75  * elementSize,\r\n            -h-1\r\n        );\r\n\r\n        // top triangle\r\n        faces[0][0] = 0;\r\n        faces[0][1] = 1;\r\n        faces[0][2] = 2;\r\n\r\n        // bottom triangle\r\n        faces[1][0] = 5;\r\n        faces[1][1] = 4;\r\n        faces[1][2] = 3;\r\n\r\n        // -x facing quad\r\n        faces[2][0] = 0;\r\n        faces[2][1] = 2;\r\n        faces[2][2] = 5;\r\n        faces[2][3] = 3;\r\n\r\n        // -y facing quad\r\n        faces[3][0] = 1;\r\n        faces[3][1] = 0;\r\n        faces[3][2] = 3;\r\n        faces[3][3] = 4;\r\n\r\n        // +xy facing quad\r\n        faces[4][0] = 4;\r\n        faces[4][1] = 5;\r\n        faces[4][2] = 2;\r\n        faces[4][3] = 1;\r\n\r\n\r\n    } else {\r\n\r\n        // Center of the triangle pillar - all polygons are given relative to this one\r\n        offsetResult.set(\r\n            (xi + 0.75) * elementSize, // sort of center of a triangle\r\n            (yi + 0.75) * elementSize,\r\n            h // vertical center\r\n        );\r\n\r\n        // Top triangle verts\r\n        verts[0].set(\r\n            0.25 * elementSize,\r\n            0.25 * elementSize,\r\n            data[xi + 1][yi + 1] - h\r\n        );\r\n        verts[1].set(\r\n            -0.75 * elementSize,\r\n            0.25 * elementSize,\r\n            data[xi][yi + 1] - h\r\n        );\r\n        verts[2].set(\r\n            0.25 * elementSize,\r\n            -0.75 * elementSize,\r\n            data[xi + 1][yi] - h\r\n        );\r\n\r\n        // bottom triangle verts\r\n        verts[3].set(\r\n            0.25 * elementSize,\r\n            0.25 * elementSize,\r\n            - h-1\r\n        );\r\n        verts[4].set(\r\n            -0.75 * elementSize,\r\n            0.25 * elementSize,\r\n            - h-1\r\n        );\r\n        verts[5].set(\r\n            0.25 * elementSize,\r\n            -0.75 * elementSize,\r\n            - h-1\r\n        );\r\n\r\n        // Top triangle\r\n        faces[0][0] = 0;\r\n        faces[0][1] = 1;\r\n        faces[0][2] = 2;\r\n\r\n        // bottom triangle\r\n        faces[1][0] = 5;\r\n        faces[1][1] = 4;\r\n        faces[1][2] = 3;\r\n\r\n        // +x facing quad\r\n        faces[2][0] = 2;\r\n        faces[2][1] = 5;\r\n        faces[2][2] = 3;\r\n        faces[2][3] = 0;\r\n\r\n        // +y facing quad\r\n        faces[3][0] = 3;\r\n        faces[3][1] = 4;\r\n        faces[3][2] = 1;\r\n        faces[3][3] = 0;\r\n\r\n        // -xy facing quad\r\n        faces[4][0] = 1;\r\n        faces[4][1] = 4;\r\n        faces[4][2] = 5;\r\n        faces[4][3] = 2;\r\n    }\r\n\r\n    result.computeNormals();\r\n    result.computeEdges();\r\n    result.updateBoundingSphereRadius();\r\n\r\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\r\n};\r\n\r\nHeightfield.prototype.calculateLocalInertia = function(mass, target){\r\n    target = target || new Vec3();\r\n    target.set(0, 0, 0);\r\n    return target;\r\n};\r\n\r\nHeightfield.prototype.volume = function(){\r\n    return Number.MAX_VALUE; // The terrain is infinite\r\n};\r\n\r\nHeightfield.prototype.calculateWorldAABB = function(pos, quat, min, max){\r\n    // TODO: do it properly\r\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n};\r\n\r\nHeightfield.prototype.updateBoundingSphereRadius = function(){\r\n    // Use the bounding box of the min/max values\r\n    var data = this.data,\r\n        s = this.elementSize;\r\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm();\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"../utils/Utils\":53,\"./ConvexPolyhedron\":38,\"./Shape\":43}],41:[function(_dereq_,module,exports){\r\nmodule.exports = Particle;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Particle shape.\r\n * @class Particle\r\n * @constructor\r\n * @author schteppe\r\n * @extends Shape\r\n */\r\nfunction Particle(){\r\n    Shape.call(this);\r\n\r\n    this.type = Shape.types.PARTICLE;\r\n}\r\nParticle.prototype = new Shape();\r\nParticle.prototype.constructor = Particle;\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n * @return {Vec3}\r\n */\r\nParticle.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    target.set(0, 0, 0);\r\n    return target;\r\n};\r\n\r\nParticle.prototype.volume = function(){\r\n    return 0;\r\n};\r\n\r\nParticle.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = 0;\r\n};\r\n\r\nParticle.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    // Get each axis max\r\n    min.copy(pos);\r\n    max.copy(pos);\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./Shape\":43}],42:[function(_dereq_,module,exports){\r\nmodule.exports = Plane;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a RigidBody and rotate that body. See the demos.\r\n * @class Plane\r\n * @constructor\r\n * @extends Shape\r\n * @author schteppe\r\n */\r\nfunction Plane(){\r\n    Shape.call(this);\r\n    this.type = Shape.types.PLANE;\r\n\r\n    // World oriented normal\r\n    this.worldNormal = new Vec3();\r\n    this.worldNormalNeedsUpdate = true;\r\n\r\n    this.boundingSphereRadius = Number.MAX_VALUE;\r\n}\r\nPlane.prototype = new Shape();\r\nPlane.prototype.constructor = Plane;\r\n\r\nPlane.prototype.computeWorldNormal = function(quat){\r\n    var n = this.worldNormal;\r\n    n.set(0,0,1);\r\n    quat.vmult(n,n);\r\n    this.worldNormalNeedsUpdate = false;\r\n};\r\n\r\nPlane.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    return target;\r\n};\r\n\r\nPlane.prototype.volume = function(){\r\n    return Number.MAX_VALUE; // The plane is infinite...\r\n};\r\n\r\nvar tempNormal = new Vec3();\r\nPlane.prototype.calculateWorldAABB = function(pos, quat, min, max){\r\n    // The plane AABB is infinite, except if the normal is pointing along any axis\r\n    tempNormal.set(0,0,1); // Default plane normal is z\r\n    quat.vmult(tempNormal,tempNormal);\r\n    var maxVal = Number.MAX_VALUE;\r\n    min.set(-maxVal, -maxVal, -maxVal);\r\n    max.set(maxVal, maxVal, maxVal);\r\n\r\n    if(tempNormal.x === 1){ max.x = pos.x; }\r\n    if(tempNormal.y === 1){ max.y = pos.y; }\r\n    if(tempNormal.z === 1){ max.z = pos.z; }\r\n\r\n    if(tempNormal.x === -1){ min.x = pos.x; }\r\n    if(tempNormal.y === -1){ min.y = pos.y; }\r\n    if(tempNormal.z === -1){ min.z = pos.z; }\r\n};\r\n\r\nPlane.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = Number.MAX_VALUE;\r\n};\r\n},{\"../math/Vec3\":30,\"./Shape\":43}],43:[function(_dereq_,module,exports){\r\nmodule.exports = Shape;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Material = _dereq_('../material/Material');\r\n\r\n/**\r\n * Base class for shapes\r\n * @class Shape\r\n * @constructor\r\n * @author schteppe\r\n * @todo Should have a mechanism for caching bounding sphere radius instead of calculating it each time\r\n */\r\nfunction Shape(){\r\n\r\n    /**\r\n     * Identifyer of the Shape.\r\n     * @property {number} id\r\n     */\r\n    this.id = Shape.idCounter++;\r\n\r\n    /**\r\n     * The type of this shape. Must be set to an int > 0 by subclasses.\r\n     * @property type\r\n     * @type {Number}\r\n     * @see Shape.types\r\n     */\r\n    this.type = 0;\r\n\r\n    /**\r\n     * The local bounding sphere radius of this shape.\r\n     * @property {Number} boundingSphereRadius\r\n     */\r\n    this.boundingSphereRadius = 0;\r\n\r\n    /**\r\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\r\n     * @property {boolean} collisionResponse\r\n     */\r\n    this.collisionResponse = true;\r\n\r\n    /**\r\n     * @property {Material} material\r\n     */\r\n    this.material = null;\r\n}\r\nShape.prototype.constructor = Shape;\r\n\r\n/**\r\n * Computes the bounding sphere radius. The result is stored in the property .boundingSphereRadius\r\n * @method updateBoundingSphereRadius\r\n * @return {Number}\r\n */\r\nShape.prototype.updateBoundingSphereRadius = function(){\r\n    throw \"computeBoundingSphereRadius() not implemented for shape type \"+this.type;\r\n};\r\n\r\n/**\r\n * Get the volume of this shape\r\n * @method volume\r\n * @return {Number}\r\n */\r\nShape.prototype.volume = function(){\r\n    throw \"volume() not implemented for shape type \"+this.type;\r\n};\r\n\r\n/**\r\n * Calculates the inertia in the local frame for this shape.\r\n * @method calculateLocalInertia\r\n * @return {Vec3}\r\n * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\r\n */\r\nShape.prototype.calculateLocalInertia = function(mass,target){\r\n    throw \"calculateLocalInertia() not implemented for shape type \"+this.type;\r\n};\r\n\r\nShape.idCounter = 0;\r\n\r\n/**\r\n * The available shape types.\r\n * @static\r\n * @property types\r\n * @type {Object}\r\n */\r\nShape.types = {\r\n    SPHERE:1,\r\n    PLANE:2,\r\n    BOX:4,\r\n    COMPOUND:8,\r\n    CONVEXPOLYHEDRON:16,\r\n    HEIGHTFIELD:32,\r\n    PARTICLE:64,\r\n    CYLINDER:128,\r\n    TRIMESH:256\r\n};\r\n\r\n\r\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Shape\":43}],44:[function(_dereq_,module,exports){\r\nmodule.exports = Sphere;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\n/**\r\n * Spherical shape\r\n * @class Sphere\r\n * @constructor\r\n * @extends Shape\r\n * @param {Number} radius The radius of the sphere, a non-negative number.\r\n * @author schteppe / http://github.com/schteppe\r\n */\r\nfunction Sphere(radius){\r\n    Shape.call(this);\r\n\r\n    /**\r\n     * @property {Number} radius\r\n     */\r\n    this.radius = radius!==undefined ? Number(radius) : 1.0;\r\n    this.type = Shape.types.SPHERE;\r\n\r\n    if(this.radius < 0){\r\n        throw new Error('The sphere radius cannot be negative.');\r\n    }\r\n\r\n    this.updateBoundingSphereRadius();\r\n}\r\nSphere.prototype = new Shape();\r\nSphere.prototype.constructor = Sphere;\r\n\r\nSphere.prototype.calculateLocalInertia = function(mass,target){\r\n    target = target || new Vec3();\r\n    var I = 2.0*mass*this.radius*this.radius/5.0;\r\n    target.x = I;\r\n    target.y = I;\r\n    target.z = I;\r\n    return target;\r\n};\r\n\r\nSphere.prototype.volume = function(){\r\n    return 4.0 * Math.PI * this.radius / 3.0;\r\n};\r\n\r\nSphere.prototype.updateBoundingSphereRadius = function(){\r\n    this.boundingSphereRadius = this.radius;\r\n};\r\n\r\nSphere.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    var r = this.radius;\r\n    var axes = ['x','y','z'];\r\n    for(var i=0; i<axes.length; i++){\r\n        var ax = axes[i];\r\n        min[ax] = pos[ax] - r;\r\n        max[ax] = pos[ax] + r;\r\n    }\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./Shape\":43}],45:[function(_dereq_,module,exports){\r\nmodule.exports = Trimesh;\r\n\r\nvar Shape = _dereq_('./Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Octree = _dereq_('../utils/Octree');\r\n\r\n/**\r\n * @class Trimesh\r\n * @constructor\r\n * @param {array} vertices\r\n * @param {array} indices\r\n * @extends Shape\r\n * @example\r\n *     // How to make a mesh with a single triangle\r\n *     var vertices = [\r\n *         0, 0, 0, // vertex 0\r\n *         1, 0, 0, // vertex 1\r\n *         0, 1, 0  // vertex 2\r\n *     ];\r\n *     var indices = [\r\n *         0, 1, 2  // triangle 0\r\n *     ];\r\n *     var trimeshShape = new Trimesh(vertices, indices);\r\n */\r\nfunction Trimesh(vertices, indices) {\r\n    Shape.call(this);\r\n    this.type = Shape.types.TRIMESH;\r\n\r\n    /**\r\n     * @property vertices\r\n     * @type {Array}\r\n     */\r\n    this.vertices = new Float32Array(vertices);\r\n\r\n    /**\r\n     * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\r\n     * @property indices\r\n     * @type {Array}\r\n     */\r\n    this.indices = new Int16Array(indices);\r\n\r\n    /**\r\n     * The normals data.\r\n     * @property normals\r\n     * @type {Array}\r\n     */\r\n    this.normals = new Float32Array(indices.length);\r\n\r\n    /**\r\n     * The local AABB of the mesh.\r\n     * @property aabb\r\n     * @type {Array}\r\n     */\r\n    this.aabb = new AABB();\r\n\r\n    /**\r\n     * References to vertex pairs, making up all unique edges in the trimesh.\r\n     * @property {array} edges\r\n     */\r\n    this.edges = null;\r\n\r\n    /**\r\n     * Local scaling of the mesh. Use .setScale() to set it.\r\n     * @property {Vec3} scale\r\n     */\r\n    this.scale = new Vec3(1, 1, 1);\r\n\r\n    /**\r\n     * The indexed triangles. Use .updateTree() to update it.\r\n     * @property {Octree} tree\r\n     */\r\n    this.tree = new Octree();\r\n\r\n    this.updateEdges();\r\n    this.updateNormals();\r\n    this.updateAABB();\r\n    this.updateBoundingSphereRadius();\r\n    this.updateTree();\r\n}\r\nTrimesh.prototype = new Shape();\r\nTrimesh.prototype.constructor = Trimesh;\r\n\r\nvar computeNormals_n = new Vec3();\r\n\r\n/**\r\n * @method updateTree\r\n */\r\nTrimesh.prototype.updateTree = function(){\r\n    var tree = this.tree;\r\n\r\n    tree.reset();\r\n    tree.aabb.copy(this.aabb);\r\n    var scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\r\n    tree.aabb.lowerBound.x *= 1 / scale.x;\r\n    tree.aabb.lowerBound.y *= 1 / scale.y;\r\n    tree.aabb.lowerBound.z *= 1 / scale.z;\r\n    tree.aabb.upperBound.x *= 1 / scale.x;\r\n    tree.aabb.upperBound.y *= 1 / scale.y;\r\n    tree.aabb.upperBound.z *= 1 / scale.z;\r\n\r\n    // Insert all triangles\r\n    var triangleAABB = new AABB();\r\n    var a = new Vec3();\r\n    var b = new Vec3();\r\n    var c = new Vec3();\r\n    var points = [a, b, c];\r\n    for (var i = 0; i < this.indices.length / 3; i++) {\r\n        //this.getTriangleVertices(i, a, b, c);\r\n\r\n        // Get unscaled triangle verts\r\n        var i3 = i * 3;\r\n        this._getUnscaledVertex(this.indices[i3], a);\r\n        this._getUnscaledVertex(this.indices[i3 + 1], b);\r\n        this._getUnscaledVertex(this.indices[i3 + 2], c);\r\n\r\n        triangleAABB.setFromPoints(points);\r\n        tree.insert(triangleAABB, i);\r\n    }\r\n    tree.removeEmptyNodes();\r\n};\r\n\r\nvar unscaledAABB = new AABB();\r\n\r\n/**\r\n * Get triangles in a local AABB from the trimesh.\r\n * @method getTrianglesInAABB\r\n * @param  {AABB} aabb\r\n * @param  {array} result An array of integers, referencing the queried triangles.\r\n */\r\nTrimesh.prototype.getTrianglesInAABB = function(aabb, result){\r\n    unscaledAABB.copy(aabb);\r\n\r\n    // Scale it to local\r\n    var scale = this.scale;\r\n    var isx = scale.x;\r\n    var isy = scale.y;\r\n    var isz = scale.z;\r\n    var l = unscaledAABB.lowerBound;\r\n    var u = unscaledAABB.upperBound;\r\n    l.x /= isx;\r\n    l.y /= isy;\r\n    l.z /= isz;\r\n    u.x /= isx;\r\n    u.y /= isy;\r\n    u.z /= isz;\r\n\r\n    return this.tree.aabbQuery(unscaledAABB, result);\r\n};\r\n\r\n/**\r\n * @method setScale\r\n * @param {Vec3} scale\r\n */\r\nTrimesh.prototype.setScale = function(scale){\r\n    var wasUniform = this.scale.x === this.scale.y === this.scale.z;\r\n    var isUniform = scale.x === scale.y === scale.z;\r\n\r\n    if(!(wasUniform && isUniform)){\r\n        // Non-uniform scaling. Need to update normals.\r\n        this.updateNormals();\r\n    }\r\n    this.scale.copy(scale);\r\n    this.updateAABB();\r\n    this.updateBoundingSphereRadius();\r\n};\r\n\r\n/**\r\n * Compute the normals of the faces. Will save in the .normals array.\r\n * @method updateNormals\r\n */\r\nTrimesh.prototype.updateNormals = function(){\r\n    var n = computeNormals_n;\r\n\r\n    // Generate normals\r\n    var normals = this.normals;\r\n    for(var i=0; i < this.indices.length / 3; i++){\r\n        var i3 = i * 3;\r\n\r\n        var a = this.indices[i3],\r\n            b = this.indices[i3 + 1],\r\n            c = this.indices[i3 + 2];\r\n\r\n        this.getVertex(a, va);\r\n        this.getVertex(b, vb);\r\n        this.getVertex(c, vc);\r\n\r\n        Trimesh.computeNormal(vb, va, vc, n);\r\n\r\n        normals[i3] = n.x;\r\n        normals[i3 + 1] = n.y;\r\n        normals[i3 + 2] = n.z;\r\n    }\r\n};\r\n\r\n/**\r\n * Update the .edges property\r\n * @method updateEdges\r\n */\r\nTrimesh.prototype.updateEdges = function(){\r\n    var edges = {};\r\n    var add = function(indexA, indexB){\r\n        var key = a < b ? a + '_' + b : b + '_' + a;\r\n        edges[key] = true;\r\n    };\r\n    for(var i=0; i < this.indices.length / 3; i++){\r\n        var i3 = i * 3;\r\n        var a = this.indices[i3],\r\n            b = this.indices[i3 + 1],\r\n            c = this.indices[i3 + 2];\r\n        add(a,b);\r\n        add(b,c);\r\n        add(c,a);\r\n    }\r\n    var keys = Object.keys(edges);\r\n    this.edges = new Int16Array(keys.length * 2);\r\n    for (var i = 0; i < keys.length; i++) {\r\n        var indices = keys[i].split('_');\r\n        this.edges[2 * i] = parseInt(indices[0], 10);\r\n        this.edges[2 * i + 1] = parseInt(indices[1], 10);\r\n    }\r\n};\r\n\r\n/**\r\n * Get an edge vertex\r\n * @method getEdgeVertex\r\n * @param  {number} edgeIndex\r\n * @param  {number} firstOrSecond 0 or 1, depending on which one of the vertices you need.\r\n * @param  {Vec3} vertexStore Where to store the result\r\n */\r\nTrimesh.prototype.getEdgeVertex = function(edgeIndex, firstOrSecond, vertexStore){\r\n    var vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\r\n    this.getVertex(vertexIndex, vertexStore);\r\n};\r\n\r\nvar getEdgeVector_va = new Vec3();\r\nvar getEdgeVector_vb = new Vec3();\r\n\r\n/**\r\n * Get a vector along an edge.\r\n * @method getEdgeVector\r\n * @param  {number} edgeIndex\r\n * @param  {Vec3} vectorStore\r\n */\r\nTrimesh.prototype.getEdgeVector = function(edgeIndex, vectorStore){\r\n    var va = getEdgeVector_va;\r\n    var vb = getEdgeVector_vb;\r\n    this.getEdgeVertex(edgeIndex, 0, va);\r\n    this.getEdgeVertex(edgeIndex, 1, vb);\r\n    vb.vsub(va, vectorStore);\r\n};\r\n\r\n/**\r\n * Get face normal given 3 vertices\r\n * @static\r\n * @method computeNormal\r\n * @param {Vec3} va\r\n * @param {Vec3} vb\r\n * @param {Vec3} vc\r\n * @param {Vec3} target\r\n */\r\nvar cb = new Vec3();\r\nvar ab = new Vec3();\r\nTrimesh.computeNormal = function ( va, vb, vc, target ) {\r\n    vb.vsub(va,ab);\r\n    vc.vsub(vb,cb);\r\n    cb.cross(ab,target);\r\n    if ( !target.isZero() ) {\r\n        target.normalize();\r\n    }\r\n};\r\n\r\nvar va = new Vec3();\r\nvar vb = new Vec3();\r\nvar vc = new Vec3();\r\n\r\n/**\r\n * Get vertex i.\r\n * @method getVertex\r\n * @param  {number} i\r\n * @param  {Vec3} out\r\n * @return {Vec3} The \"out\" vector object\r\n */\r\nTrimesh.prototype.getVertex = function(i, out){\r\n    var scale = this.scale;\r\n    this._getUnscaledVertex(i, out);\r\n    out.x *= scale.x;\r\n    out.y *= scale.y;\r\n    out.z *= scale.z;\r\n    return out;\r\n};\r\n\r\n/**\r\n * Get raw vertex i\r\n * @private\r\n * @method _getUnscaledVertex\r\n * @param  {number} i\r\n * @param  {Vec3} out\r\n * @return {Vec3} The \"out\" vector object\r\n */\r\nTrimesh.prototype._getUnscaledVertex = function(i, out){\r\n    var i3 = i * 3;\r\n    var vertices = this.vertices;\r\n    return out.set(\r\n        vertices[i3],\r\n        vertices[i3 + 1],\r\n        vertices[i3 + 2]\r\n    );\r\n};\r\n\r\n/**\r\n * Get a vertex from the trimesh,transformed by the given position and quaternion.\r\n * @method getWorldVertex\r\n * @param  {number} i\r\n * @param  {Vec3} pos\r\n * @param  {Quaternion} quat\r\n * @param  {Vec3} out\r\n * @return {Vec3} The \"out\" vector object\r\n */\r\nTrimesh.prototype.getWorldVertex = function(i, pos, quat, out){\r\n    this.getVertex(i, out);\r\n    Transform.pointToWorldFrame(pos, quat, out, out);\r\n    return out;\r\n};\r\n\r\n/**\r\n * Get the three vertices for triangle i.\r\n * @method getTriangleVertices\r\n * @param  {number} i\r\n * @param  {Vec3} a\r\n * @param  {Vec3} b\r\n * @param  {Vec3} c\r\n */\r\nTrimesh.prototype.getTriangleVertices = function(i, a, b, c){\r\n    var i3 = i * 3;\r\n    this.getVertex(this.indices[i3], a);\r\n    this.getVertex(this.indices[i3 + 1], b);\r\n    this.getVertex(this.indices[i3 + 2], c);\r\n};\r\n\r\n/**\r\n * Compute the normal of triangle i.\r\n * @method getNormal\r\n * @param  {Number} i\r\n * @param  {Vec3} target\r\n * @return {Vec3} The \"target\" vector object\r\n */\r\nTrimesh.prototype.getNormal = function(i, target){\r\n    var i3 = i * 3;\r\n    return target.set(\r\n        this.normals[i3],\r\n        this.normals[i3 + 1],\r\n        this.normals[i3 + 2]\r\n    );\r\n};\r\n\r\nvar cli_aabb = new AABB();\r\n\r\n/**\r\n * @method calculateLocalInertia\r\n * @param  {Number} mass\r\n * @param  {Vec3} target\r\n * @return {Vec3} The \"target\" vector object\r\n */\r\nTrimesh.prototype.calculateLocalInertia = function(mass,target){\r\n    // Approximate with box inertia\r\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\r\n    this.computeLocalAABB(cli_aabb);\r\n    var x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x,\r\n        y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y,\r\n        z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\r\n    return target.set(\r\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z ),\r\n        1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z ),\r\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x )\r\n    );\r\n};\r\n\r\nvar computeLocalAABB_worldVert = new Vec3();\r\n\r\n/**\r\n * Compute the local AABB for the trimesh\r\n * @method computeLocalAABB\r\n * @param  {AABB} aabb\r\n */\r\nTrimesh.prototype.computeLocalAABB = function(aabb){\r\n    var l = aabb.lowerBound,\r\n        u = aabb.upperBound,\r\n        n = this.vertices.length,\r\n        vertices = this.vertices,\r\n        v = computeLocalAABB_worldVert;\r\n\r\n    this.getVertex(0, v);\r\n    l.copy(v);\r\n    u.copy(v);\r\n\r\n    for(var i=0; i !== n; i++){\r\n        this.getVertex(i, v);\r\n\r\n        if(v.x < l.x){\r\n            l.x = v.x;\r\n        } else if(v.x > u.x){\r\n            u.x = v.x;\r\n        }\r\n\r\n        if(v.y < l.y){\r\n            l.y = v.y;\r\n        } else if(v.y > u.y){\r\n            u.y = v.y;\r\n        }\r\n\r\n        if(v.z < l.z){\r\n            l.z = v.z;\r\n        } else if(v.z > u.z){\r\n            u.z = v.z;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Update the .aabb property\r\n * @method updateAABB\r\n */\r\nTrimesh.prototype.updateAABB = function(){\r\n    this.computeLocalAABB(this.aabb);\r\n};\r\n\r\n/**\r\n * Will update the .boundingSphereRadius property\r\n * @method updateBoundingSphereRadius\r\n */\r\nTrimesh.prototype.updateBoundingSphereRadius = function(){\r\n    // Assume points are distributed with local (0,0,0) as center\r\n    var max2 = 0;\r\n    var vertices = this.vertices;\r\n    var v = new Vec3();\r\n    for(var i=0, N=vertices.length / 3; i !== N; i++) {\r\n        this.getVertex(i, v);\r\n        var norm2 = v.norm2();\r\n        if(norm2 > max2){\r\n            max2 = norm2;\r\n        }\r\n    }\r\n    this.boundingSphereRadius = Math.sqrt(max2);\r\n};\r\n\r\nvar tempWorldVertex = new Vec3();\r\nvar calculateWorldAABB_frame = new Transform();\r\nvar calculateWorldAABB_aabb = new AABB();\r\n\r\n/**\r\n * @method calculateWorldAABB\r\n * @param {Vec3}        pos\r\n * @param {Quaternion}  quat\r\n * @param {Vec3}        min\r\n * @param {Vec3}        max\r\n */\r\nTrimesh.prototype.calculateWorldAABB = function(pos,quat,min,max){\r\n    /*\r\n    var n = this.vertices.length / 3,\r\n        verts = this.vertices;\r\n    var minx,miny,minz,maxx,maxy,maxz;\r\n\r\n    var v = tempWorldVertex;\r\n    for(var i=0; i<n; i++){\r\n        this.getVertex(i, v);\r\n        quat.vmult(v, v);\r\n        pos.vadd(v, v);\r\n        if (v.x < minx || minx===undefined){\r\n            minx = v.x;\r\n        } else if(v.x > maxx || maxx===undefined){\r\n            maxx = v.x;\r\n        }\r\n\r\n        if (v.y < miny || miny===undefined){\r\n            miny = v.y;\r\n        } else if(v.y > maxy || maxy===undefined){\r\n            maxy = v.y;\r\n        }\r\n\r\n        if (v.z < minz || minz===undefined){\r\n            minz = v.z;\r\n        } else if(v.z > maxz || maxz===undefined){\r\n            maxz = v.z;\r\n        }\r\n    }\r\n    min.set(minx,miny,minz);\r\n    max.set(maxx,maxy,maxz);\r\n    */\r\n\r\n    // Faster approximation using local AABB\r\n    var frame = calculateWorldAABB_frame;\r\n    var result = calculateWorldAABB_aabb;\r\n    frame.position = pos;\r\n    frame.quaternion = quat;\r\n    this.aabb.toWorldFrame(frame, result);\r\n    min.copy(result.lowerBound);\r\n    max.copy(result.upperBound);\r\n};\r\n\r\n/**\r\n * Get approximate volume\r\n * @method volume\r\n * @return {Number}\r\n */\r\nTrimesh.prototype.volume = function(){\r\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\r\n};\r\n\r\n/**\r\n * Create a Trimesh instance, shaped as a torus.\r\n * @static\r\n * @method createTorus\r\n * @param  {number} [radius=1]\r\n * @param  {number} [tube=0.5]\r\n * @param  {number} [radialSegments=8]\r\n * @param  {number} [tubularSegments=6]\r\n * @param  {number} [arc=6.283185307179586]\r\n * @return {Trimesh} A torus\r\n */\r\nTrimesh.createTorus = function (radius, tube, radialSegments, tubularSegments, arc) {\r\n    radius = radius || 1;\r\n    tube = tube || 0.5;\r\n    radialSegments = radialSegments || 8;\r\n    tubularSegments = tubularSegments || 6;\r\n    arc = arc || Math.PI * 2;\r\n\r\n    var vertices = [];\r\n    var indices = [];\r\n\r\n    for ( var j = 0; j <= radialSegments; j ++ ) {\r\n        for ( var i = 0; i <= tubularSegments; i ++ ) {\r\n            var u = i / tubularSegments * arc;\r\n            var v = j / radialSegments * Math.PI * 2;\r\n\r\n            var x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n            var y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n            var z = tube * Math.sin( v );\r\n\r\n            vertices.push( x, y, z );\r\n        }\r\n    }\r\n\r\n    for ( var j = 1; j <= radialSegments; j ++ ) {\r\n        for ( var i = 1; i <= tubularSegments; i ++ ) {\r\n            var a = ( tubularSegments + 1 ) * j + i - 1;\r\n            var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n            var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n            var d = ( tubularSegments + 1 ) * j + i;\r\n\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d);\r\n        }\r\n    }\r\n\r\n    return new Trimesh(vertices, indices);\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Octree\":50,\"./Shape\":43}],46:[function(_dereq_,module,exports){\r\nmodule.exports = GSSolver;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Solver = _dereq_('./Solver');\r\n\r\n/**\r\n * Constraint equation Gauss-Seidel solver.\r\n * @class GSSolver\r\n * @constructor\r\n * @todo The spook parameters should be specified for each constraint, not globally.\r\n * @author schteppe / https://github.com/schteppe\r\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\r\n * @extends Solver\r\n */\r\nfunction GSSolver(){\r\n    Solver.call(this);\r\n\r\n    /**\r\n     * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\r\n     * @property iterations\r\n     * @type {Number}\r\n     * @todo write more about solver and iterations in the wiki\r\n     */\r\n    this.iterations = 10;\r\n\r\n    /**\r\n     * When tolerance is reached, the system is assumed to be converged.\r\n     * @property tolerance\r\n     * @type {Number}\r\n     */\r\n    this.tolerance = 1e-7;\r\n}\r\nGSSolver.prototype = new Solver();\r\n\r\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\r\nvar GSSolver_solve_invCs = [];\r\nvar GSSolver_solve_Bs = [];\r\nGSSolver.prototype.solve = function(dt,world){\r\n    var iter = 0,\r\n        maxIter = this.iterations,\r\n        tolSquared = this.tolerance*this.tolerance,\r\n        equations = this.equations,\r\n        Neq = equations.length,\r\n        bodies = world.bodies,\r\n        Nbodies = bodies.length,\r\n        h = dt,\r\n        q, B, invC, deltalambda, deltalambdaTot, GWlambda, lambdaj;\r\n\r\n    // Update solve mass\r\n    if(Neq !== 0){\r\n        for(var i=0; i!==Nbodies; i++){\r\n            bodies[i].updateSolveMassProperties();\r\n        }\r\n    }\r\n\r\n    // Things that does not change during iteration can be computed once\r\n    var invCs = GSSolver_solve_invCs,\r\n        Bs = GSSolver_solve_Bs,\r\n        lambda = GSSolver_solve_lambda;\r\n    invCs.length = Neq;\r\n    Bs.length = Neq;\r\n    lambda.length = Neq;\r\n    for(var i=0; i!==Neq; i++){\r\n        var c = equations[i];\r\n        lambda[i] = 0.0;\r\n        Bs[i] = c.computeB(h);\r\n        invCs[i] = 1.0 / c.computeC();\r\n    }\r\n\r\n    if(Neq !== 0){\r\n\r\n        // Reset vlambda\r\n        for(var i=0; i!==Nbodies; i++){\r\n            var b=bodies[i],\r\n                vlambda=b.vlambda,\r\n                wlambda=b.wlambda;\r\n            vlambda.set(0,0,0);\r\n            if(wlambda){\r\n                wlambda.set(0,0,0);\r\n            }\r\n        }\r\n\r\n        // Iterate over equations\r\n        for(iter=0; iter!==maxIter; iter++){\r\n\r\n            // Accumulate the total error for each iteration.\r\n            deltalambdaTot = 0.0;\r\n\r\n            for(var j=0; j!==Neq; j++){\r\n\r\n                var c = equations[j];\r\n\r\n                // Compute iteration\r\n                B = Bs[j];\r\n                invC = invCs[j];\r\n                lambdaj = lambda[j];\r\n                GWlambda = c.computeGWlambda();\r\n                deltalambda = invC * ( B - GWlambda - c.eps * lambdaj );\r\n\r\n                // Clamp if we are not within the min/max interval\r\n                if(lambdaj + deltalambda < c.minForce){\r\n                    deltalambda = c.minForce - lambdaj;\r\n                } else if(lambdaj + deltalambda > c.maxForce){\r\n                    deltalambda = c.maxForce - lambdaj;\r\n                }\r\n                lambda[j] += deltalambda;\r\n\r\n                deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\r\n\r\n                c.addToWlambda(deltalambda);\r\n            }\r\n\r\n            // If the total error is small enough - stop iterate\r\n            if(deltalambdaTot*deltalambdaTot < tolSquared){\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Add result to velocity\r\n        for(var i=0; i!==Nbodies; i++){\r\n            var b=bodies[i],\r\n                v=b.velocity,\r\n                w=b.angularVelocity;\r\n            v.vadd(b.vlambda, v);\r\n            if(w){\r\n                w.vadd(b.wlambda, w);\r\n            }\r\n        }\r\n    }\r\n\r\n    return iter;\r\n};\r\n\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Solver\":47}],47:[function(_dereq_,module,exports){\r\nmodule.exports = Solver;\r\n\r\n/**\r\n * Constraint equation solver base class.\r\n * @class Solver\r\n * @constructor\r\n * @author schteppe / https://github.com/schteppe\r\n */\r\nfunction Solver(){\r\n    /**\r\n     * All equations to be solved\r\n     * @property {Array} equations\r\n     */\r\n    this.equations = [];\r\n}\r\n\r\n/**\r\n * Should be implemented in subclasses!\r\n * @method solve\r\n * @param  {Number} dt\r\n * @param  {World} world\r\n */\r\nSolver.prototype.solve = function(dt,world){\r\n    // Should return the number of iterations done!\r\n    return 0;\r\n};\r\n\r\n/**\r\n * Add an equation\r\n * @method addEquation\r\n * @param {Equation} eq\r\n */\r\nSolver.prototype.addEquation = function(eq){\r\n    if (eq.enabled) {\r\n        this.equations.push(eq);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove an equation\r\n * @method removeEquation\r\n * @param {Equation} eq\r\n */\r\nSolver.prototype.removeEquation = function(eq){\r\n    var eqs = this.equations;\r\n    var i = eqs.indexOf(eq);\r\n    if(i !== -1){\r\n        eqs.splice(i,1);\r\n    }\r\n};\r\n\r\n/**\r\n * Add all equations\r\n * @method removeAllEquations\r\n */\r\nSolver.prototype.removeAllEquations = function(){\r\n    this.equations.length = 0;\r\n};\r\n\r\n\r\n},{}],48:[function(_dereq_,module,exports){\r\nmodule.exports = SplitSolver;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Solver = _dereq_('./Solver');\r\nvar Body = _dereq_('../objects/Body');\r\n\r\n/**\r\n * Splits the equations into islands and solves them independently. Can improve performance.\r\n * @class SplitSolver\r\n * @constructor\r\n * @extends Solver\r\n * @param {Solver} subsolver\r\n */\r\nfunction SplitSolver(subsolver){\r\n    Solver.call(this);\r\n    this.iterations = 10;\r\n    this.tolerance = 1e-7;\r\n    this.subsolver = subsolver;\r\n    this.nodes = [];\r\n    this.nodePool = [];\r\n\r\n    // Create needed nodes, reuse if possible\r\n    while(this.nodePool.length < 128){\r\n        this.nodePool.push(this.createNode());\r\n    }\r\n}\r\nSplitSolver.prototype = new Solver();\r\n\r\n// Returns the number of subsystems\r\nvar SplitSolver_solve_nodes = []; // All allocated node objects\r\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\r\nvar SplitSolver_solve_eqs = [];   // Temp array\r\nvar SplitSolver_solve_bds = [];   // Temp array\r\nvar SplitSolver_solve_dummyWorld = {bodies:[]}; // Temp object\r\n\r\nvar STATIC = Body.STATIC;\r\nfunction getUnvisitedNode(nodes){\r\n    var Nnodes = nodes.length;\r\n    for(var i=0; i!==Nnodes; i++){\r\n        var node = nodes[i];\r\n        if(!node.visited && !(node.body.type & STATIC)){\r\n            return node;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nvar queue = [];\r\nfunction bfs(root,visitFunc,bds,eqs){\r\n    queue.push(root);\r\n    root.visited = true;\r\n    visitFunc(root,bds,eqs);\r\n    while(queue.length) {\r\n        var node = queue.pop();\r\n        // Loop over unvisited child nodes\r\n        var child;\r\n        while((child = getUnvisitedNode(node.children))) {\r\n            child.visited = true;\r\n            visitFunc(child,bds,eqs);\r\n            queue.push(child);\r\n        }\r\n    }\r\n}\r\n\r\nfunction visitFunc(node,bds,eqs){\r\n    bds.push(node.body);\r\n    var Neqs = node.eqs.length;\r\n    for(var i=0; i!==Neqs; i++){\r\n        var eq = node.eqs[i];\r\n        if(eqs.indexOf(eq) === -1){\r\n            eqs.push(eq);\r\n        }\r\n    }\r\n}\r\n\r\nSplitSolver.prototype.createNode = function(){\r\n    return { body:null, children:[], eqs:[], visited:false };\r\n};\r\n\r\n/**\r\n * Solve the subsystems\r\n * @method solve\r\n * @param  {Number} dt\r\n * @param  {World} world\r\n */\r\nSplitSolver.prototype.solve = function(dt,world){\r\n    var nodes=SplitSolver_solve_nodes,\r\n        nodePool=this.nodePool,\r\n        bodies=world.bodies,\r\n        equations=this.equations,\r\n        Neq=equations.length,\r\n        Nbodies=bodies.length,\r\n        subsolver=this.subsolver;\r\n\r\n    // Create needed nodes, reuse if possible\r\n    while(nodePool.length < Nbodies){\r\n        nodePool.push(this.createNode());\r\n    }\r\n    nodes.length = Nbodies;\r\n    for (var i = 0; i < Nbodies; i++) {\r\n        nodes[i] = nodePool[i];\r\n    }\r\n\r\n    // Reset node values\r\n    for(var i=0; i!==Nbodies; i++){\r\n        var node = nodes[i];\r\n        node.body = bodies[i];\r\n        node.children.length = 0;\r\n        node.eqs.length = 0;\r\n        node.visited = false;\r\n    }\r\n    for(var k=0; k!==Neq; k++){\r\n        var eq=equations[k],\r\n            i=bodies.indexOf(eq.bi),\r\n            j=bodies.indexOf(eq.bj),\r\n            ni=nodes[i],\r\n            nj=nodes[j];\r\n        ni.children.push(nj);\r\n        ni.eqs.push(eq);\r\n        nj.children.push(ni);\r\n        nj.eqs.push(eq);\r\n    }\r\n\r\n    var child, n=0, eqs=SplitSolver_solve_eqs;\r\n\r\n    subsolver.tolerance = this.tolerance;\r\n    subsolver.iterations = this.iterations;\r\n\r\n    var dummyWorld = SplitSolver_solve_dummyWorld;\r\n    while((child = getUnvisitedNode(nodes))){\r\n        eqs.length = 0;\r\n        dummyWorld.bodies.length = 0;\r\n        bfs(child, visitFunc, dummyWorld.bodies, eqs);\r\n\r\n        var Neqs = eqs.length;\r\n\r\n        eqs = eqs.sort(sortById);\r\n\r\n        for(var i=0; i!==Neqs; i++){\r\n            subsolver.addEquation(eqs[i]);\r\n        }\r\n\r\n        var iter = subsolver.solve(dt,dummyWorld);\r\n        subsolver.removeAllEquations();\r\n        n++;\r\n    }\r\n\r\n    return n;\r\n};\r\n\r\nfunction sortById(a, b){\r\n    return b.id - a.id;\r\n}\r\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"./Solver\":47}],49:[function(_dereq_,module,exports){\r\n/**\r\n * Base class for objects that dispatches events.\r\n * @class EventTarget\r\n * @constructor\r\n */\r\nvar EventTarget = function () {\r\n\r\n};\r\n\r\nmodule.exports = EventTarget;\r\n\r\nEventTarget.prototype = {\r\n    constructor: EventTarget,\r\n\r\n    /**\r\n     * Add an event listener\r\n     * @method addEventListener\r\n     * @param  {String} type\r\n     * @param  {Function} listener\r\n     * @return {EventTarget} The self object, for chainability.\r\n     */\r\n    addEventListener: function ( type, listener ) {\r\n        if ( this._listeners === undefined ){ this._listeners = {}; }\r\n        var listeners = this._listeners;\r\n        if ( listeners[ type ] === undefined ) {\r\n            listeners[ type ] = [];\r\n        }\r\n        if ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n            listeners[ type ].push( listener );\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check if an event listener is added\r\n     * @method hasEventListener\r\n     * @param  {String} type\r\n     * @param  {Function} listener\r\n     * @return {Boolean}\r\n     */\r\n    hasEventListener: function ( type, listener ) {\r\n        if ( this._listeners === undefined ){ return false; }\r\n        var listeners = this._listeners;\r\n        if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Remove an event listener\r\n     * @method removeEventListener\r\n     * @param  {String} type\r\n     * @param  {Function} listener\r\n     * @return {EventTarget} The self object, for chainability.\r\n     */\r\n    removeEventListener: function ( type, listener ) {\r\n        if ( this._listeners === undefined ){ return this; }\r\n        var listeners = this._listeners;\r\n        if ( listeners[type] === undefined ){ return this; }\r\n        var index = listeners[ type ].indexOf( listener );\r\n        if ( index !== - 1 ) {\r\n            listeners[ type ].splice( index, 1 );\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Emit an event.\r\n     * @method dispatchEvent\r\n     * @param  {Object} event\r\n     * @param  {String} event.type\r\n     * @return {EventTarget} The self object, for chainability.\r\n     */\r\n    dispatchEvent: function ( event ) {\r\n        if ( this._listeners === undefined ){ return this; }\r\n        var listeners = this._listeners;\r\n        var listenerArray = listeners[ event.type ];\r\n        if ( listenerArray !== undefined ) {\r\n            event.target = this;\r\n            for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {\r\n                listenerArray[ i ].call( this, event );\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n};\r\n\r\n},{}],50:[function(_dereq_,module,exports){\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\n\r\nmodule.exports = Octree;\r\n\r\n/**\r\n * @class OctreeNode\r\n * @param {object} [options]\r\n * @param {Octree} [options.root]\r\n * @param {AABB} [options.aabb]\r\n */\r\nfunction OctreeNode(options){\r\n    options = options || {};\r\n\r\n    /**\r\n     * The root node\r\n     * @property {OctreeNode} root\r\n     */\r\n    this.root = options.root || null;\r\n\r\n    /**\r\n     * Boundary of this node\r\n     * @property {AABB} aabb\r\n     */\r\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\r\n\r\n    /**\r\n     * Contained data at the current node level.\r\n     * @property {Array} data\r\n     */\r\n    this.data = [];\r\n\r\n    /**\r\n     * Children to this node\r\n     * @property {Array} children\r\n     */\r\n    this.children = [];\r\n}\r\n\r\n/**\r\n * @class Octree\r\n * @param {AABB} aabb The total AABB of the tree\r\n * @param {object} [options]\r\n * @param {number} [options.maxDepth=8]\r\n * @extends OctreeNode\r\n */\r\nfunction Octree(aabb, options){\r\n    options = options || {};\r\n    options.root = null;\r\n    options.aabb = aabb;\r\n    OctreeNode.call(this, options);\r\n\r\n    /**\r\n     * Maximum subdivision depth\r\n     * @property {number} maxDepth\r\n     */\r\n    this.maxDepth = typeof(options.maxDepth) !== 'undefined' ? options.maxDepth : 8;\r\n}\r\nOctree.prototype = new OctreeNode();\r\n\r\nOctreeNode.prototype.reset = function(aabb, options){\r\n    this.children.length = this.data.length = 0;\r\n};\r\n\r\n/**\r\n * Insert data into this node\r\n * @method insert\r\n * @param  {AABB} aabb\r\n * @param  {object} elementData\r\n * @return {boolean} True if successful, otherwise false\r\n */\r\nOctreeNode.prototype.insert = function(aabb, elementData, level){\r\n    var nodeData = this.data;\r\n    level = level || 0;\r\n\r\n    // Ignore objects that do not belong in this node\r\n    if (!this.aabb.contains(aabb)){\r\n        return false; // object cannot be added\r\n    }\r\n\r\n    var children = this.children;\r\n\r\n    if(level < (this.maxDepth || this.root.maxDepth)){\r\n        // Subdivide if there are no children yet\r\n        var subdivided = false;\r\n        if (!children.length){\r\n            this.subdivide();\r\n            subdivided = true;\r\n        }\r\n\r\n        // add to whichever node will accept it\r\n        for (var i = 0; i !== 8; i++) {\r\n            if (children[i].insert(aabb, elementData, level + 1)){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if(subdivided){\r\n            // No children accepted! Might as well just remove em since they contain none\r\n            children.length = 0;\r\n        }\r\n    }\r\n\r\n    // Too deep, or children didnt want it. add it in current node\r\n    nodeData.push(elementData);\r\n\r\n    return true;\r\n};\r\n\r\nvar halfDiagonal = new Vec3();\r\n\r\n/**\r\n * Create 8 equally sized children nodes and put them in the .children array.\r\n * @method subdivide\r\n */\r\nOctreeNode.prototype.subdivide = function() {\r\n    var aabb = this.aabb;\r\n    var l = aabb.lowerBound;\r\n    var u = aabb.upperBound;\r\n\r\n    var children = this.children;\r\n\r\n    children.push(\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,0) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,0) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,0) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,1) }) }),\r\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,0) }) })\r\n    );\r\n\r\n    u.vsub(l, halfDiagonal);\r\n    halfDiagonal.scale(0.5, halfDiagonal);\r\n\r\n    var root = this.root || this;\r\n\r\n    for (var i = 0; i !== 8; i++) {\r\n        var child = children[i];\r\n\r\n        // Set current node as root\r\n        child.root = root;\r\n\r\n        // Compute bounds\r\n        var lowerBound = child.aabb.lowerBound;\r\n        lowerBound.x *= halfDiagonal.x;\r\n        lowerBound.y *= halfDiagonal.y;\r\n        lowerBound.z *= halfDiagonal.z;\r\n\r\n        lowerBound.vadd(l, lowerBound);\r\n\r\n        // Upper bound is always lower bound + halfDiagonal\r\n        lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\r\n    }\r\n};\r\n\r\n/**\r\n * Get all data, potentially within an AABB\r\n * @method aabbQuery\r\n * @param  {AABB} aabb\r\n * @param  {array} result\r\n * @return {array} The \"result\" object\r\n */\r\nOctreeNode.prototype.aabbQuery = function(aabb, result) {\r\n\r\n    var nodeData = this.data;\r\n\r\n    // abort if the range does not intersect this node\r\n    // if (!this.aabb.overlaps(aabb)){\r\n    //     return result;\r\n    // }\r\n\r\n    // Add objects at this level\r\n    // Array.prototype.push.apply(result, nodeData);\r\n\r\n    // Add child data\r\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\r\n    var children = this.children;\r\n\r\n\r\n    // for (var i = 0, N = this.children.length; i !== N; i++) {\r\n    //     children[i].aabbQuery(aabb, result);\r\n    // }\r\n\r\n    var queue = [this];\r\n    while (queue.length) {\r\n        var node = queue.pop();\r\n        if (node.aabb.overlaps(aabb)){\r\n            Array.prototype.push.apply(result, node.data);\r\n        }\r\n        Array.prototype.push.apply(queue, node.children);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nvar tmpAABB = new AABB();\r\n\r\n/**\r\n * Get all data, potentially intersected by a ray.\r\n * @method rayQuery\r\n * @param  {Ray} ray\r\n * @param  {Transform} treeTransform\r\n * @param  {array} result\r\n * @return {array} The \"result\" object\r\n */\r\nOctreeNode.prototype.rayQuery = function(ray, treeTransform, result) {\r\n\r\n    // Use aabb query for now.\r\n    // @todo implement real ray query which needs less lookups\r\n    ray.getAABB(tmpAABB);\r\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\r\n    this.aabbQuery(tmpAABB, result);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * @method removeEmptyNodes\r\n */\r\nOctreeNode.prototype.removeEmptyNodes = function() {\r\n    var queue = [this];\r\n    while (queue.length) {\r\n        var node = queue.pop();\r\n        for (var i = node.children.length - 1; i >= 0; i--) {\r\n            if(!node.children[i].data.length){\r\n                node.children.splice(i, 1);\r\n            }\r\n        }\r\n        Array.prototype.push.apply(queue, node.children);\r\n    }\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../math/Vec3\":30}],51:[function(_dereq_,module,exports){\r\nmodule.exports = Pool;\r\n\r\n/**\r\n * For pooling objects that can be reused.\r\n * @class Pool\r\n * @constructor\r\n */\r\nfunction Pool(){\r\n    /**\r\n     * The pooled objects\r\n     * @property {Array} objects\r\n     */\r\n    this.objects = [];\r\n\r\n    /**\r\n     * Constructor of the objects\r\n     * @property {mixed} type\r\n     */\r\n    this.type = Object;\r\n}\r\n\r\n/**\r\n * Release an object after use\r\n * @method release\r\n * @param {Object} obj\r\n */\r\nPool.prototype.release = function(){\r\n    var Nargs = arguments.length;\r\n    for(var i=0; i!==Nargs; i++){\r\n        this.objects.push(arguments[i]);\r\n    }\r\n};\r\n\r\n/**\r\n * Get an object\r\n * @method get\r\n * @return {mixed}\r\n */\r\nPool.prototype.get = function(){\r\n    if(this.objects.length===0){\r\n        return this.constructObject();\r\n    } else {\r\n        return this.objects.pop();\r\n    }\r\n};\r\n\r\n/**\r\n * Construct an object. Should be implmented in each subclass.\r\n * @method constructObject\r\n * @return {mixed}\r\n */\r\nPool.prototype.constructObject = function(){\r\n    throw new Error(\"constructObject() not implemented in this Pool subclass yet!\");\r\n};\r\n\r\n},{}],52:[function(_dereq_,module,exports){\r\nmodule.exports = TupleDictionary;\r\n\r\n/**\r\n * @class TupleDictionary\r\n * @constructor\r\n */\r\nfunction TupleDictionary() {\r\n\r\n    /**\r\n     * The data storage\r\n     * @property data\r\n     * @type {Object}\r\n     */\r\n    this.data = { keys:[] };\r\n}\r\n\r\n/**\r\n * @method get\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @return {Number}\r\n */\r\nTupleDictionary.prototype.get = function(i, j) {\r\n    if (i > j) {\r\n        // swap\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n    return this.data[i+'-'+j];\r\n};\r\n\r\n/**\r\n * @method set\r\n * @param  {Number} i\r\n * @param  {Number} j\r\n * @param {Number} value\r\n */\r\nTupleDictionary.prototype.set = function(i, j, value) {\r\n    if (i > j) {\r\n        var temp = j;\r\n        j = i;\r\n        i = temp;\r\n    }\r\n    var key = i+'-'+j;\r\n\r\n    // Check if key already exists\r\n    if(!this.get(i,j)){\r\n        this.data.keys.push(key);\r\n    }\r\n\r\n    this.data[key] = value;\r\n};\r\n\r\n/**\r\n * @method reset\r\n */\r\nTupleDictionary.prototype.reset = function() {\r\n    var data = this.data,\r\n        keys = data.keys;\r\n    while(keys.length > 0){\r\n        var key = keys.pop();\r\n        delete data[key];\r\n    }\r\n};\r\n\r\n},{}],53:[function(_dereq_,module,exports){\r\nfunction Utils(){}\r\n\r\nmodule.exports = Utils;\r\n\r\n/**\r\n * Extend an options object with default values.\r\n * @static\r\n * @method defaults\r\n * @param  {object} options The options object. May be falsy: in this case, a new object is created and returned.\r\n * @param  {object} defaults An object containing default values.\r\n * @return {object} The modified options object.\r\n */\r\nUtils.defaults = function(options, defaults){\r\n    options = options || {};\r\n\r\n    for(var key in defaults){\r\n        if(!(key in options)){\r\n            options[key] = defaults[key];\r\n        }\r\n    }\r\n\r\n    return options;\r\n};\r\n\r\n},{}],54:[function(_dereq_,module,exports){\r\nmodule.exports = Vec3Pool;\r\n\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Pool = _dereq_('./Pool');\r\n\r\n/**\r\n * @class Vec3Pool\r\n * @constructor\r\n * @extends Pool\r\n */\r\nfunction Vec3Pool(){\r\n    Pool.call(this);\r\n    this.type = Vec3;\r\n}\r\nVec3Pool.prototype = new Pool();\r\n\r\n/**\r\n * Construct a vector\r\n * @method constructObject\r\n * @return {Vec3}\r\n */\r\nVec3Pool.prototype.constructObject = function(){\r\n    return new Vec3();\r\n};\r\n\r\n},{\"../math/Vec3\":30,\"./Pool\":51}],55:[function(_dereq_,module,exports){\r\nmodule.exports = Narrowphase;\r\n\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Ray = _dereq_('../collision/Ray');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Transform = _dereq_('../math/Transform');\r\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar Solver = _dereq_('../solver/Solver');\r\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\r\n\r\n/**\r\n * Helper class for the World. Generates ContactEquations.\r\n * @class Narrowphase\r\n * @constructor\r\n * @todo Sphere-ConvexPolyhedron contacts\r\n * @todo Contact reduction\r\n * @todo  should move methods to prototype\r\n */\r\nfunction Narrowphase(world){\r\n\r\n    /**\r\n     * Internal storage of pooled contact points.\r\n     * @property {Array} contactPointPool\r\n     */\r\n    this.contactPointPool = [];\r\n\r\n    this.frictionEquationPool = [];\r\n\r\n    this.result = [];\r\n    this.frictionResult = [];\r\n\r\n    /**\r\n     * Pooled vectors.\r\n     * @property {Vec3Pool} v3pool\r\n     */\r\n    this.v3pool = new Vec3Pool();\r\n\r\n    this.world = world;\r\n    this.currentContactMaterial = null;\r\n\r\n    /**\r\n     * @property {Boolean} enableFrictionReduction\r\n     */\r\n    this.enableFrictionReduction = false;\r\n}\r\n\r\n/**\r\n * Make a contact object, by using the internal pool or creating a new one.\r\n * @method createContactEquation\r\n * @return {ContactEquation}\r\n */\r\nNarrowphase.prototype.createContactEquation = function(bi, bj, si, sj, rsi, rsj){\r\n    var c;\r\n    if(this.contactPointPool.length){\r\n        c = this.contactPointPool.pop();\r\n        c.bi = bi;\r\n        c.bj = bj;\r\n    } else {\r\n        c = new ContactEquation(bi, bj);\r\n    }\r\n\r\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\r\n\r\n    var cm = this.currentContactMaterial;\r\n\r\n    c.restitution = cm.restitution;\r\n\r\n    c.setSpookParams(\r\n        cm.contactEquationStiffness,\r\n        cm.contactEquationRelaxation,\r\n        this.world.dt\r\n    );\r\n\r\n    var matA = si.material || bi.material;\r\n    var matB = sj.material || bj.material;\r\n    if(matA && matB && matA.restitution >= 0 && matB.restitution >= 0){\r\n        c.restitution = matA.restitution * matB.restitution;\r\n    }\r\n\r\n    c.si = rsi || si;\r\n    c.sj = rsj || sj;\r\n\r\n    return c;\r\n};\r\n\r\nNarrowphase.prototype.createFrictionEquationsFromContact = function(contactEquation, outArray){\r\n    var bodyA = contactEquation.bi;\r\n    var bodyB = contactEquation.bj;\r\n    var shapeA = contactEquation.si;\r\n    var shapeB = contactEquation.sj;\r\n\r\n    var world = this.world;\r\n    var cm = this.currentContactMaterial;\r\n\r\n    // If friction or restitution were specified in the material, use them\r\n    var friction = cm.friction;\r\n    var matA = shapeA.material || bodyA.material;\r\n    var matB = shapeB.material || bodyB.material;\r\n    if(matA && matB && matA.friction >= 0 && matB.friction >= 0){\r\n        friction = matA.friction * matB.friction;\r\n    }\r\n\r\n    if(friction > 0){\r\n\r\n        // Create 2 tangent equations\r\n        var mug = friction * world.gravity.length();\r\n        var reducedMass = (bodyA.invMass + bodyB.invMass);\r\n        if(reducedMass > 0){\r\n            reducedMass = 1/reducedMass;\r\n        }\r\n        var pool = this.frictionEquationPool;\r\n        var c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\r\n        var c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\r\n\r\n        c1.bi = c2.bi = bodyA;\r\n        c1.bj = c2.bj = bodyB;\r\n        c1.minForce = c2.minForce = -mug*reducedMass;\r\n        c1.maxForce = c2.maxForce = mug*reducedMass;\r\n\r\n        // Copy over the relative vectors\r\n        c1.ri.copy(contactEquation.ri);\r\n        c1.rj.copy(contactEquation.rj);\r\n        c2.ri.copy(contactEquation.ri);\r\n        c2.rj.copy(contactEquation.rj);\r\n\r\n        // Construct tangents\r\n        contactEquation.ni.tangents(c1.t, c2.t);\r\n\r\n        // Set spook params\r\n        c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\r\n        c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\r\n\r\n        c1.enabled = c2.enabled = contactEquation.enabled;\r\n\r\n        outArray.push(c1, c2);\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nvar averageNormal = new Vec3();\r\nvar averageContactPointA = new Vec3();\r\nvar averageContactPointB = new Vec3();\r\n\r\n// Take the average N latest contact point on the plane.\r\nNarrowphase.prototype.createFrictionFromAverage = function(numContacts){\r\n    // The last contactEquation\r\n    var c = this.result[this.result.length - 1];\r\n\r\n    // Create the result: two \"average\" friction equations\r\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\r\n        return;\r\n    }\r\n\r\n    var f1 = this.frictionResult[this.frictionResult.length - 2];\r\n    var f2 = this.frictionResult[this.frictionResult.length - 1];\r\n\r\n    averageNormal.setZero();\r\n    averageContactPointA.setZero();\r\n    averageContactPointB.setZero();\r\n\r\n    var bodyA = c.bi;\r\n    var bodyB = c.bj;\r\n    for(var i=0; i!==numContacts; i++){\r\n        c = this.result[this.result.length - 1 - i];\r\n        if(c.bodyA !== bodyA){\r\n            averageNormal.vadd(c.ni, averageNormal); // vec2.add(eq.t, eq.t, c.normalA);\r\n            averageContactPointA.vadd(c.ri, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\r\n            averageContactPointB.vadd(c.rj, averageContactPointB);\r\n        } else {\r\n            averageNormal.vsub(c.ni, averageNormal); // vec2.sub(eq.t, eq.t, c.normalA);\r\n            averageContactPointA.vadd(c.rj, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\r\n            averageContactPointB.vadd(c.ri, averageContactPointB);\r\n        }\r\n    }\r\n\r\n    var invNumContacts = 1 / numContacts;\r\n    averageContactPointA.scale(invNumContacts, f1.ri); // vec2.scale(eq.contactPointA, eq.contactPointA, invNumContacts);\r\n    averageContactPointB.scale(invNumContacts, f1.rj); // vec2.scale(eq.contactPointB, eq.contactPointB, invNumContacts);\r\n    f2.ri.copy(f1.ri); // Should be the same\r\n    f2.rj.copy(f1.rj);\r\n    averageNormal.normalize();\r\n    averageNormal.tangents(f1.t, f2.t);\r\n    // return eq;\r\n};\r\n\r\n\r\nvar tmpVec1 = new Vec3();\r\nvar tmpVec2 = new Vec3();\r\nvar tmpQuat1 = new Quaternion();\r\nvar tmpQuat2 = new Quaternion();\r\n\r\n/**\r\n * Generate all contacts between a list of body pairs\r\n * @method getContacts\r\n * @param {array} p1 Array of body indices\r\n * @param {array} p2 Array of body indices\r\n * @param {World} world\r\n * @param {array} result Array to store generated contacts\r\n * @param {array} oldcontacts Optional. Array of reusable contact objects\r\n */\r\nNarrowphase.prototype.getContacts = function(p1, p2, world, result, oldcontacts, frictionResult, frictionPool){\r\n    // Save old contact objects\r\n    this.contactPointPool = oldcontacts;\r\n    this.frictionEquationPool = frictionPool;\r\n    this.result = result;\r\n    this.frictionResult = frictionResult;\r\n\r\n    var qi = tmpQuat1;\r\n    var qj = tmpQuat2;\r\n    var xi = tmpVec1;\r\n    var xj = tmpVec2;\r\n\r\n    for(var k=0, N=p1.length; k!==N; k++){\r\n\r\n        // Get current collision bodies\r\n        var bi = p1[k],\r\n            bj = p2[k];\r\n\r\n        // Get contact material\r\n        var bodyContactMaterial = null;\r\n        if(bi.material && bj.material){\r\n            bodyContactMaterial = world.getContactMaterial(bi.material,bj.material) || null;\r\n        }\r\n\r\n        for (var i = 0; i < bi.shapes.length; i++) {\r\n            bi.quaternion.mult(bi.shapeOrientations[i], qi);\r\n            bi.quaternion.vmult(bi.shapeOffsets[i], xi);\r\n            xi.vadd(bi.position, xi);\r\n            var si = bi.shapes[i];\r\n\r\n            for (var j = 0; j < bj.shapes.length; j++) {\r\n\r\n                // Compute world transform of shapes\r\n                bj.quaternion.mult(bj.shapeOrientations[j], qj);\r\n                bj.quaternion.vmult(bj.shapeOffsets[j], xj);\r\n                xj.vadd(bj.position, xj);\r\n                var sj = bj.shapes[j];\r\n\r\n                if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n                    continue;\r\n                }\r\n\r\n                // Get collision material\r\n                var shapeContactMaterial = null;\r\n                if(si.material && sj.material){\r\n                    shapeContactMaterial = world.getContactMaterial(si.material,sj.material) || null;\r\n                }\r\n\r\n                this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial;\r\n\r\n                // Get contacts\r\n                var resolver = this[si.type | sj.type];\r\n                if(resolver){\r\n                    if (si.type < sj.type) {\r\n                        resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj);\r\n                    } else {\r\n                        resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar numWarnings = 0;\r\nvar maxWarnings = 10;\r\n\r\nfunction warn(msg){\r\n    if(numWarnings > maxWarnings){\r\n        return;\r\n    }\r\n\r\n    numWarnings++;\r\n\r\n    console.warn(msg);\r\n}\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.BOX] =\r\nNarrowphase.prototype.boxBox = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    sj.convexPolyhedronRepresentation.material = sj.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\r\n    this.convexConvex(si.convexPolyhedronRepresentation,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj,si,sj);\r\n};\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.boxConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    this.convexConvex(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\r\n};\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.PARTICLE] =\r\nNarrowphase.prototype.boxParticle = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    this.convexParticle(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\r\n};\r\n\r\n/**\r\n * @method sphereSphere\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE] =\r\nNarrowphase.prototype.sphereSphere = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    // We will have only one contact in this case\r\n    var r = this.createContactEquation(bi,bj,si,sj);\r\n\r\n    // Contact normal\r\n    xj.vsub(xi, r.ni);\r\n    r.ni.normalize();\r\n\r\n    // Contact point locations\r\n    r.ri.copy(r.ni);\r\n    r.rj.copy(r.ni);\r\n    r.ri.mult(si.radius, r.ri);\r\n    r.rj.mult(-sj.radius, r.rj);\r\n\r\n    r.ri.vadd(xi, r.ri);\r\n    r.ri.vsub(bi.position, r.ri);\r\n\r\n    r.rj.vadd(xj, r.rj);\r\n    r.rj.vsub(bj.position, r.rj);\r\n\r\n    this.result.push(r);\r\n\r\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n};\r\n\r\n/**\r\n * @method planeTrimesh\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nvar planeTrimesh_normal = new Vec3();\r\nvar planeTrimesh_relpos = new Vec3();\r\nvar planeTrimesh_projected = new Vec3();\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.TRIMESH] =\r\nNarrowphase.prototype.planeTrimesh = function(\r\n    planeShape,\r\n    trimeshShape,\r\n    planePos,\r\n    trimeshPos,\r\n    planeQuat,\r\n    trimeshQuat,\r\n    planeBody,\r\n    trimeshBody\r\n){\r\n    // Make contacts!\r\n    var v = new Vec3();\r\n\r\n    var normal = planeTrimesh_normal;\r\n    normal.set(0,0,1);\r\n    planeQuat.vmult(normal,normal); // Turn normal according to plane\r\n\r\n    for(var i=0; i<trimeshShape.vertices.length / 3; i++){\r\n\r\n        // Get world vertex from trimesh\r\n        trimeshShape.getVertex(i, v);\r\n\r\n        // Safe up\r\n        var v2 = new Vec3();\r\n        v2.copy(v);\r\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\r\n\r\n        // Check plane side\r\n        var relpos = planeTrimesh_relpos;\r\n        v.vsub(planePos, relpos);\r\n        var dot = normal.dot(relpos);\r\n\r\n        if(dot <= 0.0){\r\n            var r = this.createContactEquation(planeBody,trimeshBody,planeShape,trimeshShape);\r\n\r\n            r.ni.copy(normal); // Contact normal is the plane normal\r\n\r\n            // Get vertex position projected on plane\r\n            var projected = planeTrimesh_projected;\r\n            normal.scale(relpos.dot(normal), projected);\r\n            v.vsub(projected,projected);\r\n\r\n            // ri is the projected world position minus plane position\r\n            r.ri.copy(projected);\r\n            r.ri.vsub(planeBody.position, r.ri);\r\n\r\n            r.rj.copy(v);\r\n            r.rj.vsub(trimeshBody.position, r.rj);\r\n\r\n            // Store result\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @method sphereTrimesh\r\n * @param  {Shape}      sphereShape\r\n * @param  {Shape}      trimeshShape\r\n * @param  {Vec3}       spherePos\r\n * @param  {Vec3}       trimeshPos\r\n * @param  {Quaternion} sphereQuat\r\n * @param  {Quaternion} trimeshQuat\r\n * @param  {Body}       sphereBody\r\n * @param  {Body}       trimeshBody\r\n */\r\nvar sphereTrimesh_normal = new Vec3();\r\nvar sphereTrimesh_relpos = new Vec3();\r\nvar sphereTrimesh_projected = new Vec3();\r\nvar sphereTrimesh_v = new Vec3();\r\nvar sphereTrimesh_v2 = new Vec3();\r\nvar sphereTrimesh_edgeVertexA = new Vec3();\r\nvar sphereTrimesh_edgeVertexB = new Vec3();\r\nvar sphereTrimesh_edgeVector = new Vec3();\r\nvar sphereTrimesh_edgeVectorUnit = new Vec3();\r\nvar sphereTrimesh_localSpherePos = new Vec3();\r\nvar sphereTrimesh_tmp = new Vec3();\r\nvar sphereTrimesh_va = new Vec3();\r\nvar sphereTrimesh_vb = new Vec3();\r\nvar sphereTrimesh_vc = new Vec3();\r\nvar sphereTrimesh_localSphereAABB = new AABB();\r\nvar sphereTrimesh_triangles = [];\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.TRIMESH] =\r\nNarrowphase.prototype.sphereTrimesh = function (\r\n    sphereShape,\r\n    trimeshShape,\r\n    spherePos,\r\n    trimeshPos,\r\n    sphereQuat,\r\n    trimeshQuat,\r\n    sphereBody,\r\n    trimeshBody\r\n) {\r\n\r\n    var edgeVertexA = sphereTrimesh_edgeVertexA;\r\n    var edgeVertexB = sphereTrimesh_edgeVertexB;\r\n    var edgeVector = sphereTrimesh_edgeVector;\r\n    var edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\r\n    var localSpherePos = sphereTrimesh_localSpherePos;\r\n    var tmp = sphereTrimesh_tmp;\r\n    var localSphereAABB = sphereTrimesh_localSphereAABB;\r\n    var v2 = sphereTrimesh_v2;\r\n    var relpos = sphereTrimesh_relpos;\r\n    var triangles = sphereTrimesh_triangles;\r\n\r\n    // Convert sphere position to local in the trimesh\r\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos);\r\n\r\n    // Get the aabb of the sphere locally in the trimesh\r\n    var sphereRadius = sphereShape.radius;\r\n    localSphereAABB.lowerBound.set(\r\n        localSpherePos.x - sphereRadius,\r\n        localSpherePos.y - sphereRadius,\r\n        localSpherePos.z - sphereRadius\r\n    );\r\n    localSphereAABB.upperBound.set(\r\n        localSpherePos.x + sphereRadius,\r\n        localSpherePos.y + sphereRadius,\r\n        localSpherePos.z + sphereRadius\r\n    );\r\n\r\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles);\r\n    //for (var i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\r\n\r\n    // Vertices\r\n    var v = sphereTrimesh_v;\r\n    var radiusSquared = sphereShape.radius * sphereShape.radius;\r\n    for(var i=0; i<triangles.length; i++){\r\n        for (var j = 0; j < 3; j++) {\r\n\r\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v);\r\n\r\n            // Check vertex overlap in sphere\r\n            v.vsub(localSpherePos, relpos);\r\n\r\n            if(relpos.norm2() <= radiusSquared){\r\n\r\n                // Safe up\r\n                v2.copy(v);\r\n                Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\r\n\r\n                v.vsub(spherePos, relpos);\r\n\r\n                var r = this.createContactEquation(sphereBody,trimeshBody,sphereShape,trimeshShape);\r\n                r.ni.copy(relpos);\r\n                r.ni.normalize();\r\n\r\n                // ri is the vector from sphere center to the sphere surface\r\n                r.ri.copy(r.ni);\r\n                r.ri.scale(sphereShape.radius, r.ri);\r\n                r.ri.vadd(spherePos, r.ri);\r\n                r.ri.vsub(sphereBody.position, r.ri);\r\n\r\n                r.rj.copy(v);\r\n                r.rj.vsub(trimeshBody.position, r.rj);\r\n\r\n                // Store result\r\n                this.result.push(r);\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Check all edges\r\n    for(var i=0; i<triangles.length; i++){\r\n        for (var j = 0; j < 3; j++) {\r\n\r\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\r\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + ((j+1)%3)], edgeVertexB);\r\n            edgeVertexB.vsub(edgeVertexA, edgeVector);\r\n\r\n            // Project sphere position to the edge\r\n            localSpherePos.vsub(edgeVertexB, tmp);\r\n            var positionAlongEdgeB = tmp.dot(edgeVector);\r\n\r\n            localSpherePos.vsub(edgeVertexA, tmp);\r\n            var positionAlongEdgeA = tmp.dot(edgeVector);\r\n\r\n            if(positionAlongEdgeA > 0 && positionAlongEdgeB < 0){\r\n\r\n                // Now check the orthogonal distance from edge to sphere center\r\n                localSpherePos.vsub(edgeVertexA, tmp);\r\n\r\n                edgeVectorUnit.copy(edgeVector);\r\n                edgeVectorUnit.normalize();\r\n                positionAlongEdgeA = tmp.dot(edgeVectorUnit);\r\n\r\n                edgeVectorUnit.scale(positionAlongEdgeA, tmp);\r\n                tmp.vadd(edgeVertexA, tmp);\r\n\r\n                // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\r\n                var dist = tmp.distanceTo(localSpherePos);\r\n                if(dist < sphereShape.radius){\r\n                    var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\r\n\r\n                    tmp.vsub(localSpherePos, r.ni);\r\n                    r.ni.normalize();\r\n                    r.ni.scale(sphereShape.radius, r.ri);\r\n\r\n                    Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\r\n                    tmp.vsub(trimeshBody.position, r.rj);\r\n\r\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\r\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\r\n\r\n                    this.result.push(r);\r\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Triangle faces\r\n    var va = sphereTrimesh_va;\r\n    var vb = sphereTrimesh_vb;\r\n    var vc = sphereTrimesh_vc;\r\n    var normal = sphereTrimesh_normal;\r\n    for(var i=0, N = triangles.length; i !== N; i++){\r\n        trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\r\n        trimeshShape.getNormal(triangles[i], normal);\r\n        localSpherePos.vsub(va, tmp);\r\n        var dist = tmp.dot(normal);\r\n        normal.scale(dist, tmp);\r\n        localSpherePos.vsub(tmp, tmp);\r\n\r\n        // tmp is now the sphere position projected to the triangle plane\r\n        dist = tmp.distanceTo(localSpherePos);\r\n        if(Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius){\r\n            var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\r\n\r\n            tmp.vsub(localSpherePos, r.ni);\r\n            r.ni.normalize();\r\n            r.ni.scale(sphereShape.radius, r.ri);\r\n\r\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\r\n            tmp.vsub(trimeshBody.position, r.rj);\r\n\r\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\r\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\r\n\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        }\r\n    }\r\n\r\n    triangles.length = 0;\r\n};\r\n\r\nvar point_on_plane_to_sphere = new Vec3();\r\nvar plane_to_sphere_ortho = new Vec3();\r\n\r\n/**\r\n * @method spherePlane\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.PLANE] =\r\nNarrowphase.prototype.spherePlane = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    // We will have one contact in this case\r\n    var r = this.createContactEquation(bi,bj,si,sj);\r\n\r\n    // Contact normal\r\n    r.ni.set(0,0,1);\r\n    qj.vmult(r.ni, r.ni);\r\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\r\n    r.ni.normalize(); // Needed?\r\n\r\n    // Vector from sphere center to contact point\r\n    r.ni.mult(si.radius, r.ri);\r\n\r\n    // Project down sphere on plane\r\n    xi.vsub(xj, point_on_plane_to_sphere);\r\n    r.ni.mult(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\r\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho,r.rj); // The sphere position projected to plane\r\n\r\n    if(-point_on_plane_to_sphere.dot(r.ni) <= si.radius){\r\n\r\n        // Make it relative to the body\r\n        var ri = r.ri;\r\n        var rj = r.rj;\r\n        ri.vadd(xi, ri);\r\n        ri.vsub(bi.position, ri);\r\n        rj.vadd(xj, rj);\r\n        rj.vsub(bj.position, rj);\r\n\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n};\r\n\r\n// See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\r\nvar pointInPolygon_edge = new Vec3();\r\nvar pointInPolygon_edge_x_normal = new Vec3();\r\nvar pointInPolygon_vtp = new Vec3();\r\nfunction pointInPolygon(verts, normal, p){\r\n    var positiveResult = null;\r\n    var N = verts.length;\r\n    for(var i=0; i!==N; i++){\r\n        var v = verts[i];\r\n\r\n        // Get edge to the next vertex\r\n        var edge = pointInPolygon_edge;\r\n        verts[(i+1) % (N)].vsub(v,edge);\r\n\r\n        // Get cross product between polygon normal and the edge\r\n        var edge_x_normal = pointInPolygon_edge_x_normal;\r\n        //var edge_x_normal = new Vec3();\r\n        edge.cross(normal,edge_x_normal);\r\n\r\n        // Get vector between point and current vertex\r\n        var vertex_to_p = pointInPolygon_vtp;\r\n        p.vsub(v,vertex_to_p);\r\n\r\n        // This dot product determines which side of the edge the point is\r\n        var r = edge_x_normal.dot(vertex_to_p);\r\n\r\n        // If all such dot products have same sign, we are inside the polygon.\r\n        if(positiveResult===null || (r>0 && positiveResult===true) || (r<=0 && positiveResult===false)){\r\n            if(positiveResult===null){\r\n                positiveResult = r>0;\r\n            }\r\n            continue;\r\n        } else {\r\n            return false; // Encountered some other sign. Exit.\r\n        }\r\n    }\r\n\r\n    // If we got here, all dot products were of the same sign.\r\n    return true;\r\n}\r\n\r\nvar box_to_sphere = new Vec3();\r\nvar sphereBox_ns = new Vec3();\r\nvar sphereBox_ns1 = new Vec3();\r\nvar sphereBox_ns2 = new Vec3();\r\nvar sphereBox_sides = [new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3()];\r\nvar sphereBox_sphere_to_corner = new Vec3();\r\nvar sphereBox_side_ns = new Vec3();\r\nvar sphereBox_side_ns1 = new Vec3();\r\nvar sphereBox_side_ns2 = new Vec3();\r\n\r\n/**\r\n * @method sphereBox\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.BOX] =\r\nNarrowphase.prototype.sphereBox = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    var v3pool = this.v3pool;\r\n\r\n    // we refer to the box as body j\r\n    var sides = sphereBox_sides;\r\n    xi.vsub(xj,box_to_sphere);\r\n    sj.getSideNormals(sides,qj);\r\n    var R =     si.radius;\r\n    var penetrating_sides = [];\r\n\r\n    // Check side (plane) intersections\r\n    var found = false;\r\n\r\n    // Store the resulting side penetration info\r\n    var side_ns = sphereBox_side_ns;\r\n    var side_ns1 = sphereBox_side_ns1;\r\n    var side_ns2 = sphereBox_side_ns2;\r\n    var side_h = null;\r\n    var side_penetrations = 0;\r\n    var side_dot1 = 0;\r\n    var side_dot2 = 0;\r\n    var side_distance = null;\r\n    for(var idx=0,nsides=sides.length; idx!==nsides && found===false; idx++){\r\n        // Get the plane side normal (ns)\r\n        var ns = sphereBox_ns;\r\n        ns.copy(sides[idx]);\r\n\r\n        var h = ns.norm();\r\n        ns.normalize();\r\n\r\n        // The normal/distance dot product tells which side of the plane we are\r\n        var dot = box_to_sphere.dot(ns);\r\n\r\n        if(dot<h+R && dot>0){\r\n            // Intersects plane. Now check the other two dimensions\r\n            var ns1 = sphereBox_ns1;\r\n            var ns2 = sphereBox_ns2;\r\n            ns1.copy(sides[(idx+1)%3]);\r\n            ns2.copy(sides[(idx+2)%3]);\r\n            var h1 = ns1.norm();\r\n            var h2 = ns2.norm();\r\n            ns1.normalize();\r\n            ns2.normalize();\r\n            var dot1 = box_to_sphere.dot(ns1);\r\n            var dot2 = box_to_sphere.dot(ns2);\r\n            if(dot1<h1 && dot1>-h1 && dot2<h2 && dot2>-h2){\r\n                var dist = Math.abs(dot-h-R);\r\n                if(side_distance===null || dist < side_distance){\r\n                    side_distance = dist;\r\n                    side_dot1 = dot1;\r\n                    side_dot2 = dot2;\r\n                    side_h = h;\r\n                    side_ns.copy(ns);\r\n                    side_ns1.copy(ns1);\r\n                    side_ns2.copy(ns2);\r\n                    side_penetrations++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(side_penetrations){\r\n        found = true;\r\n        var r = this.createContactEquation(bi,bj,si,sj);\r\n        side_ns.mult(-R,r.ri); // Sphere r\r\n        r.ni.copy(side_ns);\r\n        r.ni.negate(r.ni); // Normal should be out of sphere\r\n        side_ns.mult(side_h,side_ns);\r\n        side_ns1.mult(side_dot1,side_ns1);\r\n        side_ns.vadd(side_ns1,side_ns);\r\n        side_ns2.mult(side_dot2,side_ns2);\r\n        side_ns.vadd(side_ns2,r.rj);\r\n\r\n        // Make relative to bodies\r\n        r.ri.vadd(xi, r.ri);\r\n        r.ri.vsub(bi.position, r.ri);\r\n        r.rj.vadd(xj, r.rj);\r\n        r.rj.vsub(bj.position, r.rj);\r\n\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n\r\n    // Check corners\r\n    var rj = v3pool.get();\r\n    var sphere_to_corner = sphereBox_sphere_to_corner;\r\n    for(var j=0; j!==2 && !found; j++){\r\n        for(var k=0; k!==2 && !found; k++){\r\n            for(var l=0; l!==2 && !found; l++){\r\n                rj.set(0,0,0);\r\n                if(j){\r\n                    rj.vadd(sides[0],rj);\r\n                } else {\r\n                    rj.vsub(sides[0],rj);\r\n                }\r\n                if(k){\r\n                    rj.vadd(sides[1],rj);\r\n                } else {\r\n                    rj.vsub(sides[1],rj);\r\n                }\r\n                if(l){\r\n                    rj.vadd(sides[2],rj);\r\n                } else {\r\n                    rj.vsub(sides[2],rj);\r\n                }\r\n\r\n                // World position of corner\r\n                xj.vadd(rj,sphere_to_corner);\r\n                sphere_to_corner.vsub(xi,sphere_to_corner);\r\n\r\n                if(sphere_to_corner.norm2() < R*R){\r\n                    found = true;\r\n                    var r = this.createContactEquation(bi,bj,si,sj);\r\n                    r.ri.copy(sphere_to_corner);\r\n                    r.ri.normalize();\r\n                    r.ni.copy(r.ri);\r\n                    r.ri.mult(R,r.ri);\r\n                    r.rj.copy(rj);\r\n\r\n                    // Make relative to bodies\r\n                    r.ri.vadd(xi, r.ri);\r\n                    r.ri.vsub(bi.position, r.ri);\r\n                    r.rj.vadd(xj, r.rj);\r\n                    r.rj.vsub(bj.position, r.rj);\r\n\r\n                    this.result.push(r);\r\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    v3pool.release(rj);\r\n    rj = null;\r\n\r\n    // Check edges\r\n    var edgeTangent = v3pool.get();\r\n    var edgeCenter = v3pool.get();\r\n    var r = v3pool.get(); // r = edge center to sphere center\r\n    var orthogonal = v3pool.get();\r\n    var dist = v3pool.get();\r\n    var Nsides = sides.length;\r\n    for(var j=0; j!==Nsides && !found; j++){\r\n        for(var k=0; k!==Nsides && !found; k++){\r\n            if(j%3 !== k%3){\r\n                // Get edge tangent\r\n                sides[k].cross(sides[j],edgeTangent);\r\n                edgeTangent.normalize();\r\n                sides[j].vadd(sides[k], edgeCenter);\r\n                r.copy(xi);\r\n                r.vsub(edgeCenter,r);\r\n                r.vsub(xj,r);\r\n                var orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\r\n                edgeTangent.mult(orthonorm,orthogonal); // Vector from edge center to sphere center in the tangent direction\r\n\r\n                // Find the third side orthogonal to this one\r\n                var l = 0;\r\n                while(l===j%3 || l===k%3){\r\n                    l++;\r\n                }\r\n\r\n                // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\r\n                dist.copy(xi);\r\n                dist.vsub(orthogonal,dist);\r\n                dist.vsub(edgeCenter,dist);\r\n                dist.vsub(xj,dist);\r\n\r\n                // Distances in tangent direction and distance in the plane orthogonal to it\r\n                var tdist = Math.abs(orthonorm);\r\n                var ndist = dist.norm();\r\n\r\n                if(tdist < sides[l].norm() && ndist<R){\r\n                    found = true;\r\n                    var res = this.createContactEquation(bi,bj,si,sj);\r\n                    edgeCenter.vadd(orthogonal,res.rj); // box rj\r\n                    res.rj.copy(res.rj);\r\n                    dist.negate(res.ni);\r\n                    res.ni.normalize();\r\n\r\n                    res.ri.copy(res.rj);\r\n                    res.ri.vadd(xj,res.ri);\r\n                    res.ri.vsub(xi,res.ri);\r\n                    res.ri.normalize();\r\n                    res.ri.mult(R,res.ri);\r\n\r\n                    // Make relative to bodies\r\n                    res.ri.vadd(xi, res.ri);\r\n                    res.ri.vsub(bi.position, res.ri);\r\n                    res.rj.vadd(xj, res.rj);\r\n                    res.rj.vsub(bj.position, res.rj);\r\n\r\n                    this.result.push(res);\r\n                    this.createFrictionEquationsFromContact(res, this.frictionResult);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    v3pool.release(edgeTangent,edgeCenter,r,orthogonal,dist);\r\n};\r\n\r\nvar convex_to_sphere = new Vec3();\r\nvar sphereConvex_edge = new Vec3();\r\nvar sphereConvex_edgeUnit = new Vec3();\r\nvar sphereConvex_sphereToCorner = new Vec3();\r\nvar sphereConvex_worldCorner = new Vec3();\r\nvar sphereConvex_worldNormal = new Vec3();\r\nvar sphereConvex_worldPoint = new Vec3();\r\nvar sphereConvex_worldSpherePointClosestToPlane = new Vec3();\r\nvar sphereConvex_penetrationVec = new Vec3();\r\nvar sphereConvex_sphereToWorldPoint = new Vec3();\r\n\r\n/**\r\n * @method sphereConvex\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.sphereConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    var v3pool = this.v3pool;\r\n    xi.vsub(xj,convex_to_sphere);\r\n    var normals = sj.faceNormals;\r\n    var faces = sj.faces;\r\n    var verts = sj.vertices;\r\n    var R =     si.radius;\r\n    var penetrating_sides = [];\r\n\r\n    // if(convex_to_sphere.norm2() > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n    //     return;\r\n    // }\r\n\r\n    // Check corners\r\n    for(var i=0; i!==verts.length; i++){\r\n        var v = verts[i];\r\n\r\n        // World position of corner\r\n        var worldCorner = sphereConvex_worldCorner;\r\n        qj.vmult(v,worldCorner);\r\n        xj.vadd(worldCorner,worldCorner);\r\n        var sphere_to_corner = sphereConvex_sphereToCorner;\r\n        worldCorner.vsub(xi, sphere_to_corner);\r\n        if(sphere_to_corner.norm2() < R * R){\r\n            found = true;\r\n            var r = this.createContactEquation(bi,bj,si,sj);\r\n            r.ri.copy(sphere_to_corner);\r\n            r.ri.normalize();\r\n            r.ni.copy(r.ri);\r\n            r.ri.mult(R,r.ri);\r\n            worldCorner.vsub(xj,r.rj);\r\n\r\n            // Should be relative to the body.\r\n            r.ri.vadd(xi, r.ri);\r\n            r.ri.vsub(bi.position, r.ri);\r\n\r\n            // Should be relative to the body.\r\n            r.rj.vadd(xj, r.rj);\r\n            r.rj.vsub(bj.position, r.rj);\r\n\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // Check side (plane) intersections\r\n    var found = false;\r\n    for(var i=0, nfaces=faces.length; i!==nfaces && found===false; i++){\r\n        var normal = normals[i];\r\n        var face = faces[i];\r\n\r\n        // Get world-transformed normal of the face\r\n        var worldNormal = sphereConvex_worldNormal;\r\n        qj.vmult(normal,worldNormal);\r\n\r\n        // Get a world vertex from the face\r\n        var worldPoint = sphereConvex_worldPoint;\r\n        qj.vmult(verts[face[0]],worldPoint);\r\n        worldPoint.vadd(xj,worldPoint);\r\n\r\n        // Get a point on the sphere, closest to the face normal\r\n        var worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\r\n        worldNormal.mult(-R, worldSpherePointClosestToPlane);\r\n        xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane);\r\n\r\n        // Vector from a face point to the closest point on the sphere\r\n        var penetrationVec = sphereConvex_penetrationVec;\r\n        worldSpherePointClosestToPlane.vsub(worldPoint,penetrationVec);\r\n\r\n        // The penetration. Negative value means overlap.\r\n        var penetration = penetrationVec.dot(worldNormal);\r\n\r\n        var worldPointToSphere = sphereConvex_sphereToWorldPoint;\r\n        xi.vsub(worldPoint, worldPointToSphere);\r\n\r\n        if(penetration < 0 && worldPointToSphere.dot(worldNormal)>0){\r\n            // Intersects plane. Now check if the sphere is inside the face polygon\r\n            var faceVerts = []; // Face vertices, in world coords\r\n            for(var j=0, Nverts=face.length; j!==Nverts; j++){\r\n                var worldVertex = v3pool.get();\r\n                qj.vmult(verts[face[j]], worldVertex);\r\n                xj.vadd(worldVertex,worldVertex);\r\n                faceVerts.push(worldVertex);\r\n            }\r\n\r\n            if(pointInPolygon(faceVerts,worldNormal,xi)){ // Is the sphere center in the face polygon?\r\n                found = true;\r\n                var r = this.createContactEquation(bi,bj,si,sj);\r\n\r\n                worldNormal.mult(-R, r.ri); // Contact offset, from sphere center to contact\r\n                worldNormal.negate(r.ni); // Normal pointing out of sphere\r\n\r\n                var penetrationVec2 = v3pool.get();\r\n                worldNormal.mult(-penetration, penetrationVec2);\r\n                var penetrationSpherePoint = v3pool.get();\r\n                worldNormal.mult(-R, penetrationSpherePoint);\r\n\r\n                //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\r\n                xi.vsub(xj,r.rj);\r\n                r.rj.vadd(penetrationSpherePoint,r.rj);\r\n                r.rj.vadd(penetrationVec2 , r.rj);\r\n\r\n                // Should be relative to the body.\r\n                r.rj.vadd(xj, r.rj);\r\n                r.rj.vsub(bj.position, r.rj);\r\n\r\n                // Should be relative to the body.\r\n                r.ri.vadd(xi, r.ri);\r\n                r.ri.vsub(bi.position, r.ri);\r\n\r\n                v3pool.release(penetrationVec2);\r\n                v3pool.release(penetrationSpherePoint);\r\n\r\n                this.result.push(r);\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n\r\n                // Release world vertices\r\n                for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\r\n                    v3pool.release(faceVerts[j]);\r\n                }\r\n\r\n                return; // We only expect *one* face contact\r\n            } else {\r\n                // Edge?\r\n                for(var j=0; j!==face.length; j++){\r\n\r\n                    // Get two world transformed vertices\r\n                    var v1 = v3pool.get();\r\n                    var v2 = v3pool.get();\r\n                    qj.vmult(verts[face[(j+1)%face.length]], v1);\r\n                    qj.vmult(verts[face[(j+2)%face.length]], v2);\r\n                    xj.vadd(v1, v1);\r\n                    xj.vadd(v2, v2);\r\n\r\n                    // Construct edge vector\r\n                    var edge = sphereConvex_edge;\r\n                    v2.vsub(v1,edge);\r\n\r\n                    // Construct the same vector, but normalized\r\n                    var edgeUnit = sphereConvex_edgeUnit;\r\n                    edge.unit(edgeUnit);\r\n\r\n                    // p is xi projected onto the edge\r\n                    var p = v3pool.get();\r\n                    var v1_to_xi = v3pool.get();\r\n                    xi.vsub(v1, v1_to_xi);\r\n                    var dot = v1_to_xi.dot(edgeUnit);\r\n                    edgeUnit.mult(dot, p);\r\n                    p.vadd(v1, p);\r\n\r\n                    // Compute a vector from p to the center of the sphere\r\n                    var xi_to_p = v3pool.get();\r\n                    p.vsub(xi, xi_to_p);\r\n\r\n                    // Collision if the edge-sphere distance is less than the radius\r\n                    // AND if p is in between v1 and v2\r\n                    if(dot > 0 && dot*dot<edge.norm2() && xi_to_p.norm2() < R*R){ // Collision if the edge-sphere distance is less than the radius\r\n                        // Edge contact!\r\n                        var r = this.createContactEquation(bi,bj,si,sj);\r\n                        p.vsub(xj,r.rj);\r\n\r\n                        p.vsub(xi,r.ni);\r\n                        r.ni.normalize();\r\n\r\n                        r.ni.mult(R,r.ri);\r\n\r\n                        // Should be relative to the body.\r\n                        r.rj.vadd(xj, r.rj);\r\n                        r.rj.vsub(bj.position, r.rj);\r\n\r\n                        // Should be relative to the body.\r\n                        r.ri.vadd(xi, r.ri);\r\n                        r.ri.vsub(bi.position, r.ri);\r\n\r\n                        this.result.push(r);\r\n                        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n\r\n                        // Release world vertices\r\n                        for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\r\n                            v3pool.release(faceVerts[j]);\r\n                        }\r\n\r\n                        v3pool.release(v1);\r\n                        v3pool.release(v2);\r\n                        v3pool.release(p);\r\n                        v3pool.release(xi_to_p);\r\n                        v3pool.release(v1_to_xi);\r\n\r\n                        return;\r\n                    }\r\n\r\n                    v3pool.release(v1);\r\n                    v3pool.release(v2);\r\n                    v3pool.release(p);\r\n                    v3pool.release(xi_to_p);\r\n                    v3pool.release(v1_to_xi);\r\n                }\r\n            }\r\n\r\n            // Release world vertices\r\n            for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\r\n                v3pool.release(faceVerts[j]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar planeBox_normal = new Vec3();\r\nvar plane_to_corner = new Vec3();\r\n\r\n/**\r\n * @method planeBox\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.BOX] =\r\nNarrowphase.prototype.planeBox = function(si,sj,xi,xj,qi,qj,bi,bj){\r\n    sj.convexPolyhedronRepresentation.material = sj.material;\r\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\r\n    this.planeConvex(si,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj);\r\n};\r\n\r\nvar planeConvex_v = new Vec3();\r\nvar planeConvex_normal = new Vec3();\r\nvar planeConvex_relpos = new Vec3();\r\nvar planeConvex_projected = new Vec3();\r\n\r\n/**\r\n * @method planeConvex\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.planeConvex = function(\r\n    planeShape,\r\n    convexShape,\r\n    planePosition,\r\n    convexPosition,\r\n    planeQuat,\r\n    convexQuat,\r\n    planeBody,\r\n    convexBody\r\n){\r\n    // Simply return the points behind the plane.\r\n    var worldVertex = planeConvex_v,\r\n        worldNormal = planeConvex_normal;\r\n    worldNormal.set(0,0,1);\r\n    planeQuat.vmult(worldNormal,worldNormal); // Turn normal according to plane orientation\r\n\r\n    var numContacts = 0;\r\n    var relpos = planeConvex_relpos;\r\n    for(var i = 0; i !== convexShape.vertices.length; i++){\r\n\r\n        // Get world convex vertex\r\n        worldVertex.copy(convexShape.vertices[i]);\r\n        convexQuat.vmult(worldVertex, worldVertex);\r\n        convexPosition.vadd(worldVertex, worldVertex);\r\n        worldVertex.vsub(planePosition, relpos);\r\n\r\n        var dot = worldNormal.dot(relpos);\r\n        if(dot <= 0.0){\r\n\r\n            var r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape);\r\n\r\n            // Get vertex position projected on plane\r\n            var projected = planeConvex_projected;\r\n            worldNormal.mult(worldNormal.dot(relpos),projected);\r\n            worldVertex.vsub(projected, projected);\r\n            projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\r\n\r\n            r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\r\n\r\n            // rj is now just the vector from the convex center to the vertex\r\n            worldVertex.vsub(convexPosition, r.rj);\r\n\r\n            // Make it relative to the body\r\n            r.ri.vadd(planePosition, r.ri);\r\n            r.ri.vsub(planeBody.position, r.ri);\r\n            r.rj.vadd(convexPosition, r.rj);\r\n            r.rj.vsub(convexBody.position, r.rj);\r\n\r\n            this.result.push(r);\r\n            numContacts++;\r\n            if(!this.enableFrictionReduction){\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            }\r\n        }\r\n    }\r\n\r\n    if(this.enableFrictionReduction && numContacts){\r\n        this.createFrictionFromAverage(numContacts);\r\n    }\r\n};\r\n\r\nvar convexConvex_sepAxis = new Vec3();\r\nvar convexConvex_q = new Vec3();\r\n\r\n/**\r\n * @method convexConvex\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.convexConvex = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\r\n    var sepAxis = convexConvex_sepAxis;\r\n\r\n    if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n        return;\r\n    }\r\n\r\n    if(si.findSeparatingAxis(sj,xi,qi,xj,qj,sepAxis,faceListA,faceListB)){\r\n        var res = [];\r\n        var q = convexConvex_q;\r\n        si.clipAgainstHull(xi,qi,sj,xj,qj,sepAxis,-100,100,res);\r\n        var numContacts = 0;\r\n        for(var j = 0; j !== res.length; j++){\r\n            var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\r\n                ri = r.ri,\r\n                rj = r.rj;\r\n            sepAxis.negate(r.ni);\r\n            res[j].normal.negate(q);\r\n            q.mult(res[j].depth, q);\r\n            res[j].point.vadd(q, ri);\r\n            rj.copy(res[j].point);\r\n\r\n            // Contact points are in world coordinates. Transform back to relative\r\n            ri.vsub(xi,ri);\r\n            rj.vsub(xj,rj);\r\n\r\n            // Make relative to bodies\r\n            ri.vadd(xi, ri);\r\n            ri.vsub(bi.position, ri);\r\n            rj.vadd(xj, rj);\r\n            rj.vsub(bj.position, rj);\r\n\r\n            this.result.push(r);\r\n            numContacts++;\r\n            if(!this.enableFrictionReduction){\r\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n            }\r\n        }\r\n        if(this.enableFrictionReduction && numContacts){\r\n            this.createFrictionFromAverage(numContacts);\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @method convexTrimesh\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\n// Narrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.TRIMESH] =\r\n// Narrowphase.prototype.convexTrimesh = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\r\n//     var sepAxis = convexConvex_sepAxis;\r\n\r\n//     if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n//         return;\r\n//     }\r\n\r\n//     // Construct a temp hull for each triangle\r\n//     var hullB = new ConvexPolyhedron();\r\n\r\n//     hullB.faces = [[0,1,2]];\r\n//     var va = new Vec3();\r\n//     var vb = new Vec3();\r\n//     var vc = new Vec3();\r\n//     hullB.vertices = [\r\n//         va,\r\n//         vb,\r\n//         vc\r\n//     ];\r\n\r\n//     for (var i = 0; i < sj.indices.length / 3; i++) {\r\n\r\n//         var triangleNormal = new Vec3();\r\n//         sj.getNormal(i, triangleNormal);\r\n//         hullB.faceNormals = [triangleNormal];\r\n\r\n//         sj.getTriangleVertices(i, va, vb, vc);\r\n\r\n//         var d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\r\n//         if(!d){\r\n//             triangleNormal.scale(-1, triangleNormal);\r\n//             d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\r\n\r\n//             if(!d){\r\n//                 continue;\r\n//             }\r\n//         }\r\n\r\n//         var res = [];\r\n//         var q = convexConvex_q;\r\n//         si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\r\n//         for(var j = 0; j !== res.length; j++){\r\n//             var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\r\n//                 ri = r.ri,\r\n//                 rj = r.rj;\r\n//             r.ni.copy(triangleNormal);\r\n//             r.ni.negate(r.ni);\r\n//             res[j].normal.negate(q);\r\n//             q.mult(res[j].depth, q);\r\n//             res[j].point.vadd(q, ri);\r\n//             rj.copy(res[j].point);\r\n\r\n//             // Contact points are in world coordinates. Transform back to relative\r\n//             ri.vsub(xi,ri);\r\n//             rj.vsub(xj,rj);\r\n\r\n//             // Make relative to bodies\r\n//             ri.vadd(xi, ri);\r\n//             ri.vsub(bi.position, ri);\r\n//             rj.vadd(xj, rj);\r\n//             rj.vsub(bj.position, rj);\r\n\r\n//             result.push(r);\r\n//         }\r\n//     }\r\n// };\r\n\r\nvar particlePlane_normal = new Vec3();\r\nvar particlePlane_relpos = new Vec3();\r\nvar particlePlane_projected = new Vec3();\r\n\r\n/**\r\n * @method particlePlane\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.PARTICLE] =\r\nNarrowphase.prototype.planeParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\r\n    var normal = particlePlane_normal;\r\n    normal.set(0,0,1);\r\n    bj.quaternion.vmult(normal,normal); // Turn normal according to plane orientation\r\n    var relpos = particlePlane_relpos;\r\n    xi.vsub(bj.position,relpos);\r\n    var dot = normal.dot(relpos);\r\n    if(dot <= 0.0){\r\n        var r = this.createContactEquation(bi,bj,si,sj);\r\n        r.ni.copy(normal); // Contact normal is the plane normal\r\n        r.ni.negate(r.ni);\r\n        r.ri.set(0,0,0); // Center of particle\r\n\r\n        // Get particle position projected on plane\r\n        var projected = particlePlane_projected;\r\n        normal.mult(normal.dot(xi),projected);\r\n        xi.vsub(projected,projected);\r\n        //projected.vadd(bj.position,projected);\r\n\r\n        // rj is now the projected world position minus plane position\r\n        r.rj.copy(projected);\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n};\r\n\r\nvar particleSphere_normal = new Vec3();\r\n\r\n/**\r\n * @method particleSphere\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.SPHERE] =\r\nNarrowphase.prototype.sphereParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\r\n    // The normal is the unit vector from sphere center to particle center\r\n    var normal = particleSphere_normal;\r\n    normal.set(0,0,1);\r\n    xi.vsub(xj,normal);\r\n    var lengthSquared = normal.norm2();\r\n\r\n    if(lengthSquared <= sj.radius * sj.radius){\r\n        var r = this.createContactEquation(bi,bj,si,sj);\r\n        normal.normalize();\r\n        r.rj.copy(normal);\r\n        r.rj.mult(sj.radius,r.rj);\r\n        r.ni.copy(normal); // Contact normal\r\n        r.ni.negate(r.ni);\r\n        r.ri.set(0,0,0); // Center of particle\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n};\r\n\r\n// WIP\r\nvar cqj = new Quaternion();\r\nvar convexParticle_local = new Vec3();\r\nvar convexParticle_normal = new Vec3();\r\nvar convexParticle_penetratedFaceNormal = new Vec3();\r\nvar convexParticle_vertexToParticle = new Vec3();\r\nvar convexParticle_worldPenetrationVec = new Vec3();\r\n\r\n/**\r\n * @method convexParticle\r\n * @param  {Array}      result\r\n * @param  {Shape}      si\r\n * @param  {Shape}      sj\r\n * @param  {Vec3}       xi\r\n * @param  {Vec3}       xj\r\n * @param  {Quaternion} qi\r\n * @param  {Quaternion} qj\r\n * @param  {Body}       bi\r\n * @param  {Body}       bj\r\n */\r\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON] =\r\nNarrowphase.prototype.convexParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\r\n    var penetratedFaceIndex = -1;\r\n    var penetratedFaceNormal = convexParticle_penetratedFaceNormal;\r\n    var worldPenetrationVec = convexParticle_worldPenetrationVec;\r\n    var minPenetration = null;\r\n    var numDetectedFaces = 0;\r\n\r\n    // Convert particle position xi to local coords in the convex\r\n    var local = convexParticle_local;\r\n    local.copy(xi);\r\n    local.vsub(xj,local); // Convert position to relative the convex origin\r\n    qj.conjugate(cqj);\r\n    cqj.vmult(local,local);\r\n\r\n    if(sj.pointIsInside(local)){\r\n\r\n        if(sj.worldVerticesNeedsUpdate){\r\n            sj.computeWorldVertices(xj,qj);\r\n        }\r\n        if(sj.worldFaceNormalsNeedsUpdate){\r\n            sj.computeWorldFaceNormals(qj);\r\n        }\r\n\r\n        // For each world polygon in the polyhedra\r\n        for(var i=0,nfaces=sj.faces.length; i!==nfaces; i++){\r\n\r\n            // Construct world face vertices\r\n            var verts = [ sj.worldVertices[ sj.faces[i][0] ] ];\r\n            var normal = sj.worldFaceNormals[i];\r\n\r\n            // Check how much the particle penetrates the polygon plane.\r\n            xi.vsub(verts[0],convexParticle_vertexToParticle);\r\n            var penetration = -normal.dot(convexParticle_vertexToParticle);\r\n            if(minPenetration===null || Math.abs(penetration)<Math.abs(minPenetration)){\r\n                minPenetration = penetration;\r\n                penetratedFaceIndex = i;\r\n                penetratedFaceNormal.copy(normal);\r\n                numDetectedFaces++;\r\n            }\r\n        }\r\n\r\n        if(penetratedFaceIndex!==-1){\r\n            // Setup contact\r\n            var r = this.createContactEquation(bi,bj,si,sj);\r\n            penetratedFaceNormal.mult(minPenetration, worldPenetrationVec);\r\n\r\n            // rj is the particle position projected to the face\r\n            worldPenetrationVec.vadd(xi,worldPenetrationVec);\r\n            worldPenetrationVec.vsub(xj,worldPenetrationVec);\r\n            r.rj.copy(worldPenetrationVec);\r\n            //var projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\r\n            //projectedToFace.copy(r.rj);\r\n\r\n            //qj.vmult(r.rj,r.rj);\r\n            penetratedFaceNormal.negate( r.ni ); // Contact normal\r\n            r.ri.set(0,0,0); // Center of particle\r\n\r\n            var ri = r.ri,\r\n                rj = r.rj;\r\n\r\n            // Make relative to bodies\r\n            ri.vadd(xi, ri);\r\n            ri.vsub(bi.position, ri);\r\n            rj.vadd(xj, rj);\r\n            rj.vsub(bj.position, rj);\r\n\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        } else {\r\n            console.warn(\"Point found inside convex, but did not find penetrating face!\");\r\n        }\r\n    }\r\n};\r\n\r\nNarrowphase.prototype[Shape.types.BOX | Shape.types.HEIGHTFIELD] =\r\nNarrowphase.prototype.boxHeightfield = function (si,sj,xi,xj,qi,qj,bi,bj){\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    this.convexHeightfield(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj);\r\n};\r\n\r\nvar convexHeightfield_tmp1 = new Vec3();\r\nvar convexHeightfield_tmp2 = new Vec3();\r\nvar convexHeightfield_faceList = [0];\r\n\r\n/**\r\n * @method convexHeightfield\r\n */\r\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD] =\r\nNarrowphase.prototype.convexHeightfield = function (\r\n    convexShape,\r\n    hfShape,\r\n    convexPos,\r\n    hfPos,\r\n    convexQuat,\r\n    hfQuat,\r\n    convexBody,\r\n    hfBody\r\n){\r\n    var data = hfShape.data,\r\n        w = hfShape.elementSize,\r\n        radius = convexShape.boundingSphereRadius,\r\n        worldPillarOffset = convexHeightfield_tmp2,\r\n        faceList = convexHeightfield_faceList;\r\n\r\n    // Get sphere position to heightfield local!\r\n    var localConvexPos = convexHeightfield_tmp1;\r\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos);\r\n\r\n    // Get the index of the data points to test against\r\n    var iMinX = Math.floor((localConvexPos.x - radius) / w) - 1,\r\n        iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1,\r\n        iMinY = Math.floor((localConvexPos.y - radius) / w) - 1,\r\n        iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1;\r\n\r\n    // Bail out if we are out of the terrain\r\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length){\r\n        return;\r\n    }\r\n\r\n    // Clamp index to edges\r\n    if(iMinX < 0){ iMinX = 0; }\r\n    if(iMaxX < 0){ iMaxX = 0; }\r\n    if(iMinY < 0){ iMinY = 0; }\r\n    if(iMaxY < 0){ iMaxY = 0; }\r\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\r\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\r\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\r\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\r\n\r\n    var minMax = [];\r\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    var min = minMax[0];\r\n    var max = minMax[1];\r\n\r\n    // Bail out if we're cant touch the bounding height box\r\n    if(localConvexPos.z - radius > max || localConvexPos.z + radius < min){\r\n        return;\r\n    }\r\n\r\n    for(var i = iMinX; i < iMaxX; i++){\r\n        for(var j = iMinY; j < iMaxY; j++){\r\n\r\n            // Lower triangle\r\n            hfShape.getConvexTrianglePillar(i, j, false);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\r\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\r\n            }\r\n\r\n            // Upper triangle\r\n            hfShape.getConvexTrianglePillar(i, j, true);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\r\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar sphereHeightfield_tmp1 = new Vec3();\r\nvar sphereHeightfield_tmp2 = new Vec3();\r\n\r\n/**\r\n * @method sphereHeightfield\r\n */\r\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.HEIGHTFIELD] =\r\nNarrowphase.prototype.sphereHeightfield = function (\r\n    sphereShape,\r\n    hfShape,\r\n    spherePos,\r\n    hfPos,\r\n    sphereQuat,\r\n    hfQuat,\r\n    sphereBody,\r\n    hfBody\r\n){\r\n    var data = hfShape.data,\r\n        radius = sphereShape.radius,\r\n        w = hfShape.elementSize,\r\n        worldPillarOffset = sphereHeightfield_tmp2;\r\n\r\n    // Get sphere position to heightfield local!\r\n    var localSpherePos = sphereHeightfield_tmp1;\r\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos);\r\n\r\n    // Get the index of the data points to test against\r\n    var iMinX = Math.floor((localSpherePos.x - radius) / w) - 1,\r\n        iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1,\r\n        iMinY = Math.floor((localSpherePos.y - radius) / w) - 1,\r\n        iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1;\r\n\r\n    // Bail out if we are out of the terrain\r\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMaxY > data[0].length){\r\n        return;\r\n    }\r\n\r\n    // Clamp index to edges\r\n    if(iMinX < 0){ iMinX = 0; }\r\n    if(iMaxX < 0){ iMaxX = 0; }\r\n    if(iMinY < 0){ iMinY = 0; }\r\n    if(iMaxY < 0){ iMaxY = 0; }\r\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\r\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\r\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\r\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\r\n\r\n    var minMax = [];\r\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    var min = minMax[0];\r\n    var max = minMax[1];\r\n\r\n    // Bail out if we're cant touch the bounding height box\r\n    if(localSpherePos.z - radius > max || localSpherePos.z + radius < min){\r\n        return;\r\n    }\r\n\r\n    var result = this.result;\r\n    for(var i = iMinX; i < iMaxX; i++){\r\n        for(var j = iMinY; j < iMaxY; j++){\r\n\r\n            var numContactsBefore = result.length;\r\n\r\n            // Lower triangle\r\n            hfShape.getConvexTrianglePillar(i, j, false);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\r\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\r\n            }\r\n\r\n            // Upper triangle\r\n            hfShape.getConvexTrianglePillar(i, j, true);\r\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\r\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\r\n            }\r\n\r\n            var numContacts = result.length - numContactsBefore;\r\n\r\n            if(numContacts > 2){\r\n                return;\r\n            }\r\n            /*\r\n            // Skip all but 1\r\n            for (var k = 0; k < numContacts - 1; k++) {\r\n                result.pop();\r\n            }\r\n            */\r\n        }\r\n    }\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../collision/Ray\":9,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43,\"../solver/Solver\":47,\"../utils/Vec3Pool\":54}],56:[function(_dereq_,module,exports){\r\n/* global performance */\r\n\r\nmodule.exports = World;\r\n\r\nvar Shape = _dereq_('../shapes/Shape');\r\nvar Vec3 = _dereq_('../math/Vec3');\r\nvar Quaternion = _dereq_('../math/Quaternion');\r\nvar GSSolver = _dereq_('../solver/GSSolver');\r\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\r\nvar ContactEquation = _dereq_('../equations/ContactEquation');\r\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\r\nvar Narrowphase = _dereq_('./Narrowphase');\r\nvar EventTarget = _dereq_('../utils/EventTarget');\r\nvar ArrayCollisionMatrix = _dereq_('../collision/ArrayCollisionMatrix');\r\nvar Material = _dereq_('../material/Material');\r\nvar ContactMaterial = _dereq_('../material/ContactMaterial');\r\nvar Body = _dereq_('../objects/Body');\r\nvar TupleDictionary = _dereq_('../utils/TupleDictionary');\r\nvar RaycastResult = _dereq_('../collision/RaycastResult');\r\nvar AABB = _dereq_('../collision/AABB');\r\nvar Ray = _dereq_('../collision/Ray');\r\nvar NaiveBroadphase = _dereq_('../collision/NaiveBroadphase');\r\n\r\n/**\r\n * The physics world\r\n * @class World\r\n * @constructor\r\n * @extends EventTarget\r\n */\r\nfunction World(){\r\n    EventTarget.apply(this);\r\n\r\n    /**\r\n     * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\r\n     * @property {Number} dt\r\n     */\r\n    this.dt = -1;\r\n\r\n    /**\r\n     * Makes bodies go to sleep when they've been inactive\r\n     * @property allowSleep\r\n     * @type {Boolean}\r\n     */\r\n    this.allowSleep = false;\r\n\r\n    /**\r\n     * All the current contacts (instances of ContactEquation) in the world.\r\n     * @property contacts\r\n     * @type {Array}\r\n     */\r\n    this.contacts = [];\r\n    this.frictionEquations = [];\r\n\r\n    /**\r\n     * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\r\n     * @property quatNormalizeSkip\r\n     * @type {Number}\r\n     */\r\n    this.quatNormalizeSkip = 0;\r\n\r\n    /**\r\n     * Set to true to use fast quaternion normalization. It is often enough accurate to use. If bodies tend to explode, set to false.\r\n     * @property quatNormalizeFast\r\n     * @type {Boolean}\r\n     * @see Quaternion.normalizeFast\r\n     * @see Quaternion.normalize\r\n     */\r\n    this.quatNormalizeFast = false;\r\n\r\n    /**\r\n     * The wall-clock time since simulation start\r\n     * @property time\r\n     * @type {Number}\r\n     */\r\n    this.time = 0.0;\r\n\r\n    /**\r\n     * Number of timesteps taken since start\r\n     * @property stepnumber\r\n     * @type {Number}\r\n     */\r\n    this.stepnumber = 0;\r\n\r\n    /// Default and last timestep sizes\r\n    this.default_dt = 1/60;\r\n\r\n    this.nextId = 0;\r\n    /**\r\n     * @property gravity\r\n     * @type {Vec3}\r\n     */\r\n    this.gravity = new Vec3();\r\n\r\n    /**\r\n     * @property broadphase\r\n     * @type {Broadphase}\r\n     */\r\n    this.broadphase = new NaiveBroadphase();\r\n\r\n    /**\r\n     * @property bodies\r\n     * @type {Array}\r\n     */\r\n    this.bodies = [];\r\n\r\n    /**\r\n     * @property solver\r\n     * @type {Solver}\r\n     */\r\n    this.solver = new GSSolver();\r\n\r\n    /**\r\n     * @property constraints\r\n     * @type {Array}\r\n     */\r\n    this.constraints = [];\r\n\r\n    /**\r\n     * @property narrowphase\r\n     * @type {Narrowphase}\r\n     */\r\n    this.narrowphase = new Narrowphase(this);\r\n\r\n    /**\r\n     * @property {ArrayCollisionMatrix} collisionMatrix\r\n\t * @type {ArrayCollisionMatrix}\r\n\t */\r\n\tthis.collisionMatrix = new ArrayCollisionMatrix();\r\n\r\n    /**\r\n     * CollisionMatrix from the previous step.\r\n     * @property {ArrayCollisionMatrix} collisionMatrixPrevious\r\n\t * @type {ArrayCollisionMatrix}\r\n\t */\r\n\tthis.collisionMatrixPrevious = new ArrayCollisionMatrix();\r\n\r\n    /**\r\n     * All added materials\r\n     * @property materials\r\n     * @type {Array}\r\n     */\r\n    this.materials = [];\r\n\r\n    /**\r\n     * @property contactmaterials\r\n     * @type {Array}\r\n     */\r\n    this.contactmaterials = [];\r\n\r\n    /**\r\n     * Used to look up a ContactMaterial given two instances of Material.\r\n     * @property {TupleDictionary} contactMaterialTable\r\n     */\r\n    this.contactMaterialTable = new TupleDictionary();\r\n\r\n    this.defaultMaterial = new Material(\"default\");\r\n\r\n    /**\r\n     * This contact material is used if no suitable contactmaterial is found for a contact.\r\n     * @property defaultContactMaterial\r\n     * @type {ContactMaterial}\r\n     */\r\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, { friction: 0.3, restitution: 0.0 });\r\n\r\n    /**\r\n     * @property doProfiling\r\n     * @type {Boolean}\r\n     */\r\n    this.doProfiling = false;\r\n\r\n    /**\r\n     * @property profile\r\n     * @type {Object}\r\n     */\r\n    this.profile = {\r\n        solve:0,\r\n        makeContactConstraints:0,\r\n        broadphase:0,\r\n        integrate:0,\r\n        narrowphase:0,\r\n    };\r\n\r\n    /**\r\n     * @property subsystems\r\n     * @type {Array}\r\n     */\r\n    this.subsystems = [];\r\n\r\n    this.addBodyEvent = {\r\n        type:\"addBody\",\r\n        body : null,\r\n    };\r\n\r\n    this.removeBodyEvent = {\r\n        type:\"removeBody\",\r\n        body : null,\r\n    };\r\n}\r\nWorld.prototype = new EventTarget();\r\n\r\n// Temp stuff\r\nvar tmpAABB1 = new AABB();\r\nvar tmpArray1 = [];\r\nvar tmpRay = new Ray();\r\n\r\n/**\r\n * Get the contact material between materials m1 and m2\r\n * @method getContactMaterial\r\n * @param {Material} m1\r\n * @param {Material} m2\r\n * @return {ContactMaterial} The contact material if it was found.\r\n */\r\nWorld.prototype.getContactMaterial = function(m1,m2){\r\n    return this.contactMaterialTable.get(m1.id,m2.id); //this.contactmaterials[this.mats2cmat[i+j*this.materials.length]];\r\n};\r\n\r\n/**\r\n * Get number of objects in the world.\r\n * @method numObjects\r\n * @return {Number}\r\n * @deprecated\r\n */\r\nWorld.prototype.numObjects = function(){\r\n    return this.bodies.length;\r\n};\r\n\r\n/**\r\n * Store old collision state info\r\n * @method collisionMatrixTick\r\n */\r\nWorld.prototype.collisionMatrixTick = function(){\r\n\tvar temp = this.collisionMatrixPrevious;\r\n\tthis.collisionMatrixPrevious = this.collisionMatrix;\r\n\tthis.collisionMatrix = temp;\r\n\tthis.collisionMatrix.reset();\r\n};\r\n\r\n/**\r\n * Add a rigid body to the simulation.\r\n * @method add\r\n * @param {Body} body\r\n * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\r\n * @todo Adding an array of bodies should be possible. This would save some loops too\r\n * @deprecated Use .addBody instead\r\n */\r\nWorld.prototype.add = World.prototype.addBody = function(body){\r\n    if(this.bodies.indexOf(body) !== -1){\r\n        return;\r\n    }\r\n    body.index = this.bodies.length;\r\n    this.bodies.push(body);\r\n    body.world = this;\r\n    body.initPosition.copy(body.position);\r\n    body.initVelocity.copy(body.velocity);\r\n    body.timeLastSleepy = this.time;\r\n    if(body instanceof Body){\r\n        body.initAngularVelocity.copy(body.angularVelocity);\r\n        body.initQuaternion.copy(body.quaternion);\r\n    }\r\n\tthis.collisionMatrix.setNumObjects(this.bodies.length);\r\n    this.addBodyEvent.body = body;\r\n    this.dispatchEvent(this.addBodyEvent);\r\n};\r\n\r\n/**\r\n * Add a constraint to the simulation.\r\n * @method addConstraint\r\n * @param {Constraint} c\r\n */\r\nWorld.prototype.addConstraint = function(c){\r\n    this.constraints.push(c);\r\n};\r\n\r\n/**\r\n * Removes a constraint\r\n * @method removeConstraint\r\n * @param {Constraint} c\r\n */\r\nWorld.prototype.removeConstraint = function(c){\r\n    var idx = this.constraints.indexOf(c);\r\n    if(idx!==-1){\r\n        this.constraints.splice(idx,1);\r\n    }\r\n};\r\n\r\n/**\r\n * Raycast test\r\n * @method rayTest\r\n * @param {Vec3} from\r\n * @param {Vec3} to\r\n * @param {Function|RaycastResult} result\r\n * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\r\n */\r\nWorld.prototype.rayTest = function(from, to, result){\r\n    if(result instanceof RaycastResult){\r\n        // Do raycastclosest\r\n        this.raycastClosest(from, to, {\r\n            skipBackfaces: true\r\n        }, result);\r\n    } else {\r\n        // Do raycastAll\r\n        this.raycastAll(from, to, {\r\n            skipBackfaces: true\r\n        }, result);\r\n    }\r\n};\r\n\r\n/**\r\n * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\r\n * @method raycastAll\r\n * @param  {Vec3} from\r\n * @param  {Vec3} to\r\n * @param  {Object} options\r\n * @param  {number} [options.collisionFilterMask=-1]\r\n * @param  {number} [options.collisionFilterGroup=-1]\r\n * @param  {boolean} [options.skipBackfaces=false]\r\n * @param  {boolean} [options.checkCollisionResponse=true]\r\n * @param  {Function} callback\r\n * @return {boolean} True if any body was hit.\r\n */\r\nWorld.prototype.raycastAll = function(from, to, options, callback){\r\n    options.mode = Ray.ALL;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.callback = callback;\r\n    return tmpRay.intersectWorld(this, options);\r\n};\r\n\r\n/**\r\n * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\r\n * @method raycastAny\r\n * @param  {Vec3} from\r\n * @param  {Vec3} to\r\n * @param  {Object} options\r\n * @param  {number} [options.collisionFilterMask=-1]\r\n * @param  {number} [options.collisionFilterGroup=-1]\r\n * @param  {boolean} [options.skipBackfaces=false]\r\n * @param  {boolean} [options.checkCollisionResponse=true]\r\n * @param  {RaycastResult} result\r\n * @return {boolean} True if any body was hit.\r\n */\r\nWorld.prototype.raycastAny = function(from, to, options, result){\r\n    options.mode = Ray.ANY;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.result = result;\r\n    return tmpRay.intersectWorld(this, options);\r\n};\r\n\r\n/**\r\n * Ray cast, and return information of the closest hit.\r\n * @method raycastClosest\r\n * @param  {Vec3} from\r\n * @param  {Vec3} to\r\n * @param  {Object} options\r\n * @param  {number} [options.collisionFilterMask=-1]\r\n * @param  {number} [options.collisionFilterGroup=-1]\r\n * @param  {boolean} [options.skipBackfaces=false]\r\n * @param  {boolean} [options.checkCollisionResponse=true]\r\n * @param  {RaycastResult} result\r\n * @return {boolean} True if any body was hit.\r\n */\r\nWorld.prototype.raycastClosest = function(from, to, options, result){\r\n    options.mode = Ray.CLOSEST;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.result = result;\r\n    return tmpRay.intersectWorld(this, options);\r\n};\r\n\r\n/**\r\n * Remove a rigid body from the simulation.\r\n * @method remove\r\n * @param {Body} body\r\n * @deprecated Use .removeBody instead\r\n */\r\nWorld.prototype.remove = function(body){\r\n    body.world = null;\r\n    var n = this.bodies.length-1,\r\n        bodies = this.bodies,\r\n        idx = bodies.indexOf(body);\r\n    if(idx !== -1){\r\n        bodies.splice(idx, 1); // Todo: should use a garbage free method\r\n\r\n        // Recompute index\r\n        for(var i=0; i!==bodies.length; i++){\r\n            bodies[i].index = i;\r\n        }\r\n\r\n        this.collisionMatrix.setNumObjects(n);\r\n        this.removeBodyEvent.body = body;\r\n        this.dispatchEvent(this.removeBodyEvent);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove a rigid body from the simulation.\r\n * @method removeBody\r\n * @param {Body} body\r\n */\r\nWorld.prototype.removeBody = World.prototype.remove;\r\n\r\n/**\r\n * Adds a material to the World.\r\n * @method addMaterial\r\n * @param {Material} m\r\n * @todo Necessary?\r\n */\r\nWorld.prototype.addMaterial = function(m){\r\n    this.materials.push(m);\r\n};\r\n\r\n/**\r\n * Adds a contact material to the World\r\n * @method addContactMaterial\r\n * @param {ContactMaterial} cmat\r\n */\r\nWorld.prototype.addContactMaterial = function(cmat) {\r\n\r\n    // Add contact material\r\n    this.contactmaterials.push(cmat);\r\n\r\n    // Add current contact material to the material table\r\n    this.contactMaterialTable.set(cmat.materials[0].id,cmat.materials[1].id,cmat);\r\n};\r\n\r\n// performance.now()\r\nif(typeof performance === 'undefined'){\r\n    performance = {};\r\n}\r\nif(!performance.now){\r\n    var nowOffset = Date.now();\r\n    if (performance.timing && performance.timing.navigationStart){\r\n        nowOffset = performance.timing.navigationStart;\r\n    }\r\n    performance.now = function(){\r\n        return Date.now() - nowOffset;\r\n    };\r\n}\r\n\r\nvar step_tmp1 = new Vec3();\r\n\r\n/**\r\n * Step the physics world forward in time.\r\n *\r\n * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\r\n *\r\n * @method step\r\n * @param {Number} dt                       The fixed time step size to use.\r\n * @param {Number} [timeSinceLastCalled]    The time elapsed since the function was last called.\r\n * @param {Number} [maxSubSteps=10]         Maximum number of fixed steps to take per function call.\r\n *\r\n * @example\r\n *     // fixed timestepping without interpolation\r\n *     world.step(1/60);\r\n *\r\n * @see http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World\r\n */\r\nWorld.prototype.step = function(dt, timeSinceLastCalled, maxSubSteps){\r\n    maxSubSteps = maxSubSteps || 10;\r\n    timeSinceLastCalled = timeSinceLastCalled || 0;\r\n\r\n    if(timeSinceLastCalled === 0){ // Fixed, simple stepping\r\n\r\n        this.internalStep(dt);\r\n\r\n        // Increment time\r\n        this.time += dt;\r\n\r\n    } else {\r\n\r\n        // Compute the number of fixed steps we should have taken since the last step\r\n        var internalSteps = Math.floor((this.time + timeSinceLastCalled) / dt) - Math.floor(this.time / dt);\r\n        internalSteps = Math.min(internalSteps,maxSubSteps);\r\n\r\n        // Do some fixed steps to catch up\r\n        var t0 = performance.now();\r\n        for(var i=0; i!==internalSteps; i++){\r\n            this.internalStep(dt);\r\n            if(performance.now() - t0 > dt * 1000){\r\n                // We are slower than real-time. Better bail out.\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Increment internal clock\r\n        this.time += timeSinceLastCalled;\r\n\r\n        // Compute \"Left over\" time step\r\n        var h = this.time % dt;\r\n        var h_div_dt = h / dt;\r\n        var interpvelo = step_tmp1;\r\n        var bodies = this.bodies;\r\n\r\n        for(var j=0; j !== bodies.length; j++){\r\n            var b = bodies[j];\r\n            if(b.type !== Body.STATIC && b.sleepState !== Body.SLEEPING){\r\n\r\n                // Interpolate\r\n                b.position.vsub(b.previousPosition, interpvelo);\r\n                interpvelo.scale(h_div_dt, interpvelo);\r\n                b.position.vadd(interpvelo, b.interpolatedPosition);\r\n\r\n                // TODO: interpolate quaternion\r\n                // b.interpolatedAngle = b.angle + (b.angle - b.previousAngle) * h_div_dt;\r\n\r\n            } else {\r\n\r\n                // For static bodies, just copy. Who else will do it?\r\n                b.interpolatedPosition.copy(b.position);\r\n                b.interpolatedQuaternion.copy(b.quaternion);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Step the simulation\r\n * @method step\r\n * @param {Number} dt\r\n */\r\nvar World_step_postStepEvent = {type:\"postStep\"}, // Reusable event objects to save memory\r\n    World_step_preStepEvent = {type:\"preStep\"},\r\n    World_step_collideEvent = {type:\"collide\", body:null, contact:null },\r\n    World_step_oldContacts = [], // Pools for unused objects\r\n    World_step_frictionEquationPool = [],\r\n    World_step_p1 = [], // Reusable arrays for collision pairs\r\n    World_step_p2 = [],\r\n    World_step_gvec = new Vec3(), // Temporary vectors and quats\r\n    World_step_vi = new Vec3(),\r\n    World_step_vj = new Vec3(),\r\n    World_step_wi = new Vec3(),\r\n    World_step_wj = new Vec3(),\r\n    World_step_t1 = new Vec3(),\r\n    World_step_t2 = new Vec3(),\r\n    World_step_rixn = new Vec3(),\r\n    World_step_rjxn = new Vec3(),\r\n    World_step_step_q = new Quaternion(),\r\n    World_step_step_w = new Quaternion(),\r\n    World_step_step_wq = new Quaternion(),\r\n    invI_tau_dt = new Vec3();\r\nWorld.prototype.internalStep = function(dt){\r\n    this.dt = dt;\r\n\r\n    var world = this,\r\n        that = this,\r\n        contacts = this.contacts,\r\n        p1 = World_step_p1,\r\n        p2 = World_step_p2,\r\n        N = this.numObjects(),\r\n        bodies = this.bodies,\r\n        solver = this.solver,\r\n        gravity = this.gravity,\r\n        doProfiling = this.doProfiling,\r\n        profile = this.profile,\r\n        DYNAMIC = Body.DYNAMIC,\r\n        profilingStart,\r\n        constraints = this.constraints,\r\n        frictionEquationPool = World_step_frictionEquationPool,\r\n        gnorm = gravity.norm(),\r\n        gx = gravity.x,\r\n        gy = gravity.y,\r\n        gz = gravity.z,\r\n        i=0;\r\n\r\n    if(doProfiling){\r\n        profilingStart = performance.now();\r\n    }\r\n\r\n    // Add gravity to all objects\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\r\n            var f = bi.force, m = bi.mass;\r\n            f.x += m*gx;\r\n            f.y += m*gy;\r\n            f.z += m*gz;\r\n        }\r\n    }\r\n\r\n    // Update subsystems\r\n    for(var i=0, Nsubsystems=this.subsystems.length; i!==Nsubsystems; i++){\r\n        this.subsystems[i].update();\r\n    }\r\n\r\n    // Collision detection\r\n    if(doProfiling){ profilingStart = performance.now(); }\r\n    p1.length = 0; // Clean up pair arrays from last step\r\n    p2.length = 0;\r\n    this.broadphase.collisionPairs(this,p1,p2);\r\n    if(doProfiling){ profile.broadphase = performance.now() - profilingStart; }\r\n\r\n    // Remove constrained pairs with collideConnected == false\r\n    var Nconstraints = constraints.length;\r\n    for(i=0; i!==Nconstraints; i++){\r\n        var c = constraints[i];\r\n        if(!c.collideConnected){\r\n            for(var j = p1.length-1; j>=0; j-=1){\r\n                if( (c.bodyA === p1[j] && c.bodyB === p2[j]) ||\r\n                    (c.bodyB === p1[j] && c.bodyA === p2[j])){\r\n                    p1.splice(j, 1);\r\n                    p2.splice(j, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.collisionMatrixTick();\r\n\r\n    // Generate contacts\r\n    if(doProfiling){ profilingStart = performance.now(); }\r\n    var oldcontacts = World_step_oldContacts;\r\n    var NoldContacts = contacts.length;\r\n\r\n    for(i=0; i!==NoldContacts; i++){\r\n        oldcontacts.push(contacts[i]);\r\n    }\r\n    contacts.length = 0;\r\n\r\n    // Transfer FrictionEquation from current list to the pool for reuse\r\n    var NoldFrictionEquations = this.frictionEquations.length;\r\n    for(i=0; i!==NoldFrictionEquations; i++){\r\n        frictionEquationPool.push(this.frictionEquations[i]);\r\n    }\r\n    this.frictionEquations.length = 0;\r\n\r\n    this.narrowphase.getContacts(\r\n        p1,\r\n        p2,\r\n        this,\r\n        contacts,\r\n        oldcontacts, // To be reused\r\n        this.frictionEquations,\r\n        frictionEquationPool\r\n    );\r\n\r\n    if(doProfiling){\r\n        profile.narrowphase = performance.now() - profilingStart;\r\n    }\r\n\r\n    // Loop over all collisions\r\n    if(doProfiling){\r\n        profilingStart = performance.now();\r\n    }\r\n\r\n    // Add all friction eqs\r\n    for (var i = 0; i < this.frictionEquations.length; i++) {\r\n        solver.addEquation(this.frictionEquations[i]);\r\n    }\r\n\r\n    var ncontacts = contacts.length;\r\n    for(var k=0; k!==ncontacts; k++){\r\n\r\n        // Current contact\r\n        var c = contacts[k];\r\n\r\n        // Get current collision indeces\r\n        var bi = c.bi,\r\n            bj = c.bj,\r\n            si = c.si,\r\n            sj = c.sj;\r\n\r\n        // Get collision properties\r\n        var cm;\r\n        if(bi.material && bj.material){\r\n            cm = this.getContactMaterial(bi.material,bj.material) || this.defaultContactMaterial;\r\n        } else {\r\n            cm = this.defaultContactMaterial;\r\n        }\r\n\r\n        // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\r\n\r\n        var mu = cm.friction;\r\n        // c.restitution = cm.restitution;\r\n\r\n        // If friction or restitution were specified in the material, use them\r\n        if(bi.material && bj.material){\r\n            if(bi.material.friction >= 0 && bj.material.friction >= 0){\r\n                mu = bi.material.friction * bj.material.friction;\r\n            }\r\n\r\n            if(bi.material.restitution >= 0 && bj.material.restitution >= 0){\r\n                c.restitution = bi.material.restitution * bj.material.restitution;\r\n            }\r\n        }\r\n\r\n\t\t// c.setSpookParams(\r\n  //           cm.contactEquationStiffness,\r\n  //           cm.contactEquationRelaxation,\r\n  //           dt\r\n  //       );\r\n\r\n\t\tsolver.addEquation(c);\r\n\r\n\t\t// // Add friction constraint equation\r\n\t\t// if(mu > 0){\r\n\r\n\t\t// \t// Create 2 tangent equations\r\n\t\t// \tvar mug = mu * gnorm;\r\n\t\t// \tvar reducedMass = (bi.invMass + bj.invMass);\r\n\t\t// \tif(reducedMass > 0){\r\n\t\t// \t\treducedMass = 1/reducedMass;\r\n\t\t// \t}\r\n\t\t// \tvar pool = frictionEquationPool;\r\n\t\t// \tvar c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\r\n\t\t// \tvar c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\r\n\t\t// \tthis.frictionEquations.push(c1, c2);\r\n\r\n\t\t// \tc1.bi = c2.bi = bi;\r\n\t\t// \tc1.bj = c2.bj = bj;\r\n\t\t// \tc1.minForce = c2.minForce = -mug*reducedMass;\r\n\t\t// \tc1.maxForce = c2.maxForce = mug*reducedMass;\r\n\r\n\t\t// \t// Copy over the relative vectors\r\n\t\t// \tc1.ri.copy(c.ri);\r\n\t\t// \tc1.rj.copy(c.rj);\r\n\t\t// \tc2.ri.copy(c.ri);\r\n\t\t// \tc2.rj.copy(c.rj);\r\n\r\n\t\t// \t// Construct tangents\r\n\t\t// \tc.ni.tangents(c1.t, c2.t);\r\n\r\n  //           // Set spook params\r\n  //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\r\n  //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\r\n\r\n  //           c1.enabled = c2.enabled = c.enabled;\r\n\r\n\t\t// \t// Add equations to solver\r\n\t\t// \tsolver.addEquation(c1);\r\n\t\t// \tsolver.addEquation(c2);\r\n\t\t// }\r\n\r\n        if( bi.allowSleep &&\r\n            bi.type === Body.DYNAMIC &&\r\n            bi.sleepState  === Body.SLEEPING &&\r\n            bj.sleepState  === Body.AWAKE &&\r\n            bj.type !== Body.STATIC\r\n        ){\r\n            var speedSquaredB = bj.velocity.norm2() + bj.angularVelocity.norm2();\r\n            var speedLimitSquaredB = Math.pow(bj.sleepSpeedLimit,2);\r\n            if(speedSquaredB >= speedLimitSquaredB*2){\r\n                bi._wakeUpAfterNarrowphase = true;\r\n            }\r\n        }\r\n\r\n        if( bj.allowSleep &&\r\n            bj.type === Body.DYNAMIC &&\r\n            bj.sleepState  === Body.SLEEPING &&\r\n            bi.sleepState  === Body.AWAKE &&\r\n            bi.type !== Body.STATIC\r\n        ){\r\n            var speedSquaredA = bi.velocity.norm2() + bi.angularVelocity.norm2();\r\n            var speedLimitSquaredA = Math.pow(bi.sleepSpeedLimit,2);\r\n            if(speedSquaredA >= speedLimitSquaredA*2){\r\n                bj._wakeUpAfterNarrowphase = true;\r\n            }\r\n        }\r\n\r\n        // Now we know that i and j are in contact. Set collision matrix state\r\n\t\tthis.collisionMatrix.set(bi, bj, true);\r\n\r\n        if (!this.collisionMatrixPrevious.get(bi, bj)) {\r\n            // First contact!\r\n            // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\r\n            World_step_collideEvent.body = bj;\r\n            World_step_collideEvent.contact = c;\r\n            bi.dispatchEvent(World_step_collideEvent);\r\n\r\n            World_step_collideEvent.body = bi;\r\n            bj.dispatchEvent(World_step_collideEvent);\r\n        }\r\n    }\r\n    if(doProfiling){\r\n        profile.makeContactConstraints = performance.now() - profilingStart;\r\n        profilingStart = performance.now();\r\n    }\r\n\r\n    // Wake up bodies\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi._wakeUpAfterNarrowphase){\r\n            bi.wakeUp();\r\n            bi._wakeUpAfterNarrowphase = false;\r\n        }\r\n    }\r\n\r\n    // Add user-added constraints\r\n    var Nconstraints = constraints.length;\r\n    for(i=0; i!==Nconstraints; i++){\r\n        var c = constraints[i];\r\n        c.update();\r\n        for(var j=0, Neq=c.equations.length; j!==Neq; j++){\r\n            var eq = c.equations[j];\r\n            solver.addEquation(eq);\r\n        }\r\n    }\r\n\r\n    // Solve the constrained system\r\n    solver.solve(dt,this);\r\n\r\n    if(doProfiling){\r\n        profile.solve = performance.now() - profilingStart;\r\n    }\r\n\r\n    // Remove all contacts from solver\r\n    solver.removeAllEquations();\r\n\r\n    // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\r\n    var pow = Math.pow;\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\r\n            var ld = pow(1.0 - bi.linearDamping,dt);\r\n            var v = bi.velocity;\r\n            v.mult(ld,v);\r\n            var av = bi.angularVelocity;\r\n            if(av){\r\n                var ad = pow(1.0 - bi.angularDamping,dt);\r\n                av.mult(ad,av);\r\n            }\r\n        }\r\n    }\r\n\r\n    this.dispatchEvent(World_step_preStepEvent);\r\n\r\n    // Invoke pre-step callbacks\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        if(bi.preStep){\r\n            bi.preStep.call(bi);\r\n        }\r\n    }\r\n\r\n    // Leap frog\r\n    // vnew = v + h*f/m\r\n    // xnew = x + h*vnew\r\n    if(doProfiling){\r\n        profilingStart = performance.now();\r\n    }\r\n    var q = World_step_step_q;\r\n    var w = World_step_step_w;\r\n    var wq = World_step_step_wq;\r\n    var stepnumber = this.stepnumber;\r\n    var DYNAMIC_OR_KINEMATIC = Body.DYNAMIC | Body.KINEMATIC;\r\n    var quatNormalize = stepnumber % (this.quatNormalizeSkip+1) === 0;\r\n    var quatNormalizeFast = this.quatNormalizeFast;\r\n    var half_dt = dt * 0.5;\r\n    var PLANE = Shape.types.PLANE,\r\n        CONVEX = Shape.types.CONVEXPOLYHEDRON;\r\n\r\n    for(i=0; i!==N; i++){\r\n        var b = bodies[i],\r\n            force = b.force,\r\n            tau = b.torque;\r\n        if((b.type & DYNAMIC_OR_KINEMATIC) && b.sleepState !== Body.SLEEPING){ // Only for dynamic\r\n            var velo = b.velocity,\r\n                angularVelo = b.angularVelocity,\r\n                pos = b.position,\r\n                quat = b.quaternion,\r\n                invMass = b.invMass,\r\n                invInertia = b.invInertiaWorld;\r\n\r\n            velo.x += force.x * invMass * dt;\r\n            velo.y += force.y * invMass * dt;\r\n            velo.z += force.z * invMass * dt;\r\n\r\n            if(b.angularVelocity){\r\n                invInertia.vmult(tau,invI_tau_dt);\r\n                invI_tau_dt.mult(dt,invI_tau_dt);\r\n                invI_tau_dt.vadd(angularVelo,angularVelo);\r\n            }\r\n\r\n            // Use new velocity  - leap frog\r\n            pos.x += velo.x * dt;\r\n            pos.y += velo.y * dt;\r\n            pos.z += velo.z * dt;\r\n\r\n            if(b.angularVelocity){\r\n                w.set(angularVelo.x, angularVelo.y, angularVelo.z, 0);\r\n                w.mult(quat,wq);\r\n                quat.x += half_dt * wq.x;\r\n                quat.y += half_dt * wq.y;\r\n                quat.z += half_dt * wq.z;\r\n                quat.w += half_dt * wq.w;\r\n                if(quatNormalize){\r\n                    if(quatNormalizeFast){\r\n                        quat.normalizeFast();\r\n                    } else {\r\n                        quat.normalize();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(b.aabb){\r\n                b.aabbNeedsUpdate = true;\r\n            }\r\n\r\n            // Update world inertia\r\n            if(b.updateInertiaWorld){\r\n                b.updateInertiaWorld();\r\n            }\r\n        }\r\n    }\r\n    this.clearForces();\r\n\r\n    this.broadphase.dirty = true;\r\n\r\n    if(doProfiling){\r\n        profile.integrate = performance.now() - profilingStart;\r\n    }\r\n\r\n    // Update world time\r\n    this.time += dt;\r\n    this.stepnumber += 1;\r\n\r\n    this.dispatchEvent(World_step_postStepEvent);\r\n\r\n    // Invoke post-step callbacks\r\n    for(i=0; i!==N; i++){\r\n        var bi = bodies[i];\r\n        var postStep = bi.postStep;\r\n        if(postStep){\r\n            postStep.call(bi);\r\n        }\r\n    }\r\n\r\n    // Sleeping update\r\n    if(this.allowSleep){\r\n        for(i=0; i!==N; i++){\r\n            bodies[i].sleepTick(this.time);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Sets all body forces in the world to zero.\r\n * @method clearForces\r\n */\r\nWorld.prototype.clearForces = function(){\r\n    var bodies = this.bodies;\r\n    var N = bodies.length;\r\n    for(var i=0; i !== N; i++){\r\n        var b = bodies[i],\r\n            force = b.force,\r\n            tau = b.torque;\r\n\r\n        b.force.set(0,0,0);\r\n        b.torque.set(0,0,0);\r\n    }\r\n};\r\n\r\n},{\"../collision/AABB\":3,\"../collision/ArrayCollisionMatrix\":4,\"../collision/NaiveBroadphase\":7,\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../material/ContactMaterial\":24,\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Shape\":43,\"../solver/GSSolver\":46,\"../utils/EventTarget\":49,\"../utils/TupleDictionary\":52,\"../utils/Vec3Pool\":54,\"./Narrowphase\":55}]},{},[2])\r\n(2)\r\n});"},"lineCount":13689}},"error":null,"hash":"9a6f2c7d6854b66bab85acb89936c749","cacheData":{"env":{}}}